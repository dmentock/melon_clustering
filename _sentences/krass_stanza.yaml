krass:
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(f\xFChlt) <3:PRON/obj>(sich) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 9
    - ccomp
  - !!python/tuple
    - 14
    - 13
    - cc
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/mark>(wenn)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(da) <7:ADV/advmod>(heute) <8:ADV/advmod>(dr\xFC\
    ber) <9:VERB/root>(nachdenke) <10:ADV/advmod>(also) <11:ADV/advmod>(wo) <12:PRON/nsubj>(ich)\
    \ <13:VERB/ccomp>(war) <14:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <2:X/root>(Na) <ROOT> <4:ADV/advmod>(So) <5:PRON/nsubj>(was) <6:AUX/cop>(ist)
    <7:PRON/root>(dir) <8:ADP/case>(in) <9:NOUN/nmod>(romantischen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - obl
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 9
    - obl
  sentence: "<1:ADP/case>(f\xFCr) <2:PRON/obl>(mich) <3:VERB/root>(haben) <4:CCONJ/cc>(Und)\
    \ <5:PRON/nsubj>(das) <6:VERB/conj>(hat) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(so)\
    \ <ROOT> <9:VERB/root>(bewiesen) <10:ADP/case>(in) <11:PRON/obl>(was) <12:ADP/case>(f\xFC\
    r) <13:DET/det>(einer) <14:ADJ/obl>(privilegierten)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:ADV/advmod>(laut)
    <5:ADJ/root>(echt) <ROOT> <6:ADV/advmod>(Toll) <7:ADJ/root>(lustig)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - obl:arg
  - !!python/tuple
    - 7
    - 5
    - ccomp
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - ccomp
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 11
    - obj
  - !!python/tuple
    - 14
    - 19
    - nsubj
  - !!python/tuple
    - 15
    - 19
    - aux
  - !!python/tuple
    - 16
    - 19
    - obj
  - !!python/tuple
    - 17
    - 18
    - case
  - !!python/tuple
    - 18
    - 19
    - obl
  - !!python/tuple
    - 19
    - 11
    - ccomp
  - !!python/tuple
    - 20
    - 23
    - cc
  - !!python/tuple
    - 21
    - 23
    - nsubj
  - !!python/tuple
    - 22
    - 23
    - aux
  - !!python/tuple
    - 23
    - 19
    - compound:prt
  sentence: <1:ADV/root>(So) <ROOT> <2:PRON/nsubj>(ich) <3:AUX/aux>(kann) <4:ADV/advmod>(klar)
    <5:VERB/root>(denken) <6:PRON/obl:arg>(mir) <7:VERB/ccomp>(geht) <8:NOUN/obj>(s)
    <9:ADV/advmod>(gut) <10:PRON/nsubj>(ich) <11:VERB/ccomp>(hab) <12:DET/det>(keinen)
    <13:NOUN/obj>(Kater) <14:PRON/nsubj>(ich) <15:AUX/aux>(kann) <16:PRON/obj>(mich)
    <17:ADP/case>(an) <18:DET/obl>(alles) <19:VERB/ccomp>(erinnern) <20:CCONJ/cc>(und)
    <21:PRON/nsubj>(ich) <22:AUX/aux>(kann) <23:ADP/compound:prt>(zur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:DET/det>(den) <4:NOUN/obj>(Wind)
    <5:ADV/advmod>(besonders) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 4
    - dep
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/amod>(harter) <4:NOUN/root>(Tobak)\
    \ <5:CCONJ/cc>(und) <6:DET/det>(eine) <7:NOUN/conj>(Spur) <8:ADP/dep>(zu) <ROOT>\
    \ <9:ADP/case>(f\xFCr) <10:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Dann) <2:AUX/root>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: <1:ADV/advmod>(Da) <2:AUX/cop>(wird) <3:ADV/advmod>(immer) <4:ADV/advmod>(echt)
    <5:ADJ/root>(richtig) <ROOT> <6:VERB/root>(verhandelt) <7:CCONJ/cc>(Und) <8:PRON/nsubj>(das)
    <9:VERB/conj>(dauert)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 3
    - aux
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Was) <2:PROPN/obj>(Joel) <3:VERB/root>(erlebt) <4:AUX/aux>(hat)
    <5:AUX/aux>(ist) <6:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/nsubj>(s) <4:ADJ/advmod>(richtig)\
    \ <ROOT> <5:PRON/nsubj>(was) <6:ADP/case>(f\xFCr) <7:ADJ/amod>(positive) <8:NOUN/root>(Auswirkungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 10
    - obl
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/root>(Ja) <2:CCONJ/cc>(und) <3:PRON/nsubj>(es) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(f\xFCr) <7:PRON/obl>(mich) <8:ADV/advmod>(einfach)\
    \ <9:PART/mark>(zu) <10:VERB/root>(sehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:ADV/root>(Schon) <ROOT> <2:NOUN/nsubj>(Gewitter) <3:ADP/case>(in) <4:DET/det>(den)
    <5:NOUN/nmod>(Bergen) <6:AUX/cop>(ist) <7:NOUN/root>(n) <8:DET/det>(anderer) <9:NOUN/nmod>(Schnack)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:NOUN/nsubj>(Leute) <4:PRON/nsubj>(die)
    <5:AUX/cop>(sind) <6:ADV/advmod>(so) <ROOT> <7:CCONJ/cc>(und) <8:VERB/root>(essen)
    <9:DET/det>(nen) <10:NOUN/obj>(Salat) <11:ADV/advmod>(dazu)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 15
    - advmod
  - !!python/tuple
    - 7
    - 15
    - mark
  - !!python/tuple
    - 8
    - 15
    - advmod
  - !!python/tuple
    - 9
    - 15
    - nsubj
  - !!python/tuple
    - 10
    - 15
    - aux
  - !!python/tuple
    - 11
    - 15
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 15
    - obl
  - !!python/tuple
    - 14
    - 15
    - obj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:DET/det>(der) <3:NOUN/obl>(Bev\xF6lkerung) <4:VERB/root>(halt)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADV/advmod>(voran) <7:SCONJ/mark>(weil) <8:ADV/advmod>(so)\
    \ <9:PRON/nsubj>(das) <10:AUX/aux>(ist) <11:ADV/advmod>(vollkommen) <12:ADP/case>(in)\
    \ <13:NOUN/obl>(Ordnung) <14:PRON/obj>(du) <15:VERB/root>(guckst)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - mark
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 11
    - advcl
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 16
    - advmod
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 11
    - ccomp
  sentence: "<ROOT> <1:SCONJ/mark>(wenn) <2:PRON/nsubj>(ich) <3:NOUN/obj>(Leute) <4:ADV/advmod>(halt)\
    \ <5:ADP/case>(auf) <6:NOUN/obl>(Instagram) <7:VERB/advcl>(sage) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(mal) <10:ADV/advmod>(wirklich) <11:VERB/root>(kritisieren) <12:ADV/advmod>(daf\xFC\
    r) <13:SCONJ/mark>(dass) <14:PRON/nsubj>(du) <15:ADV/advmod>(so) <16:NOUN/ccomp>(M\xF6\
    rder)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Die) <2:AUX/aux>(haben) <3:PRON/obj>(mich) <4:PART/advmod>(nicht)\
    \ <5:VERB/root>(best\xE4rkt) <6:PRON/nsubj>(das) <7:AUX/parataxis>(war) <8:ADV/advmod>(schon)\
    \ <9:ADV/advmod>(ziemlich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: <1:PROPN/root>(Boah) <ROOT> <2:PRON/nsubj>(sie) <3:VERB/root>(macht) <4:DET/det>(eine)
    <5:NOUN/obj>(Tanzausbildung)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:SCONJ/mark>(weil) <3:ADP/case>(in) <4:PRON/obl>(ihm)
    <5:VERB/root>(steckts) <6:ADV/advmod>(so) <ROOT> <7:DET/det>(dieser) <8:ADJ/amod>(internalisierte)
    <9:NOUN/root>(Ableismus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(fand) <4:PRON/nsubj>(ich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <ROOT> <4:PRON/obj>(was)
    <5:PRON/nsubj>(das) <6:ADP/case>(mit) <7:DET/obl>(einem) <8:VERB/root>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - det
  - !!python/tuple
    - 10
    - 12
    - amod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - nmod
  sentence: "<1:PRON/root>(Was) <2:ADV/advmod>(doch) <3:ADV/advmod>(ziemlich) <ROOT>\
    \ <4:AUX/cop>(ist) <5:ADV/advmod>(Noch) <6:PROPN/root>(Krasser) <7:AUX/cop>(sind)\
    \ <8:ADV/advmod>(aber) <9:DET/det>(die) <10:ADJ/amod>(n\xE4chsten) <11:DET/det>(beiden)\
    \ <12:NOUN/nmod>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - obl
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 17
    - mark
  - !!python/tuple
    - 9
    - 17
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 17
    - obl
  - !!python/tuple
    - 13
    - 16
    - det
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 16
    - amod
  - !!python/tuple
    - 16
    - 17
    - obj
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:PRON/obl>(ihr) <3:AUX/cop>(ist) <4:PRON/expl>(es)\
    \ <5:VERB/root>(glaube) <6:PRON/nsubj>(ich) <7:ADV/advmod>(ganz) <ROOT> <8:SCONJ/mark>(dass)\
    \ <9:PRON/nsubj>(sie) <10:ADP/case>(zu) <11:DET/det:poss>(ihren) <12:NOUN/obl>(Abonnenten)\
    \ <13:DET/det>(eine) <14:ADJ/advmod>(super) <15:ADJ/amod>(pers\xF6nliche) <16:NOUN/obj>(Beziehung)\
    \ <17:VERB/root>(aufbaut)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 2
    - parataxis
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 2
    - parataxis
  - !!python/tuple
    - 14
    - 13
    - advmod
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(war) <3:PRON/nsubj>(das) <4:ADV/advmod>(denn)
    <5:ADP/case>(in) <6:DET/det>(dem) <7:ADJ/amod>(ersten) <8:NOUN/obl>(Moment) <9:ADV/advmod>(Also)
    <10:PRON/nsubj>(ich) <11:VERB/parataxis>(meine) <12:PRON/nsubj>(das) <13:VERB/parataxis>(klingt)
    <14:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - cc
  - !!python/tuple
    - 9
    - 12
    - aux
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - conj
  sentence: "<1:PRON/nsubj>(Jemand) <2:AUX/cop>(ist) <3:ADJ/root>(unnormal) <ROOT>\
    \ <4:ADP/case>(in) <5:DET/det:poss>(deine) <6:NOUN/obl>(Privatsph\xE4re) <7:VERB/root>(eingedrungen)\
    \ <8:CCONJ/cc>(und) <9:AUX/aux>(hat) <10:PRON/obj>(das) <11:ADV/advmod>(online)\
    \ <12:VERB/conj>(gestellt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Richtig) <2:NOUN/root>(Holzboden) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist)
    <6:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  sentence: <1:ADJ/root>(Voll) <ROOT> <2:SCONJ/mark>(weil) <3:PRON/nsubj>(man) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(eigentlich) <6:NOUN/root>(Punk) <7:CCONJ/cc>(und) <8:NOUN/conj>(Dings)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Damals) <2:AUX/cop>(war) <3:PRON/nsubj>(das) <4:ADJ/root>(einfach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - appos
  - !!python/tuple
    - 8
    - 3
    - cop
  sentence: <1:AUX/cop>(War) <2:ADV/advmod>(n) <3:PROPN/root>(Hammer) <5:NOUN/flat>(Song)
    <6:X/advmod>(Ja) <7:PROPN/appos>(Jein) <8:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 8
    - obl:arg
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 8
    - obl
  sentence: <1:PRON/obj>(dir) <2:VERB/root>(macht) <3:PRON/nsubj>(das) <4:AUX/ccomp>(ist)
    <5:ADV/advmod>(halt) <ROOT> <6:CCONJ/cc>(Und) <7:PRON/nsubj>(das) <8:VERB/root>(passiert)
    <9:ADV/advmod>(halt) <10:ADV/advmod>(voll) <11:DET/det>(vielen) <12:NOUN/obl:arg>(Frauen)
    <13:ADP/case>(vor) <14:DET/det>(allen) <15:NOUN/obl>(Dingen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(k\xF6nnte) <3:ADV/advmod>(schon) <ROOT>\
    \ <4:AUX/root>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 2
    - conj
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:VERB/root>(geht) <3:ADP/case>(ab) <4:ADJ/amod>(neue)
    <5:NOUN/obl>(IP) <6:ADP/case>(von) <7:PROPN/nmod>(Square) <8:PROPN/flat>(Enix)
    <9:CCONJ/cc>(und) <10:VERB/conj>(sieht) <11:ADV/advmod>(auch) <ROOT> <12:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/advmod>(Grafisch) <2:AUX/cop>(war) <3:ADV/advmod>(eh) <4:ADV/advmod>(fast)
    <5:DET/nsubj>(alles) <6:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/root>(und) <2:PRON/dep>(was) <3:PRON/nsubj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(mitnahm)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 1
    - appos
  sentence: <1:NOUN/root>(Mann) <3:PRON/nsubj>(das) <4:AUX/cop>(ist) <5:ADJ/appos>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(spitte) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(machst) <3:ADV/advmod>(zwar) <ROOT> <4:ADP/case>(auf)
    <5:NOUN/root>(Superstar)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT> <3:ADV/advmod>(hier) <4:ADP/case>(mit)
    <5:NOUN/obl>(Uran) <6:VERB/root>(angereichert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:PART/mark>(zu) <3:VERB/root>(seh'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  sentence: <1:ADP/case>(Auf) <2:ADV/advmod>(einmal) <3:VERB/root>(findet) <4:PRON/obj>(mich)
    <5:DET/nsubj>(jeder) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 5
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(denn) <4:PRON/expl>(es)
    <5:AUX/root>(ist) <6:NUM/nummod>(20) <7:NOUN/obl>(Jahre) <8:ADV/compound:prt>(her)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(heute) <3:VERB/root>(rapp) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(dreimal) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:ADJ/advmod>(Langsam) <2:VERB/root>(wird) <3:DET/det:poss>(mein) <4:NOUN/nsubj>(Gewaltpotential)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(War) <2:ADV/advmod>(immer) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(ich) <3:ADV/advmod>(manchmal) <4:DET/det>(ein)
    <5:ADV/root>(bisschen) <ROOT> <6:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:AUX/aux>(soll) <3:PRON/nsubj>(es) <4:ADP/case>(in)
    <5:PROPN/obl>(Portland) <6:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - csubj
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:ADV/advmod>(Ja) <2:PROPN/nsubj>(Leo) <3:VERB/root>(hat) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/root>(genervt) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ich) <8:VERB/csubj>(gesagt)
    <9:AUX/aux>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - case
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:ADP/case>(an)
    <5:ADV/advmod>(so) <6:DET/det>(einem) <7:ADJ/amod>(alten) <8:NOUN/obl>(Auto)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - xcomp
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(ballert) <6:PRON/nsubj>(Das) <7:VERB/conj>(finde) <8:PRON/nsubj>(ich)
    <9:ADJ/xcomp>(geil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(sieht) <3:ADJ/advmod>(total) <ROOT>
    <4:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:AUX/aux>(muss) <3:DET/root>(alles) <ROOT> <4:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:ADV/advmod>(So) <2:ADJ/amod>(klare) <3:NOUN/obj>(Vorstellungen) <4:VERB/root>(Fand)
    <5:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - obl:arg
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj:pass
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux:pass
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADP/case>(vor)\
    \ <5:DET/obl>(allem) <ROOT> <6:SCONJ/mark>(dass) <7:DET/obl:arg>(einem) <8:ADV/advmod>(daf\xFC\
    r) <9:NOUN/nsubj:pass>(Geld) <10:VERB/root>(angeboten) <11:AUX/aux:pass>(wird)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(w\xE4re) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)\
    \ <5:ADJ/root>(tragisch) <6:SCONJ/mark>(wenn) <7:DET/det>(der) <8:NOUN/nsubj>(Aufwand)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <ROOT> <11:AUX/root>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - cop
  sentence: <1:ADV/advmod>(So) <2:ADV/advmod>(richtig) <3:ADJ/root>(abweisend) <4:PRON/nsubj>(Das)
    <5:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - appos
  sentence: <1:ADP/case>(wie) <2:X/nmod>(I) <3:ADV/advmod>(make) <4:PRON/nsubj>(you)
    <5:X/root>(sexy) <6:CCONJ/cc>(oder) <7:INTJ/conj>(Mach) <8:PRON/appos>(dich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - mark
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 10
    - flat
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Sorry) <2:PRON/nsubj>(ich) <3:ADV/advmod>(nochmal) <4:PRON/nsubj>(ich)\
    \ <5:VERB/root>(komme) <6:PART/advmod>(nicht) <7:ADV/advmod>(dr\xFCber) <8:ADV/mark>(hinweg)\
    \ <9:ADP/advmod>(wie) <ROOT> <10:PROPN/nsubj>(Alex) <11:PROPN/flat>(Stoldt) <12:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/obl:arg>(mir) <3:VERB/root>(zahlen) <4:PRON/nsubj>(die)
    <5:DET/det>(das) <6:NOUN/obj>(Doppelte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:ADV/advmod>(wie) <3:ADV/advmod>(schnell)\
    \ <4:PRON/nsubj>(man) <5:DET/det>(ein) <6:NOUN/obj>(M\xFCsli) <7:ADV/advmod>(selbst)\
    \ <8:VERB/root>(herstellen) <9:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(mich)\
    \ <5:ADJ/root>(total) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 10
    - advcl
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - nsubj
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(es) <4:ADP/case>(bei)
    <5:NOUN/obl>(Print) <6:DET/xcomp>(weniger) <7:VERB/advcl>(wird) <8:NOUN/advmod>(Digital)
    <9:ADV/advmod>(da) <10:VERB/root>(wachsen) <11:PRON/nsubj>(sie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(haben) <2:ADJ/amod>(fl\xFCssiges) <3:NOUN/obj>(Kunststoff)\
    \ <ROOT> <4:CCONJ/root>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - cop
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:VERB/root>(haben) <2:ADJ/amod>(fl\xFCssiges) <3:NOUN/nsubj>(Kunststoff)\
    \ <4:AUX/cop>(ist) <5:ADV/advmod>(doch) <ROOT> <6:CCONJ/root>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(das) <4:VERB/root>(schmeckt)
    <5:ADP/case>(wie) <6:DET/det>(eine) <7:NOUN/obl>(Auster)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:VERB/root>(riecht) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(nach) <7:PROPN/root>(Olive)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:X/root>(Oh) <ROOT> <3:ADV/advmod>(Ja) <4:PRON/nsubj>(das) <5:AUX/cop>(ist)
    <6:ADV/advmod>(richtig) <7:ADJ/root>(intensiv)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 2
    - appos
  sentence: "<1:PROPN/nsubj>(Anne) <2:VERB/root>(schickt) <3:PRON/obl:arg>(mir) <4:DET/det>(die)\
    \ <5:NOUN/obj>(Regeln) <6:ADP/case>(f\xFCr) <7:DET/det>(die) <8:NOUN/nmod>(Gruppe)\
    \ <10:ADV/advmod>(ganz) <11:ADJ/appos>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ehrlich) <2:VERB/root>(gesagt) <3:AUX/aux>(w\xFCrde) <4:PRON/nsubj>(es)\
    \ <5:PRON/obj>(mich) <ROOT> <6:VERB/root>(interessieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(w\xFCrde) <3:PRON/obj>(mich) <ROOT>\
    \ <4:VERB/root>(interessieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Augen) <3:DET/det>(Die) <4:PROPN/appos>(AUGEN)
    <6:DET/det>(Die) <7:PROPN/appos>(Augen) <8:AUX/root>(sind) <ROOT> <9:NOUN/root>(gell)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Augen) <3:AUX/cop>(sind) <4:ADJ/root>(wirklich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <1:NOUN/nsubj>(Vorsicht) <2:PART/advmod>(nicht) <3:VERB/root>(erschrecken)
    <5:X/dep>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - mark
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/aux>(haben) <3:ADP/case>(mit) <4:PRON/obl>(ihr)\
    \ <5:VERB/root>(gesprochen) <6:CCONJ/cc>(und) <7:PRON/nsubj>(sie) <8:VERB/conj>(erz\xE4\
    hlt) <9:PRON/obj>(uns) <10:ADP/mark>(wie) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:CCONJ/cc>(aber) <2:VERB/root>(machen) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/root>(so) <ROOT> <2:ADV/advmod>(darauf) <3:ADV/advmod>(nachher)\
    \ <4:DET/det:poss>(meine) <5:NOUN/obj>(Gl\xFCcksmomente) <6:VERB/root>(aufzuschreiben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PROPN/root>(boah) <ROOT> <2:PRON/nsubj>(die) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/obl>(Ende) <8:DET/det:poss>(ihres) <9:NOUN/nmod>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:DET/det>(manchen) <3:NOUN/obl>(Teilen) <4:VERB/root>(denkt)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(auch) <ROOT> <7:ADP/case>(wie) <8:ADJ/root>(toll)
- dependencies:
  - !!python/tuple
    - 2
    - 7
    - cc
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - cop
  sentence: <2:CCONJ/cc>(Aber) <3:PRON/nsubj>(das) <4:AUX/cop>(ist) <5:ADV/advmod>(nur)
    <6:DET/det>(das) <7:NOUN/root>(Vakuum) <9:PRON/nsubj>(Das) <10:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(das) <3:NOUN/root>(grade) <ROOT> <4:ADJ/advmod>(pathetisch)
    <5:VERB/root>(klingt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:CCONJ/cc>(und) <3:ADJ/root>(unkaputtbar)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - ccomp
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:AUX/aux>(bin) <4:ADV/advmod>(so)
    <5:ADV/advmod>(voll) <6:VERB/root>(runtergefahren) <7:PRON/nsubj>(es) <8:AUX/ccomp>(ist)
    <9:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 7
    - mark
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 7
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<2:NOUN/nsubj>(Kollegin) <3:VERB/csubj>(fragt) <6:PRON/nsubj>(Das) <7:AUX/root>(war)\
    \ <8:ADV/advmod>(ja) <9:ADV/advmod>(bislang) <10:ADV/advmod>(nie) <11:ADV/advmod>(so)\
    \ <12:SCONJ/mark>(dass) <13:PRON/nsubj>(das) <14:ADV/advmod>(so) <ROOT> <15:VERB/root>(zur\xFC\
    ckkam)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  sentence: "<1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(finde)\
    \ <5:ADP/case>(als) <6:NOUN/obl>(Au\xDFenstehende)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(macht) <3:DET/obj>(alle) <4:ADV/advmod>(krampfhaft)
    <5:ADP/case>(auf) <6:ADJ/advmod>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - dep
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(w\xFCrde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)\
    \ <ROOT> <5:VERB/root>(finden) <7:X/dep>(Hm)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj:pass
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(wirklich) <ROOT> <4:SCONJ/mark>(wie)
    <5:DET/det>(das) <6:NOUN/nsubj:pass>(Spielfeld) <7:VERB/root>(umgedreht) <8:AUX/aux:pass>(wurde)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - case
  - !!python/tuple
    - 3
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 1
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:ADP/case>(zu) <3:NUM/nummod>(19) <5:ADJ/amod>(iger)\
    \ <6:NOUN/nmod>(Wahrscheinlichkeit) <7:DET/det>(die) <8:NOUN/dep>(Gegner) <ROOT>\
    \ <9:VERB/root>(ver\xE4tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Sehr) <2:ADV/advmod>(gut) <3:ADV/advmod>(genau) <4:ADJ/amod>(super)
    <5:PROPN/root>(Boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Voll) <ROOT> <2:PROPN/root>(hey)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:ADV/advmod>(dann) <3:AUX/root>(sind) <4:DET/det>(die)
    <5:NOUN/nsubj>(Entwicklungen) <6:ADV/advmod>(eventuell) <7:ADV/advmod>(so) <ROOT>
    <8:CCONJ/cc>(und) <9:ADJ/root>(rasant)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advcl
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 17
    - advmod
  - !!python/tuple
    - 12
    - 17
    - mark
  - !!python/tuple
    - 13
    - 17
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - obj
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 17
    - obl
  - !!python/tuple
    - 17
    - 9
    - ccomp
  - !!python/tuple
    - 18
    - 17
    - cc
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:AUX/root>(ist) <ROOT> <4:PRON/nsubj>(das)
    <5:ADV/advmod>(so) <6:VERB/root>(mitzuerleben) <7:SCONJ/mark>(weil) <8:PRON/nsubj>(ich)
    <9:VERB/advcl>(merke) <10:PRON/obj>(das) <11:ADJ/advmod>(richtig) <12:SCONJ/mark>(dass)
    <13:PRON/nsubj>(es) <14:PRON/obj>(was) <15:ADP/case>(mit) <16:PRON/obl>(dir) <17:VERB/ccomp>(macht)
    <18:CCONJ/cc>(Und)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 4
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nmod
  sentence: <1:PRON/root>(Was) <2:PROPN/appos>(Steffi) <3:ADV/advmod>(besonders) <ROOT>
    <4:VERB/root>(findet) <5:AUX/aux>(ist) <6:ADP/case>(wie) <7:ADJ/advmod>(jung)
    <8:DET/det>(die) <9:NOUN/nsubj>(Klienten) <10:AUX/cop>(sind) <11:PRON/nsubj>(die)
    <12:ADP/case>(wegen) <13:DET/det>(des) <14:NOUN/nmod>(Liquids)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 14
    - obj
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - obl:arg
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(frage) <3:PRON/obj>(mich) <4:ADV/advmod>(manchmal)\
    \ <5:ADJ/xcomp>(Okay) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADV/advmod>(so)\
    \ <ROOT> <9:PRON/obj>(was) <10:PRON/nsubj>(du) <11:PRON/obl:arg>(mir) <12:ADP/case>(f\xFC\
    r) <13:NOUN/obl>(Einblicke) <14:VERB/root>(gibst)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 3
    - ccomp
  - !!python/tuple
    - 12
    - 11
    - cop
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 3
    - parataxis
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 18
    - nsubj
  - !!python/tuple
    - 17
    - 18
    - cop
  - !!python/tuple
    - 18
    - 14
    - ccomp
  sentence: "<1:SCONJ/mark>(weil) <2:PRON/nsubj>(ich) <3:VERB/root>(habe) <4:ADV/advmod>(jetzt)\
    \ <5:ADV/advmod>(endlich) <6:ADV/advmod>(wieder) <7:DET/det>(ein) <8:NOUN/obj>(Liquid)\
    \ <9:PRON/nsubj>(das) <10:ADV/advmod>(einfach) <11:ADJ/ccomp>(geil) <12:AUX/cop>(ist)\
    \ <13:PRON/nsubj>(das) <14:VERB/parataxis>(knallt) <15:ADJ/advmod>(\xFCbertrieben)\
    \ <16:PRON/nsubj>(Es) <17:AUX/cop>(ist) <18:ADJ/ccomp>(ultra) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/root>(das) <4:ADV/advmod>(denn)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 6
    - cop
  sentence: "<2:PROPN/root>(Gunnar) <4:X/dep>(Wie) <ROOT> <5:ADJ/advmod>(weit) <6:ADV/root>(weg)\
    \ <7:SCONJ/mark>(das) <8:DET/nsubj>(alles) <9:ADP/case>(f\xFCr) <10:PRON/obl>(mich)\
    \ <11:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - nsubj:pass
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl:agent
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:ADP/root>(wie) <ROOT> <2:DET/det>(das) <3:ADJ/amod>(kleine) <4:PROPN/nsubj:pass>(Taiwan)
    <5:ADP/case>(von) <6:PROPN/obl:agent>(China) <7:VERB/root>(bedroht) <8:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(es) <3:ADV/advmod>(zu) <4:ADV/advmod>(sehr)
    <5:VERB/root>(pendelt) <6:CCONJ/cc>(und) <7:DET/det>(der) <8:NOUN/conj>(Wind)
    <9:ADP/compound:prt>(zu) <ROOT> <10:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADJ/root>(echt) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)\
    \ <5:ADV/mark>(zur\xFCck) <6:VERB/root>(denke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 6
    - xcomp
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 6
    - ccomp
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - cc
  - !!python/tuple
    - 15
    - 13
    - conj
  sentence: <1:CCONJ/cc>(und) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(wir) <4:DET/det>(die)
    <5:NOUN/obj>(Chance) <6:VERB/root>(hatten) <7:NOUN/obj>(Abschied) <8:PART/mark>(zu)
    <9:VERB/xcomp>(nehmen) <11:PRON/nsubj>(Es) <12:AUX/ccomp>(war) <ROOT> <13:ADJ/root>(traurig)
    <14:CCONJ/cc>(und) <15:ADV/conj>(zugleich)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 4
    - obl
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - aux
  - !!python/tuple
    - 12
    - 4
    - parataxis
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 12
    - obl
  sentence: "<ROOT> <1:ADV/advmod>(sch\xF6n) <2:ADV/advmod>(irgendwie) <3:PRON/nsubj>(das)\
    \ <4:VERB/root>(find) <5:PRON/nsubj>(ich) <6:AUX/aux>(war) <7:ADV/advmod>(auch)\
    \ <8:ADP/case>(f\xFCr) <9:PRON/obl>(mich) <10:PRON/nsubj>(ich) <11:AUX/aux>(w\xFC\
    rd) <12:VERB/parataxis>(sagen) <13:ADV/advmod>(so) <14:ADP/case>(in) <15:DET/obl>(diesem)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(Weil) <2:PRON/nsubj>(es) <3:ADV/advmod>(gerade) <4:PRON/obj>(sich)
    <ROOT> <5:VERB/root>(entwickelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 13
    - mark
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 13
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 13
    - obl
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 13
    - xcomp
  - !!python/tuple
    - 16
    - 15
    - cop
  - !!python/tuple
    - 17
    - 15
    - nsubj
  sentence: "<1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(ziemlich) <ROOT> <6:SCONJ/mark>(dass) <7:PRON/nsubj>(es) <8:ADV/advmod>(unten)\
    \ <9:ADP/case>(an) <10:DET/det>(der) <11:NOUN/obl>(Sch\xFCssel) <12:ADJ/advmod>(richtig)\
    \ <13:VERB/root>(gefriert) <14:ADV/advmod>(So) <15:ADJ/xcomp>(kalt) <16:AUX/cop>(ist)\
    \ <17:PRON/nsubj>(das)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADJ/root>(unheimlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: "<1:ADJ/root>(Unheimlich) <ROOT> <2:PRON/obj>(was) <3:PRON/nsubj>(du)\
    \ <4:DET/det:poss>(deinem) <5:NOUN/obj>(K\xF6rper) <6:VERB/root>(angetan) <7:AUX/aux>(hast)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:ADV/root>(so) <ROOT> <4:ADV/root>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(schmeckt) <3:ADV/advmod>(mal) <4:ADJ/advmod>(richtig)
    <ROOT> <6:X/root>(Oh)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/root>(Ah) <ROOT> <3:ADV/advmod>(Direkt) <4:VERB/root>(gewonnen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - nsubj
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(dann) <3:VERB/root>(reden) <4:PRON/nsubj>(das)
    <5:VERB/ccomp>(find) <6:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - expl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:CCONJ/cc>(und) <5:AUX/root>(ist) <6:PRON/expl>(es) <7:ADV/advmod>(immer) <8:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Rebekka) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(das)\
    \ <5:ADV/advmod>(so) <ROOT> <6:PRON/nsubj>(was) <7:PRON/nsubj>(das) <8:ADP/case>(f\xFC\
    r) <9:DET/det>(eine) <10:NOUN/obl>(Arbeit) <11:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl:arg
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:VERB/root>(finde) <3:PRON/nsubj>(ich)
    <4:DET/det>(das) <5:DET/obj>(Vielen) <6:DET/det>(vielen) <7:NOUN/obl:arg>(Dank)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(viel) <4:NOUN/nsubj>(Energie)
    <5:ADP/case>(in) <6:DET/det>(diesem) <7:NOUN/nmod>(Luftballon) <8:ADV/root>(drin)
    <9:AUX/cop>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - mark
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Therapeut) <3:VERB/root>(sagt) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(es) <ROOT> <6:ADV/advmod>(schnell) <7:VERB/root>(geht) <8:ADP/case>(bei)
    <9:PRON/obl>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(grad) <3:DET/det>(der) <4:ADJ/nsubj>(erste)
    <5:AUX/cop>(war) <6:ADV/advmod>(damals) <7:ADJ/root>(richtig) <ROOT> <8:ADJ/root>(Genau)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 6
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  sentence: "<1:ADJ/root>(Richtig) <ROOT> <2:ADJ/root>(gruselig) <3:AUX/cop>(ist)\
    \ <4:DET/det:poss>(unser) <5:ADJ/amod>(n\xE4chster) <6:NOUN/nsubj>(Titel)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Ist) <2:ADV/advmod>(vielleicht) <3:ADP/compound:prt>(zu)
    <ROOT> <4:ADJ/root>(dunkel)
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 10
    - obl:arg
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - obl
  - !!python/tuple
    - 13
    - 10
    - compound:prt
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:PRON/obl:arg>(mir) <3:ADP/case>(von) <4:DET/det>(einer)
    <5:NOUN/nmod>(Woche) <6:PROPN/obj>(Libanon) <7:ADP/case>(in) <8:DET/det>(dem)
    <9:NOUN/nmod>(Kopf) <10:VERB/root>(bleibt) <11:ADP/case>(Vor) <12:DET/obl>(allem)
    <13:ADP/compound:prt>(wie) <ROOT> <14:PRON/nsubj>(es) <15:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Zahlen) <3:AUX/cop>(sind) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(ihr) <3:VERB/root>(seid)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - det
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(das) <3:ADV/advmod>(gar) <4:PART/advmod>(nicht) <5:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - obj
  sentence: <1:NOUN/nsubj>(Jungs) <2:ADP/case>(mit) <3:DET/det>(dem) <4:NOUN/nmod>(Schraubi)
    <5:VERB/root>(ficken) <6:PRON/obj>(dir) <7:DET/det:poss>(dein) <8:NOUN/obj>(Arsch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - appos
  sentence: <1:ADV/advmod>(trotzdem) <2:VERB/root>(dreh') <3:PRON/nsubj>(ich) <ROOT>
    <4:ADP/case>(an) <5:DET/det>(dem) <6:NOUN/root>(Sender) <8:PROPN/appos>(Aha)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 8
    - nmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(die) <3:VERB/root>(haben) <4:ADJ/advmod>(richtig)
    <ROOT> <5:DET/det:poss>(ihre) <6:NOUN/nmod>(Tage) <7:ADV/advmod>(also) <8:PRON/root>(die)
    <9:AUX/aux>(sollen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:X/root>(Ach) <ROOT> <2:INTJ/root>(Guckt) <3:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(einfach)
    <ROOT> <5:ADJ/root>(hoch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(denkst) <3:PRON/nsubj>(du) <4:AUX/ccomp>(bist)
    <ROOT> <5:SCONJ/mark>(denn) <6:PRON/nsubj>(du) <7:AUX/aux>(hast) <8:DET/det>(ne)
    <9:NOUN/obj>(Ganze) <10:VERB/root>(genommen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 13
    - det
  - !!python/tuple
    - 9
    - 13
    - compound
  - !!python/tuple
    - 11
    - 13
    - compound
  - !!python/tuple
    - 13
    - 4
    - nsubj
  sentence: "<1:PRON/root>(Was) <ROOT> <2:AUX/aux>(war) <3:PRON/obj>(uns) <4:VERB/root>(wurden)\
    \ <5:ADV/advmod>(noch) <6:ADV/advmod>(nie) <7:ADV/advmod>(so) <8:DET/det>(viel)\
    \ <9:NOUN/compound>(Dritte) <11:NOUN/compound>(Wahl) <13:NOUN/nsubj>(Bade\xF6\
    fen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:VERB/root>(fand) <2:PRON/nsubj>(ich) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADJ/root>(wirklich) <ROOT> <3:ADP/case>(vor) <4:DET/det:poss>(ihren)
    <5:NOUN/obl>(Augen) <6:VERB/root>(gestritten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - aux
  - !!python/tuple
    - 10
    - 7
    - xcomp
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(auch) <3:SCONJ/root>(wenn) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(erst) <6:ADV/advmod>(mal) <ROOT> <7:VERB/root>(klingt) <8:PRON/nsubj>(ich)
    <9:AUX/aux>(muss) <10:VERB/xcomp>(dazusagen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Wo) <2:PRON/nsubj>(ich) <3:PRON/obl:arg>(mir) <4:VERB/root>(denke)
    <5:ADV/advmod>(Ja) <ROOT> <6:PROPN/root>(Story) <7:ADP/case>(in) <8:DET/det>(dem)
    <9:PROPN/nmod>(Roguelike)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 1
    - ccomp
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 13
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 1
    - parataxis
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:VERB/root>(hinkommen) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(man) <4:ADV/advmod>(da)
    <5:ADV/advmod>(irgendwie) <6:NOUN/obj>(Zeit) <7:VERB/ccomp>(gewinnt) <8:X/cc>(Oh)
    <9:X/nsubj>(wow) <10:PRON/nsubj>(es) <11:AUX/cop>(ist) <12:ADV/advmod>(ja) <13:ADJ/parataxis>(richtig)
    <ROOT> <14:ADP/case>(wie) <15:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 14
    - acl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 9
    - obl
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(selbst) <2:VERB/root>(besinnt) <3:ADV/advmod>(Also) <4:PRON/nsubj>(man)\
    \ <5:AUX/ccomp>(ist) <6:ADV/advmod>(wirklich) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)\
    \ <ROOT> <9:VERB/acl>(abgelenkt) <10:ADP/case>(von) <11:ADJ/amod>(\xE4u\xDFeren)\
    \ <12:NOUN/obl>(Einfl\xFCssen) <13:PRON/nsubj>(Man) <14:VERB/root>(sp\xFCrt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADJ/root>(total)
    <ROOT> <5:PRON/obj>(was) <6:PRON/nsubj>(der) <7:ADV/advmod>(da) <8:ADV/advmod>(jetzt)
    <9:VERB/root>(sagt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(die) <3:NOUN/nsubj>(Analyse) <4:VERB/root>(wird)
    <5:ADV/advmod>(dann) <6:ADV/advmod>(auch) <ROOT> <7:VERB/root>(verdreht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - parataxis
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Welcher) <2:ADJ/amod>(bekannte) <3:NOUN/nsubj>(Youtuber) <4:AUX/cop>(ist)
    <5:ADJ/root>(schwul) <6:DET/det>(Das) <7:NOUN/nsubj>(Ergebnis) <8:VERB/parataxis>(wird)
    <9:PRON/obj>(dich) <ROOT> <10:VERB/root>(umhauen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 11
    - nmod
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - parataxis
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PROPN/dep>(Stunna666) <3:PRON/nsubj>(Ich) <4:VERB/root>(finde) <5:DET/det>('ne)\
    \ <6:NOUN/obj>(Strophe) <7:ADP/case>(von) <8:PRON/nmod>(dem) <9:AUX/cop>(w\xE4\
    r) <10:ADV/advmod>(noch) <11:ADJ/parataxis>(richtig) <ROOT> <12:ADP/case>(aufm)\
    \ <13:NOUN/root>(Album)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(wei\xDF) <3:PRON/nsubj>(das) <4:VERB/xcomp>(klingt)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <ROOT> <5:ADJ/root>(belastend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - mark
  - !!python/tuple
    - 10
    - 3
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:PRON/obl>(mir) <3:VERB/root>(funktioniert) <4:PRON/expl>(es)\
    \ <5:ADV/advmod>(unten) <6:ADV/advmod>(immer) <7:ADV/advmod>(dann) <8:PART/advmod>(nicht)\
    \ <9:SCONJ/mark>(wenn) <10:PRON/nsubj>(ich) <ROOT> <11:NOUN/obj>(Druck) <12:VERB/root>(versp\xFC\
    re)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - cop
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/expl>(es) <3:VERB/root>(passiert) <4:ADV/advmod>(nie)
    <5:PRON/nsubj>(Sie) <6:VERB/ccomp>(bleibt) <7:ADV/advmod>(einfach) <8:ADJ/xcomp>(weich)
    <9:CCONJ/cc>(Und) <10:PRON/nsubj>(das) <11:AUX/cop>(ist) <12:ADV/advmod>(schon)
    <ROOT> <13:ADJ/root>(belastend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(da) <2:AUX/root>(hab) <3:PRON/nsubj>(ich) <4:PRON/obj>(mich)
    <ROOT> <5:ADP/case>(in) <6:NOUN/obl>(Frage) <7:VERB/root>(gestellt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(finds) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(die) <7:VERB/root>(abschalten) <8:AUX/aux>(k\xF6\
    nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:AUX/root>(ist) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(aber) <4:ADV/advmod>(schon)
    <ROOT> <5:ADP/case>(aus) <6:NOUN/root>(Sicht) <7:DET/det>(des) <8:NOUN/nmod>(Mannes)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - obl
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - advmod
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(wen) <3:PRON/nsubj>(das) <4:ADV/advmod>(jetzt)\
    \ <5:ADP/case>(nach) <6:NOUN/obl>(Suchtverhalten) <7:VERB/root>(klingt) <9:ADV/advmod>(ganz)\
    \ <10:ADV/advmod>(so) <ROOT> <11:AUX/root>(ist) <12:PRON/nsubj>(es) <13:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 14
    - obl
  - !!python/tuple
    - 12
    - 14
    - aux
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 20
    - mark
  - !!python/tuple
    - 16
    - 20
    - nsubj:pass
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 20
    - obl:agent
  - !!python/tuple
    - 20
    - 14
    - ccomp
  - !!python/tuple
    - 21
    - 20
    - aux:pass
  sentence: "<1:ADV/advmod>(Heute) <2:VERB/root>(kommt) <3:PRON/obj>(uns) <4:DET/det>(der)\
    \ <5:NOUN/nsubj>(Totenkult) <6:DET/det>(der) <7:PROPN/amod>(Alten) <8:PROPN/nmod>(\xC4\
    gypter) <9:ADV/advmod>(ziemlich) <ROOT> <10:ADP/case>(vor) <11:PRON/obl>(Man)\
    \ <12:AUX/aux>(k\xF6nnte) <13:ADV/advmod>(fast) <14:VERB/root>(glauben) <15:SCONJ/mark>(dass)\
    \ <16:PRON/nsubj:pass>(sie) <17:ADP/case>(von) <18:DET/det>(dem) <19:NOUN/obl:agent>(Tod)\
    \ <20:VERB/ccomp>(besessen) <21:AUX/aux:pass>(waren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 5
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:DET/det>(viel)
    <5:NOUN/root>(Platz) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADJ/parataxis>(echt)
    <ROOT> <9:NOUN/root>(gell)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 4
    - parataxis
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(total) <4:ADJ/root>(seltsam)
    <5:PRON/nsubj>(es) <6:AUX/cop>(ist) <7:ADJ/parataxis>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:VERB/root>(hat) <2:PRON/nsubj>(man) <3:ADJ/amod>(hohe) <4:NOUN/obj>(Verantwortung)
    <5:CCONJ/cc>(aber) <6:PRON/nsubj>(ich) <7:VERB/conj>(sag) <8:ADV/advmod>(mal)
    <9:PRON/nsubj>(ich) <10:VERB/conj>(denke) <11:ADV/advmod>(da) <12:ADV/advmod>(jetzt)
    <13:PART/advmod>(nicht) <14:ADV/advmod>(so) <ROOT> <15:DET/det>(jeden) <16:NOUN/root>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(das) <3:VERB/root>(steht) <4:ADV/advmod>(wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 7
    - advmod
  sentence: <2:NOUN/nsubj>(Mann) <3:PRON/nsubj>(das) <4:AUX/cop>(ist) <5:ADJ/root>(echt)
    <ROOT> <6:DET/det>(viel) <7:NOUN/root>(Arbeit) <8:ADV/advmod>(vielleicht) <9:ADV/advmod>(morgen)
    <10:CCONJ/cc>(oder) <11:ADV/advmod>(ne) <12:PART/advmod>(nicht) <13:ADV/advmod>(morgen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:PRON/nsubj>(du) <3:PRON/flat>(Das) <4:AUX/cop>(ist)
    <5:ADV/root>(so) <ROOT> <6:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/root>(Boom) <2:NOUN/appos>(Alter) <3:PRON/nsubj>(es) <4:AUX/cop>(ist)
    <5:DET/nsubj>(alles) <6:ADV/advmod>(so) <ROOT> <7:ADJ/root>(schnell)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - obl:arg
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obj
  - !!python/tuple
    - 11
    - 6
    - compound:prt
  - !!python/tuple
    - 12
    - 16
    - aux
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:AUX/aux>(haben) <3:PRON/obj>(sich) <4:ADP/case>(von)
    <5:PRON/obl>(mir) <6:VERB/root>(distanziert) <7:SCONJ/mark>(weil) <8:PRON/obl:arg>(ihnen)
    <9:DET/det>(das) <10:NOUN/obj>(Thema) <11:ADP/compound:prt>(zu) <ROOT> <12:AUX/aux>(war)
    <13:SCONJ/mark>(weil) <14:PRON/nsubj>(sie) <15:PART/advmod>(nicht) <16:VERB/root>(wussten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(bis) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(einfach) <4:ADV/root>(immer)
    <ROOT> <5:VERB/root>(abgeliefert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:PRON/nsubj>(Sie) <3:VERB/root>(geben)
    <4:PRON/obj>(sich) <5:ADP/case>(als) <6:NOUN/obl>(Polizisten) <7:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 11
    - aux
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:PRON/nsubj>(die)
    <5:AUX/aux>(haben) <6:ADV/advmod>(sogar) <7:DET/det>(den) <8:NOUN/obj>(Todestag)
    <9:DET/det>(der) <10:NOUN/nmod>(Queen) <11:VERB/root>(vorhergesagt)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - conj
  sentence: <1:INTJ/advmod>(Danke) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:PRON/obl:arg>(mir)
    <5:NOUN/obj>(Hoffnung) <6:VERB/root>(gibst) <7:CCONJ/cc>(Und) <8:PRON/nsubj>(das)
    <9:AUX/cop>(war) <10:ADV/advmod>(so) <11:ADV/conj>(wow) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:AUX/root>(ist) <3:ADV/advmod>(etwas) <ROOT> <4:ADJ/root>(farblich)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(etwas) <3:ADJ/advmod>(gelb) <4:ADJ/advcl>(unterlegt)\
    \ <5:AUX/cop>(ist) <6:VERB/root>(hei\xDFt) <7:PRON/nsubj>(es) <8:ADJ/xcomp>(super)\
    \ <ROOT> <9:ADJ/root>(toll)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(schwer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 3
    - advmod
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Helm) <3:VERB/root>(zieht) <4:PRON/obj>(mich)
    <5:ADV/advmod>(voll) <6:ADP/case>(nach) <7:ADV/advmod>(oben) <8:PRON/nsubj>(Das)
    <9:AUX/cop>(ist) <10:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 18
    - cc
  - !!python/tuple
    - 16
    - 18
    - advmod
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 14
    - conj
  - !!python/tuple
    - 19
    - 18
    - obj
  sentence: "<1:ADP/case>(bis) <2:NUM/nummod>(10) <3:NOUN/nmod>(Jahre) <4:ADJ/advmod>(sp\xE4\
    ter) <5:ADV/advmod>(wieder) <6:VERB/root>(getroffen) <7:CCONJ/cc>(und) <8:ADV/advmod>(jetzt)\
    \ <9:VERB/conj>(hat) <10:PRON/nsubj>(sie) <11:ADV/advmod>(so) <12:ADJ/advmod>(ganz)\
    \ <ROOT> <13:ADV/advmod>(so) <14:NOUN/root>(Haltung) <15:CCONJ/cc>(und) <16:ADV/advmod>(so)\
    \ <17:PRON/nsubj>(das) <18:VERB/conj>(hat) <19:PRON/obj>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - xcomp
  - !!python/tuple
    - 8
    - 4
    - acl
  - !!python/tuple
    - 9
    - 13
    - cc
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 4
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt) <4:PRON/root>(nichts)
    <5:PRON/nsubj>(was) <6:PRON/obj>(mich) <7:ADJ/xcomp>(fertig) <8:VERB/acl>(macht)
    <9:CCONJ/cc>(oder) <10:ADV/advmod>(so) <11:CCONJ/cc>(aber) <12:PRON/nsubj>(ich)
    <13:VERB/conj>(find) <14:NOUN/obj>(s) <15:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 6
    - parataxis
  - !!python/tuple
    - 12
    - 6
    - advmod
  sentence: <1:DET/det>(andere) <2:NOUN/nsubj>(Menschen) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <5:ADV/advmod>(genauso) <6:VERB/root>(denken) <7:SCONJ/mark>(wie) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(Also) <10:PRON/nsubj>(das) <11:AUX/parataxis>(ist) <12:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 13
    - cc
  - !!python/tuple
    - 7
    - 13
    - obj
  - !!python/tuple
    - 8
    - 13
    - aux
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 5
    - conj
  sentence: <1:ADV/root>(Aber) <ROOT> <2:PRON/nsubj>(was) <3:NOUN/obj>(Haare) <4:DET/obj>(alles)
    <5:VERB/root>(aushalten) <6:CCONJ/cc>(oder) <7:PRON/obj>(Was) <8:AUX/aux>(mussten)
    <9:DET/det:poss>(Eure) <10:NOUN/nsubj>(Haare) <11:ADV/advmod>(schon) <12:DET/obj>(alles)
    <13:VERB/conj>(mitmachen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: "<1:CCONJ/cc>(aber) <2:PRON/nsubj>(ich) <3:VERB/root>(bin) <4:ADV/advmod>(schon)\
    \ <5:DET/det>(ein) <6:ADV/advmod>(bisschen) <ROOT> <7:ADJ/root>(m\xFCde) <8:ADP/case>(wegen)\
    \ <9:DET/det>(dem) <10:NOUN/nmod>(Thema)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - aux
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 1
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:VERB/root>(erf\xE4hrt) <2:PRON/nsubj>(man) <3:PRON/obj>(wer) <4:PROPN/obj>(Parshad)\
    \ <5:AUX/aux>(ist) <6:CCONJ/cc>(und) <7:PRON/nsubj>(das) <8:AUX/cop>(ist) <9:ADJ/conj>(richtig)\
    \ <ROOT> <10:ADJ/root>(heilsam)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:ADV/advmod>(da) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)
    <5:DET/nsubj>(alles) <6:ADJ/root>(voll)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 14
    - mark
  - !!python/tuple
    - 8
    - 14
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 6
    - ccomp
  - !!python/tuple
    - 15
    - 14
    - cop
  - !!python/tuple
    - 16
    - 18
    - case
  - !!python/tuple
    - 17
    - 18
    - det
  - !!python/tuple
    - 18
    - 14
    - obl
  - !!python/tuple
    - 19
    - 20
    - case
  - !!python/tuple
    - 20
    - 18
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/nsubj>(man) <4:VERB/conj>(hat)\
    \ <5:PRON/obj>(es) <ROOT> <6:VERB/root>(gesp\xFCrt) <7:SCONJ/mark>(dass) <8:ADV/advmod>(da)\
    \ <9:ADV/advmod>(immer) <10:ADV/advmod>(noch) <11:ADV/advmod>(so) <12:ADV/advmod>(ganz)\
    \ <13:DET/nsubj>(viel) <14:VERB/ccomp>(unaufgearbeitet) <15:AUX/cop>(ist) <16:ADP/case>(aus)\
    \ <17:DET/det>(der) <18:NOUN/obl>(Zeit) <19:ADP/case>(von) <20:ADV/advmod>(damals)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - acl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:VERB/acl>(anzusehen) <3:VERB/root>(finde)
    <4:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PROPN/nsubj>(Sascha) <2:AUX/cop>(ist) <3:DET/root>(einer) <4:DET/det>(der)
    <5:ADV/advmod>(auch) <6:ADV/advmod>(so) <ROOT> <7:ADV/advmod>(gut) <8:VERB/root>(surfen)
    <9:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - compound:prt
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(voll) <ROOT> <4:PRON/nsubj>(es)
    <5:VERB/root>(stellte) <6:PRON/obj>(sich) <7:ADV/compound:prt>(heraus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - conj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Familie) <3:DET/det:poss>(meine)
    <4:NOUN/obj>(Cousins) <5:PRON/nsubj>(die) <6:VERB/root>(streiten) <7:PRON/obj>(sich)
    <8:ADV/advmod>(also) <9:ADV/advmod>(da) <10:VERB/conj>(gehen) <11:DET/det>(die)
    <12:NOUN/nsubj>(Meinungen) <13:ADV/advmod>(echt) <14:ADJ/advmod>(richtig) <ROOT>
    <15:ADV/root>(auseinander)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:ADV/root>(Auch) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(sie) <4:ADV/advmod>(so)
    <5:ADJ/root>(nahe) <6:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(warst) <3:ADP/case>(auf) <4:PROPN/obl>(Panama)
    <5:ADV/advmod>(also) <6:PRON/nsubj>(es) <7:VERB/conj>(sah) <8:ADJ/advmod>(richtig)
    <ROOT> <9:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - aux
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:DET/det>(ein) <4:NOUN/obj>(Kissen)
    <5:VERB/root>(mitgenommen) <6:AUX/aux>(habe) <7:PRON/nsubj>(das) <8:AUX/aux>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(Die) <2:AUX/cop>(sind) <3:DET/root>(alle) <4:ADV/advmod>(pleite)
    <5:ADV/advmod>(Schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: "<1:PRON/nsubj>(Das) <2:ADV/advmod>(hier) <3:VERB/root>(findet) <4:DET/det:poss>(unser)\
    \ <5:NOUN/obj>(Sachverst\xE4ndige) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/root>(Oah) <ROOT> <2:ADV/advmod>(Oh) <3:PRON/obj>(den) <4:AUX/aux>(hat)
    <5:NOUN/obj>(s) <6:ADV/advmod>(komplett) <7:VERB/root>(gefetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - nsubj
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(sag) <3:PRON/nsubj>(ich) <4:NUM/nummod>(14)
    <5:NUM/obj>(15) <6:ADV/advmod>(dann) <7:VERB/parataxis>(sagen) <8:PRON/nsubj>(die)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(halt) <4:ADJ/root>(echt)
    <ROOT> <5:SCONJ/mark>(wenn) <6:ADV/advmod>(dann) <7:ADV/advmod>(gar) <8:PRON/nsubj>(nichts)
    <9:ADV/advmod>(mehr) <10:ADV/advmod>(da) <11:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 15
    - nsubj
  - !!python/tuple
    - 10
    - 15
    - advmod
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - nmod
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 7
    - advcl
  - !!python/tuple
    - 16
    - 15
    - aux
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:VERB/root>(\xFCberlegt)\
    \ <8:SCONJ/case>(wie) <9:PROPN/nsubj>(Singapur) <10:ADV/advmod>(noch) <11:ADP/case>(vor)\
    \ <12:DET/det>(ein) <13:ADJ/nmod>(paar) <14:NOUN/obl>(Jahrzehnten) <15:VERB/advcl>(ausgesehen)\
    \ <16:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADP/case>(bei) <3:DET/det>(dem) <4:NOUN/obl>(Thema)
    <5:NOUN/appos>(Drogen) <6:VERB/root>(wird) <7:PRON/nsubj>(es) <8:ADV/advmod>(wirklich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  sentence: <1:SCONJ/mark>(Da) <2:VERB/root>(weiterzumachen) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:DET/det>(Der) <2:ADV/advmod>(vorher) <3:ADV/root>(noch) <ROOT> <4:PRON/obj>(sich)
    <5:DET/advmod>(selber) <6:VERB/root>(unterstapelt) <7:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  sentence: "<1:CCONJ/cc>(und) <2:PRON/nsubj>(das) <3:AUX/aux>(hast) <4:PRON/nsubj>(du)\
    \ <5:VERB/root>(\xFCbersetzt) <6:ADJ/obj>(Total) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:PROPN/nsubj>(GTA) <2:PROPN/appos>(6) <3:VERB/root>(wird) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihre) <2:NOUN/nsubj>(Geschichte) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - aux
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(So) <2:ADP/amod>(n) <3:NOUN/nsubj>(Axolotl) <4:AUX/cop>(w\xE4\
    r) <5:ADJ/root>(geil) <6:PRON/nsubj>(die) <7:AUX/aux>(sollen) <8:ADJ/conj>(echt)\
    \ <ROOT> <9:AUX/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:ADJ/root>(wirklich) <ROOT> <2:NOUN/root>(surviven) <3:AUX/aux>(muss)
    <4:PRON/nsubj>(man) <5:ADV/advmod>(aber) <6:ADV/advmod>(gar) <7:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/root>(Simples) <2:ADV/advmod>(aber) <ROOT> <3:ADJ/amod>(aussehendes)
    <4:NOUN/dep>(Kampfsystem) <5:ADP/case>(Von) <6:PROPN/obl>(Batman) <7:VERB/root>(geklaut)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:PROPN/root>(Ah) <2:X/dep>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(machst) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Geruch) <3:AUX/root>(ist) <ROOT> <4:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(wer) <2:VERB/root>(macht) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <ROOT> <4:ADV/advmod>(Da)
    <5:AUX/root>(sind) <6:NUM/nummod>(drei) <7:NOUN/nsubj>(Leute) <8:ADP/case>(auf)
    <9:DET/det>(dem) <10:NOUN/nmod>(Pferd)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advcl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obl
  - !!python/tuple
    - 12
    - 19
    - advmod
  - !!python/tuple
    - 13
    - 19
    - obj
  - !!python/tuple
    - 14
    - 19
    - aux
  - !!python/tuple
    - 15
    - 19
    - nsubj
  - !!python/tuple
    - 16
    - 19
    - advmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 7
    - parataxis
  - !!python/tuple
    - 20
    - 24
    - mark
  - !!python/tuple
    - 21
    - 24
    - nsubj
  - !!python/tuple
    - 22
    - 24
    - advmod
  - !!python/tuple
    - 23
    - 24
    - det
  - !!python/tuple
    - 24
    - 19
    - ccomp
  - !!python/tuple
    - 25
    - 24
    - cop
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(weil) <4:PRON/nsubj>(ich)\
    \ <5:VERB/advcl>(dachte) <6:PRON/nsubj>(ich) <7:VERB/root>(bin) <8:ADV/advmod>(genau)\
    \ <9:ADP/case>(in) <10:DET/det>(der) <11:NOUN/obl>(Mitte) <12:ADV/advmod>(Also)\
    \ <13:PRON/obj>(das) <14:AUX/aux>(h\xE4tte) <15:PRON/nsubj>(ich) <16:ADV/advmod>(jetzt)\
    \ <17:ADV/advmod>(wirklich) <18:PART/advmod>(nicht) <19:VERB/parataxis>(gedacht)\
    \ <20:SCONJ/mark>(dass) <21:PRON/nsubj>(es) <22:ADV/advmod>(so) <23:DET/det>(eine)\
    \ <24:NOUN/ccomp>(Feinarbeit) <25:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find\u2019s) <3:ADV/advmod>(halt) <4:ADV/advmod>(einfach)\
    \ <ROOT> <5:SCONJ/mark>(weil) <6:ADV/advmod>(hier) <7:ADV/advmod>(heute) <8:ADV/advmod>(nur)\
    \ <9:NOUN/nsubj>(Frauen) <10:AUX/cop>(sind) <11:NOUN/root>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(die) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(wirklich) <6:ADJ/advmod>(schwer) <7:NOUN/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 14
    - mark
  - !!python/tuple
    - 8
    - 14
    - nsubj
  - !!python/tuple
    - 9
    - 14
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 14
    - obj
  - !!python/tuple
    - 13
    - 11
    - flat
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(finds) <4:ADV/advmod>(gerade)
    <5:DET/det>(ein) <6:ADV/obj>(bisschen) <ROOT> <7:SCONJ/mark>(dass) <8:PRON/nsubj>(es)
    <9:ADV/advmod>(hier) <10:DET/det>(ein) <11:PROPN/obj>(Gaypeople) <13:NOUN/flat>(Zelt)
    <14:VERB/root>(gibt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 4
    - amod
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(letzten) <3:NUM/nummod>(10) <4:NOUN/nsubj>(Jahre)
    <5:AUX/cop>(waren) <6:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:PART/advmod>(nicht) <4:ADV/advmod>(damit)
    <5:VERB/root>(gerechnet) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(es) <8:ADV/advmod>(so)
    <ROOT> <9:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - xcomp
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:ADP/case>(Von) <4:ADV/advmod>(daher)\
    \ <5:VERB/root>(f\xFChle) <6:PRON/nsubj>(ich) <7:PRON/obj>(mich) <8:ADV/advmod>(manchmal)\
    \ <9:ADV/advmod>(sehr) <10:ADJ/xcomp>(deutsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:DET/det>(die) <4:NOUN/obj>(Frage)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - advcl
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:PRON/obj>(sich) <4:ADV/advmod>(auch)
    <ROOT> <5:VERB/root>(entschuldigt) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(er) <8:PRON/obj>(das)
    <9:ADV/advmod>(wirklich) <10:ADV/advmod>(anders) <11:VERB/advcl>(interpretiert)
    <12:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:ADV/advmod>(Also) <2:ADV/advmod>(da) <3:VERB/root>(passiert) <4:ADV/advmod>(so)
    <ROOT> <5:DET/root>(vieles) <6:ADP/case>(in) <7:PRON/nmod>(deinem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - acl
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 10
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(wei\xDF) <3:ADV/advmod>(auch) <4:ADV/advmod>(so)\
    \ <5:DET/det>(eine) <6:NOUN/obj>(Geschichte) <7:ADV/advmod>(wo) <8:PRON/nsubj>(man)\
    \ <9:ADV/advmod>(erstmal) <10:VERB/acl>(denkt) <11:ADV/advmod>(boah) <12:SCONJ/advmod>(wie)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - aux
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PROPN/root>(Boah) <2:PROPN/appos>(56) <3:NUM/nummod>(90) <4:PROPN/dep>(Euro)
    <ROOT> <5:ADV/advmod>(Da) <6:AUX/aux>(hat) <7:PRON/obj>(sich) <8:DET/det>(das)
    <9:NOUN/nsubj>(Sparen) <10:ADV/advmod>(doch) <11:VERB/root>(gelohnt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nummod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:DET/det>(ne) <4:NOUN/obj>(Zahl)\
    \ <5:VERB/root>(gelesen) <6:PRON/nsubj>(die) <7:VERB/parataxis>(finde) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(ziemlich) <ROOT> <10:ADV/advmod>(N\xE4mlich) <11:ADV/advmod>(knapp)\
    \ <12:NUM/nummod>(2) <13:NOUN/root>(Millionen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:PRON/expl>(es) <3:AUX/root>(war) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(nur) <ROOT> <6:PRON/nsubj>(Ich) <7:VERB/root>(spiele) <8:ADV/advmod>(mal)
    <9:ADP/compound:prt>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:CCONJ/cc>(aber) <2:PRON/root>(das) <3:PRON/obj>(was) <4:PRON/nsubj>(wir)
    <5:VERB/acl>(rausgefunden) <6:AUX/aux>(haben) <7:AUX/aux>(war) <8:ADV/advmod>(halt)
    <9:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:CCONJ/cc>(und) <3:ADP/case>(seit) <4:ADV/root>(wann)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - parataxis
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 8
    - ccomp
  - !!python/tuple
    - 14
    - 8
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - obl:arg
  sentence: <1:CCONJ/cc>(und) <2:DET/nsubj>(manche) <3:VERB/root>(begleiten) <4:PRON/obj>(uns)
    <5:ADV/advmod>(halt) <6:ADV/compound:prt>(weiter) <7:PRON/nsubj>(Ich) <8:VERB/parataxis>(habe)
    <9:DET/det>(die) <10:NOUN/obj>(Geschichte) <11:ADP/case>(von) <12:PROPN/nmod>(Vanessa)
    <13:AUX/ccomp>(Ist) <14:ADV/advmod>(so) <ROOT> <15:SCONJ/root>(dass) <16:PRON/nsubj>(ich)
    <17:PRON/obl:arg>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - expl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 13
    - case
  - !!python/tuple
    - 10
    - 13
    - mark
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 7
    - advcl
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(sag) <4:ADV/advmod>(mal)
    <5:ADV/advmod>(ganz) <ROOT> <6:PRON/expl>(es) <7:AUX/root>(ist) <8:ADV/advmod>(so)
    <9:ADP/case>(als) <10:SCONJ/mark>(wenn) <11:PRON/nsubj>(ich) <12:PRON/obj>(jemandem)
    <13:VERB/advcl>(mitteile)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - det:poss
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 6
    - conj
  - !!python/tuple
    - 13
    - 11
    - flat
  - !!python/tuple
    - 15
    - 11
    - flat
  sentence: <1:ADV/advmod>(Gut) <2:ADV/advmod>(vielleicht) <3:PART/advmod>(nicht)
    <4:ADV/root>(so) <ROOT> <5:ADP/case>(wie) <6:PROPN/root>(Kai) <8:DET/det:poss>(mein)
    <9:NOUN/compound>(Telefon) <11:PROPN/conj>(Klingelt) <13:PROPN/flat>(Pflaume)
    <15:NOUN/flat>(Ungelenk)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - aux
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:PRON/obj>(sie)
    <5:ADP/case>(in) <6:PROPN/obl>(Real) <7:PROPN/flat>(Life) <8:VERB/root>(sieht)
    <9:PRON/nsubj>(das) <10:AUX/aux>(ist) <11:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - dep
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  sentence: <1:NOUN/dep>(-Jahrtausenden) <2:DET/det>(eine) <3:NOUN/obj>(Beziehung)
    <4:VERB/root>(haben) <6:X/dep>(Na) <ROOT> <7:ADV/advmod>(Jetzt) <8:VERB/root>(verstehe)
    <9:PRON/nsubj>(ich) <10:DET/obj>(alles)
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - parataxis
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<2:ADJ/parataxis>(off) <4:NOUN/nsubj>(Minderj\xE4hrige) <5:ADP/case>(zu)\
    \ <6:DET/det>(dem) <7:NOUN/obl>(Dealen) <8:VERB/root>(einspannen) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Genau) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(heute) <7:ADV/advmod>(so) <ROOT> <9:X/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - expl
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/expl>(Ihr) <2:AUX/aux>(konntet) <3:ADV/advmod>(noch) <4:ADV/advmod>(nie)
    <5:DET/det>(ein) <6:NOUN/obj>(Weidentipi) <7:VERB/root>(flechten) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(sage) <ROOT> <3:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:ADV/advmod>(schon) <3:ADJ/root>(beeindruckend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Klingt) <2:ADJ/root>(echt) <ROOT> <3:CCONJ/cc>(aber) <4:PRON/nsubj>(du)
    <5:AUX/aux>(hast) <6:PRON/obj>(es) <7:VERB/root>(gesagt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(diese) <2:NOUN/nsubj>(Line) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/root>(jemanden) <2:ADV/advmod>(Manchmal) <ROOT> <3:CCONJ/cc>(und)
    <4:ADV/advmod>(manchmal) <5:PART/advmod>(nicht) <6:ADV/root>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 6
    - conj
  sentence: <1:PROPN/nsubj>(Marcia) <2:PRON/flat>(sie) <3:VERB/root>(will) <4:DET/det>(keinen)
    <5:NOUN/obj>(Kontakt) <6:VERB/ccomp>(lass) <7:PRON/obj>(sie) <8:ADP/case>(in)
    <9:NOUN/obl>(Ruhe) <10:CCONJ/cc>(Und) <11:PRON/nsubj>(ich) <12:ADV/advmod>(so)
    <13:PROPN/conj>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/aux>(K\xF6nnte) <2:DET/det:poss>(sein) <3:NOUN/nsubj>(Erdbeben)\
    \ <4:AUX/root>(ist) <ROOT> <6:NOUN/root>(Bitte)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - compound
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:AUX/cop>(Bin) <2:PRON/nsubj>(ich) <3:ADJ/compound>(tot) <5:NOUN/nsubj>(Nee)
    <6:AUX/cop>(ist) <7:DET/root>(keine) <ROOT> <8:ADJ/amod>(starke) <9:NOUN/root>(Attacke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - obl:arg
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT> <4:SCONJ/mark>(weil)
    <5:PRON/nsubj>(ich) <6:VERB/root>(dachte) <7:SCONJ/mark>(wenn) <8:PRON/nsubj>(ich)
    <9:PRON/obl:arg>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Deswegen) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <ROOT> <5:PART/mark>(zu) <6:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(Das) <3:AUX/aux>(hat) <4:ADV/advmod>(einfach)
    <5:NOUN/obj>(Nacktbilder) <6:ADP/case>(von) <7:PRON/nmod>(mir) <8:VERB/root>(erstellt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADV/advmod>(ja) <4:ADP/case>(mit)
    <5:DET/det>(den) <6:NOUN/obl>(Details) <7:ADJ/advmod>(echt) <ROOT> <8:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 14
    - nsubj
  - !!python/tuple
    - 9
    - 14
    - aux
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 14
    - obj
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(doch) <2:ADJ/root>(wichtig) <3:PRON/nsubj>(das) <4:ADV/advmod>(auch)\
    \ <5:PART/mark>(zu) <6:VERB/xcomp>(erw\xE4hnen) <7:ADV/advmod>(Wie) <ROOT> <8:PRON/nsubj>(Das)\
    \ <9:AUX/aux>(hat) <10:ADV/advmod>(einfach) <11:NOUN/obj>(Nacktbilder) <12:ADP/case>(von)\
    \ <13:PRON/nmod>(mir) <14:VERB/root>(erstellt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADJ/advmod>(Tats\xE4chlich) <2:VERB/root>(finde) <3:PRON/nsubj>(ich)\
    \ <4:PRON/obj>(es) <ROOT> <5:SCONJ/mark>(dass) <6:DET/det>(diese) <7:NOUN/nsubj>(TikToks)\
    \ <8:ADP/case>(in) <9:DET/det>(der) <10:NOUN/obl>(Welt) <11:VERB/root>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NUM/nummod>(15) <2:NUM/dep>(20) <3:ADP/case>(f\xFCr) <4:DET/det>(einen)\
    \ <5:NOUN/nmod>(Liter) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADJ/root>(echt)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nsubj:pass
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux:pass
  sentence: <1:VERB/root>(Find) <2:PRON/nsubj>(ich) <3:ADV/advmod>(echt) <ROOT> <4:SCONJ/mark>(wie)
    <5:DET/det>(viel) <6:NOUN/nsubj:pass>(Aufwand) <7:ADV/advmod>(hier) <8:VERB/root>(gefahren)
    <9:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <2:PRON/nsubj>(Ich) <3:AUX/root>(bin) <4:ADV/advmod>(ziemlich) <ROOT>
    <5:PRON/nsubj>(Ich) <6:AUX/cop>(bin) <7:ADV/advmod>(auch) <8:ADJ/root>(behaart)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(auch) <3:ADJ/root>(ganz) <ROOT> <4:AUX/root>(wurde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(habe) <3:ADV/advmod>(dann) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(wieder) <6:DET/det>(den) <7:NOUN/obj>(Bewegungsdrang) <8:ADJ/advmod>(ganz)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 9
    - nsubj
  - !!python/tuple
    - 13
    - 9
    - cop
  - !!python/tuple
    - 14
    - 9
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(gerade) <6:ADV/advmod>(sehr) <ROOT> <7:SCONJ/mark>(weil) <8:PRON/nsubj>(die)
    <9:AUX/root>(sind) <10:ADP/case>(wie) <11:ADJ/amod>(apathisch) <12:PRON/nsubj>(die)
    <13:AUX/cop>(sind) <14:ADV/advmod>(normalerweise)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(ganz)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Airbus) <2:VERB/root>(holt) <3:ADP/case>(in) <4:DET/det>(den)
    <5:NOUN/obl>(90ern) <ROOT> <6:ADP/root>(auf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:ADP/root>(wie) <ROOT> <2:DET/det>(die) <3:NOUN/nsubj>(Bestellungen)\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:PROPN/nmod>(737) <7:PROPN/flat>(MAX)\
    \ <8:VERB/root>(eingebrochen) <9:AUX/aux>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/root>(Weil) <2:DET/det>(die) <3:NOUN/nsubj>(Entwicklung) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/root>(teuer) <6:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - xcomp
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - aux
  - !!python/tuple
    - 6
    - 1
    - advmod
  sentence: <1:VERB/root>(wird) <2:PROPN/nsubj>(Phlogiston) <3:ADJ/xcomp>(frei) <4:PRON/nsubj>(Das)
    <5:AUX/aux>(ist) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - parataxis
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obj
  sentence: <1:ADJ/root>(Voll) <ROOT> <3:VERB/root>(Komm) <4:PRON/nsubj>(wir) <5:VERB/parataxis>(machen)
    <6:ADV/advmod>(noch) <7:DET/det>(ein) <8:NOUN/obj>(Video)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:DET/det>(die) <3:NOUN/nsubj>(Zahlenwerte) <4:AUX/cop>(sind)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT> <7:VERB/root>(angestiegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  sentence: "<1:SCONJ/root>(wenn) <2:PRON/nsubj>(es) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(erh\xF6\
    ht) <5:AUX/aux:pass>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:DET/det>(die) <3:NOUN/nsubj>(Vorstellung) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux
  - !!python/tuple
    - 3
    - 1
    - mark
  - !!python/tuple
    - 4
    - 1
    - nsubj
  sentence: "<ROOT> <1:VERB/root>(optimieren) <2:AUX/aux>(m\xF6chte) <3:SCONJ/mark>(dass)\
    \ <4:PRON/nsubj>(er)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: "<1:X/root>(Ah) <ROOT> <2:AUX/aux>(K\xF6nnen) <3:PRON/nsubj>(wir) <4:VERB/root>(reingucken)\
    \ <5:ADP/case>(in) <6:DET/det:poss>(deinen) <7:NOUN/obl>(Film)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  sentence: <2:X/root>(off) <4:X/dep>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(wir)
    <5:VERB/advcl>(spazieren) <6:VERB/root>(gehen) <7:ADP/case>(mit) <8:DET/det>(dem)
    <9:NOUN/obl>(Ding) <10:ADP/compound:prt>(auf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(ja)
    <ROOT> <5:AUX/aux>(kann) <6:ADV/advmod>(schon) <7:VERB/root>(passen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:ADV/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - expl
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - cop
  sentence: <1:CCONJ/cc>(Und) <2:PRON/expl>(es) <3:AUX/cop>(war) <4:DET/nsubj>(alles)
    <5:ADV/advmod>(so) <6:ADJ/root>(staubig) <7:DET/det>(der) <8:NOUN/nsubj>(Effekt)
    <9:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 8
    - obl:arg
  - !!python/tuple
    - 8
    - 10
    - xcomp
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/root>(irgendwie) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man)\
    \ <4:PRON/obj>(das) <5:DET/det>(einem) <6:ADJ/amod>(kleinen) <7:NOUN/obl:arg>(Menschen)\
    \ <8:VERB/xcomp>(aufb\xFCrdet) <9:PART/mark>(zu) <10:VERB/root>(sagen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADP/case>(Als) <2:NOUN/obl>(Beifahrer) <3:VERB/root>(nervt) <4:PRON/nsubj>(es)
    <5:ADJ/advmod>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:ADJ/compound>(Genau) <4:X/root>(Ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(war) <2:DET/det:poss>(seiner) <3:NOUN/root>(Zeit) <ROOT> <4:ADV/root>(voraus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(hab'n) <3:PART/advmod>(nicht) <ROOT>
    <4:VERB/root>(verkauft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: <1:DET/det>(Die) <2:PROPN/root>(Quanti) <3:CCONJ/cc>(und) <4:PROPN/conj>(Quali)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 8
    - 5
    - appos
  sentence: <1:ADV/advmod>(Daran) <2:VERB/root>(erkennt) <3:PRON/nsubj>(man) <4:DET/det>(diesen)
    <5:PROPN/obj>(REM) <7:NOUN/flat>(Schlaf) <8:PROPN/appos>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: "<1:SCONJ/root>(weil) <2:PRON/nsubj>(sie) <3:ADV/advmod>(halt) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/root>(abh\xE4ngig) <6:AUX/cop>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NUM/nummod>(90) <2:NOUN/nsubj>(Prozent) <3:AUX/cop>(ist) <4:ADV/advmod>(wirklich)
    <5:DET/root>(eine) <ROOT> <6:ADJ/amod>(hohe) <7:NOUN/root>(Zahl)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - ccomp
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/ccomp>(hei\xDFt) <3:PRON/nsubj>(wir) <4:VERB/root>(l\xFC\
    gen) <5:PRON/obj>(sie) <6:ADV/advmod>(jetzt) <7:ADJ/advmod>(richtig) <ROOT> <8:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - conj
  sentence: "<1:PRON/root>(der) <2:ADV/advmod>(so) <ROOT> <3:ADP/case>(nach) <4:ADV/advmod>(vorne)\
    \ <5:VERB/root>(dr\xE4ngt) <6:CCONJ/cc>(und) <7:ADV/advmod>(immer) <8:ADV/advmod>(mehr)\
    \ <9:AUX/conj>(will)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - det
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 12
    - amod
  - !!python/tuple
    - 10
    - 12
    - compound
  - !!python/tuple
    - 12
    - 6
    - obj
  sentence: <1:PROPN/nsubj>(Kollegah) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:VERB/advcl>(trainiert)
    <5:PRON/nsubj>(der) <6:VERB/root>(hat) <7:DET/det>(ein) <8:ADV/advmod>(echt) <9:ADJ/amod>(breites)
    <10:NOUN/compound>(Haken) <12:NOUN/obj>(Kreuz)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADJ/root>(okay) <ROOT> <2:PRON/nsubj>(ich) <3:VERB/root>(kann) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(damit)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(irgendwie) <3:VERB/root>(hat) <4:PROPN/nsubj>(Fall)
    <5:PROPN/flat>(Guys) <6:PRON/obj>(mich) <7:DET/det>(dieses) <8:NOUN/obl>(Jahr)
    <ROOT> <9:VERB/root>(gekriegt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(war) <ROOT> <3:ADJ/root>(abh\xE4ngig)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(da) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:ADJ/root>(abh\xE4ngig)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - acl
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 4
    - advmod
  sentence: "<ROOT> <1:ADP/case>(\xFCber) <2:DET/det>(dieses) <3:NOUN/obl>(Thema)\
    \ <4:VERB/root>(geredet) <5:CCONJ/cc>(Nein) <6:ADV/advmod>(ehrlich) <7:VERB/acl>(gesagt)\
    \ <8:ADP/case>(mit) <9:PRON/obl>(niemandem) <10:ADP/case>(mit) <11:PRON/nmod>(niemandem)\
    \ <12:ADV/advmod>(Vielleicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  sentence: <1:ADV/advmod>(Ja) <2:ADJ/root>(klar) <3:AUX/cop>(ist) <ROOT> <4:ADV/advmod>(also)
    <5:PRON/nsubj>(ich) <6:VERB/root>(kenn) <7:PRON/obj>(niemanden)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obl:arg
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - conj
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - advmod
  sentence: <1:PRON/obl:arg>(der) <2:PRON/nsubj>(das) <3:ADV/advmod>(sonst) <4:VERB/root>(gemacht)
    <5:AUX/aux>(ist) <6:ADV/advmod>(halt) <7:DET/det>(ne) <8:ADJ/amod>(neue) <9:NOUN/obj>(Situation)
    <10:CCONJ/cc>(und) <11:PRON/nsubj>(es) <12:AUX/conj>(ist) <13:ADV/advmod>(schon)
    <ROOT> <14:ADV/advmod>(deswegen) <15:AUX/root>(kann) <16:PRON/nsubj>(ich) <17:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advcl
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:VERB/root>(verstehen) <2:SCONJ/mark>(wenn) <3:DET/det>(andere) <4:NOUN/nsubj>(Leute)
    <5:ADV/advmod>(so) <6:VERB/advcl>(reagieren) <7:ADV/advmod>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advcl
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: <1:ADV/advmod>(quasi) <2:ADV/advmod>(Ja) <3:PRON/obj>(den) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(jetzt) <6:ADV/advmod>(immer) <7:VERB/advcl>(anhabe) <8:AUX/aux>(Darf)
    <9:PRON/nsubj>(ich) <10:ADV/advmod>(mal) <11:VERB/root>(gucken) <12:ADV/advmod>(Ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - obl:arg
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - aux
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - ccomp
  sentence: "<1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(Ich) <3:AUX/aux>(hab) <4:NOUN/obj>(s)\
    \ <5:PRON/obl:arg>(mir) <6:ADV/advmod>(gr\xF6\xDFer) <7:VERB/root>(vorgestellt)\
    \ <9:PRON/nsubj>(du) <10:AUX/aux>(bist) <11:ADV/advmod>(ja) <12:VERB/ccomp>(gemein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(ging) <3:ADJ/xcomp>(schneller) <4:ADP/case>(als)
    <5:ADJ/amod>(gedacht) <6:ADJ/nmod>(Total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 1
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/root>(Oh) <3:PRON/flat>(Das) <4:AUX/cop>(ist) <ROOT> <5:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 7
    - obl
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - det
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 7
    - parataxis
  sentence: <1:VERB/root>(geworfen) <ROOT> <3:ADV/advmod>(genau) <4:AUX/aux>(habt)
    <5:PRON/obj>(ihr) <6:PRON/nsubj>(das) <7:VERB/root>(gesichert) <8:ADV/advmod>(ja)
    <9:ADV/advmod>(okay) <10:ADP/case>(bei) <11:PRON/obl>(uns) <12:ADV/advmod>(okay)
    <13:ADV/advmod>(perfekt) <14:DET/det>(der) <15:DET/det>(andere) <16:NOUN/parataxis>(Beschuldigte)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(war) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  sentence: <1:PROPN/root>(Okay) <2:PROPN/flat>(Boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:ADP/case>(bei)
    <5:PRON/root>(dir) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(die) <8:DET/obj>(alle)
    <9:ADJ/advmod>(dicht) <10:VERB/acl>(gehalten) <11:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - obl
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADP/case>(f\xFCr) <4:PRON/obl>(mich)\
    \ <ROOT> <5:SCONJ/mark>(weil) <6:PRON/nsubj>(ich) <7:ADP/case>(in) <8:DET/det>(dem)\
    \ <9:PROPN/obl>(Abi) <10:NOUN/obj>(Stress) <11:VERB/root>(hatte)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  sentence: "<1:ADJ/root>(Wirklich) <ROOT> <2:DET/det>(Die) <3:NOUN/nsubj>(W\xE4nde)\
    \ <4:VERB/root>(sehen) <5:ADP/compound:prt>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:ADV/advmod>(Erstens) <2:ADV/root>(Wie) <ROOT> <3:VERB/root>(leiden)
    <4:DET/det>(die) <5:NOUN/nsubj>(Menschen) <6:ADP/case>(unter) <7:DET/det>(der)
    <8:NOUN/obl>(Situation)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 10
    - obj
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADP/case>(zu) <3:DET/det>(dem) <4:NOUN/nmod>(Schluss)
    <5:DET/det>(die) <6:DET/det>(alles) <7:ADJ/amod>(entscheidende) <8:NOUN/root>(Frage)
    <9:PRON/nsubj>(Wer) <10:VERB/parataxis>(hat) <11:PRON/nsubj>(das) <12:ADV/advmod>(eigentlich)
    <13:DET/obj>(alles) <14:ADV/advmod>(so) <ROOT> <15:VERB/root>(verbockt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Wie) <2:ADP/case>(zu) <3:DET/det>(der) <4:NOUN/obl>(H\xF6\
    lle) <5:AUX/root>(konnte) <6:DET/det>(das) <7:NOUN/nsubj>(Abomodell) <8:ADV/advmod>(so)\
    \ <ROOT> <9:VERB/root>(einschlagen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 13
    - mark
  - !!python/tuple
    - 5
    - 13
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 13
    - obl
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 13
    - obl
  sentence: "<1:PROPN/root>(Olivia) <2:PROPN/flat>(War) <3:ADV/advmod>(ziemlich) <ROOT>\
    \ <4:SCONJ/mark>(Weil) <5:PRON/nsubj>(das) <6:ADV/advmod>(auch) <7:ADP/case>(in)\
    \ <8:DET/det>(dem) <9:NOUN/obl>(Gespr\xE4ch) <10:DET/det>(die) <11:ADJ/amod>(ganze)\
    \ <12:NOUN/obj>(Zeit) <13:VERB/root>(lief) <14:ADP/case>(in) <15:DET/det>(die)\
    \ <16:NOUN/obl>(Richtung)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(die) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: <1:CCONJ/cc>(Und) <2:ADV/root>(so) <ROOT> <3:PRON/nsubj>(das) <4:ADV/advmod>(auch)
    <5:VERB/root>(klingen) <6:AUX/aux>(mag)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obl:arg
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Boah) <2:PRON/obj>(das) <3:ADP/case>(mit) <4:DET/det>(der)\
    \ <5:NOUN/nmod>(H\xF6hle) <6:VERB/root>(stell) <7:PRON/nsubj>(ich) <8:PRON/obl:arg>(mir)\
    \ <ROOT> <9:ADP/root>(vor)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 8
    - csubj
  - !!python/tuple
    - 7
    - 8
    - aux
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Erde) <3:ADP/case>(von) <4:ADV/advmod>(oben)
    <5:PART/mark>(zu) <6:VERB/csubj>(sehen) <7:AUX/aux>(muss) <8:ADJ/root>(echt) <ROOT>
    <9:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PART/advmod>(nicht) <3:SCONJ/root>(dass) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(so) <ROOT> <6:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:AUX/aux>(habe) <3:PART/advmod>(nicht) <4:VERB/root>(gedacht)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <7:ADV/advmod>(so) <ROOT> <8:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/root>(wie) <ROOT> <2:ADV/advmod>(auch) <3:DET/det>(die) <4:NOUN/nsubj>(Zerst\xF6\
    rung) <5:ADP/case>(an) <6:DET/det>(dem) <7:DET/det>(anderen) <8:NOUN/nmod>(Tag)\
    \ <9:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 16
    - advcl
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 16
    - aux
  - !!python/tuple
    - 8
    - 16
    - nsubj
  - !!python/tuple
    - 9
    - 16
    - obl:arg
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 16
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - xcomp
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:DET/det>(der) <2:NOUN/root>(hauptdarsteller) <3:ADV/advmod>(so) <ROOT>\
    \ <4:VERB/advcl>(belastet) <5:AUX/cop>(ist) <6:ADV/advmod>(da) <7:AUX/aux>(habe)\
    \ <8:PRON/nsubj>(ich) <9:PRON/obl:arg>(mir) <10:ADV/advmod>(noch) <11:PART/advmod>(nicht)\
    \ <12:ADV/advmod>(so) <13:ADV/advmod>(richtig) <14:VERB/xcomp>(gedanken) <15:ADV/advmod>(dar\xFC\
    ber) <16:VERB/root>(gemacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obl:arg
  - !!python/tuple
    - 6
    - 4
    - compound:prt
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 4
    - advcl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(das) <4:VERB/root>(f\xE4\
    llt) <5:PRON/obl:arg>(mir) <6:ADP/compound:prt>(auf) <7:SCONJ/mark>(als) <8:PRON/nsubj>(ich)\
    \ <9:PRON/obj>(was) <10:VERB/advcl>(mache)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fands) <3:ADV/advmod>(voll) <ROOT> <4:ADP/case>(bei)
    <5:DET/det:poss>(deinen) <6:NOUN/root>(Eltern) <7:ADV/advmod>(gestern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <ROOT> <3:AUX/aux>(ist) <4:ADV/advmod>(aber)
    <5:ADV/advmod>(wirklich) <6:VERB/root>(geschehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 10
    - nmod
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Frankfurt) <2:AUX/root>(ist) <3:ADP/case>(f\xFCr) <4:PRON/obl>(mich)\
    \ <ROOT> <5:ADP/case>(mit) <6:PROPN/nmod>(Jura) <7:CCONJ/cc>(und) <8:DET/det>(dem)\
    \ <9:NOUN/conj>(Jurastudium) <10:ADJ/root>(verbunden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:PROPN/nsubj>(Rogue) <4:NOUN/flat>(like) <5:AUX/cop>(ist)\
    \ <6:ADV/advmod>(momentan) <7:ADV/root>(so) <ROOT> <8:ADV/root>(\xFCberall)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 15
    - obl
  - !!python/tuple
    - 12
    - 11
    - fixed
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - advmod
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(aber)
    <5:ADV/advmod>(dann) <6:ADV/advmod>(auch) <ROOT> <7:CCONJ/cc>(oder) <8:ADV/advmod>(Also)
    <9:ADP/case>(von) <10:DET/det>(dem) <11:NOUN/obl>(Finanziellen) <12:ADV/fixed>(her)
    <13:ADV/advmod>(Oder) <14:ADV/advmod>(wie) <15:AUX/root>(ist) <16:PRON/nsubj>(das)
    <17:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - xcomp
  sentence: <1:ADV/advmod>(warum) <2:NOUN/nsubj>(Leute) <3:DET/det>(die) <4:ADJ/root>(super)
    <ROOT> <5:ADP/case>(auf) <6:NOUN/obl>(Freeriden) <7:VERB/root>(stehen) <8:PRON/nsubj>(das)
    <9:VERB/xcomp>(machen)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 4
    - case
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - conj
  sentence: <2:INTJ/root>(Oh) <3:DET/det:poss>(mein) <4:NOUN/obj>(Gott) <5:ADP/case>(wie)
    <ROOT> <6:CCONJ/cc>(und) <7:ADP/case>(wie) <8:ADJ/root>(krank) <9:CCONJ/cc>(und)
    <10:ADJ/conj>(pervers)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT> <3:DET/det>(das) <4:ADJ/amod>(ganze)
    <5:NOUN/nsubj>(Metall) <6:VERB/root>(geht) <7:ADV/advmod>(jetzt) <8:ADV/advmod>(vorne)
    <9:ADP/compound:prt>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <3:X/root>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:NOUN/root>(bitte)
    <5:SCONJ/mark>(dass) <6:NOUN/nsubj>(Alkoholtrinken) <7:ADP/case>(in) <8:PROPN/nmod>(Deutschland)
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 11
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 11
    - cop
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(die) <3:NOUN/nsubj>(Rede) <4:ADP/case>(von)
    <5:ADJ/amod>(purem) <6:NOUN/nmod>(Alkohol) <7:AUX/cop>(ist) <8:AUX/cop>(ist) <9:PRON/nsubj>(das)
    <10:ADV/advmod>(schon) <11:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - appos
  sentence: <1:X/root>(Oh) <ROOT> <3:NOUN/root>(Wahnsinn) <4:X/advmod>(ne) <5:ADV/advmod>(Auch)
    <6:ADV/advmod>(hier) <7:X/appos>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - cc
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:PRON/obj>(das) <4:VERB/root>(gesehen)
    <5:CCONJ/cc>(und) <6:VERB/conj>(schwanke) <7:ADJ/advmod>(hart) <8:ADP/case>(zwischen)
    <9:ADJ/obl>(mutig) <10:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(riecht) <3:ADV/advmod>(schon) <4:ADV/advmod>(so)
    <ROOT> <5:ADV/advmod>(so) <6:ADV/advmod>(richtig) <7:ADV/advmod>(mies) <8:ADJ/root>(einfach)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - case
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(das) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT> <7:ADJ/root>(scharf) <8:ADP/case>(auf)
    <9:NOUN/nmod>(n) <10:ADJ/amod>(ersten) <11:NOUN/nmod>(Biss)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 1
    - conj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/root>(Ey) <2:CCONJ/cc>(aber) <3:PRON/nsubj>(das) <4:AUX/cop>(war)
    <5:ADV/advmod>(wirklich) <6:ADV/advmod>(schon) <7:ADV/conj>(so) <ROOT> <8:ADP/case>(in)
    <9:DET/det>(dem) <10:NOUN/root>(Moment)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(intense) <6:ADV/advmod>(also)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 11
    - advmod
  - !!python/tuple
    - 15
    - 18
    - case
  - !!python/tuple
    - 16
    - 18
    - det
  - !!python/tuple
    - 17
    - 18
    - amod
  - !!python/tuple
    - 18
    - 11
    - obl
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Location) <3:ADP/case>(von) <4:PROPN/nmod>(Zypern)
    <5:AUX/root>(war) <6:ADV/advmod>(schon) <7:ADV/advmod>(immer) <ROOT> <8:CCONJ/cc>(und)
    <9:ADV/advmod>(auch) <10:ADV/advmod>(heute) <11:VERB/root>(geht) <12:PRON/nsubj>(es)
    <13:ADV/advmod>(immer) <14:ADV/advmod>(noch) <15:ADP/case>(um) <16:DET/det>(die)
    <17:ADJ/amod>(strategische) <18:NOUN/obl>(Lage)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - ccomp
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - advcl
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 10
    - obl
  sentence: <1:VERB/root>(aufnehmen) <2:AUX/aux>(sollte) <3:PRON/nsubj>(das) <4:PRON/nsubj>(das)
    <5:AUX/ccomp>(ist) <6:ADV/advmod>(wirklich) <ROOT> <7:ADV/advmod>(ja) <8:ADV/root>(so)
    <9:CCONJ/cc>(und) <10:SCONJ/advcl>(wenn) <11:PRON/nsubj>(wir) <12:ADV/advmod>(jetzt)
    <13:ADV/advmod>(mal) <14:ADP/case>(in) <15:DET/det>(das) <16:NOUN/obl>(kulinarische)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - expl
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 7
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(wird) <3:DET/nsubj>(einem) <4:ADJ/advmod>(ganz)
    <ROOT> <5:VERB/root>(aufgezeigt) <6:PRON/expl>(es) <7:VERB/conj>(gibt) <8:ADV/advmod>(immer)
    <9:ADV/advmod>(noch) <10:NOUN/nsubj>(Steigerungen) <11:CCONJ/cc>(und) <12:PRON/nsubj>(das)
    <13:VERB/conj>(geben) <14:PRON/obj>(uns)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - dep
  sentence: <1:X/root>(Ach) <ROOT> <2:ADV/advmod>(Genau) <3:PRON/nsubj>(ich) <4:AUX/aux>(hab)
    <5:NUM/obl>(2014) <6:VERB/root>(angefangen) <7:ADV/advmod>(da) <8:AUX/ccomp>(war)
    <9:PRON/nsubj>(ich) <10:NUM/dep>(16)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - xcomp
  - !!python/tuple
    - 8
    - 14
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Fleischk\xFCchle) <2:VERB/root>(bestellt) <3:PRON/nsubj>(Ich)\
    \ <4:VERB/conj>(finde) <5:PRON/obj>(es) <6:ADV/advmod>(ganz) <7:ADJ/xcomp>(sch\xF6\
    n) <ROOT> <8:SCONJ/mark>(wie) <9:DET/det>(viel) <10:PROPN/nsubj>(Carmen) <11:ADP/case>(an)\
    \ <12:DET/det>(einem) <13:NOUN/obl>(Tag) <14:VERB/root>(macht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - advcl
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADV/root>(Schon) <ROOT> <2:PRON/nsubj>(was) <3:PRON/nsubj>(es) <4:DET/obj>(alles)
    <5:VERB/root>(braucht) <6:SCONJ/mark>(bis) <7:DET/det>(ein) <8:NOUN/nsubj>(Smartphone)
    <9:ADJ/advcl>(fertig) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(gar) <2:PART/advmod>(nicht) <3:ADV/root>(so) <ROOT> <4:ADP/case>(von)
    <5:PROPN/root>(Manhattan)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - obl:arg
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(echt) <ROOT> <4:VERB/root>(finde)
    <5:SCONJ/mark>(weil) <6:PRON/obl:arg>(mir) <7:PRON/nsubj>(das) <8:ADV/advmod>(so)
    <9:VERB/advcl>(wehgetan) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:VERB/root>(rappe) <4:ADP/compound:prt>(zu)
    <ROOT> <5:CCONJ/cc>(und) <6:VERB/root>(packe) <7:ADV/advmod>(jetzt) <8:ADP/case>(zu)
    <9:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:ADP/case>(durch) <2:DET/det>(die) <3:NOUN/root>(Coronakrise) <4:ADP/case>(in)
    <5:DET/det>(den) <6:ADJ/amod>(letzten) <7:NOUN/nmod>(Monaten) <ROOT> <8:VERB/root>(angestiegen)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:PRON/nsubj>(es) <4:ADJ/advmod>(richtig)
    <ROOT> <5:VERB/root>(durchgezogen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Mensch) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADV/advmod>(aber)\
    \ <ROOT> <6:ADV/advmod>(Oh) <7:NOUN/nsubj>(danke) <8:ADJ/root>(sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADP/case>(zu) <4:DET/det>(dem)
    <5:NOUN/nmod>(Beispiel) <6:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/root>(was) <3:PRON/nsubj>(ich) <4:PRON/obj>(mich)
    <5:ADV/advmod>(grade) <6:ADV/advmod>(ganz) <ROOT> <7:NOUN/root>(frage)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:ADV/root>(So) <ROOT> <2:AUX/root>(sind) <3:PRON/nsubj>(wir) <4:ADV/advmod>(auch)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <3:ADV/advmod>(Wie) <ROOT> <4:AUX/cop>(ist)
    <5:PRON/root>(das) <6:ADV/advmod>(denn)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  sentence: "<1:PRON/nsubj>(Der) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Sonst) <4:VERB/root>(w\xE4\
    ren) <5:PRON/nsubj>(wir) <6:PART/advmod>(nicht) <7:ADV/compound:prt>(zusammen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - appos
  sentence: <1:ADV/advmod>(Also) <2:DET/det>(eine) <3:ADJ/amod>(klare) <4:NOUN/root>(Diskriminierung)
    <5:ADV/advmod>(Ja) <6:ADJ/appos>(super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(funktioniert) <4:X/advmod>(Ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <1:ADV/advmod>(Genau) <2:NOUN/nsubj>(Druck) <3:AUX/cop>(ist) <4:ADP/case>(auf)
    <5:DET/det>(jeden) <6:NOUN/nmod>(Fall) <7:ADV/advmod>(da) <8:NOUN/root>(Alter)
    <ROOT> <9:PROPN/root>(Guck) <10:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 14
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 6
    - ccomp
  - !!python/tuple
    - 15
    - 14
    - aux
  sentence: <1:CCONJ/root>(Und) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADV/advmod>(ganz)
    <5:ADV/advmod>(besonders) <ROOT> <6:VERB/root>(finde) <7:AUX/aux>(ist) <8:SCONJ/mark>(wie)
    <9:DET/det>(viel) <10:NOUN/nsubj>(Flecken) <11:PRON/nsubj>(man) <12:ADV/advmod>(noch)
    <13:PART/advmod>(nicht) <14:VERB/ccomp>(gesehen) <15:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:ADP/case>(auf) <2:DET/det>(die) <3:NOUN/root>(Anzahl) <4:DET/det>(der)
    <5:NOUN/nmod>(Aale) <6:PART/advmod>(nicht) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(ist) <2:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - aux
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - obj
  - !!python/tuple
    - 10
    - 3
    - advmod
  sentence: <1:ADV/advmod>(schon) <2:ADV/root>(auch) <ROOT> <3:VERB/root>(finde) <5:PRON/nsubj>(du)
    <6:AUX/aux>(bist) <7:DET/det>(die) <8:ADJ/amod>(ganze) <9:NOUN/obj>(Zeit) <10:ADV/advmod>(alleine)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(Total) <ROOT> <3:PRON/nsubj>(Was) <4:AUX/cop>(ist) <5:ADV/root>(los)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 28
    - advmod
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 28
    - nmod
  - !!python/tuple
    - 15
    - 16
    - nummod
  - !!python/tuple
    - 16
    - 14
    - nmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 28
    - advmod
  - !!python/tuple
    - 20
    - 22
    - advmod
  - !!python/tuple
    - 21
    - 23
    - case
  - !!python/tuple
    - 22
    - 23
    - nummod
  - !!python/tuple
    - 23
    - 28
    - nmod
  - !!python/tuple
    - 24
    - 28
    - nsubj
  - !!python/tuple
    - 25
    - 28
    - cop
  - !!python/tuple
    - 26
    - 28
    - advmod
  - !!python/tuple
    - 27
    - 28
    - advmod
  - !!python/tuple
    - 28
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/advmod>(so) <3:ADP/case>(um) <4:DET/det>(die)\
    \ <5:NUM/nummod>(4) <6:NUM/obl>(000) <7:AUX/root>(Ist) <8:ADJ/advmod>(nat\xFC\
    rlich) <ROOT> <9:ADV/advmod>(viel) <10:ADV/advmod>(weniger) <11:ADP/case>(als)\
    \ <12:ADP/case>(in) <13:DET/det>(dem) <14:NOUN/nmod>(Sommer) <15:NUM/nummod>(100)\
    \ <16:NUM/nmod>(000) <17:ADP/case>(versus) <18:ADV/advmod>(gerade) <19:ADV/advmod>(mal)\
    \ <20:ADV/advmod>(knapp) <21:ADP/case>(\xFCber) <22:NUM/nummod>(4) <23:NUM/nmod>(000)\
    \ <24:PRON/nsubj>(das) <25:AUX/cop>(ist) <26:ADV/advmod>(ja) <27:ADV/advmod>(echt)\
    \ <28:PRON/root>(nix)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:PRON/nsubj>(Das) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 8
    - csubj
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 14
    - nmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det:poss
  - !!python/tuple
    - 19
    - 16
    - nmod
  - !!python/tuple
    - 20
    - 8
    - cop
  - !!python/tuple
    - 21
    - 14
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(irgendwie) <6:ADJ/xcomp>(echt) <ROOT> <7:ADV/advmod>(wie) <8:ADJ/root>(gro\xDF\
    ) <9:DET/det>(der) <10:NOUN/nsubj>(Einfluss) <11:ADP/case>(von) <12:ADV/advmod>(so)\
    \ <13:PRON/det>(etwas) <14:NOUN/csubj>(Simplem) <15:ADP/case>(wie) <16:NOUN/nmod>(Licht)\
    \ <17:ADP/case>(auf) <18:DET/det:poss>(unsere) <19:NOUN/nmod>(Stimmung) <20:AUX/cop>(sein)\
    \ <21:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 10
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 15
    - det:poss
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 16
    - obl
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 18
    - cc
  - !!python/tuple
    - 18
    - 16
    - advmod
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Jugendlichen) <3:CCONJ/cc>(und) <4:NOUN/conj>(Kinder)\
    \ <5:ADV/advmod>(drau\xDFen) <6:AUX/aux>(wollen) <7:DET/obj>(einen) <8:ADP/case>(auf)\
    \ <9:PROPN/obl>(Amerika) <10:VERB/root>(machen) <11:CCONJ/cc>(und) <12:ADJ/conj>(richtig)\
    \ <ROOT> <13:DET/det:poss>(sein) <14:ADP/case>(Mit) <15:NOUN/obl>(Waffen) <16:VERB/root>(rumlaufen)\
    \ <17:CCONJ/cc>(und) <18:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 4
    - xcomp
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - mark
  - !!python/tuple
    - 12
    - 7
    - xcomp
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 4
    - parataxis
  sentence: "<1:ADJ/root>(Okay) <2:CCONJ/cc>(Aber) <3:PRON/nsubj>(ich) <4:VERB/conj>(finde)\
    \ <5:PRON/obj>(jemanden) <6:PART/mark>(zu) <7:VERB/xcomp>(verletzen) <8:PRON/obj>(jemandem)\
    \ <9:ADV/advmod>(k\xF6rperlich) <10:ADV/advmod>(weh) <11:PART/mark>(zu) <12:VERB/xcomp>(tun)\
    \ <13:AUX/cop>(ist) <14:ADV/advmod>(ja) <15:ADJ/parataxis>(voll) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - conj
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: "<1:ADJ/root>(richtig) <ROOT> <2:DET/det:poss>(sein) <3:ADP/case>(mit)\
    \ <4:NOUN/obl>(Waffen) <5:VERB/root>(rumlaufen) <6:CCONJ/cc>(und) <7:ADV/advmod>(so)\
    \ <8:CCONJ/cc>(Und) <9:ADV/advmod>(dadurch) <10:VERB/conj>(ger\xE4t) <11:PRON/nsubj>(das)\
    \ <12:ADV/advmod>(halt) <13:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:ADP/case>(in) <4:DET/det:poss>(deinem)\
    \ <5:NOUN/root>(Block) <6:ADP/case>(wegen) <7:NOUN/nmod>(Schl\xE4gerei)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  sentence: "<1:CCONJ/cc>(aber) <2:PART/advmod>(nicht) <3:ADP/case>(an) <4:NOUN/obl>(T\xF6\
    tung) <5:ADP/case>(von) <6:NOUN/nmod>(Tieren) <7:VERB/root>(Fand) <8:PRON/nsubj>(ich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:ADV/advmod>(Warum) <2:AUX/cop>(ist) <3:PRON/nsubj>(es) <4:ADV/advmod>(jetzt)\
    \ <5:ADJ/root>(notwendig) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ihr) <8:PRON/obj>(euch)\
    \ <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(umziehen) <11:AUX/aux>(m\xFCsst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:PRON/obl:arg>(mir) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(kling) <ROOT> <4:X/dep>(a) <5:NOUN/root>(cappella)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:NOUN/root>(grade) <2:ADP/case>(in) <3:NOUN/nmod>(Krisenzeiten) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 9
    - nmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADJ/root>(Klingt) <ROOT> <2:AUX/cop>(ist) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(uns)\
    \ <5:ADJ/advmod>(schwer) <6:ADP/case>(bis) <7:ADV/advmod>(\xFCberhaupt) <8:PART/advmod>(nicht)\
    \ <9:ADJ/root>(verst\xE4ndlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:AUX/root>(Ist) <2:ADV/advmod>(ja) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/mark>(wenn)\
    \ <5:PRON/nsubj>(der) <6:ADV/advmod>(jetzt) <7:PRON/obj>(was) <8:DET/obj>(anderes)\
    \ <9:VERB/root>(sagen) <10:AUX/aux>(w\xFCrde)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  sentence: "<1:X/root>(Oh) <ROOT> <2:PRON/nsubj>(Das) <3:VERB/root>(check) <4:PRON/nsubj>(ich)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(euch)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Hannah) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/advmod>(ja)
    <5:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Typ) <3:AUX/cop>(ist) <4:ADV/root>(so)\
    \ <ROOT> <5:AUX/aux>(Werdet) <6:PRON/obj>(ihr) <7:ADJ/advmod>(sp\xE4ter) <8:ADV/advmod>(selbst)\
    \ <9:ADV/advmod>(noch) <10:VERB/root>(sehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PART/advmod>(nicht) <2:ADV/advmod>(so) <3:ADV/advmod>(gut) <4:VERB/root>(h\xF6\
    ren) <5:CCONJ/cc>(oder) <6:VERB/conj>(sehen) <7:SCONJ/advmod>(wie) <ROOT> <8:PRON/nsubj>(das)\
    \ <9:ADV/advmod>(erst) <10:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:ADJ/root>(Trocken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 6
    - flat
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <4:CCONJ/cc>(Und) <5:VERB/root>(riecht)
    <6:PROPN/obj>(Kohl) <7:PROPN/flat>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obl:arg
  - !!python/tuple
    - 10
    - 15
    - advmod
  - !!python/tuple
    - 11
    - 15
    - advmod
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - aux
  - !!python/tuple
    - 14
    - 15
    - obj
  - !!python/tuple
    - 15
    - 8
    - ccomp
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(auch) <ROOT> <4:ADP/case>(f\xFC\
    r) <5:PRON/obl>(mich) <6:CCONJ/cc>(und) <7:PRON/nsubj>(ich) <8:VERB/root>(dachte)\
    \ <9:PRON/obl:arg>(mir) <10:ADV/advmod>(Okay) <11:ADV/advmod>(wow) <12:PRON/nsubj>(ich)\
    \ <13:AUX/aux>(kann) <14:DET/obj>(anderen) <15:VERB/ccomp>(helfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 5
    - csubj:pass
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:AUX/root>(war) <ROOT> <4:PART/mark>(zu)
    <5:VERB/root>(sehen) <6:SCONJ/mark>(wie) <7:DET/det>(diese) <8:ADJ/amod>(ganzen)
    <9:NOUN/obj>(Nebenwirkungen) <10:VERB/csubj:pass>(einschlagen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 10
    - nsubj:pass
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 16
    - advmod
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 10
    - ccomp
  - !!python/tuple
    - 17
    - 16
    - cop
  - !!python/tuple
    - 18
    - 16
    - aux
  sentence: "<1:ADV/advmod>(Also) <2:PRON/obj>(das) <3:VERB/root>(fand) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(auch) <6:ADV/advmod>(echt) <ROOT> <7:PRON/nsubj:pass>(sie) <8:ADV/advmod>(so)\
    \ <9:PART/mark>(zu) <10:VERB/root>(sehen) <11:ADV/advmod>(also) <12:SCONJ/mark>(dass)\
    \ <13:PRON/nsubj>(sie) <14:ADV/advmod>(trotzdem) <15:ADV/advmod>(noch) <16:ADJ/ccomp>(gl\xFC\
    cklich) <17:AUX/cop>(sein) <18:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - flat
  sentence: "<1:ADJ/amod>(unm\xF6gliche) <2:NOUN/root>(Reform) <3:DET/det>(einer)\
    \ <ROOT> <4:ADJ/amod>(verzerrten) <5:NOUN/nsubj>(Volkswirtschaft) <6:AUX/root>(Wird)\
    \ <7:PROPN/nsubj>(Saudi) <9:PROPN/flat>(Arabiens)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 10
    - cc
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(deswegen) <2:VERB/root>(dachte) <3:PRON/nsubj>(ich) <4:PRON/nsubj>(das)
    <5:AUX/ccomp>(ist) <6:ADV/advmod>(ja) <ROOT> <7:CCONJ/cc>(aber) <8:ADV/advmod>(bestimmt)
    <9:DET/det>(ein) <10:NOUN/root>(Einzelfall)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 9
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(sie) <7:DET/det>(die) <8:DET/obj>(alle)\
    \ <9:VERB/root>(\xFCberlebt) <10:AUX/aux>(hat) <11:ADV/advmod>(einmal)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <5:X/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - compound:prt
  sentence: <1:ADV/advmod>(da) <2:AUX/aux>(ist) <3:DET/det>(ein) <4:NOUN/nsubj>(Covermodel)
    <5:ADV/advmod>(da) <6:VERB/root>(denkt) <7:PRON/nsubj>(man) <ROOT> <8:PRON/nsubj>(der)
    <9:VERB/root>(sieht) <10:ADV/advmod>(ganz) <11:ADV/advmod>(gut) <12:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 14
    - cc
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - cop
  - !!python/tuple
    - 14
    - 10
    - conj
  - !!python/tuple
    - 15
    - 17
    - mark
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 14
    - conj
  - !!python/tuple
    - 18
    - 17
    - advmod
  - !!python/tuple
    - 19
    - 17
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(total) <ROOT> <4:SCONJ/mark>(weil)\
    \ <5:PRON/nsubj>(das) <6:ADV/advmod>(also) <7:PRON/nsubj>(das) <8:AUX/aux>(hat)\
    \ <9:ADV/advmod>(halt) <10:VERB/root>(funktioniert) <11:CCONJ/cc>(und) <12:PRON/nsubj>(das)\
    \ <13:AUX/cop>(war) <14:ADJ/conj>(sch\xF6n) <15:SCONJ/mark>(weil) <16:PRON/nsubj>(ich)\
    \ <17:VERB/conj>(konnte) <18:ADV/advmod>(dann) <19:ADV/advmod>(zumindest)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - advcl
  - !!python/tuple
    - 11
    - 6
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - cop
  sentence: <1:PRON/nsubj>(wir) <2:AUX/aux>(konnten) <3:PART/advmod>(nicht) <4:ADV/advmod>(mehr)
    <5:ADV/advmod>(miteinander) <6:VERB/root>(befreundet) <7:AUX/cop>(sein) <8:SCONJ/mark>(weil)
    <9:PRON/nsubj>(wir) <10:DET/advcl>(beide) <11:ADV/advmod>(so) <ROOT> <12:ADV/advmod>(irgendwie)
    <13:VERB/root>(auseinandergedriftet) <14:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Wobei) <2:DET/det>(die) <3:ADJ/amod>(wirtschaftlichen)
    <4:NOUN/nsubj>(Auswirkungen) <5:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(absolut) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:PRON/obj>(den) <2:PRON/nsubj>(ich) <3:ADV/advmod>(selbst) <4:VERB/root>(mitbekommen)
    <5:AUX/aux>(hab) <6:AUX/aux>(ist) <7:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj:pass
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj:pass>(das)\
    \ <4:ADV/advmod>(so) <5:ADJ/advmod>(klar) <6:PART/mark>(zu) <7:VERB/root>(h\xF6\
    ren)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 3
    - obl
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - cc
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(zwar) <3:SCONJ/root>(dass) <4:ADP/case>(mit)\
    \ <5:PROPN/nmod>(Chat) <6:PROPN/flat>(GPT) <7:ADV/advmod>(gerade) <8:ADP/case>(in)\
    \ <9:DET/det>(dem) <10:NOUN/obl>(Uni-) <11:CCONJ/cc>(und) <12:NOUN/conj>(Pr\xFC\
    fungskontext) <ROOT> <13:NOUN/root>(gecheated) <14:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 2
    - xcomp
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 2
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - nsubj
  sentence: "<1:PART/mark>(Zu) <2:VERB/root>(fordern) <3:DET/det>(den) <4:NOUN/obj>(Kontakt)\
    \ <5:ADP/case>(zu) <6:ADJ/amod>(m\xE4nnlichen) <7:ADJ/amod>(besten) <8:NOUN/nmod>(Freunden)\
    \ <9:VERB/xcomp>(abzubrechen) <10:PRON/nsubj>(das) <11:VERB/parataxis>(find) <12:PRON/nsubj>(ich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 10
    - csubj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 12
    - 10
    - appos
  sentence: "<2:ADV/advmod>(Ja) <3:SCONJ/mark>(weil) <4:PRON/nsubj>(er) <5:ADV/advmod>(halt)\
    \ <6:VERB/csubj>(sagt) <7:NOUN/nsubj>(Frauen) <8:AUX/cop>(sind) <9:ADV/advmod>(zu)\
    \ <10:ADJ/root>(w\xE4hlerisch) <12:NOUN/appos>(Ach) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 14
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 6
    - advcl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:SCONJ/mark>(weil)\
    \ <5:PRON/nsubj>(er) <6:VERB/root>(verharmlost) <7:DET/det>(dieses) <8:ADJ/amod>(\xFC\
    bergriffige) <9:NOUN/obj>(Verhalten) <10:ADV/advmod>(einfach) <11:ADV/advmod>(nur)\
    \ <12:ADV/advmod>(so) <13:ADV/advmod>(so) <14:VERB/advcl>(doll)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - csubj
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:ADV/advmod>(offen) <2:VERB/csubj>(sprechen) <3:AUX/aux>(wollen) <4:VERB/root>(finde)
    <5:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 12
    - advmod
  - !!python/tuple
    - 3
    - 12
    - advmod
  - !!python/tuple
    - 4
    - 12
    - mark
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 12
    - obj
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - conj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux
  - !!python/tuple
    - 14
    - 12
    - nsubj
  - !!python/tuple
    - 15
    - 12
    - aux
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:ADV/advmod>(Also) <3:ADV/advmod>(selbst)
    <4:SCONJ/mark>(wenn) <5:PRON/nsubj>(wir) <6:DET/det>(einen) <7:NOUN/obj>(Plan)
    <8:CCONJ/cc>(und) <9:ADV/advmod>(auch) <10:DET/det>(viel) <11:NOUN/conj>(Geld)
    <12:VERB/root>(haben) <13:AUX/aux>(kann) <14:PRON/nsubj>(es) <15:AUX/aux>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:VERB/root>(Klingt) <2:ADP/compound:prt>(nach) <ROOT> <3:DET/nsubj>(viel)\
    \ <4:VERB/root>(Reicht) <5:ADV/advmod>(aber) <6:ADV/advmod>(nur) <7:ADJ/advmod>(bedingt)\
    \ <8:DET/det>(Ein) <9:NOUN/obj>(Gro\xDFteil) <10:DET/det>(der) <11:NOUN/nmod>(Bahnbeamten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Griffe) <3:AUX/cop>(sind) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT> <3:VERB/root>(gesagt) <4:PRON/obj>(nichts)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(Mega) <ROOT> <2:PROPN/root>(Mega)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Zuerst) <2:AUX/root>(ist) <3:DET/det>(der) <4:NOUN/nsubj>(Geruch)
    <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:VERB/root>(reinkommt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(Eine) <2:NUM/nummod>(Million) <3:NOUN/root>(Tonnen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:ADV/advmod>(heute) <4:ADV/advmod>(daran)\
    \ <5:VERB/advcl>(zur\xFCckdenke) <6:VERB/root>(finde) <7:PRON/nsubj>(ich) <8:PRON/obj>(das)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:ADV/root>(sehr)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(er) <7:PRON/obj>(ihn) <8:VERB/root>(verletzt)
    <9:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 8
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 19
    - advmod
  - !!python/tuple
    - 18
    - 19
    - case
  - !!python/tuple
    - 19
    - 11
    - obl
  - !!python/tuple
    - 20
    - 22
    - case
  - !!python/tuple
    - 21
    - 22
    - det
  - !!python/tuple
    - 22
    - 19
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:AUX/aux>(h\xE4tte) <6:PRON/nsubj>(ich) <7:PART/advmod>(nicht) <8:VERB/root>(gedacht)\
    \ <9:ADV/advmod>(also) <10:ADV/advmod>(da) <11:VERB/parataxis>(geht) <12:PRON/nsubj>(es)\
    \ <13:ADP/case>(vor) <14:DET/det>(allen) <15:NOUN/obl>(Dingen) <16:ADV/advmod>(nat\xFC\
    rlich) <17:ADV/advmod>(auch) <18:ADP/case>(um) <19:NOUN/obl>(Sportwaffen) <20:ADP/case>(zu)\
    \ <21:DET/det>(dem) <22:NOUN/nmod>(Beispiel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  sentence: "<1:PRON/nsubj>(der) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(du) <4:VERB/root>(brichst)\
    \ <5:DET/det>(die) <6:NOUN/obj>(M\xFCllmannlehre) <7:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: "<1:PROPN/root>(Tsch\xFCsch) <2:PROPN/flat>(Lan) <3:PRON/nsubj>(der) <4:AUX/cop>(ist)\
    \ <ROOT> <5:PRON/nsubj>(du) <6:VERB/root>(brichst) <7:DET/det>(die) <8:NOUN/obj>(M\xFC\
    llmannlehre) <9:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - cop
  sentence: "<1:PROPN/root>(Tsch\xFCsch) <2:PROPN/flat>(Lan) <3:PRON/nsubj>(der) <4:AUX/cop>(ist)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: <1:NOUN/root>(Leute) <2:AUX/cop>(waren) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(du) <6:ADV/advmod>(so) <7:DET/det>(diese) <8:NUM/nummod>(2) <9:NOUN/obj>(Welten)
    <10:VERB/root>(hast)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <2:X/root>(Oh) <ROOT> <3:ADJ/root>(Okay)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - aux
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: <1:SCONJ/mark>(Obwohl) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <4:VERB/root>(sagen)
    <5:AUX/aux>(muss) <6:PRON/nsubj>(es) <7:AUX/aux>(ist) <8:ADV/advmod>(irgendwie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:PRON/nsubj>(es)\
    \ <5:VERB/root>(kostet) <6:ADJ/advmod>(weit) <7:ADP/case>(\xFCber) <8:NOUN/obl>(Bio)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/root>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 5
    - mark
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - obl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 9
    - advmod
  - !!python/tuple
    - 16
    - 17
    - xcomp
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(wir) <3:ADP/case>(an) <4:DET/det>(dem)
    <5:NOUN/nmod>(Ende) <6:ADP/case>(von) <7:DET/det>(dem) <8:NOUN/nmod>(Monat) <9:SCONJ/mark>(dass)
    <10:PRON/nsubj>(das) <11:ADP/case>(mit) <12:DET/det>(dem) <13:NOUN/obl>(Geld)
    <14:ADV/advmod>(halt) <15:ADV/advmod>(so) <ROOT> <16:ADJ/xcomp>(eng) <17:VERB/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Daran) <2:VERB/root>(habe) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <5:ADV/advmod>(auch) <6:ADV/advmod>(schon) <ROOT> <7:VERB/root>(gemerkt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - xcomp
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(meine) <3:NOUN/nsubj>(Sucht) <4:ADP/case>(nach)
    <5:DET/det>(einem) <6:NOUN/nmod>(Push) <7:VERB/root>(wurde) <8:ADJ/xcomp>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Ehrlich) <2:ADV/advmod>(jetzt) <3:PROPN/root>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 6
    - obj
  sentence: <1:PRON/nsubj>(Er) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <5:PRON/nsubj>(Man)
    <6:VERB/root>(bringe) <7:PRON/obj>(mir) <8:DET/det:poss>(meine) <9:NOUN/obj>(Bananen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - flat
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 18
    - case
  - !!python/tuple
    - 15
    - 18
    - det
  - !!python/tuple
    - 16
    - 18
    - compound
  - !!python/tuple
    - 18
    - 10
    - obl
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(schon) <ROOT> <6:PROPN/nsubj>(EIN) <7:PROPN/flat>(LEBEN) <8:PROPN/flat>(LANG)
    <9:PRON/flat>(Das) <10:VERB/root>(passt) <11:ADV/advmod>(so) <12:ADV/advmod>(gar)
    <13:PART/advmod>(nicht) <14:ADP/case>(zu) <15:DET/det>(einem) <16:NOUN/compound>(Lifestyle)
    <18:NOUN/obl>(Medikament)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:ADP/case>(f\xFCr) <3:DET/det>(viele) <4:NOUN/root>(Betroffene)\
    \ <ROOT> <5:ADJ/root>(belastend)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(eigentlich) <4:ADJ/root>(heftig)
    <6:PRON/nsubj>(Das) <7:AUX/parataxis>(ist) <ROOT> <8:ADJ/root>(klar)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(derbe)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  sentence: <1:NOUN/nsubj>(Juden) <2:AUX/aux>(sollen) <3:VERB/root>(sterben) <4:AUX/nsubj>(Puh)
    <5:PRON/nsubj>(das) <6:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - aux
  sentence: <1:ADP/case>(auf) <2:DET/det>(die) <3:NOUN/obl>(Beine) <4:VERB/root>(gestellt)
    <5:AUX/aux>(haben) <6:AUX/aux>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(jetzt) <3:VERB/root>(sieht) <4:PRON/nsubj>(man)
    <5:PRON/obj>(das) <6:ADV/advmod>(einfach) <7:ADJ/advmod>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/root>(Lasst) <2:ADJ/advmod>(tats\xE4chlich) <3:DET/det>(das)\
    \ <4:NOUN/obj>(Meeting) <5:ADV/advmod>(gar) <6:PART/advmod>(nicht) <7:ADV/advmod>(so)\
    \ <ROOT> <8:ADJ/advmod>(lang) <9:VERB/root>(anpeilen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:SCONJ/root>(weil) <2:PRON/nsubj>(wir) <3:ADV/advmod>(da) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(\xFCberzeugt) <7:NOUN/obj>(Promo) <8:VERB/xcomp>(gemacht)\
    \ <9:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(\xFCbertrieben) <ROOT>\
    \ <4:SCONJ/mark>(wie) <5:DET/det>(viel) <6:NOUN/nsubj>(Leute) <7:ADV/advmod>(jetzt)\
    \ <8:ADV/advmod>(hier) <9:AUX/root>(sind)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - csubj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <2:PROPN/nsubj>(Ingo) <3:VERB/csubj>(lacht) <5:PRON/nsubj>(Es) <6:AUX/root>(war)
    <7:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(ich) <3:PRON/obl:arg>(mir) <4:VERB/root>(gedacht)
    <5:AUX/aux>(hab) <ROOT> <6:PRON/nsubj>(der) <7:VERB/root>(geht) <8:ADP/case>(in)
    <9:DET/det>(das) <10:NOUN/obl>(Fernsehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:SCONJ/root>(weil)
    <5:ADJ/advmod>(wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(es) <3:AUX/cop>(war) <4:ADV/advmod>(wirklich)
    <5:DET/det>(der) <6:NOUN/nsubj>(Moment) <7:ADJ/root>(okay) <ROOT> <9:ADV/advmod>(Schade)
    <10:ADJ/root>(eigentlich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(einfach) <ROOT> <4:ADV/advmod>(so)
    <5:PRON/nsubj>(was) <6:VERB/root>(erreicht) <7:PART/mark>(zu) <8:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(ich) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(heut)
    <5:INTJ/root>(denk) <6:ADV/advmod>(boah) <ROOT> <7:X/root>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(ich) <3:VERB/root>(denk) <4:ADV/advmod>(so)
    <ROOT> <5:ADV/advmod>(ey) <6:ADJ/root>(schlimm)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:ADP/case>(in) <4:DET/det>(der)
    <5:PROPN/root>(Hood)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:PRON/nsubj>(du)\
    \ <5:VERB/root>(l\xFCgst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:PRON/nsubj>(du)\
    \ <5:VERB/root>(schie\xDFt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <4:PART/advmod>(nicht) <5:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  sentence: "<1:ADV/advmod>(Doch) <2:ADJ/amod>(verdeckte) <3:NOUN/nsubj>(Karten) <4:VERB/root>(ficken)\
    \ <5:DET/det:poss>(mein) <7:NOUN/obj>(Sch\xE4del) <8:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Dreck) <3:VERB/root>(hat) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(verletzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(geht) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(so)
    <ROOT> <5:ADP/case>(auf) <6:DET/det>(den) <7:NOUN/root>(Sack)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:ADP/case>(auf) <3:DET/det>(den) <4:NOUN/root>(Sack)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(teil') <3:ADP/case>(auf) <4:DET/det>(diesem)
    <5:NOUN/obl>(Rachefeldzug) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Sodass) <2:DET/det>(der) <3:NOUN/nsubj>(Index) <4:VERB/root>(sagt)\
    \ <7:DET/det>(Die) <8:NOUN/nsubj>(Rache) <9:VERB/parataxis>(f\xE4llt) <10:ADP/compound:prt>(zu)\
    \ <ROOT> <11:ADP/root>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(das) <2:NOUN/nsubj>(Gehirn) <3:AUX/root>(ist) <ROOT> <4:VERB/root>(zerfressen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(schie\xDF') <3:ADV/advmod>(grad) <4:ADP/case>(mit)\
    \ <5:PROPN/obl>(Reece) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(wir) <ROOT> <3:AUX/aux>(sind) <4:CCONJ/cc>(und)
    <5:DET/det>(keine) <6:ADV/advmod>(fake) <7:ADJ/amod>(zweiten) <8:NOUN/obj>(Parts)
    <9:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <4:NOUN/obj>(Schule) <5:ADV/advmod>(nie)
    <6:ADV/advmod>(so) <ROOT> <7:ADJ/advmod>(ernst) <8:VERB/root>(genommen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:AUX/root>(will) <2:NOUN/obj>(Foto) <3:CCONJ/cc>(und) <4:X/conj>(is)
    <ROOT> <6:ADP/case>(an) <7:DET/det>(dem) <8:NOUN/root>(posen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 5
    - det:poss
  - !!python/tuple
    - 3
    - 5
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wie) <2:DET/det:poss>(ihr) <3:DET/det:poss>(euer) <4:ADJ/amod>(schei\xDF\
    ) <5:NOUN/nsubj>(Leben) <6:VERB/root>(f\xFChrt) <7:CCONJ/cc>(und) <8:VERB/conj>(f\xFC\
    hl') <9:PRON/obj>(mich) <ROOT> <10:VERB/root>(best\xE4tigt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - obl:arg
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - compound:prt
  sentence: <1:ADV/advmod>(Also) <2:VERB/root>(halt) <3:ADV/advmod>(jetzt) <4:DET/det:poss>(deine)
    <5:NOUN/obj>(Fresse) <6:CCONJ/cc>(und) <7:VERB/conj>(mach) <8:PRON/obl:arg>(mir)
    <9:PART/advmod>(nicht) <10:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/nsubj>(keiner) <2:ADP/case>(von) <3:PRON/nmod>(euch) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(ich) <3:DET/det>(den) <4:NOUN/obj>(R\xFC\
    cken) <5:ADP/case>(von) <6:DET/det>(den) <7:NOUN/obl>(Jungs) <8:VERB/root>(hab)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - xcomp
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 1
    - conj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: <1:VERB/root>(Schafft) <2:ADV/advmod>(damit) <3:VERB/xcomp>(leiden) <4:CCONJ/cc>(und)
    <5:VERB/conj>(findet) <6:DET/det:poss>(meine) <7:NOUN/obj>(Wut) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(wirk) <3:PRON/nsubj>(ich) <4:ADV/advmod>(dabei) <ROOT> <5:CCONJ/cc>(und)
    <6:ADJ/root>(cool)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:DET/det:poss>(Ihr) <2:AUX/root>(seid) <3:DET/obj>(alle) <4:PART/advmod>(nicht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - obj
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 2
    - conj
  sentence: <1:ADV/advmod>(Nur) <2:VERB/root>(baust) <3:PRON/nsubj>(du) <4:PRON/obj>(mich)
    <5:ADP/compound:prt>(auf) <6:CCONJ/cc>(und) <7:PART/advmod>(nicht) <8:PRON/nsubj>(ich)
    <9:PRON/obj>(dich) <10:CCONJ/cc>(und) <11:PRON/nsubj>(das) <12:AUX/conj>(is) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:DET/det:poss>(deine) <2:NOUN/nsubj>(Br\xFCder) <3:AUX/root>(sind)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - parataxis
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(glaube) <3:NOUN/obj>(Fall) <4:PROPN/nsubj>(Guys)\
    \ <5:VERB/parataxis>(w\xE4re) <6:PART/advmod>(nicht) <7:ADV/advmod>(so) <ROOT>\
    \ <8:ADP/case>(durch) <9:DET/det>(die) <10:NOUN/obl>(Decke) <11:VERB/root>(gegangen)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(viele) <3:NOUN/nsubj>(Leute) <4:AUX/cop>(werden)
    <5:ADV/advmod>(heut) <6:ADJ/root>(reich) <7:CCONJ/cc>(und) <8:VERB/conj>(machen)
    <9:ADV/advmod>(dann) <10:ADV/advmod>(immer) <11:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 6
    - obj
  sentence: <1:VERB/root>(Bin) <2:PRON/nsubj>(ich) <3:PRON/obj>(euch) <4:ADP/compound:prt>(zu)
    <ROOT> <5:PRON/nsubj>(Ich) <6:VERB/root>(hab) <7:ADV/advmod>(doch) <8:DET/det>(den)
    <9:ADJ/amod>(deutschen) <10:NOUN/obj>(Pass)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Nee) <2:ADV/advmod>(mal) <3:ADJ/root>(ernsthaft) <4:AUX/cop>(ist)
    <5:ADV/advmod>(doch) <ROOT> <6:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(ging) <ROOT> <3:ADP/case>(unter) <4:DET/det>(die)
    <5:NOUN/root>(Haut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(mach) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:CCONJ/cc>(oder) <6:ADJ/root>(cool)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(mach) <5:PART/advmod>(nicht)
    <6:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(das) <3:NOUN/root>(Feedback) <ROOT> <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:NOUN/root>(Essen) <ROOT> <2:VERB/root>(durchl\xF6chert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mache) <3:ADV/advmod>(immer) <4:DET/obj>(einen)
    <5:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Dein) <2:NOUN/nsubj>(Mixtape) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 2
    - cop
  - !!python/tuple
    - 11
    - 8
    - appos
  sentence: "<1:ADJ/root>(Fr\xFCher) <ROOT> <2:ADJ/root>(verwirrt) <3:CCONJ/cc>(und)\
    \ <4:ADV/advmod>(heute) <5:ADJ/conj>(nah) <6:ADP/case>(an) <7:DET/det>(dem) <8:NOUN/nmod>(Ziel)\
    \ <9:AUX/cop>(sein) <11:PROPN/appos>(Mhm)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <ROOT> <3:ADP/case>(an) <4:DET/det>(dem)
    <5:PROPN/root>(chill'n)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 5
    - acl
  sentence: <1:ADV/advmod>(Damit) <2:DET/det:poss>(ihr) <3:NOUN/root>(Booty) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(bounct) <6:CCONJ/cc>(und) <7:PRON/nsubj>(sie) <8:DET/det>(die)
    <9:NOUN/obj>(Hemmung) <10:VERB/acl>(verliert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PROPN/nsubj>(Shindy) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/cop>(seid) <3:DET/root>(alle) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(nur) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(darum) <6:VERB/root>(geht) <8:ADV/parataxis>(Wie) <ROOT> <9:VERB/root>(fickt)
    <10:PRON/nsubj>(man) <11:PRON/obj>(sich) <12:ADV/advmod>(selbst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:CCONJ/cc>(sondern) <2:ADJ/root>(derbe) <ROOT> <4:X/dep>(Merk) <5:PRON/root>(dir)
    <6:DET/dep>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advcl
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(sagt) <5:ADV/advmod>(Wie) <6:AUX/advcl>(kann)
    <7:PRON/nsubj>(man) <8:PRON/nsubj>(jemand) <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(vermissen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 9
    - 5
    - appos
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(wirklich)
    <ROOT> <5:ADJ/root>(beschissen) <9:X/appos>(Oh)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(Geht) <2:PRON/obj>(dir) <3:DET/det:poss>(dein) <4:NOUN/obj>(Chef)
    <5:ADV/advmod>(wieder) <ROOT> <6:ADP/case>(auf) <7:DET/det>(die) <8:NOUN/root>(Eier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - dep
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - flat
  - !!python/tuple
    - 11
    - 7
    - appos
  sentence: "<1:DET/det:poss>(Mein) <2:NOUN/root>(Style) <3:ADV/advmod>(wohl) <4:ADP/dep>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:DET/det>(den) <7:PROPN/root>(Underground) <9:PROPN/flat>(Hype)\
    \ <11:PROPN/appos>(Brrr)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 9
    - 4
    - dep
  sentence: <1:NOUN/nsubj>(Bruder) <2:DET/det>(die) <3:PROPN/appos>(Mucke) <4:VERB/root>(kommt)
    <5:ADV/advmod>(direkt) <6:ADP/case>(aus) <7:NOUN/obl>(Herzen) <9:X/dep>(Zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(warum) <2:NOUN/root>(Typen) <3:ADP/case>(wie) <4:PRON/nmod>(du)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(mucken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(an) <2:DET/det>(dem) <3:NOUN/obl>(Ende) <4:VERB/root>(war)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(wohl) <ROOT> <7:VERB/root>(verletzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(w\xE4rst) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Boss) <3:VERB/root>(hat) <4:ADV/advmod>(hier)
    <ROOT> <5:VERB/root>(abrasiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:ADV/advmod>(anders)
    <4:DET/det:poss>(deine) <5:NOUN/nsubj>(Stimme) <6:VERB/root>(klingt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 9
    - 5
    - appos
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 9
    - flat
  - !!python/tuple
    - 12
    - 9
    - appos
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(sie) <3:AUX/root>(ist) <ROOT> <4:ADP/case>(wie)
    <5:PROPN/root>(Dua) <6:PROPN/flat>(Lipa) <9:PROPN/appos>(a-) <10:PROPN/flat>(a-)
    <11:X/flat>(a-) <12:X/appos>(a-a)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:DET/det>(der) <4:NOUN/nsubj>(Deal)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT> <7:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADJ/advmod>(eigentlich) <2:VERB/root>(spricht) <3:PRON/nsubj>(er) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT> <7:DET/root>(viel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Amphetamin) <2:VERB/root>(hat) <3:DET/det:poss>(seinen)\
    \ <4:NOUN/obj>(Kopf) <ROOT> <5:VERB/root>(zerst\xF6rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Skills) <3:AUX/root>(sind) <4:PART/advmod>(nicht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  - !!python/tuple
    - 11
    - 12
    - mark
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADP/case>(in) <3:DET/det>(den) <4:DET/det>(meisten)\
    \ <5:NOUN/obl>(F\xE4llen) <6:AUX/root>(sind) <7:DET/det>(die) <8:NOUN/nsubj>(Schwingungen)\
    \ <9:ADJ/advmod>(einfach) <10:ADP/compound:prt>(zu) <ROOT> <11:PART/mark>(zu)\
    \ <12:VERB/root>(begreifen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(Macht) <2:PRON/obj>(dich) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 2
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(interessiert) <3:ADV/advmod>(hier) <4:PRON/obj>(niemanden)
    <5:ADP/case>(wie) <6:NOUN/nmod>(Gangster) <7:CCONJ/cc>(oder) <ROOT> <8:PRON/nsubj>(du)
    <9:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:PRON/obj>(mich) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/root>(entt\xE4uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(sie) <ROOT> <3:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(w\xE4r') <3:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:INTJ/root>(guck) <2:SCONJ/case>(wie) <3:PRON/nsubj>(wir) <ROOT> <4:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/nsubj>(Flow) <3:ADJ/root>(unfassbar) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: <1:VERB/root>(Geben) <ROOT> <2:DET/det>(einen) <3:NOUN/root>(Fick) <4:ADP/case>(auf)
    <5:DET/det>(die) <6:ADJ/amod>(ganze) <7:NOUN/nmod>(Gesellschaft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(komm'n) <ROOT> <3:ADP/case>(in) <4:DET/det>(den)
    <5:NOUN/root>(Game)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Wieder) <2:ADJ/root>(echt) <ROOT> <4:PROPN/root>(Puh)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advcl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - cop
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - nsubj
  - !!python/tuple
    - 19
    - 14
    - parataxis
  - !!python/tuple
    - 20
    - 14
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(ich) <4:ADV/advmod>(hier)
    <5:ADV/advmod>(vollkommen) <6:ADV/advmod>(schlapp) <7:VERB/advcl>(mache) <8:VERB/root>(finde)
    <9:PRON/nsubj>(ich) <10:ADV/advmod>(irgendwie) <11:ADV/advmod>(auch) <ROOT> <12:ADV/advmod>(Also)
    <13:PRON/nsubj>(du) <14:AUX/cop>(bist) <15:ADV/advmod>(einfach) <16:ADV/advmod>(so)
    <17:ADJ/root>(stark) <18:PRON/nsubj>(Es) <19:AUX/parataxis>(ist) <20:ADV/advmod>(wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - expl
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - conj
  - !!python/tuple
    - 13
    - 12
    - cop
  - !!python/tuple
    - 14
    - 18
    - advmod
  - !!python/tuple
    - 15
    - 18
    - nsubj
  - !!python/tuple
    - 16
    - 18
    - cop
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/expl>(es) <3:ADJ/advmod>(schwer) <4:PRON/expl>(Es)
    <5:AUX/cop>(ist) <6:ADV/advmod>(mega) <7:ADJ/root>(schwer) <8:PRON/nsubj>(Es)
    <9:AUX/cop>(ist) <10:ADV/advmod>(wirklich) <11:ADV/advmod>(richtig) <12:ADJ/conj>(schwer)
    <13:NOUN/cop>(Oh) <ROOT> <14:ADV/advmod>(Ja) <15:PRON/nsubj>(es) <16:AUX/cop>(ist)
    <17:ADV/advmod>(wirklich) <18:ADJ/root>(schwer)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 9
    - acl
  - !!python/tuple
    - 15
    - 14
    - cc
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(irgendwie) <ROOT> <6:SCONJ/mark>(weil) <7:PRON/nsubj>(man) <8:ADV/advmod>(so)
    <9:NOUN/obj>(Absolution) <10:VERB/root>(braucht) <11:PRON/nsubj>(die) <12:ADV/advmod>(aber)
    <13:ADV/advmod>(nirgendwo) <14:VERB/acl>(bekommt) <15:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(in)
    <5:PRON/root>(dich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  sentence: <1:X/root>(ah) <3:X/dep>(Wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <2:X/advmod>(i-ich) <3:AUX/cop>(bin) <4:ADV/root>(so) <ROOT> <5:ADP/case>(in)
    <6:PRON/root>(dich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 8
    - 6
    - appos
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 2
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(liegst) <3:ADP/case>(an) <4:DET/det>(dem)
    <5:ADJ/amod>(regennassen) <6:NOUN/obl>(Weg) <8:NOUN/appos>(Weg) <10:ADV/advmod>(so)
    <11:PROPN/obj>(mega) <ROOT> <12:VERB/root>(verdreht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 13
    - cc
  - !!python/tuple
    - 8
    - 13
    - nsubj
  - !!python/tuple
    - 9
    - 13
    - aux
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 6
    - cop
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(noch) <4:ADV/advmod>(nie)
    <5:ADV/advmod>(so) <ROOT> <6:ADJ/root>(allein) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich)
    <9:AUX/aux>(will) <10:ADV/advmod>(wieder) <11:ADP/case>(bei) <12:PRON/obl>(dir)
    <13:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - nsubj
  - !!python/tuple
    - 11
    - 6
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:SCONJ/mark>(Denn) <2:PRON/nsubj>(man) <3:AUX/aux>(kann) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(davon) <6:VERB/root>(ausgehen) <7:SCONJ/mark>(dass) <8:PRON/obj>(sich)
    <9:DET/det>(das) <10:NOUN/nsubj>(Virus) <11:ADV/advmod>(so) <ROOT> <12:VERB/root>(mutiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det:poss>(eure) <2:NOUN/nsubj>(Stars) <3:AUX/root>(sind) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <6:NOUN/root>(Arsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - flat
  sentence: <1:ADV/advmod>(Oder) <2:VERB/root>(unterscheiden) <3:PRON/nsubj>(die)
    <4:PRON/obj>(sich) <5:ADV/advmod>(gar) <6:PART/advmod>(nicht) <7:ADV/advmod>(so)
    <ROOT> <8:ADP/case>(von) <9:DET/det>(den) <10:PROPN/root>(Chewy) <11:PROPN/flat>(Nerds)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(es) <3:AUX/aux>(hat) <4:VERB/root>(geklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<ROOT> <1:ADV/advmod>(davon) <2:VERB/root>(\xFCberzeugt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj:pass
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 9
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:AUX/root>(war) <4:ADV/advmod>(schon)
    <ROOT> <5:PROPN/nsubj:pass>(Steffen) <6:ADV/advmod>(so) <7:ADJ/xcomp>(zerbrochen)
    <8:PART/mark>(zu) <9:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Jungs) <3:AUX/root>(sind) <ROOT>
    <4:ADJ/root>(hart)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: <1:AUX/cop>(Bin) <2:ADP/root>(zu) <ROOT> <3:ADP/case>(an) <4:DET/det>(dem)
    <5:VERB/root>(taumeln) <7:X/appos>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - conj
  - !!python/tuple
    - 9
    - 8
    - expl
  - !!python/tuple
    - 10
    - 8
    - obl:arg
  - !!python/tuple
    - 11
    - 8
    - compound:prt
  sentence: "<1:AUX/root>(Will) <2:ADV/advmod>(jetzt) <3:DET/det>(keine) <4:PROPN/nsubj>(Pussy)\
    \ <5:AUX/cop>(sein) <6:CCONJ/cc>(aber) <7:ADV/advmod>(drau\xDFen) <8:AUX/conj>(ist)\
    \ <9:PRON/expl>(es) <10:PRON/obl:arg>(mir) <11:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(war) <3:ADV/advmod>('n) <4:ADJ/amod>(knallharter)
    <5:NOUN/root>(Araber) <6:CCONJ/cc>(und) <7:AUX/conj>(war) <ROOT> <8:ADJ/root>(beliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(\xDCberall) <2:DET/det>(diese) <3:NOUN/root>(Partyfotos)\
    \ <ROOT> <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/root>(Fokus)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADV/advmod>(zu) <4:ADJ/root>(gravierend)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:ADV/root>(hier) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 11
    - obl
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/root>(weil) <3:DET/nsubj>(jede) <4:DET/det>(der)
    <5:NOUN/nmod>(Barbies) <6:PRON/obj>(uns) <7:ADP/compound:prt>(zu) <ROOT> <8:ADP/case>(auf)
    <9:PROPN/obl>(Kylie) <10:PROPN/flat>(Jenner) <11:VERB/root>(macht)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - parataxis
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 14
    - 19
    - mark
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 19
    - obl
  - !!python/tuple
    - 17
    - 19
    - advmod
  - !!python/tuple
    - 18
    - 19
    - nsubj
  - !!python/tuple
    - 19
    - 12
    - ccomp
  - !!python/tuple
    - 21
    - 22
    - nsubj
  - !!python/tuple
    - 22
    - 19
    - parataxis
  - !!python/tuple
    - 23
    - 22
    - advmod
  sentence: "<2:ADV/advmod>(Ja) <3:PROPN/root>(Xavier) <5:PRON/nsubj>(das) <6:AUX/cop>(ist)\
    \ <7:ADV/advmod>(schon) <8:ADJ/parataxis>(arg) <ROOT> <9:PRON/obj>(was) <10:PRON/nsubj>(du)\
    \ <11:ADV/advmod>(da) <12:VERB/root>(sagst) <14:SCONJ/mark>(Dass) <15:ADP/case>(bei)\
    \ <16:PRON/obl>(uns) <17:ADV/advmod>(nur) <18:NUM/nsubj>(144.000) <19:VERB/ccomp>(\xFC\
    berlebe) <21:PRON/nsubj>(du) <22:VERB/parataxis>(schwindelst) <23:ADV/advmod>(doch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(irgendwas) <2:ADV/advmod>(mal) <ROOT> <3:VERB/root>(gefickt)
    <4:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - obj
  sentence: <1:PROPN/nsubj>(Vallah) <2:X/advmod>(billah) <3:PRON/obj>(dich) <4:ADJ/amod>(stinker)
    <5:NOUN/nsubj>(stinker) <6:VERB/root>(finde) <7:ADV/advmod>(nur) <8:NOUN/obj>(Kinder)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: "<ROOT> <1:SCONJ/mark>(wie) <2:PRON/nsubj>(dich) <3:DET/det>(das) <4:NOUN/obj>(Cash)\
    \ <5:VERB/root>(ver\xE4ndert) <7:X/appos>(ah)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:ADV/advmod>(Noch) <2:DET/det>(eine) <3:ADJ/root>(Ok) <ROOT> <4:NUM/nummod>(Drei)
    <5:NOUN/root>(Leute) <6:ADP/case>(vor) <7:DET/det>(dem) <8:NOUN/nmod>(Bezirksamt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(wieder) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/root>(chillen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  sentence: "<1:ADP/root>(wie) <ROOT> <2:ADJ/root>(h\xE4sslich) <3:PRON/nsubj>(sie)\
    \ <4:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:ADJ/root>(anstrengend)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Samuel) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:DET/det>(das)
    <5:NOUN/obj>(System) <6:ADV/advmod>(wirklich) <ROOT> <7:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(was) <4:ADV/advmod>(hier)
    <5:DET/obj>(alles) <6:VERB/root>(steht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Ganz) <2:ADJ/root>(genau) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist)
    <6:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 3
    - ccomp
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(es) <6:ADV/advmod>(inhaltlich) <7:NOUN/obj>(Sinn) <8:VERB/ccomp>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(recht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - aux
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - aux
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  - !!python/tuple
    - 13
    - 11
    - nsubj:pass
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 11
    - obl:agent
  sentence: "<1:AUX/aux>(wollen) <2:DET/obj>(eine) <3:ADP/case>(bei) <4:PRON/obl>(ihm)\
    \ <5:VERB/root>(gesehen) <6:AUX/aux>(haben) <7:DET/det>(eine) <8:NOUN/nsubj>(Geschichte)\
    \ <9:AUX/aux>(ist) <10:ADV/advmod>(besonders) <ROOT> <11:VERB/root>(erz\xE4hlt)\
    \ <12:AUX/aux:pass>(wird) <13:PRON/nsubj:pass>(sie) <14:ADP/case>(von) <15:PROPN/obl:agent>(berbans)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 11
    - advcl
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - expl
  - !!python/tuple
    - 13
    - 11
    - cop
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:SCONJ/mark>(als) <2:PRON/nsubj>(sie) <3:VERB/advcl>(geschehen) <4:AUX/aux>(sind)\
    \ <5:NOUN/nsubj>(Richter) <6:PROPN/appos>(Michael) <7:PROPN/flat>(Dauster) <8:AUX/cop>(ist)\
    \ <9:ADV/advmod>(da) <10:ADV/advmod>(noch) <11:ADJ/root>(deutlicher) <12:PRON/expl>(es)\
    \ <13:AUX/cop>(ist) <ROOT> <14:ADV/root>(dr\xFCber)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 13
    - ccomp
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  - !!python/tuple
    - 11
    - 10
    - appos
  - !!python/tuple
    - 12
    - 11
    - flat
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - det:poss
  - !!python/tuple
    - 16
    - 13
    - obj
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 13
    - obl
  sentence: <1:NOUN/root>(Frieden) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <ROOT> <4:ADV/advmod>(ja)
    <5:ADV/advmod>(also) <6:PRON/nsubj>(das) <7:VERB/ccomp>(bleibt) <8:ADP/case>(von)
    <9:DET/det>(dem) <10:NOUN/obl>(Leben) <11:PROPN/appos>(ne) <12:PROPN/flat>(irwie)
    <13:VERB/root>(hat) <14:PRON/nsubj>(er) <15:DET/det:poss>(sein) <16:NOUN/obj>(Grab)
    <17:ADP/case>(in) <18:DET/det>(dem) <19:NOUN/obl>(Exil)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  sentence: "<1:PRON/obj>(Was) <2:PRON/nsubj>(wir) <3:VERB/root>(machen) <4:AUX/aux>(ist)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(euch) <7:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <ROOT> <1:ADV/advmod>(wie) <2:ADJ/advmod>(gierig) <3:PRON/nsubj>(sie)
    <4:ADV/advmod>(dann) <5:VERB/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bleibe) <3:ADJ/advmod>(stetig) <ROOT>
    <4:ADV/root>(los)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux:pass
  sentence: <1:ADV/advmod>(Glaub) <2:PRON/nmod>(mir) <3:PRON/root>(das) <4:AUX/aux:pass>(wird)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 3
    - compound:prt
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(sie) <3:VERB/root>(wissen) <5:DET/det>(Die)
    <6:NOUN/nsubj>(Jungs) <7:AUX/cop>(sind) <8:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(wieder) <ROOT> <4:VERB/root>(geschwitzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(wieder) <ROOT> <4:VERB/root>(geschwitzt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 12
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 12
    - advmod
  - !!python/tuple
    - 7
    - 12
    - cop
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:CCONJ/cc>(Und)\
    \ <5:ADV/advmod>(ja) <6:ADV/advmod>(mittlerweile) <7:AUX/cop>(sind) <8:PRON/nsubj>(es)\
    \ <9:ADV/advmod>(sogar) <10:NUM/nsubj>(7730) <11:ADV/advmod>(Also) <12:DET/root>(vielen)\
    \ <13:ADP/case>(dank) <14:ADV/advmod>(daf\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:ADV/root>(Wie) <ROOT> <2:SCONJ/mark>(das) <3:DET/nsubj>(alles) <4:AUX/root>(ist)
    <5:CCONJ/cc>(und) <6:PRON/obj>(sich) <7:VERB/conj>(wundert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: <1:ADV/advmod>(So) <2:ADJ/root>(wunderbar) <4:ADJ/conj>(unsagbar) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: <1:ADV/advmod>(nur) <2:SCONJ/root>(dass) <3:DET/det:poss>(meine) <4:NOUN/nsubj>(Frage)
    <5:ADV/advmod>(schon) <ROOT> <6:ADJ/root>(blamabel) <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(irgendwie) <3:VERB/root>(flowt) <4:PRON/nsubj>(er)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/nsubj>(ich) <3:ADV/advmod>(seh') <4:PRON/obj>(was)
    <5:PRON/obj>(ihr) <6:VERB/root>(macht) <7:ADV/advmod>(zusammen) <8:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - advmod
  - !!python/tuple
    - 2
    - 10
    - nsubj
  - !!python/tuple
    - 3
    - 10
    - aux
  - !!python/tuple
    - 4
    - 10
    - advmod
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obl
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 14
    - mark
  - !!python/tuple
    - 12
    - 10
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 10
    - compound:prt
  - !!python/tuple
    - 15
    - 23
    - aux
  - !!python/tuple
    - 16
    - 23
    - cc
  - !!python/tuple
    - 17
    - 23
    - advmod
  - !!python/tuple
    - 18
    - 23
    - advmod
  - !!python/tuple
    - 19
    - 23
    - aux
  - !!python/tuple
    - 20
    - 23
    - nsubj
  - !!python/tuple
    - 21
    - 23
    - obj
  - !!python/tuple
    - 22
    - 23
    - advmod
  - !!python/tuple
    - 23
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:AUX/aux>(habe) <4:ADV/advmod>(eigentlich)
    <5:ADV/advmod>(immer) <6:ADP/case>(zu) <7:DET/det>(der) <8:PROPN/obl>(Hanna) <9:ADV/advmod>(auch)
    <10:VERB/root>(gesagt) <11:SCONJ/mark>(Wenn) <12:PRON/nsubj>(es) <13:PRON/obj>(dir)
    <14:ADP/compound:prt>(zu) <ROOT> <15:AUX/aux>(ist) <16:CCONJ/cc>(oder) <17:ADV/advmod>(sowas)
    <18:ADV/advmod>(dann) <19:AUX/aux>(musst) <20:PRON/nsubj>(du) <21:PRON/obj>(es)
    <22:ADV/advmod>(halt) <23:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 5
    - det
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:ADP/case>(bei) <2:DET/det>(der) <3:NOUN/compound>(Zauberer) <5:NOUN/root>(Weltmeisterschaft)
    <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <ROOT> <3:ADP/case>(aus) <4:ADP/case>(wie)
    <5:DET/det>(ein) <6:NOUN/root>(Gebirge)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/root>(Boah) <ROOT> <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/det>(der)
    <5:NOUN/compound>(Sprengstoff) <7:NOUN/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADJ/advmod>(Super) <2:PRON/nsubj>(Das) <3:VERB/root>(sieht) <ROOT>
    <4:ADP/case>(aus) <5:PRON/obl>(Du) <6:AUX/aux>(hast) <7:DET/det>(viele) <8:NOUN/obj>(Steine)
    <9:VERB/root>(aufgebaut)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(feier) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(setzt) <3:ADJ/advmod>(ganz) <ROOT> <4:ADP/case>(auf)
    <5:NOUN/compound>(Thriller) <7:NOUN/root>(Elemente)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - cop
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/mark>(weil) <2:PRON/nsubj>(ich) <3:VERB/root>(denke) <4:ADV/advmod>(boah)\
    \ <ROOT> <5:PRON/nsubj>(das) <6:AUX/cop>(bin) <7:PRON/nsubj>(ich) <8:PRON/nsubj>(das)\
    \ <9:AUX/cop>(ist) <10:DET/det:poss>(mein) <11:NOUN/root>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:ADP/case>(nach)\
    \ <5:PROPN/nmod>(L\xFCneburg) <6:PRON/nsubj>(wir) <7:AUX/cop>(sind) <8:ADJ/root>(\xFC\
    bermorgen) <9:ADP/case>(in) <10:PROPN/nmod>(L\xFCneburg)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:ADV/advmod>(Heute) <2:VERB/root>(denke) <3:PRON/nsubj>(ich) <4:PROPN/obj>(Puh)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 10
    - ccomp
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - cop
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 10
    - obj
  - !!python/tuple
    - 15
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(echt)
    <ROOT> <5:ADV/advmod>(wie) <6:ADJ/ccomp>(kalt) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)
    <9:PRON/nsubj>(Ich) <10:VERB/root>(krieg) <11:ADV/advmod>(dann) <12:ADV/advmod>(immer)
    <13:ADV/advmod>(so) <14:DET/obj>(einen) <15:ADJ/advmod>(wirklich)
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 7
    - obl
  - !!python/tuple
    - 13
    - 18
    - aux
  - !!python/tuple
    - 14
    - 18
    - advmod
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 7
    - parataxis
  - !!python/tuple
    - 19
    - 18
    - advmod
  - !!python/tuple
    - 20
    - 0
    - root
  - !!python/tuple
    - 22
    - 20
    - appos
  sentence: "<2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:DET/det>(ein) <5:NOUN/root>(Kampfmittelbeseitigungsanzug)\
    \ <6:PRON/nsubj>(Der) <7:VERB/parataxis>(sch\xFCtzt) <8:ADV/advmod>(allerdings)\
    \ <9:ADV/advmod>(nur) <10:ADJ/advmod>(bedingt) <11:ADP/case>(vor) <12:NOUN/obl>(Bomben)\
    \ <13:AUX/aux>(Ist) <14:ADV/advmod>(aber) <15:ADV/advmod>(egal) <16:DET/det>(der)\
    \ <17:NOUN/nsubj>(Stress) <18:AUX/parataxis>(ist) <19:ADV/advmod>(eh) <ROOT> <20:ADJ/root>(hoch)\
    \ <22:PROPN/appos>(Oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obl
  sentence: <1:ADV/root>(Also) <ROOT> <2:PRON/nsubj>(der) <3:VERB/root>(macht) <4:ADV/advmod>(schon)
    <5:VERB/xcomp>(tut) <6:ADV/advmod>(weh) <7:ADP/case>(auf) <8:DET/det>(den) <9:NOUN/obl>(Ohren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 5
    - xcomp
  - !!python/tuple
    - 13
    - 5
    - compound:prt
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Zusammenhalt) <3:AUX/root>(ist) <ROOT>\
    \ <4:AUX/aux>(gewesen) <5:VERB/root>(erz\xE4hlen) <6:PRON/obl:arg>(mir) <7:DET/det>(die)\
    \ <8:DET/nsubj>(beiden) <10:DET/det>(jeden) <11:NOUN/obl>(Tag) <12:VERB/xcomp>(abh\xE4\
    ngen) <13:ADP/compound:prt>(mit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: "<1:X/root>(Ach) <ROOT> <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(echt) <6:ADV/advmod>(noch) <7:ADJ/root>(gro\xDF) <8:ADV/advmod>(hier)\
    \ <9:ADV/advmod>(hinten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:DET/det>(die) <3:NOUN/root>(Unterschiede)
    <4:ADP/case>(zwischen) <5:DET/det>(den) <6:NOUN/nmod>(Unis) <7:ADP/case>(in) <8:PROPN/nmod>(Europa)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:ADJ/advmod>(unterschiedlich) <3:DET/det>(die)
    <4:NOUN/nsubj>(Kundenzahlen) <5:ADV/advmod>(schon) <6:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advcl
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 14
    - nsubj
  - !!python/tuple
    - 17
    - 18
    - cc
  - !!python/tuple
    - 18
    - 16
    - conj
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/root>(so)
    <ROOT> <5:SCONJ/mark>(dass) <6:PROPN/nsubj>(i) <7:VERB/advcl>(gedacht) <8:AUX/aux>(hab)
    <9:INTJ/advmod>(i) <10:INTJ/nsubj>(geh) <11:ADP/case>(in) <12:NOUN/nmod>(Park)
    <13:INTJ/advmod>(raus) <14:VERB/root>(nimm) <15:DET/det>(ein) <16:NOUN/nsubj>(Messer)
    <17:CCONJ/cc>(und) <18:NOUN/conj>(schneid)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:NOUN/root>(Wahnsinn) <2:X/advmod>(Wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 1
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/det>(viele) <3:ADJ/amod>(normale) <4:NOUN/nsubj>(Autofahrer)
    <5:ADV/advmod>(oft) <6:DET/advmod>(viel) <7:ADP/compound:prt>(zu) <ROOT> <8:VERB/root>(einscheren)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:ADV/advmod>(so) <3:DET/det>(einer) <4:NOUN/nmod>(Figur)\
    \ <5:VERB/root>(wurde) <6:PRON/nsubj>(man) <7:ADV/advmod>(damals) <8:ADJ/xcomp>(echt)\
    \ <ROOT> <9:VERB/root>(gemobbt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 3
    - conj
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 12
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(keine) <3:NOUN/root>(Ahnung) <4:CCONJ/cc>(und)
    <5:ADV/advmod>(dann) <6:AUX/aux>(hast) <7:PRON/nsubj>(du) <8:PRON/obj>(dir) <9:PRON/obj>(die)
    <10:VERB/conj>(angeguckt) <11:CCONJ/cc>(und) <12:VERB/conj>(dachtest) <13:ADV/advmod>(so)
    <14:ADV/advmod>(boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:ADP/case>(in) <6:DET/det>(der) <7:NOUN/obl>(Gesellschaft) <8:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advcl
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:VERB/root>(finde)
    <5:PRON/nsubj>(ich) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:ADV/advmod>(so)
    <9:VERB/advcl>(reinkommt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Wasserb\xFCffel) <3:AUX/cop>(ist) <4:ADJ/advmod>(relativ)\
    \ <5:ADJ/root>(wei\xDF) <ROOT> <6:ADJ/root>(fett) <7:ADV/advmod>(halt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - aux
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - xcomp
  - !!python/tuple
    - 12
    - 10
    - aux
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(diese) <3:NOUN/nsubj>(erkenntnis) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(deswegen) <6:ADV/root>(so) <ROOT> <7:SCONJ/mark>(weil) <8:PRON/nsubj>(das)\
    \ <9:AUX/aux>(w\xFCrde) <10:VERB/root>(bedeuten) <11:VERB/xcomp>(rna) <12:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <ROOT> <3:PRON/nsubj>(was) <4:ADV/advmod>(da)
    <5:VERB/root>(passiert) <6:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - advmod
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - obj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 2
    - ccomp
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 2
    - conj
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - ccomp
  - !!python/tuple
    - 16
    - 13
    - advmod
  sentence: "<1:NOUN/obj>(Gef\xFChl) <2:VERB/root>(erinnern) <3:ADV/advmod>(wo) <4:PRON/nsubj>(man)\
    \ <5:PRON/obj>(das) <6:ADP/case>(zu) <7:DET/det>(dem) <8:ADJ/amod>(ersten) <9:NOUN/obl>(Mal)\
    \ <10:VERB/ccomp>(gemacht) <11:AUX/aux>(hat) <12:CCONJ/cc>(und) <13:VERB/conj>(dachte)\
    \ <14:PRON/nsubj>(Das) <15:AUX/ccomp>(ist) <16:ADV/advmod>(ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - advcl
  sentence: <1:AUX/root>(Ist) <ROOT> <2:VERB/root>(geworden) <3:ADP/case>(wie) <4:ADV/advmod>(immer)
    <5:SCONJ/mark>(wenn) <6:DET/det>(die) <7:NOUN/nsubj>(Beginner) <8:VERB/advcl>(reden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Neben) <2:PRON/obl>(dir) <3:VERB/root>(sa\xDF) <4:DET/det>(ein)\
    \ <5:NOUN/nsubj>(Typ) <6:CCONJ/cc>(und) <7:AUX/cop>(war) <8:ADV/advmod>(so) <ROOT>\
    \ <9:ADJ/root>(besoffen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Neben) <2:PRON/nmod>(mir) <3:AUX/cop>(ist) <4:DET/root>(keine)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(eure) <3:NOUN/nsubj>(Bitches) <4:VERB/root>(nerven)
    <ROOT> <5:ADP/case>(wie) <6:NOUN/root>(Parasiten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(attraktiv) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(das) <6:VERB/conj>(kotzt) <7:PRON/obj>(dich) <8:ADV/advmod>(jetzt)
    <9:ADP/compound:prt>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Machst) <2:PRON/nsubj>(du) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(du) <3:ADP/case>(in) <4:PROPN/obl>(Wien)
    <5:ADP/compound:prt>(auf) <ROOT> <6:PROPN/nsubj>(Kanake) <7:ADV/advmod>(da) <8:VERB/root>(machst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/root>(Aber) <ROOT> <2:PRON/obj>(das) <3:AUX/aux>(h\xE4tte) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(echt) <6:PART/advmod>(nicht) <7:VERB/root>(gedacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(du)
    <5:ADP/case>(z) <6:X/nsubj>(B) <7:ADV/advmod>(so) <8:DET/det>(ein) <9:NOUN/root>(Produkt)
    <10:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:ADV/root>(so) <ROOT> <2:ADP/case>(an) <3:PROPN/amod>(Dark) <4:PROPN/nmod>(Souls)\
    \ <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <7:ADV/advmod>(fast) <8:ADJ/root>(unversch\xE4\
    mt) <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(die) <ROOT> <3:ADJ/amod>(wehtun) <4:NOUN/root>(Check)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:PRON/nsubj>(man) <3:AUX/aux>(k\xF6nnte)\
    \ <4:ADV/advmod>(fast) <5:ADP/case>(von) <6:ADJ/amod>(ner) <7:NOUN/obl>(Kopie)\
    \ <8:VERB/root>(sprechen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 6
    - obl:arg
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - xcomp
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:CCONJ/cc>(aber) <4:PRON/obl:arg>(mir)\
    \ <5:VERB/root>(wurde) <6:ADJ/xcomp>(\xFCbel)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - appos
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 14
    - obj
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 4
    - parataxis
  - !!python/tuple
    - 15
    - 14
    - xcomp
  - !!python/tuple
    - 16
    - 17
    - cc
  - !!python/tuple
    - 17
    - 18
    - mark
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:ADJ/amod>(lebende) <4:NOUN/root>(party)
    <5:X/advmod>(bazooka) <6:X/appos>('s) <8:PRON/obj>(Was) <9:INTJ/obj>(los) <10:PRON/nsubj>(man)
    <12:DET/det:poss>(Unser) <13:NOUN/nsubj>(style) <14:VERB/parataxis>(bombt) <15:ADJ/xcomp>(gut)
    <ROOT> <16:CCONJ/cc>(Und) <17:SCONJ/mark>(wenn) <18:PRON/root>(du)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Flows) <3:AUX/cop>(sind) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(scheint) <3:DET/det:poss>(euer) <4:ADJ/amod>(ganzes)
    <5:NOUN/obj>(Haus) <ROOT> <6:VERB/root>(verkabelt) <7:PART/mark>(zu) <8:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(es) <3:VERB/root>(aussieht) <4:ADP/case>(wie)
    <5:DET/det>(ein) <6:ADJ/advmod>(richtig) <ROOT> <7:ADJ/root>(gepolishter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advcl
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <ROOT> <3:VERB/root>(finde)
    <4:PRON/nsubj>(ich) <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(du) <7:PRON/nsubj>(das)
    <8:ADV/advmod>(so) <9:VERB/advcl>(sagst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - dep
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(schon)
    <ROOT> <5:ADP/dep>(zu) <6:PRON/nsubj>(was) <7:NOUN/obj>(Einsamkeit) <8:PRON/obj>(uns)
    <9:VERB/root>(treiben) <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:INTJ/advmod>(Oh) <2:INTJ/root>(guck) <3:ADV/advmod>(mal) <4:ADP/advmod>(wie)
    <ROOT> <5:PRON/nsubj>(man) <6:NOUN/root>(sliden) <7:AUX/aux>(kann) <8:ADV/advmod>(aber)
    <9:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - obl
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det>(diesem) <3:NOUN/obl>(Park) <4:AUX/aux>(k\xF6\
    nnen) <5:NOUN/nsubj>(Jugendliche) <6:ADP/case>(an) <7:NOUN/obl>(Aktivit\xE4ten)\
    \ <8:VERB/root>(teilnehmen) <9:PRON/nsubj>(die) <10:PRON/obj>(sich) <11:ADV/advmod>(ziemlich)\
    \ <ROOT> <12:ADP/case>(von) <13:DET/root>(allem)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 14
    - obj
  - !!python/tuple
    - 6
    - 14
    - aux
  - !!python/tuple
    - 7
    - 14
    - nsubj
  - !!python/tuple
    - 8
    - 14
    - obj
  - !!python/tuple
    - 9
    - 14
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 14
    - xcomp
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(schon)
    <ROOT> <5:PRON/obj>(das) <6:AUX/aux>(muss) <7:PRON/nsubj>(man) <8:PRON/obj>(sich)
    <9:ADV/advmod>(mal) <10:ADP/case>(auf) <11:DET/det>(der) <12:NOUN/obl>(Zunge)
    <13:VERB/xcomp>(zergehen) <14:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:CCONJ/cc>(Und) <3:PRON/nsubj>(das) <4:DET/obj>(alles)
    <5:ADJ/root>(ehrenamtlich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Wow) <2:ADV/advmod>(ganz) <3:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 12
    - mark
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:VERB/root>(wird) <3:PRON/nsubj>(\u2019s) <4:ADV/advmod>(erst)\
    \ <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(du) <7:DET/det>(die) <8:NOUN/obj>(Audience)\
    \ <9:ADP/case>(in) <10:DET/det>(das) <11:NOUN/obl>(Kino) <12:VERB/root>(setzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/nsubj>(Dieses) <2:ADJ/root>(ganz) <ROOT> <3:NOUN/root>(Berieselnde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(kann) <ROOT> <3:VERB/root>(malen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/root>(sind) <2:ADV/advmod>(da) <ROOT> <3:ADV/advmod>(anders) <4:ADV/root>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: "<1:PRON/obl:arg>(Mir) <2:VERB/root>(w\xE4r) <3:NOUN/obj>(s) <4:ADV/advmod>(wohl)\
    \ <5:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Warum) <2:AUX/root>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/nsubj>(Ich) <6:VERB/root>(versteh) <7:PRON/obj>(das) <8:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Geschirrsp\xFCler) <2:AUX/cop>(sind) <3:ADV/advmod>(echt)\
    \ <4:ADV/advmod>(ganz) <5:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(du) <3:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - compound
  - !!python/tuple
    - 10
    - 8
    - appos
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - obl
  - !!python/tuple
    - 16
    - 19
    - case
  - !!python/tuple
    - 17
    - 19
    - det
  - !!python/tuple
    - 18
    - 19
    - amod
  - !!python/tuple
    - 19
    - 15
    - nmod
  - !!python/tuple
    - 21
    - 19
    - flat
  - !!python/tuple
    - 22
    - 12
    - conj
  - !!python/tuple
    - 23
    - 24
    - det
  - !!python/tuple
    - 24
    - 22
    - obj
  - !!python/tuple
    - 25
    - 22
    - compound:prt
  - !!python/tuple
    - 26
    - 27
    - cc
  - !!python/tuple
    - 27
    - 22
    - conj
  - !!python/tuple
    - 28
    - 31
    - det
  - !!python/tuple
    - 29
    - 31
    - compound
  - !!python/tuple
    - 31
    - 27
    - obj
  - !!python/tuple
    - 32
    - 31
    - appos
  - !!python/tuple
    - 33
    - 37
    - aux:pass
  - !!python/tuple
    - 34
    - 35
    - case
  - !!python/tuple
    - 35
    - 37
    - obl
  - !!python/tuple
    - 36
    - 35
    - flat
  - !!python/tuple
    - 37
    - 22
    - conj
  - !!python/tuple
    - 38
    - 40
    - obj
  - !!python/tuple
    - 39
    - 40
    - nsubj
  - !!python/tuple
    - 40
    - 37
    - parataxis
  - !!python/tuple
    - 41
    - 42
    - det:poss
  - !!python/tuple
    - 42
    - 40
    - obj
  - !!python/tuple
    - 43
    - 44
    - expl
  - !!python/tuple
    - 44
    - 40
    - ccomp
  - !!python/tuple
    - 45
    - 44
    - advmod
  - !!python/tuple
    - 46
    - 47
    - det
  - !!python/tuple
    - 47
    - 44
    - obj
  sentence: "<1:DET/nsubj>(Viele) <2:VERB/root>(tr\xE4umen) <3:ADP/case>(von) <4:DET/det>(einem)\
    \ <5:PROPN/obl>(Benz) <6:ADP/case>(unterm) <7:NOUN/nmod>(Arsch) <8:NOUN/obj>(Schulabschluss)\
    \ <9:NOUN/compound>(Fehlanzeige) <10:NOUN/appos>(Arbeitgeber) <ROOT> <11:PRON/nsubj>(wir)\
    \ <12:VERB/root>(stehen) <13:ADP/case>(an) <14:DET/det>(dem) <15:NOUN/obl>(Grab)\
    \ <16:ADP/case>(mit) <17:DET/det>(den) <18:ADJ/amod>(frischpolierten) <19:PROPN/nmod>(Nike)\
    \ <21:PROPN/flat>(Airs) <22:VERB/conj>(packen) <23:DET/det>(das) <24:NOUN/obj>(B\xFC\
    ndel) <25:ADV/compound:prt>(weg) <26:CCONJ/cc>(und) <27:VERB/conj>(inhalieren)\
    \ <28:DET/det>(den) <29:NOUN/compound>(Scheiss) <31:PROPN/obj>(Ter) <32:PROPN/appos>(HERZSCHMERZ)\
    \ <33:AUX/aux:pass>(wird) <34:ADP/case>(mit) <35:PROPN/obl>(Jacky) <36:PROPN/flat>(pur)\
    \ <37:VERB/conj>(weggesp\xFChlt) <38:NOUN/obj>(Amphetamin) <39:PRON/nsubj>(ich)\
    \ <40:VERB/parataxis>(gib) <41:DET/det:poss>(dir) <42:NOUN/obj>(Recht) <43:PRON/expl>(es)\
    \ <44:VERB/ccomp>(gibt) <45:ADV/advmod>(nur) <46:DET/det>(ein) <47:PROPN/obj>(Berlin)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/root>(Ja) <ROOT> <2:ADV/advmod>(Bisschen) <3:ADJ/root>(gummiartig)
    <4:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/root>(Erlebnis) <3:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:PRON/nmod>(uns) <3:AUX/cop>(wird) <4:ADV/advmod>(immer)\
    \ <5:ADJ/root>(\xFCbertrieben) <ROOT> <6:VERB/root>(gefeiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:PRON/nmod>(uns) <3:AUX/cop>(wird) <4:ADV/advmod>(immer)\
    \ <5:ADJ/root>(\xFCbertrieben) <ROOT> <6:VERB/root>(gefeiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - parataxis
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(erz\xE4hl) <3:ADV/advmod>(auch) <4:DET/det:poss>(mein)\
    \ <5:NOUN/obj>(Leben) <7:AUX/parataxis>(w\xE4r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:DET/det>(dieser) <2:NOUN/nsubj>(Schei\xDF) <3:AUX/root>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(Bin) <2:ADV/advmod>(nur) <3:DET/obj>(ein) <ROOT> <4:ADJ/root>(gest\xF6\
    rter)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(bin) <3:ADP/case>(in) <4:DET/obl>(die)
    <5:CCONJ/cc>(und) <6:VERB/conj>(mach) <7:ADV/advmod>(gern) <8:ADP/compound:prt>(auf)
    <ROOT> <9:NOUN/root>(Krawalle)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Traum) <3:AUX/root>(war) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(immer) <ROOT> <6:ADP/case>(zu) <7:PROPN/root>(rhym'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(denkst) <3:PRON/nsubj>(du) <4:AUX/ccomp>(bist)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(in) <7:NOUN/root>(Mode)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:DET/det>(die) <3:NOUN/nsubj>(Entwicklung) <4:AUX/cop>(war)
    <5:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 2
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Versagens\xE4ngste) <2:VERB/root>(hab) <4:PRON/nsubj>(ich)\
    \ <5:PART/advmod>(nicht) <7:DET/det:poss>(mein) <8:NOUN/nsubj>(Album) <9:AUX/parataxis>(ist)\
    \ <10:ADP/compound:prt>(zu) <ROOT> <11:ADV/root>(daf\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:PROPN/root>(gay) <5:PROPN/appos>(Homo)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 4
    - cop
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(du) <3:DET/det>(ein) <4:NOUN/root>(Bad)
    <5:PROPN/appos>(Boy) <6:ADP/case>(wie) <7:PROPN/nmod>(Mase) <8:AUX/cop>(bist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:NOUN/root>(Gangster) <5:X/dep>(Komm)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 1
    - obl
  sentence: <1:VERB/root>(krachten) <2:DET/det>(die) <3:NOUN/nsubj>(Flugzeuge) <4:ADP/case>(in)
    <5:DET/det>(das) <6:NOUN/obl>(Haus) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(ich) <3:AUX/cop>(bin) <4:ADP/root>(zu)
    <ROOT> <5:ADP/case>(von) <6:DET/det>(dem) <7:NOUN/obl>(Leben) <8:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(M\xE4dchen) <2:AUX/cop>(sind) <3:ADV/root>(hier) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Vorbei) <2:PROPN/root>(Okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(verrate) <3:PRON/nsubj>(ich) <4:PRON/obj>(euch)
    <5:ADV/advmod>(warum) <6:DET/det>(die) <7:PROPN/nsubj>(Schweiz) <8:ADV/advmod>(so)
    <ROOT> <9:ADJ/root>(reich) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - obl:arg
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obl:arg
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 7
    - parataxis
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 12
    - ccomp
  - !!python/tuple
    - 17
    - 12
    - advmod
  sentence: "<1:PRON/obl:arg>(mir) <2:DET/det>(die) <3:NOUN/obj>(Tr\xE4nen) <4:ADV/advmod>(runter)\
    \ <5:CCONJ/cc>(Und) <6:ADV/advmod>(da) <7:VERB/root>(dachte) <8:PRON/nsubj>(ich)\
    \ <9:PRON/obl:arg>(mir) <10:ADV/advmod>(Boah) <11:PRON/nsubj>(was) <12:VERB/parataxis>(passiert)\
    \ <13:SCONJ/mark>(denn) <14:ADV/advmod>(jetzt) <15:PRON/nsubj>(Das) <16:AUX/ccomp>(ist)\
    \ <17:ADV/advmod>(ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nsubj
  sentence: "<1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:AUX/cop>(sind)\
    \ <5:DET/det>(diese) <6:NOUN/nsubj>(B\xE4ume)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - dep
  sentence: "<1:ADV/advmod>(Dahinten) <2:VERB/root>(t\xFCrmen) <3:PRON/obj>(sich)\
    \ <4:ADV/advmod>(so) <ROOT> <5:DET/det>(die) <6:NOUN/root>(Wolken) <7:ADP/dep>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADP/case>(an) <2:NOUN/root>(Kandidatin) <3:PROPN/appos>(Anna) <4:CCONJ/cc>(und)
    <5:VERB/conj>(findet) <6:ADJ/amod>(emotionale) <7:NOUN/obj>(Worte) <8:PRON/nsubj>(Ich)
    <9:VERB/parataxis>(habe) <10:PRON/obj>(mich) <ROOT> <11:ADP/case>(in) <12:PRON/nmod>(dich)
    <13:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 7
    - obl
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:ADV/advmod>(so)
    <5:DET/det>(ne) <6:NOUN/obj>(Aktion) <7:VERB/root>(plant) <8:ADP/case>(mit) <9:NUM/nummod>(40)
    <10:NOUN/obl>(Leuten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 12
    - nsubj:pass
  - !!python/tuple
    - 6
    - 12
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 12
    - obl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux:pass
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(alles) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/nsubj:pass>(was) <6:ADV/advmod>(wie) <7:ADP/case>(in) <8:NOUN/obl>(Zeitlupe)
    <9:ADP/case>(in) <10:DET/det>(das) <11:NOUN/obl>(Hirn) <12:VERB/root>(gebrannt)
    <13:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: "<1:PRON/nsubj>(ich) <2:AUX/aux>(wollte) <3:PRON/obj>(es) <4:VERB/root>(m\xF6\
    gen) <5:PRON/nsubj>(das) <6:VERB/parataxis>(war) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(aber)\
    \ <9:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(du) <3:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/obj>(uns) <3:PRON/obj>(was) <4:ADP/compound:prt>(zu)
    <ROOT> <5:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/obj>(uns) <3:PRON/obj>(was) <4:ADP/compound:prt>(zu)
    <ROOT> <5:AUX/aux>(wird) <6:AUX/aux>(wollen) <7:PRON/nsubj>(wir) <8:PRON/obj>(das)
    <9:PART/advmod>(nicht) <10:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obl:arg
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/nsubj>(Leute) <3:PRON/nsubj>(das) <4:AUX/root>(ist)
    <ROOT> <5:SCONJ/mark>(denn) <6:PRON/nsubj>(es) <7:VERB/root>(ergeht) <8:PRON/obl:arg>(ihnen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:ADP/case>(mit) <3:DET/det>(den) <4:NUM/nummod>(drei)\
    \ <5:NOUN/nmod>(Schw\xE4nzen) <6:VERB/root>(hast) <7:PRON/nsubj>(du) <8:ADV/advmod>(ja)\
    \ <9:ADV/advmod>(mal) <ROOT> <10:PART/advmod>(nicht) <11:VERB/root>(verstanden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(jetzt) <2:AUX/root>(hab) <4:PRON/nsubj>(ich) <ROOT> <5:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(dein) <3:NOUN/nsubj>(Perle) <4:VERB/root>(queeft)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:AUX/cop>(ist) <3:DET/advmod>(viel) <4:ADP/root>(zu)
    <ROOT> <5:VERB/root>(gepimpt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(dieser) <2:NOUN/nsubj>(Junge) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - ccomp
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Man) <2:AUX/aux>(k\xF6nnte) <3:ADV/advmod>(sozusagen)\
    \ <4:VERB/root>(sagen) <6:PRON/nsubj>(ich) <7:AUX/ccomp>(bin) <ROOT> <8:VERB/root>(bedient)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 12
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADP/case>(Als) <2:PROPN/compound>(Afro) <4:NOUN/nmod>(Deutscher) <5:ADP/case>(in)
    <6:DET/det>(den) <7:NOUN/nmod>(Medien) <8:AUX/cop>(ist) <9:DET/det>(das) <10:NOUN/nsubj>(Leben)
    <11:ADV/advmod>(doppelt) <12:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(Zerst\xF6r) <2:PRON/obj>(sie) <3:ADV/advmod>(jetzt) <ROOT>\
    \ <5:X/root>(???)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 13
    - obl
  sentence: <1:ADP/case>(in) <2:PROPN/obl>(Laun) <3:VERB/root>(gespielt) <4:PRON/nsubj>(es)
    <5:AUX/cop>(ist) <6:ADV/advmod>(schon) <7:ADV/advmod>(schon) <ROOT> <8:CCONJ/cc>(und)
    <9:ADV/advmod>(auch) <10:ADJ/root>(intensiv) <11:CCONJ/cc>(aber) <12:PRON/nsubj>(sowas)
    <13:AUX/conj>(darf) <14:PRON/obj>(dir) <15:ADP/case>(auf) <16:DET/det>(dem) <17:NOUN/obl>(Feld)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 16
    - cc
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 12
    - obl
  sentence: <1:AUX/cop>(ist) <2:PRON/nsubj>(es) <3:ADV/advmod>(vielleicht) <4:NOUN/root>(Zufall)
    <5:ADV/advmod>(aber) <6:DET/det>(eine) <7:NOUN/nsubj>(Mannschaft) <8:PRON/nsubj>(die)
    <9:ADV/advmod>(so) <ROOT> <10:DET/det:poss>(ihren) <11:NOUN/obj>(Spielstil) <12:VERB/root>(durchzieht)
    <13:CCONJ/cc>(und) <14:ADP/case>(bis) <15:ADP/case>(zu) <16:PRON/obl>(dem)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:DET/det>(der) <3:NOUN/nsubj>(Traum) <4:PRON/obj>(uns)
    <ROOT> <5:VERB/root>(verfolgt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(machst) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(oh) <2:ADP/advmod>(wie) <ROOT> <3:NOUN/root>(Dicker)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <4:ADV/advmod>(ja) <5:ADJ/root>(wahrscheinlich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:DET/det>(dem) <3:NOUN/obl>(Battle) <4:VERB/root>(rappe)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(auf) <8:DET/det>(dem)
    <9:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:ADV/advmod>(Wieder) <2:VERB/root>(war's) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 5
    - obl
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(rappt) <3:ADV/advmod>(ja) <ROOT> <4:CCONJ/cc>(und)
    <5:VERB/root>(bekam) <6:ADV/advmod>(ja) <7:ADV/advmod>(auch) <8:DET/det>(die)
    <9:NUM/nsubj>(2) <10:ADP/case>(in) <11:DET/det>(den) <12:NOUN/obl>(Charts)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(er) <2:AUX/root>(war) <3:ADV/advmod>(leider) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  sentence: <1:VERB/root>(macht) <2:PRON/obj>(dich) <3:ADV/advmod>(trotzdem) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(er) <3:PRON/obj>(mich) <ROOT> <4:ADP/case>(in)
    <5:DET/det>(den) <6:NOUN/obl>(Arsch) <7:VERB/root>(fickt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(du)
    <5:ADV/advmod>(nur) <6:ADP/case>(auf) <7:NOUN/obl>(Papier) <8:VERB/root>(existierst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(entt\xE4\
    uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:PROPN/nmod>(Annas) <2:NOUN/obj>(Einstellung) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(gek\xFCrzt) <2:ADV/advmod>(Schon) <3:ADV/advmod>(ziemlich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(viel) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT> <3:DET/det>(der) <4:PROPN/root>(MC)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 5
    - acl
  sentence: <1:ADV/advmod>(Damit) <2:DET/det:poss>(ihr) <3:NOUN/root>(Booty) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(bounct) <6:CCONJ/cc>(und) <7:PRON/nsubj>(sie) <8:DET/det>(die)
    <9:NOUN/obj>(Hemmung) <10:VERB/acl>(verliert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(Dein) <2:NOUN/nsubj>(Gesicht) <3:VERB/root>(raubt) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(so) <ROOT> <6:DET/det>(den) <7:NOUN/root>(Schlaf)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(geht) <3:ADV/advmod>(wieder) <ROOT>
    <4:ADP/case>(nach) <5:ADV/root>(vorne)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/advmod>(guck) <2:PRON/nsubj>(es) <3:VERB/root>(klingt) <4:ADV/advmod>(wieder)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADP/xcomp>(zu) <5:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:SYM/cc>(&) <4:NOUN/root>(Flow)
    <5:ADP/case>(wie) <6:DET/det>(ein) <7:NOUN/compound>(Fitness) <9:NOUN/nmod>(Freak)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/cop>(sind) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(Tut) <2:PRON/obl:arg>(mir) <ROOT> <3:NOUN/root>(Leid)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:PRON/obj>(sich) <3:ADV/advmod>(dann) <4:ADV/advmod>(hinterher)\
    \ <ROOT> <5:VERB/root>(ver\xE4ndern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(der) <2:AUX/root>(war) <3:ADV/advmod>(nie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 9
    - obl
  sentence: <1:ADJ/root>(richtig) <ROOT> <2:PROPN/nsubj>(Sean) <3:AUX/cop>(ist) <4:PRON/nsubj>(das)
    <5:NUM/nummod>(23) <6:NOUN/nmod>(Jahre) <7:ADJ/root>(alt) <8:CCONJ/cc>(und) <9:VERB/conj>(versucht)
    <10:PRON/obj>(sich) <11:DET/det>(eine) <12:NOUN/obj>(Karriere) <13:ADP/case>(als)
    <14:ADJ/obl>(professioneller)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Auch) <ROOT> <2:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Deswegen) <2:VERB/root>(kann) <3:PRON/nsubj>(der) <4:PRON/obj>(mich)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(mehr) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(abfucken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 8
    - appos
  - !!python/tuple
    - 11
    - 2
    - xcomp
  - !!python/tuple
    - 12
    - 2
    - obj
  sentence: <1:ADV/advmod>(Ey) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:DET/det>(den)
    <5:ADJ/amod>(neuen) <6:NOUN/obj>(Trailer) <7:ADP/case>(zu) <8:PROPN/nmod>(Far)
    <9:PROPN/flat>(Cry) <10:PROPN/appos>(6) <11:VERB/xcomp>(gesehen) <12:ADJ/obj>(Absolut)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(wird) <3:PRON/nsubj>(es) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(machst) <3:DET/obj>(ein) <4:ADP/compound:prt>(auf)
    <ROOT> <5:PROPN/root>(digga)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - parataxis
  sentence: <1:NOUN/nsubj>(Freunde) <2:VERB/root>(sagen) <3:PRON/obj>(dir) <6:DET/det:poss>(Dein)
    <7:NOUN/nsubj>(Rap) <8:AUX/cop>(ist) <9:ADJ/parataxis>(super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/nsubj>(Massen) <2:ADJ/root>(begeisternde)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:CCONJ/root>(oder) <ROOT> <2:PART/mark>(zu) <3:VERB/root>(sehen) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(so) <7:DET/det>(das) <8:NOUN/obj>(Geld) <9:VERB/ccomp>(verdienen)
    <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(Das) <3:AUX/cop>(sind) <4:ADV/advmod>(aber)
    <5:ADV/advmod>(richtig) <6:DET/root>(viele)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(halt) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Mittlerweile) <2:VERB/root>(geh) <3:PRON/nsubj>(ich) <ROOT>
    <4:ADP/case>(auf) <5:NOUN/root>(Tour)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Mittlerweile) <2:VERB/root>(geh) <3:PRON/nsubj>(ich) <ROOT>
    <4:ADP/case>(auf) <5:NOUN/root>(Tour)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: <2:X/root>(Ach) <ROOT> <4:PRON/nsubj>(Das) <5:AUX/root>(ist) <6:ADP/case>(auf)
    <7:DET/det>(der) <8:NOUN/obl>(Eins)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:AUX/root>(wird) <ROOT> <3:VERB/root>(gebumst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(flexe) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:DET/nsubj>(Jeder) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - obl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(w\xE4r) <3:ADV/advmod>(ja) <ROOT> <4:SCONJ/mark>(wenn)\
    \ <5:DET/det>(dieses) <6:NOUN/compound>(LED) <8:NOUN/nsubj>(Licht) <9:ADV/advmod>(gar)\
    \ <10:PRON/obj>(nichts) <11:VERB/root>(bringt) <12:ADP/case>(an) <13:DET/det>(dem)\
    \ <14:NOUN/obl>(Ende)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(die) <3:NOUN/nsubj>(Geschichte) <4:AUX/root>(ist)
    <5:ADV/advmod>(deshalb) <6:ADV/advmod>(besonders) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 5
    - acl
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 12
    - nsubj
  - !!python/tuple
    - 15
    - 12
    - advmod
  - !!python/tuple
    - 16
    - 17
    - obj
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Ey) <2:PRON/expl>(es) <3:VERB/root>(gibt) <4:ADV/advmod>(mittlerweile)
    <5:NOUN/nsubj>(Berichte) <6:ADP/case>(von) <7:NOUN/nmod>(Schulen) <8:ADV/advmod>(wo)
    <9:DET/det>(die) <10:NOUN/nsubj>(Kinder) <11:NOUN/obj>(Radiergummis) <12:VERB/acl>(essen)
    <13:SCONJ/mark>(weil) <14:PRON/nsubj>(sie) <15:ADV/advmod>(so) <ROOT> <16:NOUN/obj>(Hunger)
    <17:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(jetzt) <3:VERB/root>(sagt) <4:ADV/advmod>(mal)
    <5:ADV/advmod>(bitte) <6:PRON/nsubj>(Ihr) <7:VERB/parataxis>(habt) <8:ADV/advmod>(einfach)
    <9:ADV/advmod>(auch) <ROOT> <10:DET/det>(wenig) <11:NOUN/root>(Zeug)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: "<2:PRON/nsubj>(Sie) <3:VERB/root>(unterdr\xFCckt) <4:PRON/obj>(sie) <5:ADP/xcomp>(z)\
    \ <6:PROPN/appos>(T) <ROOT> <8:PRON/nsubj>(Das) <9:VERB/root>(stimmt) <10:ADV/advmod>(Absolut)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(extrem)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:VERB/root>(finde) <3:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 7
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(so) <3:NOUN/nsubj>(Sachen) <4:ADV/advmod>(eben)
    <5:ADV/advmod>(so) <6:PRON/nsubj>(Ich) <7:VERB/root>(glaub) <8:ADJ/amod>(kleine)
    <9:NOUN/obj>(Sachen) <10:DET/det>(die) <11:PROPN/obj>(Max) <12:DET/advmod>(selber)
    <13:PART/advmod>(nicht) <14:ADV/advmod>(mal) <15:ADV/advmod>(so) <ROOT> <16:VERB/root>(auffallen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 7
    - obj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:CCONJ/cc>(und) <4:ADP/case>(vor)\
    \ <5:DET/det>(allem) <6:PRON/nsubj>(das) <7:VERB/root>(l\xE4uft) <8:ADJ/advmod>(wahrscheinlich)\
    \ <9:DET/det>(die) <10:ADJ/amod>(ganze) <11:NOUN/obj>(Zeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:ADV/advmod>(jetzt) <3:AUX/root>(bin) <4:PRON/nsubj>(ich)
    <ROOT> <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/root>(stunten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - ccomp
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(macht) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)
    <5:ADJ/xcomp>(heftig) <6:PRON/nsubj>(das) <7:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:DET/det>(dieses) <4:NOUN/obj>(Wort)
    <5:ADV/advmod>(manipulativ) <6:DET/det>(ein) <7:ADV/advmod>(bisschen) <8:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADV/advmod>(so) <ROOT> <4:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Oh) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:CCONJ/cc>(und)
    <5:ADV/advmod>(da) <6:AUX/cop>(bin) <7:PRON/nsubj>(ich) <8:ADV/root>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:X/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - obj
  sentence: "<1:VERB/root>(wurde) <2:PRON/nsubj>(man) <3:ADP/case>(auf) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Schulhof) <ROOT> <6:VERB/root>(verpr\xFCgelt) <8:NOUN/obj>(Zurecht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wurde) <3:ADV/advmod>(hier) <ROOT> <4:VERB/root>(verletzt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Denn) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Kontext)
    <5:DET/det>(dieser) <6:NOUN/nmod>(Zeit) <7:AUX/root>(ist) <8:PRON/nsubj>(es) <9:ADV/advmod>(ziemlich)
    <ROOT> <10:PRON/nsubj>(was) <11:ADV/advmod>(da) <12:ADV/advmod>(teilweise) <13:VERB/root>(drinsteht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(verr\xE4t) <3:PRON/nsubj>(euch) <4:PROPN/obj>(Pablo)\
    \ <5:ADP/mark>(wie) <ROOT> <6:PROPN/nsubj>(China) <7:DET/det>(die) <8:NOUN/obj>(Menschen)\
    \ <9:ADP/case>(in) <10:PROPN/obl>(Tibet) <11:VERB/root>(unterdr\xFCckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - acl
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: "<1:DET/det>(Viele) <2:NOUN/nsubj>(Menschen) <3:AUX/root>(sind) <ROOT>\
    \ <4:VERB/acl>(\xFCberarbeitet) <5:ADV/advmod>(teilweise) <6:VERB/root>(schuften)\
    \ <7:PRON/nsubj>(sie) <8:ADV/advmod>(mehr) <9:ADP/case>(als) <10:NUM/nummod>(80)\
    \ <11:NOUN/obl>(Stunden) <12:ADP/case>(pro) <13:NOUN/nmod>(Woche)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:AUX/cop>(sind) <3:PRON/root>(die) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  sentence: <ROOT> <1:VERB/root>(normalisiert) <2:AUX/cop>(ist) <3:ADP/case>(wie)
    <4:PRON/obl>(sich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(er) <4:PRON/nsubj>(sich)
    <5:ADP/case>(als) <6:ADJ/amod>(tauber) <7:NOUN/root>(Mann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(was) <ROOT> <2:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <ROOT> <3:NOUN/root>(Plan)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/root>(Ein) <ROOT> <2:ADJ/amod>(abgehalfterter) <3:NOUN/root>(Greis)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(du) <2:VERB/root>(w\xE4rst) <3:ADV/advmod>(jetzt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: <1:ADV/advmod>(Also) <2:ADV/advmod>(noch) <3:ADV/advmod>(mal) <4:ADV/advmod>(kurz)
    <5:VERB/root>(erhitzt) <7:NOUN/obj>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:SCONJ/mark>(wie)\
    \ <5:NOUN/nsubj>(Allergien) <6:DET/det:poss>(unser) <7:NOUN/obj>(Leben) <8:VERB/root>(beeinflussen)\
    \ <9:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(wohl) <2:PRON/root>(niemand) <3:ADV/advmod>(mehr) <ROOT>
    <4:VERB/root>(interessieren)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Was) <2:PRON/obj>(mich) <3:ADV/advmod>(aber) <4:ADP/case>(zu)
    <5:DET/det>(der) <6:NOUN/obl>(Frage) <7:VERB/root>(bringt) <8:CCONJ/cc>(Denn)
    <9:NOUN/nsubj>(Halbmarathon) <10:AUX/cop>(ist) <11:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - aux
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(hei\xDFt) <3:PRON/nsubj>(ich) <4:AUX/aux>(muss)\
    \ <5:ADP/case>(unter) <6:DET/det>(der) <7:NOUN/obl>(Woche) <8:ADJ/advmod>(wirklich)\
    \ <ROOT> <9:ADJ/root>(diszipliniert) <10:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PRON/nsubj>(Das)
    <5:AUX/aux>(ist) <6:PRON/obj>(uns) <7:VERB/root>(aufgefallen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Da) <2:AUX/cop>(ist) <3:PRON/nsubj>(es) <4:ADV/advmod>(nat\xFC\
    rlich) <5:ADJ/root>(richtig) <ROOT> <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:ADV/advmod>(so)\
    \ <9:DET/det>(viel) <10:NOUN/obj>(Geld) <11:VERB/root>(verliert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 15
    - cop
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - nummod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:DET/det>(den) <3:NOUN/obl>(M\xE4nnern) <5:CCONJ/cc>(und)\
    \ <6:PRON/nsubj>(das) <7:VERB/root>(finde) <8:PRON/nsubj>(ich) <9:ADV/advmod>(wirklich)\
    \ <ROOT> <11:AUX/cop>(sind) <12:PRON/nsubj>(es) <13:ADP/advmod>(\xFCber) <14:NUM/nummod>(30)\
    \ <15:NOUN/root>(Prozent)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - case
  - !!python/tuple
    - 17
    - 15
    - nmod
  - !!python/tuple
    - 18
    - 12
    - mark
  - !!python/tuple
    - 19
    - 12
    - aux
  sentence: "<1:PRON/nsubj>(Man) <2:VERB/root>(hat) <3:ADV/advmod>(wirklich) <4:NOUN/obj>(Suizidgedanken)\
    \ <5:ADP/case>(nach) <6:DET/det>(dem) <7:NOUN/obl>(Essen) <8:CCONJ/cc>(und) <9:VERB/conj>(f\xFC\
    hlt) <10:PRON/obj>(sich) <11:ADV/advmod>(so) <ROOT> <12:ADJ/root>(schuldig) <13:ADV/advmod>(so)\
    \ <14:DET/det>(eine) <15:NOUN/nsubj>(Last) <16:ADP/case>(auf) <17:PRON/nmod>(sich)\
    \ <18:PART/mark>(zu) <19:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/root>(die) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/nmod>(Profisport)
    <5:CCONJ/cc>(und) <6:NOUN/conj>(Leistungssport) <7:ADV/advmod>(besonders) <ROOT>
    <8:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 10
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 10
    - obl
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 9
    - 7
    - flat
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Leg) <2:DET/det>(die) <3:NOUN/obj>(Erdbeer) <4:ADP/case>(in)
    <5:DET/det:poss>(dein) <6:NOUN/obl>(Nest) <7:PROPN/appos>(C) <9:PROPN/flat>(Sides)
    <10:VERB/root>(haben) <ROOT> <11:ADJ/root>(gestresst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:AUX/root>(w\xFCrde) <2:PRON/nsubj>(ich) <3:ADJ/advmod>(ganz) <ROOT>\
    \ <4:ADV/advmod>(jetzt) <5:VERB/root>(sagen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Pferd) <3:VERB/root>(hat) <4:ADV/advmod>(immer)
    <ROOT> <5:NOUN/root>(Hunger)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(sie) <3:PART/advmod>(nicht) <4:ADV/advmod>(vegan)
    <5:VERB/advcl>(essen) <6:VERB/root>(finde) <7:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:NOUN/nsubj>(pass) <3:ADP/case>(auf) <4:ADP/case>(wegen)
    <5:NOUN/nmod>(Brandloch) <6:DET/det>(die) <7:NOUN/nsubj>(Jacke) <8:VERB/root>(sieht)
    <9:ADP/compound:prt>(zu) <ROOT> <10:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:PROPN/amod>(Altendorfer) <2:NOUN/nsubj>(Jugend) <3:AUX/cop>(ist) <4:ADJ/root>(bella)
    <5:CCONJ/cc>(und) <6:ADJ/conj>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 1
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/obj>(mich) <3:ADV/advmod>(grade) <4:DET/obj>(alles)
    <5:ADV/advmod>(viel) <6:ADP/compound:prt>(zu) <ROOT> <7:ADJ/root>(verwirrt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Leute) <2:PRON/nsubj>(wir) <3:AUX/cop>(sind) <4:ADJ/root>(super)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 8
    - obj
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:ADV/advmod>(so) <3:PRON/obj>(was) <4:AUX/aux>(hab)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(noch) <7:PART/advmod>(nicht) <8:VERB/root>(erlebt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:DET/nsubj>(meine) <2:VERB/root>(sind) <3:ADV/advmod>(hier) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:NOUN/nsubj>(Rapper) <2:AUX/root>(sind) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 1
    - advmod
  sentence: <1:PROPN/root>(Boah) <2:PROPN/flat>(du) <3:PROPN/flat>(Idiot) <4:DET/det>(das)
    <5:NOUN/obj>(Wesen) <6:PROPN/appos>(flowt) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/obj>(dich) <2:VERB/root>(turnt) <3:ADP/advmod>(wie) <ROOT> <4:PRON/nsubj>(wir)
    <5:VERB/root>(betonen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Mach) <2:ADV/advmod>(hier) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:AUX/aux>(habe) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <4:VERB/root>(umgeguckt)
    <5:CCONJ/cc>(und) <6:VERB/conj>(gedacht) <ROOT> <7:ADV/advmod>(hier) <8:AUX/cop>(waren)
    <9:NOUN/nsubj>(Menschen) <10:ADJ/root>(drin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - cc
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - aux
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - conj
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 15
    - det:poss
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(so)
    <5:DET/det>(eine) <6:NOUN/obj>(Abfahrt) <7:VERB/root>(genommen) <8:CCONJ/cc>(Und)
    <9:PRON/nsubj>(ich) <10:AUX/aux>(hab) <11:ADV/advmod>(so) <12:VERB/conj>(gemerkt)
    <13:X/mark>(oh) <ROOT> <14:DET/det:poss>(mein) <15:NOUN/root>(Fahrrad)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 1
    - obl
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 1
    - parataxis
  - !!python/tuple
    - 11
    - 1
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - obj
  sentence: <1:VERB/root>(Hast) <2:PRON/nsubj>(du) <3:DET/det>(ein) <4:NOUN/obj>(Gelenk)
    <5:ADV/advmod>(mehr) <6:ADP/case>(als) <7:DET/det>(alle) <8:DET/obl>(anderen)
    <9:PRON/nsubj>(Das) <10:AUX/parataxis>(ist) <11:ADV/advmod>(wirklich) <ROOT> <12:PRON/nsubj>(Ich)
    <13:VERB/root>(liebe) <14:PRON/obj>(es)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADP/case>(Bei) <2:NOUN/obl>(Razzia) <3:VERB/root>(gerettet) <4:PRON/nsubj>(Das)
    <5:AUX/cop>(ist) <6:ADV/advmod>(ja) <7:ADV/advmod>(einfach) <8:ADV/advmod>(nur)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 11
    - advmod
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl:arg
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Also) <4:SCONJ/mark>(weil)
    <5:ADP/case>(vor) <6:NUM/nummod>(15) <7:NOUN/obl>(Jahren) <8:AUX/aux>(ist) <9:DET/det>(den)
    <10:NOUN/obl:arg>(Leuten) <11:VERB/root>(aufgefallen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - ccomp
  sentence: "<ROOT> <1:PRON/nsubj>(ich) <2:VERB/root>(habe) <3:ADV/advmod>(wirklich)\
    \ <4:PRON/nsubj>(ich) <5:VERB/xcomp>(bete) <6:ADP/case>(zu) <7:NOUN/obl>(Gott)\
    \ <8:SCONJ/mark>(dass) <9:PRON/nsubj>(das) <10:VERB/ccomp>(aufh\xF6rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:X/root>(Ey) <ROOT> <2:SCONJ/mark>(wie) <3:PROPN/nsubj>(Heidi) <4:PROPN/flat>(Klum)\
    \ <5:ADP/case>(\xFCber) <6:DET/det:poss>(ihre) <7:NOUN/obl>(M\xE4dchen) <8:VERB/root>(redet)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:PRON/root>(Was) <ROOT> <2:NOUN/nsubj>(Rapper) <3:VERB/root>(sind) <4:ADP/case>(auf)
    <5:NOUN/obl>(Twitter) <6:ADV/advmod>(unterwegs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 6
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:ADP/case>(Bei) <2:DET/nmod>(einigen) <3:AUX/root>(ist) <4:DET/det>(das)
    <5:NOUN/nsubj>(Stalking) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:ADP/root>(wie) <ROOT> <2:DET/det:poss>(ihre) <3:ADJ/amod>(neue) <4:NOUN/nsubj>(Karriere)
    <5:ADV/advmod>(bislang) <6:ADV/advmod>(schief) <7:VERB/root>(gelaufen) <8:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/expl>(Alle) <2:VERB/root>(labern) <3:PRON/nsubj>(irgendwas) <4:ADV/advmod>(davon)
    <5:PRON/nsubj>(das) <6:PRON/obj>(sie) <ROOT> <7:AUX/cop>(sind) <8:ADJ/root>(alter)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - appos
  sentence: <1:DET/root>(alle) <ROOT> <2:ADP/case>(an) <3:DET/det>(dem) <4:NOUN/root>(Haten)
    <6:X/appos>(aha)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 13
    - obl
  - !!python/tuple
    - 7
    - 13
    - cc
  - !!python/tuple
    - 8
    - 13
    - aux
  - !!python/tuple
    - 9
    - 13
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:PRON/obj>(was)
    <ROOT> <5:ADP/case>(von) <6:PRON/obl>(mir) <7:CCONJ/cc>(und) <8:AUX/aux>(kannst)
    <9:PRON/obj>(es) <10:ADP/case>(mit) <11:DET/det:poss>(deinen) <12:NOUN/obl>(Kumpels)
    <13:VERB/root>(streuen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <4:PROPN/root>(Mhm)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(halt) <4:DET/root>(ein)
    <ROOT> <5:DET/det>(anderer) <6:NOUN/root>(Schritt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(wirklich) <4:ADV/advmod>(richtig)
    <5:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 7
    - xcomp
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - cc
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Brixxx) <3:AUX/aux>(hab) <5:ADP/case>(von) <6:DET/obl>(vielen)\
    \ <7:VERB/root>(geh\xF6rt) <8:PRON/nsubj>(das) <9:DET/det>(die) <10:NUM/nummod>(2)\
    \ <11:ADJ/xcomp>(richtig) <ROOT> <12:AUX/cop>(sind) <13:CCONJ/cc>(und) <14:VERB/root>(rocken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:PRON/obl:arg>(mir) <4:ADP/compound:prt>(zu)
    <ROOT> <5:ADV/advmod>(Ja) <6:ADJ/root>(besser) <7:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: "<1:ADJ/root>(Voll) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:PRON/nsubj>(das)\
    \ <5:VERB/root>(machst) <6:ADP/case>(f\xFCr) <7:DET/det>(die) <8:NOUN/obl>(Erfahrung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj:pass
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux:pass
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:SCONJ/mark>(wie)
    <5:ADV/advmod>(oft) <6:PROPN/nsubj:pass>(Silan) <7:ADV/advmod>(hier) <8:VERB/root>(angesprochen)
    <9:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(du) <3:VERB/root>(kommst) <4:ADP/case>(aus)
    <5:PROPN/obl>(Duisburg) <7:PROPN/flat>(Marxloh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADJ/advmod>(wahrscheinlich)\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:NOUN/nmod>(Gesellschaft) <7:DET/advmod>(viel)\
    \ <8:ADP/compound:prt>(zu) <ROOT> <9:DET/det>(das) <10:NOUN/root>(Ganze)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - nsubj:pass
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - obl
  - !!python/tuple
    - 14
    - 10
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/root>(das) <3:PRON/nsubj>(das) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:ADV/advmod>(so) <ROOT> <7:DET/det>(diese) <8:NOUN/nsubj:pass>(Ver\xE4\
    nderung) <9:PART/mark>(zu) <10:VERB/root>(sehen) <11:ADP/case>(in) <12:DET/det>(den)\
    \ <13:NOUN/obl>(Leuten) <14:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(sie) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <4:DET/advmod>(viel)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/root>(Weil) <2:NOUN/dep>(Videospiele) <3:ADV/advmod>(damals)
    <4:ADV/advmod>(so) <ROOT> <5:ADJ/root>(schlecht) <6:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux:pass
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/obj>(Konsolen) <2:PART/mark>(zu) <3:VERB/root>(produzieren) <4:AUX/aux:pass>(ist)
    <ROOT> <5:ADJ/root>(teuer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADP/root>(wie) <ROOT> <3:DET/det>(die) <4:NOUN/nsubj>(Grafik)
    <5:ADV/advmod>(doch) <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det:poss>(dein) <3:NOUN/nsubj>(Hype) <4:VERB/root>(h\xE4\
    lt) <ROOT> <5:PART/advmod>(nicht) <6:ADJ/root>(lang)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(hei\xDF\
    )"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:VERB/root>(ballert) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:SCONJ/root>(Wenn) <2:DET/det>(der) <3:NOUN/nsubj>(Virus) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  sentence: <1:ADP/case>(An) <2:NOUN/obl>(Lungenproblemen) <3:PART/mark>(zu) <4:VERB/root>(sterben)
    <5:AUX/aux:pass>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:AUX/cop>(ist) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 11
    - advmod
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl:arg
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - mark
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nsubj
  - !!python/tuple
    - 15
    - 11
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Also) <4:SCONJ/mark>(weil)
    <5:ADP/case>(vor) <6:NUM/nummod>(15) <7:NOUN/obl>(Jahren) <8:AUX/aux>(ist) <9:DET/det>(den)
    <10:NOUN/obl:arg>(Leuten) <11:VERB/root>(aufgefallen) <12:SCONJ/mark>(dass) <13:DET/det>(das)
    <14:NOUN/nsubj>(Umland) <15:ADP/compound:prt>(von)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(dieses) <3:NOUN/nsubj>(Spiel) <4:AUX/cop>(ist)\
    \ <5:ADP/root>(zu) <ROOT> <6:ADP/case>(f\xFCr) <7:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - cop
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:ADV/advmod>(auch) <4:ADV/advmod>(wirklich)
    <ROOT> <5:ADV/advmod>(wie) <6:ADJ/root>(trocken) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - cop
  sentence: <1:NOUN/root>(Mann) <2:DET/det:poss>(euer) <3:NOUN/nsubj>(Profil) <4:AUX/cop>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADJ/root>(Brutal) <ROOT> <2:PART/mark>(zu) <3:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 15
    - cc
  - !!python/tuple
    - 10
    - 15
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 15
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 8
    - conj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/mark>(wenn)
    <5:ADV/advmod>(erst) <6:DET/det>(die) <7:NOUN/nsubj>(Lampen) <8:VERB/root>(ausgehen)
    <9:CCONJ/cc>(und) <10:ADV/advmod>(dann) <11:ADV/advmod>(auch) <12:ADV/advmod>(noch)
    <13:DET/det>(das) <14:NOUN/nsubj>(Licht) <15:VERB/conj>(ausgeht)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 9
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 9
    - advmod
  sentence: "<2:PRON/nsubj>(Es) <3:AUX/root>(ist) <4:ADV/advmod>(wirklich) <ROOT>\
    \ <5:ADV/advmod>(wie) <6:ADJ/ccomp>(ekelhaft) <7:PRON/nsubj>(das) <8:VERB/xcomp>(stinkt)\
    \ <9:VERB/root>(Merkst) <10:PRON/nsubj>(du) <11:PRON/obj>(das) <12:ADV/advmod>(\xFC\
    berhaupt) <13:ADV/advmod>(noch)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Nur) <2:DET/det>(das) <3:NOUN/nsubj>(Material) <5:AUX/cop>(Ist)
    <6:ADV/advmod>(doch) <7:ADV/advmod>(auch) <8:DET/det>(ein) <9:ADV/root>(bisschen)
    <ROOT> <10:CCONJ/cc>(oder) <11:PART/root>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(lebt) <3:DET/det>(ein) <4:NOUN/nsubj>(Biber)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PROPN/root>(boah) <ROOT> <2:PRON/nsubj>(die) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/obl>(Ende) <8:DET/det:poss>(ihres) <9:NOUN/nmod>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 13
    - obj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 13
    - aux
  - !!python/tuple
    - 9
    - 13
    - obj
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(komm) <4:INTJ/advmod>(mach) <ROOT> <5:NOUN/obj>(Sachen)
    <6:DET/det:poss>(deine) <7:NOUN/nsubj>(Mutter) <8:AUX/aux>(kann) <9:PRON/obj>(es)
    <10:ADV/advmod>(wirklich) <11:ADV/advmod>(gar) <12:PART/advmod>(nicht) <13:VERB/root>(packen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(checkst) <3:PRON/nsubj>(du) <4:ADV/advmod>(halt)
    <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(Spiel) <8:ADV/advmod>(normalerweise)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADP/case>(ohne)\
    \ <5:NOUN/obl>(Schei\xDF) <6:AUX/aux>(M\xFCsst) <7:PRON/obj>(ihr) <8:VERB/root>(ausprobieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/root>(das) <4:ADV/advmod>(denn)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - advmod
  - !!python/tuple
    - 8
    - 12
    - mark
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 5
    - advcl
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:NOUN/obj>(s)
    <ROOT> <5:ADJ/root>(befriedigend) <7:ADV/advmod>(Ja) <8:SCONJ/mark>(weil) <9:PRON/nsubj>(man)
    <10:ADV/advmod>(so) <11:DET/obj>(viel) <12:VERB/advcl>(wegknallt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NUM/nummod>(28) <3:PROPN/root>(Wow) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 9
    - advmod
  - !!python/tuple
    - 14
    - 16
    - mark
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 9
    - obj
  sentence: "<1:PRON/nsubj>(das) <2:AUX/aux>(k\xF6nnen) <3:ADV/advmod>(nur) <4:ADV/advmod>(nur)\
    \ <5:NOUN/root>(Schritte) <6:AUX/cop>(sein) <7:PRON/nsubj>(die) <8:ADV/advmod>(erstmal)\
    \ <ROOT> <9:VERB/root>(klingen) <10:PRON/nsubj>(ich) <11:DET/det:poss>(meine)\
    \ <12:PRON/obj>(es) <13:ADJ/advmod>(gut) <14:SCONJ/mark>(wenn) <15:DET/det>(der)\
    \ <16:NOUN/obj>(Verein)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(dr\xFCckst) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/root>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obl:arg
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/obj>(Leben) <3:ADP/case>(als) <4:NOUN/nmod>(Superstar)\
    \ <5:VERB/root>(stelle) <6:PRON/nsubj>(ich) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(ganz)\
    \ <9:ADJ/xcomp>(sch\xF6n) <ROOT> <10:ADP/root>(vor)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 5
    - acl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Oh) <2:NOUN/root>(Gott) <3:X/appos>(ja) <ROOT> <4:VERB/acl>(Reicht)
    <5:VERB/root>(danke)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: "<1:PROPN/root>(Boah) <ROOT> <2:ADV/advmod>(ja) <3:ADJ/root>(verr\xFC\
    ckt) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:ADV/advmod>(ja) <7:ADV/advmod>(komplett)\
    \ <8:ADV/advmod>(anders)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(w\xE4r) <3:ADV/advmod>(ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 6
    - ccomp
  sentence: <1:SCONJ/mark>(Als) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <4:VERB/advcl>(eingelesen)
    <5:AUX/aux>(hab) <6:VERB/root>(dachte) <7:PRON/nsubj>(ich) <8:PRON/nsubj>(die)
    <9:AUX/cop>(sind) <10:ADJ/ccomp>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(oder) <2:NOUN/nsubj>(Team) <3:PRON/nsubj>(Die) <4:AUX/cop>(sind)
    <5:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - cop
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - case
  - !!python/tuple
    - 17
    - 10
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(muss) <3:ADV/advmod>(echt) <4:VERB/root>(sagen)
    <5:PRON/nsubj>(ich) <6:VERB/conj>(finde) <7:PRON/nsubj>(es) <8:NOUN/obj>(mega)
    <ROOT> <9:ADP/case>(wie) <10:ADJ/root>(mutig) <11:DET/det>(die) <12:DET/nsubj>(beiden)
    <13:AUX/cop>(sind) <14:PRON/obj>(sich) <15:ADV/advmod>(so) <16:ADP/case>(in) <17:PRON/nmod>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 9
    - nmod
  - !!python/tuple
    - 14
    - 9
    - dep
  sentence: <1:ADP/case>(vor) <2:DET/root>(allem) <ROOT> <3:SCONJ/mark>(dass) <4:DET/det>(die)
    <5:DET/nsubj>(beiden) <6:ADV/advmod>(eben) <7:ADV/advmod>(auch) <8:DET/det>(die)
    <9:NOUN/root>(Probleme) <10:ADP/case>(in) <11:DET/det>(der) <12:ADJ/amod>(evangelischen)
    <13:NOUN/nmod>(Kirche) <14:ADP/dep>(im)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADJ/root>(Ganz) <ROOT> <2:DET/det>(alle) <3:NOUN/nsubj>(Scheiben) <4:ADP/case>(auf)
    <5:DET/det>(allen) <6:NOUN/nmod>(Seiten) <7:AUX/cop>(sind) <8:ADV/advmod>(komplett)
    <9:ADV/root>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:DET/nsubj>(Alle) <2:AUX/cop>(waren) <3:ADV/root>(halt) <ROOT> <4:ADP/case>(mit)
    <5:NOUN/root>(Sixpack) <6:ADP/case>(mit) <7:NOUN/nmod>(Adern)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(ich) <3:VERB/root>(realisiere) <4:PRON/obj>(das)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(ist) <3:ADP/case>(vor) <4:DET/det>(ner)
    <5:NOUN/obl>(Woche) <6:VERB/root>(passiert) <7:ADJ/advmod>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - xcomp
  sentence: <1:AUX/root>(Ist) <ROOT> <2:NOUN/nsubj>(Leute) <3:VERB/root>(fragen) <4:ADP/case>(nach)
    <5:NOUN/obl>(Fotos) <6:PRON/nsubj>(die) <7:VERB/xcomp>(warten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:PRON/root>(mir) <3:ADP/appos>(z) <4:X/appos>(B) <5:ADV/advmod>(sehr)
    <ROOT> <6:VERB/root>(stagniert)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(irgendwie)
    <5:ADV/advmod>(schon) <ROOT> <6:ADJ/root>(erschreckend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  sentence: "<1:DET/det>(Dieser) <2:NOUN/nsubj>(Look) <3:AUX/root>(ist) <4:ADP/case>(f\xFC\
    r) <5:DET/det>(viele) <6:NOUN/obl>(Menschen) <7:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: "<1:PRON/nsubj>(der) <2:ADP/case>(auf) <3:NOUN/obl>(Stoff) <4:VERB/root>(ist)\
    \ <5:AUX/aux>(w\xE4re) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 6
    - flat
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <3:ADV/advmod>(manchmal) <ROOT>
    <4:DET/det>(das) <5:NOUN/root>(Leben) <6:PROPN/appos>(wa) <7:PROPN/flat>(Ella)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: "<1:DET/det>(alle) <2:DET/det>(anderen) <3:NOUN/nsubj>(Menschen) <4:ADP/case>(um)\
    \ <5:NOUN/nmod>(Mitternacht) <6:ADP/case>(in) <7:NOUN/obl>(S\xE4rge) <8:VERB/root>(verwandeln)\
    \ <9:ADV/advmod>(Echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <2:ADJ/amod>(off) <4:DET/det>(Der) <5:NOUN/root>(Unterschied) <6:AUX/cop>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - nmod
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - compound:prt
  sentence: <1:ADV/root>(So) <ROOT> <2:ADV/advmod>(hier) <3:ADP/case>(in) <4:PROPN/nmod>(Area)
    <5:PROPN/flat>(C) <6:AUX/cop>(ist) <7:DET/root>(alles) <8:ADP/compound:prt>(auf)
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: "<2:X/dep>(on) <4:PRON/nsubj>(Ich) <5:VERB/root>(find) <6:NOUN/obj>(s)\
    \ <ROOT> <7:PRON/nsubj>(was) <8:PRON/nsubj>(die) <9:DET/obj>(alles) <10:ADV/advmod>(immer)\
    \ <11:VERB/root>(machen) <12:AUX/aux>(m\xFCssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:PROPN/nsubj>(Pariermidi) <4:ADV/advmod>(Ja)
    <5:ADV/advmod>(ganz) <6:ADJ/root>(toll)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(da) <4:AUX/root>(habe)\
    \ <5:PRON/nsubj>(ich) <6:ADJ/amod>(gro\xDFen) <7:NOUN/obj>(Respekt) <8:ADP/compound:prt>(vor)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 2
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADV/advmod>(ja)
    <5:ADP/case>(bei) <6:DET/det>(den) <7:NOUN/compound>(Bundesliga) <9:NOUN/obl>(Profis)
    <10:ADV/advmod>(schon) <ROOT> <11:NOUN/root>(Statistiken) <12:ADP/case>(ohne)
    <13:NOUN/nmod>(Ende)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(gibt) <3:ADV/advmod>(so) <4:DET/obj>(eine)\
    \ <ROOT> <5:ADJ/amod>(nat\xFCrliche) <6:NOUN/root>(Br\xE4une)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - expl
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <ROOT> <4:PRON/expl>(es)
    <5:AUX/cop>(sind) <6:ADV/advmod>(ja) <7:ADV/advmod>(auch) <8:DET/nsubj>(viele)
    <9:VERB/root>(durchgerasselt)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - appos
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Nun) <2:AUX/cop>(ist) <3:ADV/advmod>(sogar) <4:DET/det>(das)
    <5:NOUN/nsubj>(Gegenteil) <6:DET/det>(der) <7:NOUN/root>(Fall) <8:DET/det>(die)
    <9:PROPN/nsubj>(Ukraine) <10:AUX/cop>(ist) <11:ADV/advmod>(dabei) <12:DET/appos>(diesen)
    <ROOT> <13:ADJ/root>(asymmetrischen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADJ/root>(selten) <3:AUX/cop>(war) <4:ADV/advmod>(nen)
    <5:PROPN/nsubj>(Flash) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:VERB/root>(dachte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:SCONJ/root>(weil) <6:ADV/advmod>(irgendwie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:PRON/obj>(es) <ROOT> <4:VERB/root>(untersch\xE4\
    tzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(will) <ROOT> <3:DET/det>(viel) <4:NOUN/root>(Moos)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Erbmasse) <3:VERB/root>(steigt) <4:ADV/advmod>(auch)
    <ROOT> <5:ADP/root>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(kleinen) <3:NOUN/nsubj>(Jungs) <4:AUX/root>(waren)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT> <4:SCONJ/mark>(weil)
    <5:PRON/nsubj>(du) <6:NOUN/obj>(Geld) <7:VERB/root>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADP/case>(trotz) <4:DET/det:poss>(deiner)
    <5:NOUN/obl>(Schmerzen) <ROOT> <6:VERB/root>(geballert)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:PRON/nsubj>(das) <2:AUX/aux>(kann) <3:PART/advmod>(nicht) <4:AUX/root>(sein)
    <ROOT> <5:DET/root>(alles) <6:ADP/dep>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/nsubj>(alles) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(grad)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  sentence: <2:PRON/nsubj>(Du) <3:VERB/root>(bist) <4:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - dep
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 6
    - 5
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:NOUN/dep>(ROCK) <3:ADP/case>(In) <4:DET/det>(dem) <5:NOUN/obl>(Sommer)
    <6:NUM/nmod>(0-10) <7:VERB/root>(nerv) <8:PRON/nsubj>(ich) <ROOT> <9:ADP/case>(wie)
    <10:PROPN/root>(Vuvuzelas)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(misshandelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(asozial) <4:CCONJ/cc>(und)
    <5:NOUN/conj>(tick) <7:DET/det>(das) <8:NOUN/conj>(Beste) <9:ADP/case>(von) <10:DET/det>(dem)
    <11:NOUN/nmod>(Besten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obj
  sentence: "<1:NOUN/nsubj>(Leute) <2:VERB/root>(sagen) <5:PROPN/nsubj>(Bonez) <6:AUX/parataxis>(ist)\
    \ <ROOT> <7:PRON/nsubj>(Er) <8:VERB/root>(z\xFCchtet) <9:NOUN/obj>(Kampfhunde)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - cc
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(gibt) <3:PRON/expl>(\u2019s) <4:ADV/advmod>(nur)\
    \ <5:ADJ/advmod>(w\xF6chentlich) <6:NOUN/nsubj>(Extensions) <7:CCONJ/cc>(und)\
    \ <ROOT> <8:ADJ/amod>(lange) <9:NOUN/root>(N\xE4gel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(verliebst) <3:PRON/obj>(dich) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <4:DET/det>(mein'n) <5:NOUN/obj>(Mund)
    <6:ADP/compound:prt>(auf) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ihr) <9:VERB/conj>(findet)
    <10:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:PRON/nsubj>(Ich) <3:VERB/root>(rapp)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Kind) <2:AUX/cop>(bist) <ROOT> <3:ADP/case>(zu) <4:PROPN/root>(debil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(dein) <2:NOUN/nsubj>(Album) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)
    <5:ADJ/root>(super) <ROOT> <6:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - expl
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:PRON/expl>(es)
    <5:AUX/aux>(hat) <6:PRON/nsubj>(niemand) <7:PRON/obj>(was) <8:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obj>(sie) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(gefragt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Aufl\xF6sung) <3:VERB/root>(bricht) <4:ADV/advmod>(auch)\
    \ <5:ADJ/advmod>(regelm\xE4\xDFig) <6:ADV/advmod>(so) <ROOT> <7:ADV/root>(zusammen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Flows) <3:AUX/cop>(sind) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/amod>(Aktiv) <2:NOUN/root>(Lifestyle) <ROOT> <3:SCONJ/mark>(wie)
    <4:DET/det>(die) <5:NOUN/nsubj>(Zeit) <6:VERB/root>(verstreicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Doch) <2:VERB/root>(bist) <3:ADV/advmod>(nur) <4:ADV/advmod>(halb)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:VERB/root>(bist) <3:ADV/advmod>(nur) <4:ADV/advmod>(halb)
    <5:ADV/advmod>(so) <ROOT> <6:ADV/advmod>(wie) <7:PRON/nsubj>(du) <8:VERB/root>(denkst)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:INTJ/advmod>(Dad) <2:AUX/cop>(is) <3:ADV/advmod>(so) <4:ADV/root>(ungef\xE4\
    hr) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: <1:NOUN/root>(257ers) <2:AUX/cop>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/root>(voll) <ROOT> <4:NOUN/root>(back)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  sentence: <1:DET/nsubj>(Keiner) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADJ/root>(stark)
    <6:ADV/advmod>(so) <7:PROPN/appos>(G) <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(respektiert)
    <11:CCONJ/cc>(und) <12:ADJ/conj>(hart)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - appos
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  sentence: <1:CCONJ/cc>(Denn) <2:DET/nsubj>(keiner) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <5:ADJ/root>(stark) <7:ADV/advmod>(so) <8:PROPN/appos>(G) <10:ADV/advmod>(so)
    <ROOT> <11:VERB/root>(respektiert) <12:CCONJ/cc>(und) <13:ADJ/conj>(hart)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:VERB/root>(freut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 3
    - acl
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(mich) <3:DET/root>(alles) <4:PRON/obj>(was)
    <5:PRON/obj>(dich) <6:VERB/acl>(nervt) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(freut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(Man) <ROOT> <2:ADJ/amod>(alter) <3:PROPN/root>(Masi)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(tanz) <3:ADP/case>(auf) <4:DET/det>(der)\
    \ <5:NOUN/obl>(B\xFChne) <6:DET/obj>(alle) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(ich) <3:AUX/root>(bin) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/root>(ballen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT> <3:CCONJ/cc>(und) <4:PRON/nsubj>(du)
    <5:VERB/root>(kackst) <6:ADV/compound:prt>(ein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(komm) <2:ADP/case>(in) <3:DET/obl>(meine) <ROOT> <4:ADJ/amod>(coole)
    <5:NOUN/root>(Backstube)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(bist) <3:ADP/case>(bei) <4:DET/det>(dem)
    <5:PROPN/obl>(Mic) <6:NOUN/flat>(Check) <7:ADV/advmod>(so) <ROOT> <8:SCONJ/mark>(weil)
    <9:PRON/nsubj>(du) <10:NOUN/obj>(Reimketten) <11:VERB/root>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <4:ADV/advmod>(so) <ROOT> <5:ADJ/root>(\xFC\
    bertrieben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:AUX/root>(Ist) <2:PRON/nsubj>(es) <3:PART/advmod>(nicht) <ROOT> <4:SCONJ/mark>(dass)\
    \ <5:PRON/nsubj>(ich) <6:DET/det:poss>(dein) <7:NOUN/obj>(Hirngespinst) <8:VERB/root>(t\xF6\
    ten) <9:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(du) <3:ADJ/advmod>(fr\xFCher)\
    \ <4:VERB/root>(warst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - case
  - !!python/tuple
    - 6
    - 10
    - det:poss
  - !!python/tuple
    - 7
    - 10
    - amod
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(stolz)
    <5:ADP/case>(auf) <6:DET/det:poss>(mein') <7:ADJ/amod>(ersten) <8:NOUN/compound>(Nike)
    <10:NOUN/nmod>(Pullover)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:PROPN/root>(Is') <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:PRON/root>(sie) <ROOT> <3:VERB/root>(ersch\xFCttert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kling) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - xcomp
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Highnachten) <2:ADJ/amod>(n\xE4chstes) <3:NOUN/xcomp>(jahr)\
    \ <4:VERB/root>(wird) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(die) <2:ADP/advmod>(auf) <ROOT> <3:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT> <3:PRON/nsubj>(was) <4:ADV/advmod>(grade)
    <5:VERB/root>(passiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(flow) <3:ADV/advmod>(so) <ROOT> <4:ADV/root>(nebenbei)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:ADP/case>(An) <2:DET/det>(dem) <3:ADJ/amod>(n\xE4chsten) <4:NOUN/obl>(Tag)\
    \ <5:VERB/root>(sieht) <6:PRON/nsubj>(man) <7:ADP/mark>(wie) <ROOT> <8:PRON/nsubj>(es)\
    \ <9:PRON/obj>(mich) <10:VERB/root>(erwischt) <11:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 10
    - nmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 10
    - cop
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - compound:prt
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det>(die) <3:DET/nmod>(meisten) <4:ADP/case>(inklusive)\
    \ <5:PRON/nmod>(mir) <6:AUX/cop>(ist) <7:PRON/nsubj>(es) <8:ADJ/advmod>(wahrscheinlich)\
    \ <9:DET/det>(eine) <10:NOUN/root>(Spur) <11:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 5
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 5
    - mark
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 18
    - 16
    - advmod
  sentence: <1:ADV/advmod>(auch) <2:VERB/root>(leben) <3:AUX/aux>(muss) <4:PRON/nsubj>(Was)
    <5:VERB/ccomp>(helfen) <6:PRON/obl:arg>(mir) <7:NUM/nummod>(100) <8:NUM/nummod>(000)
    <9:PROPN/obj>(Euro) <10:ADP/case>(auf) <11:DET/det>(dem) <12:NOUN/nmod>(Konto)
    <13:SCONJ/mark>(wenn) <14:PRON/nsubj>(ich) <ROOT> <16:VERB/root>(gesagt) <18:ADV/advmod>(morgen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  sentence: "<1:PRON/nsubj>(was) <2:VERB/root>(zeigt) <3:ADP/mark>(wie) <ROOT> <4:DET/det:poss>(unser)\
    \ <5:NOUN/nsubj>(K\xF6rper) <6:CCONJ/cc>(und) <7:DET/det>(die) <8:NOUN/conj>(Psyche)\
    \ <9:ADV/advmod>(miteinander) <10:ADJ/root>(verzahnt) <11:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:DET/det>(die) <3:NOUN/root>(Lebensqualit\xE4t) <4:DET/det>(der)\
    \ <5:NOUN/nmod>(Betroffenen) <ROOT> <6:ADJ/root>(eingeschr\xE4nkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Guckt) <2:ADV/advmod>(mal) <3:ADJ/obj>(Voll) <ROOT> <4:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(Sofort) <3:ADV/advmod>(Oh) <4:DET/det:poss>(mein)
    <5:NOUN/nsubj>(Gott) <6:AUX/cop>(ist) <7:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(da) <3:AUX/root>(w\xFCrd) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(mich) <6:ADV/advmod>(richtig) <ROOT> <7:ADV/advmod>(dr\xFCber)\
    \ <8:VERB/root>(freuen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 11
    - dep
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:VERB/root>(sah) <2:ADV/advmod>(zwar) <3:DET/obj>(viel) <4:ADP/compound:prt>(zu)
    <ROOT> <5:ADP/dep>(aus) <6:CCONJ/cc>(aber) <7:ADV/advmod>(irgendwie) <8:AUX/aux>(will)
    <9:PRON/nsubj>(ich) <10:NOUN/obj>(s) <11:VERB/root>(probieren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - aux
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 12
    - xcomp
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(sags) <3:ADV/advmod>(mal) <4:ADJ/advmod>(ganz)
    <ROOT> <5:PRON/nsubj>(die) <6:AUX/aux>(haben) <7:ADP/case>(bis) <8:ADV/advmod>(jetzt)
    <9:DET/det:poss>(ihr) <10:NOUN/obj>(Leben) <11:VERB/xcomp>(verkackt) <12:VERB/root>(gehabt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/mark>(ob) <2:PRON/root>(du) <ROOT> <3:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 10
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 6
    - 10
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/root>(Ey) <2:ADV/advmod>(sowas) <ROOT> <3:ADJ/advmod>(uninnovatives)
    <4:ADP/case>(auf) <6:NOUN/obl>(Nummer) <7:DET/det>(eins) <8:NOUN/obj>(Track) <9:PART/mark>(zu)
    <10:VERB/root>(rappen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:ADV/advmod>(Fast) <2:ADV/advmod>(schon) <3:ADV/root>(so) <ROOT> <4:ADP/case>(wie)
    <5:PROPN/root>(2Pac) <6:PROPN/flat>(Amaru) <7:ADP/case>(in) <8:NOUN/nmod>(Aktion)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(das) <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Image) <2:VERB/root>(kann) <3:PRON/obj>(euch) <4:PART/advmod>(nicht)
    <ROOT> <5:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(siehst) <ROOT> <3:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Leude) <3:AUX/aux>(wollen) <4:PRON/root>(das)
    <ROOT> <5:VERB/root>(serviert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(wir)
    <5:VERB/root>(basteln)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(Tag) <4:VERB/root>(war)
    <5:ADV/advmod>(schon) <6:DET/advmod>(viel) <7:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/root>(Schniedel) <3:AUX/cop>(ist) <ROOT>
    <4:ADJ/root>(kurz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - nummod
  - !!python/tuple
    - 12
    - 4
    - parataxis
  sentence: "<1:PRON/nsubj>(ihr) <2:VERB/root>(seid) <ROOT> <3:PRON/nsubj>(Ich) <4:VERB/root>(sag)\
    \ <6:PRON/obj>(dir) <7:PRON/obj>(was) <9:PRON/nsubj>(Das) <10:AUX/cop>(waren)\
    \ <11:NUM/nummod>(f\xFCnf) <12:NOUN/parataxis>(Minuten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(leb) <4:DET/det:poss>(mein)
    <5:NOUN/obj>(leben) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 8
    - xcomp
  sentence: "<1:INTJ/advmod>(Guck) <3:PRON/root>(uns) <ROOT> <4:ADJ/root>(b\xF6se)\
    \ <5:ADP/compound:prt>(an) <6:CCONJ/cc>(und) <7:PRON/nsubj>(wir) <8:VERB/conj>(zwinkern)\
    \ <9:ADV/advmod>(voll) <10:ADJ/xcomp>(nett)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Dieses) <2:NOUN/obl>(Jahr) <3:VERB/root>(kommt) <4:PROPN/nsubj>(Alpa)
    <5:ADJ/advmod>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADP/case>(f\xFCr) <4:PROPN/obl>(YouTube)\
    \ <5:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - compound:prt
  sentence: <ROOT> <2:VERB/root>(brichst) <3:PRON/nsubj>(du) <4:PRON/obj>(dir) <5:DET/det>(den)
    <6:NOUN/obj>(Zachel) <7:ADP/compound:prt>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Frau) <3:VERB/root>(guckt) <ROOT>
    <4:SCONJ/mark>(wenn) <5:PRON/nsubj>(se's) <6:VERB/root>(rauskriegt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Gestern) <2:ADV/advmod>(wieder) <3:DET/root>(viel) <4:ADP/compound:prt>(zu)
    <ROOT> <5:DET/obj>(einen) <6:ADV/mark>(drauf) <7:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(richtig) <ROOT> <2:ADJ/root>(geil)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  sentence: <1:PRON/nsubj>(Dir) <2:AUX/cop>(ist) <3:DET/det>(die) <4:NOUN/root>(Welt)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(macht) <3:DET/nsubj>(jeder) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: <1:PRON/nsubj>(Die) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:ADJ/root>(intensiv)
    <5:X/dep>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:NOUN/obj>(s)
    <ROOT> <5:PRON/nsubj>(du) <6:VERB/root>(hast) <7:ADV/advmod>(jetzt) <8:ADV/advmod>(hier)
    <9:ADV/advmod>(einfach) <10:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj:pass
  - !!python/tuple
    - 2
    - 8
    - aux:pass
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 8
    - conj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj:pass>(Es) <2:AUX/aux:pass>(wird) <3:ADP/case>(in) <4:DET/det>(einer)
    <5:NOUN/compound>(E) <7:NOUN/obl>(Zigarette) <8:VERB/root>(geraucht) <9:CCONJ/cc>(und)
    <10:DET/det>(der) <11:NOUN/nsubj>(Rausch) <12:AUX/conj>(soll) <ROOT> <13:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(merkt) <3:ADV/advmod>(so) <4:ADV/advmod>(wow)
    <5:ADV/advmod>(okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 8
    - obj
  - !!python/tuple
    - 13
    - 8
    - advmod
  - !!python/tuple
    - 14
    - 8
    - compound:prt
  sentence: <1:X/root>(Ach) <ROOT> <2:CCONJ/dep>(und) <3:PROPN/nsubj>(Linda) <4:PROPN/flat>(H)
    <5:AUX/aux>(ist) <6:ADV/advmod>(doch) <7:ADV/mark>(warum) <8:VERB/root>(sagen)
    <9:PRON/nsubj>(wir) <10:ADV/advmod>(eigentlich) <11:DET/det>(den) <12:NOUN/obj>(Punkt)
    <13:ADV/advmod>(immer) <14:ADP/compound:prt>(mit)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:DET/nsubj>(Jeder) <2:AUX/aux>(hat) <3:NUM/nummod>(230) <4:PROPN/obj>(Euro)
    <5:VERB/root>(verdient) <7:AUX/parataxis>(Ist) <8:ADV/advmod>(doch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: "<1:ADV/root>(wo) <2:PRON/nsubj>(du) <3:ADP/case>(um) <4:DET/det>(jeden)\
    \ <5:NOUN/nmod>(Kill) <ROOT> <6:VERB/root>(k\xE4mpfen) <7:AUX/aux>(musst)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(das) <3:ADV/advmod>(schon) <ROOT>
    <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 9
    - csubj
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:AUX/root>(Ist) <ROOT> <2:ADP/case>(wie) <3:DET/det>(die) <4:VERB/csubj>(aussehen)\
    \ <5:NOUN/nsubj>(H\xFChner) <6:AUX/cop>(sind) <7:DET/det>(die) <8:ADJ/amod>(letzten)\
    \ <9:NOUN/root>(Dinos)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(wird) <2:PRON/obl:arg>(ihnen) <3:PRON/nsubj>(das) <ROOT>
    <4:VERB/root>(verwehrt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/obl>(Film) <6:PART/advmod>(nicht) <7:ADV/advmod>(ganz) <8:ADV/advmod>(so)
    <ROOT> <9:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - dep
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - nmod
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  sentence: "<1:NOUN/dep>(Mal) <2:DET/det>(den) <3:NOUN/root>(\xDCbergang) <4:ADP/case>(von)\
    \ <5:NOUN/nmod>(Positronen) <6:ADP/case>(in) <7:DET/det>(einen) <8:ADJ/amod>(h\xF6\
    heren) <9:NOUN/nmod>(Energiezustand) <10:NOUN/appos>(Super) <ROOT> <11:SCONJ/root>(dass)\
    \ <12:PRON/nsubj>(sie)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(in) <2:DET/det>(dem) <3:NOUN/nmod>(Internet) <4:AUX/cop>(ist)
    <5:DET/root>(jeder) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl:arg
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - advcl
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 11
    - ccomp
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:AUX/cop>(wird) <4:X/case>(d)\
    \ <5:PRON/obl:arg>(mir) <6:ADJ/root>(super) <ROOT> <7:VERB/root>(erleichtert)\
    \ <8:ADV/advmod>(dann) <9:SCONJ/mark>(wenn) <10:PRON/nsubj>(man) <11:VERB/advcl>(wei\xDF\
    ) <12:SCONJ/mark>(dass) <13:PRON/nsubj>(es) <14:DET/det>(diesen) <15:NOUN/obj>(Verein)\
    \ <16:VERB/ccomp>(gibt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - ccomp
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 1
    - conj
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - obj
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 18
    - advmod
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: "<1:VERB/root>(sagt) <2:ADV/advmod>(ne) <3:PROPN/nsubj>(Celine) <4:PRON/nsubj>(du)\
    \ <5:AUX/ccomp>(bist) <6:CCONJ/cc>(aber) <7:ADV/advmod>(sch\xF6n) <8:ADV/advmod>(so)\
    \ <9:ADV/advmod>(dann) <10:VERB/conj>(finde) <11:PRON/nsubj>(ich) <12:PRON/obj>(das)\
    \ <13:ADV/advmod>(bisschen) <ROOT> <15:ADV/advmod>(Ja) <16:ADV/advmod>(gut) <17:PRON/nsubj>(ich)\
    \ <18:VERB/root>(hab)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 4
    - obl
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:AUX/root>(war) <ROOT> <2:ADJ/root>(\xFCberaktiv) <3:CCONJ/cc>(und)\
    \ <4:VERB/conj>(sorgt) <5:ADP/case>(f\xFCr) <6:ADV/advmod>(sehr) <7:ADV/advmod>(sehr)\
    \ <8:ADJ/amod>(starke) <9:NOUN/obl>(Emotionen) <10:ADP/case>(bei) <11:PRON/nmod>(ihr)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/obj>(Was) <2:PRON/nsubj>(wir) <3:ADV/advmod>(aber) <4:VERB/root>(wissen)
    <5:AUX/aux>(ist) <6:ADV/advmod>(schon) <ROOT> <7:ADV/root>(genug)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(irgendwie)\
    \ <5:ADV/advmod>(immer) <6:ADV/advmod>(wieder) <7:X/obj>(mega) <ROOT> <8:ADV/advmod>(dar\xFC\
    ber) <9:VERB/root>(nachzudenken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - dep
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(hast) <4:NOUN/obj>(Garten) <7:SCONJ/dep>(wie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/root>(ficke) <3:ADP/compound:prt>(zu) <ROOT>
    <4:DET/amod>('ne) <5:PROPN/root>(Puta)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(f\xFChlte) <3:PRON/obj>(mich) <4:ADV/advmod>(allein)\
    \ <5:CCONJ/cc>(und) <ROOT> <6:VERB/root>(belogen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Egal) <2:ADP/root>(wie) <ROOT> <3:PRON/nsubj>(du) <4:VERB/root>(tust)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: "<1:PRON/nsubj>(wer) <2:PRON/obj>(sich) <3:ADP/root>(f\xFCr) <ROOT> <4:VERB/root>(h\xE4\
    lt) <6:ADV/advmod>(Nein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:AUX/root>(Bin) <ROOT> <2:CCONJ/cc>(und) <3:ADV/advmod>(auch) <4:DET/det>(der)
    <5:NOUN/root>(Held) <6:DET/det>(der) <7:NOUN/nmod>(Kids)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  sentence: "<1:CCONJ/cc>(Und) <2:DET/obj>(viele) <3:VERB/root>(findens) <ROOT> <4:CCONJ/cc>(aber)\
    \ <5:VERB/root>(h\xF6r) <6:ADV/advmod>(doch) <7:ADV/advmod>(mal) <8:ADJ/advmod>(genauer)\
    \ <9:ADV/compound:prt>(hin)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/cop>(sind) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(verzweifelt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(gerade) <4:VERB/root>(f\xFC\
    hlt) <5:PRON/obj>(sich) <6:PRON/nsubj>(das) <7:ADP/compound:prt>(an) <8:SCONJ/mark>(als)\
    \ <9:AUX/conj>(w\xFCrde) <10:PRON/nsubj>(ich) <11:PRON/obj>(mich) <ROOT> <12:VERB/root>(einschr\xE4\
    nken) <13:AUX/aux>(m\xFCssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - amod
  - !!python/tuple
    - 6
    - 17
    - ccomp
  - !!python/tuple
    - 7
    - 15
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - parataxis
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - obl
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 6
    - parataxis
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - nsubj
  - !!python/tuple
    - 19
    - 21
    - det
  - !!python/tuple
    - 20
    - 21
    - amod
  - !!python/tuple
    - 21
    - 17
    - obj
  - !!python/tuple
    - 22
    - 24
    - cc
  - !!python/tuple
    - 24
    - 17
    - conj
  - !!python/tuple
    - 25
    - 26
    - case
  - !!python/tuple
    - 26
    - 24
    - nmod
  sentence: "<1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/amod>(Junge)\
    \ <6:ADJ/ccomp>(Junge) <7:PRON/nsubj>(was) <8:AUX/parataxis>(ist) <9:ADP/case>(mit)\
    \ <10:PRON/obl>(dir) <12:PRON/nsubj>(Was) <13:AUX/cop>(ist) <14:ADJ/amod>(Junge)\
    \ <15:NOUN/parataxis>(mhm) <17:VERB/root>(H\xF6rst) <18:PRON/nsubj>(du) <19:DET/det>(den)\
    \ <20:ADJ/amod>(neuen) <21:NOUN/obj>(Track) <22:CCONJ/cc>(oder) <24:NOUN/conj>(Pass)\
    \ <25:ADP/case>(auf) <26:NOUN/nmod>(Junge)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:PART/advmod>(Nicht) <2:ADV/advmod>(mehr) <3:ADV/root>(so) <ROOT> <4:ADP/case>(wie)\
    \ <5:ADJ/amod>(fr\xFCher) <7:NOUN/root>(Pass) <8:ADP/case>(auf) <9:NOUN/nmod>(alter)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 7
    - dep
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obl:arg
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:VERB/root>(F\xFChlt) <2:PRON/obj>(sich) <ROOT> <3:ADP/dep>(an) <4:AUX/aux>(Kann)\
    \ <5:PRON/nsubj>(die) <6:PRON/obl:arg>(mir) <7:VERB/root>(runterfallen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - compound
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(windet) <3:PRON/obj>(sich) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(so) <ROOT> <6:PART/advmod>(Nicht) <7:ADP/case>(in) <8:DET/det:poss>(mein)
    <9:ADJ/compound>(T-) <10:NOUN/nmod>(Shirt) <11:NOUN/root>(Alter)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PROPN/root>(Boah) <ROOT> <2:VERB/root>(Nimmst) <3:PRON/nsubj>(du) <4:PRON/obj>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <1:VERB/root>(Guckt) <2:PRON/obj>(euch) <3:ADV/advmod>(mal) <4:DET/det>(diese)
    <5:NOUN/obj>(Tiere) <6:ADP/case>(an) <7:ADV/advmod>(Wie) <ROOT> <8:AUX/cop>(ist)
    <9:PRON/root>(das) <10:ADV/advmod>(denn)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Mhmm) <2:ADJ/root>(richtig) <ROOT> <3:SCONJ/mark>(weil)
    <4:PRON/nsubj>(du) <5:AUX/aux>(hast) <6:ADV/advmod>(halt) <7:VERB/root>(gesehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 13
    - advmod
  - !!python/tuple
    - 6
    - 5
    - cc
  - !!python/tuple
    - 7
    - 8
    - expl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - obl
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 13
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(tut) <3:ADV/advmod>(jetzt) <4:PART/advmod>(nicht)
    <ROOT> <5:ADV/advmod>(weh) <6:CCONJ/cc>(sondern) <7:PRON/expl>(es) <8:AUX/root>(ist)
    <9:ADV/advmod>(eher) <10:ADP/case>(wie) <11:ADV/advmod>(so) <12:DET/det>(ein)
    <13:NOUN/obl>(bitzeln) <14:ADP/case>(auf) <15:DET/det>(der) <16:NOUN/nmod>(Haut)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/root>(De) <2:NOUN/flat>(Haartransplantation) <3:ADV/advmod>(Schon)
    <ROOT> <4:SCONJ/mark>(dass) <5:PRON/nsubj>(man) <6:DET/det>(diesen) <7:NOUN/obj>(step)
    <8:VERB/root>(geht)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 14
    - advcl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 14
    - aux
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(dann) <2:ADV/advmod>(auch) <3:PART/advmod>(nicht) <4:PART/advmod>(nicht)\
    \ <5:ADP/root>(zu) <ROOT> <6:VERB/advcl>(auff\xE4llt) <7:ADP/case>(Von) <8:DET/det>(den)\
    \ <9:NOUN/obl>(Seiten) <10:AUX/aux>(konnten) <11:PRON/nsubj>(die) <12:ADV/advmod>(gar)\
    \ <13:PRON/obj>(nichts) <14:VERB/root>(nehmen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:DET/det>(viele)
    <5:NOUN/nsubj>(Sorten) <6:CCONJ/cc>(und) <7:NOUN/conj>(Hersteller) <8:PRON/obj>(es)
    <9:ADV/advmod>(mittlerweile) <10:VERB/root>(gibt)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:NOUN/nsubj>(Wahnsinn) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/det>(eine)
    <5:ADJ/amod>(gute) <6:NOUN/root>(Dimension) <7:ADV/advmod>(hier) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:DET/det>(die) <6:NOUN/root>(Sojabohne)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <2:PROPN/dep>(Marie) <3:VERB/root>(lacht) <5:X/dep>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advcl
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - cop
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 13
    - obl
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Situation) <3:AUX/cop>(ist) <4:ADJ/root>(angespannt)\
    \ <5:CCONJ/cc>(und) <6:DET/det>(die) <7:PROPN/nsubj>(NATO) <8:AUX/cop>(ist) <9:ADJ/conj>(nerv\xF6\
    s) <10:SCONJ/mark>(weil) <11:PROPN/nsubj>(Russland) <12:ADJ/advcl>(einfach) <ROOT>\
    \ <13:VERB/root>(\xFCberlegen) <14:AUX/cop>(ist) <15:ADP/case>(in) <16:DET/det>(der)\
    \ <17:NOUN/obl>(Arktis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - ccomp
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 15
    - mark
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - advcl
  - !!python/tuple
    - 16
    - 15
    - cop
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Ding) <3:AUX/ccomp>(ist) <4:CCONJ/cc>(aber)\
    \ <5:PROPN/nsubj>(Russland) <6:VERB/root>(hat) <7:PRON/obj>(sich) <8:ADV/advmod>(milit\xE4\
    risch) <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(aufger\xFCstet) <11:SCONJ/mark>(weil)\
    \ <12:PRON/nsubj>(sie) <13:ADV/advmod>(selbst) <14:ADV/advmod>(auch) <15:ADJ/advcl>(nerv\xF6\
    s) <16:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:SCONJ/root>(wenn) <2:PRON/nsubj>(ich) <3:DET/det>(den) <4:NOUN/obj>(Part)
    <5:ADV/advmod>(hier) <ROOT> <6:NOUN/obj>(spit') <7:VERB/root>(atmen) <8:PRON/nsubj>(sie)
    <9:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/nsubj>(man) <3:NOUN/obj>(s) <4:ADJ/root>(ganz)
    <ROOT> <5:AUX/root>(will) <6:AUX/cop>(ist) <7:PRON/nsubj>(es) <8:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cc
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(spitte) <3:ADV/advmod>(so) <ROOT> <5:PRON/root>(Ich)
    <6:CCONJ/cc>(aber) <7:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PROPN/nsubj>(crazy) <4:ADJ/root>(schwer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Warum) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(Interessiert) <2:PRON/nsubj>('s) <3:PRON/obj>(dich) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/obj>(was) <6:DET/det>(die) <7:ADJ/amod>(guten) <8:NOUN/obj>(Jungs)
    <9:VERB/root>(planen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(bin) <2:ADV/advmod>(auch) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 4
    - 1
    - appos
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/root>(Ohhh) <2:PRON/flat>(man) <4:NOUN/appos>(Lachen) <6:PRON/nsubj>(Das)
    <7:AUX/cop>(war) <ROOT> <8:NOUN/root>(getimed)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(sie) <3:AUX/root>(sind) <5:X/dep>(What)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - dep
  sentence: <1:DET/det>(die) <2:PRON/obl:arg>(ihnen) <3:ADP/root>(zu) <ROOT> <4:AUX/root>(sind)
    <6:NOUN/dep>(Drip)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <ROOT> <1:ADP/case>(auf) <2:DET/det>(dem) <3:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - obj
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(fick) <3:PRON/obj>(sie) <ROOT> <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(sie) <6:VERB/root>(sagt) <8:PROPN/obj>(Ufo)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Mann) <2:ADP/case>(oh) <3:NOUN/nmod>(Mann) <4:ADP/case>(oh)
    <5:NOUN/nsubj>(Mann) <6:NOUN/nsubj>(Wahnsinn) <7:AUX/cop>(Ist) <8:PRON/root>(das)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/compound>(Das) <2:PRON/nsubj>(das) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(richtig) <ROOT> <6:ADJ/root>(verwunderlich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/dep>(Oh) <2:NOUN/nsubj>(Kacke) <3:AUX/cop>(ist) <4:PRON/root>(das)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:DET/det>(die) <4:NOUN/nsubj>(Leute)
    <5:VERB/root>(zocken) <6:DET/det>(das) <7:NOUN/obj>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Spiele) <3:AUX/root>(waren) <4:ADV/advmod>(jetzt)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Wisst) <2:PRON/obj>(ihr) <3:ADP/advmod>(wie) <ROOT> <4:PRON/nsubj>(das)
    <5:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:ADV/root>(dagegen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 4
    - xcomp
  sentence: <1:SCONJ/mark>(Als) <2:DET/det>(der) <3:NOUN/nsubj>(Tropfen) <4:VERB/root>(explodierte)
    <5:PRON/nsubj>(das) <6:AUX/cop>(war) <7:PROPN/xcomp>(mega) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(ohne) <2:PRON/obl>(sie) <3:VERB/root>(runterzuspielen) <ROOT>
    <4:ADJ/amod>(schlechte) <5:NOUN/root>(Erfahrungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(jetzt) <2:AUX/root>(hab) <3:PRON/nsubj>(ich) <ROOT> <4:PROPN/root>(Money)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(schwer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - acl
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:ADP/case>(an) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Arsch) <6:VERB/root>(h\xF6rst) <7:PRON/nsubj>(du) <8:PRON/obj>(was)\
    \ <9:DET/det>(der) <10:NOUN/nsubj>(Papa) <11:VERB/acl>(sagt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:PROPN/root>(Boar) <2:ADP/advmod>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADJ/root>(voll)
    <ROOT> <5:DET/det>(Die) <6:NOUN/root>(Arme)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/root>(wie) <ROOT> <2:AUX/aux>(hat) <3:DET/det>(die) <4:ADJ/amod>(letzte)\
    \ <5:NOUN/nsubj>(T\xFCte) <6:PRON/obj>(mich) <7:VERB/root>(gefickt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:SCONJ/root>(wie) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:ADP/case>(in) <6:PRON/obl>(dich) <7:VERB/root>(verliebt) <8:AUX/aux>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - dep
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/case>(zu) <4:ADJ/amod>(krasse)
    <5:NOUN/obl>(Storys) <8:ADP/dep>(Zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Als) <2:PRON/nsubj>(es) <3:ADP/case>(bei) <4:PRON/obl>(mir)
    <5:ADV/advmod>(zuhause) <6:VERB/root>(grade) <ROOT> <7:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(habt) <3:ADV/advmod>(nur) <ROOT> <4:VERB/root>(verkauft)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:AUX/aux>(habe) <3:PRON/nsubj>(ich) <4:VERB/root>(gemerkt)
    <ROOT> <5:PRON/nsubj>(du) <6:AUX/aux>(hast) <7:ADV/advmod>(nie) <8:PRON/obj>(etwas)
    <9:VERB/root>(gesagt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(ich) <3:PART/advmod>(nicht) <4:ADJ/root>(\xFC\
    berbordend) <ROOT> <5:DET/det>(viel) <6:NOUN/root>(Ahnung) <7:ADV/advmod>(davon)\
    \ <8:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)\
    \ <5:ADJ/advmod>(voll) <ROOT> <6:CCONJ/cc>(aber) <7:PRON/nsubj>(ihr) <8:AUX/aux>(d\xFC\
    rft) <9:PART/advmod>(nicht) <10:VERB/root>(vergessen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADV/advmod>(nat\xFCrlich) <2:ADJ/root>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:ADV/advmod>(pers\xF6nlich) <3:VERB/root>(find)\
    \ <4:NOUN/nsubj>(s) <5:ADJ/advmod>(richtig) <ROOT> <6:PRON/nsubj>(was) <7:PROPN/nsubj>(Freud)\
    \ <8:PRON/obj>(sich) <9:DET/obj>(alles) <10:VERB/root>(\xFCberlegt) <11:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  sentence: "<1:PROPN/root>(Mmh\u2026) <3:PROPN/flat>(Ach) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 11
    - mark
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 11
    - obl
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nsubj:pass
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl:arg
  - !!python/tuple
    - 11
    - 1
    - advcl
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 11
    - conj
  - !!python/tuple
    - 16
    - 15
    - advmod
  - !!python/tuple
    - 17
    - 15
    - cop
  - !!python/tuple
    - 18
    - 15
    - nsubj
  sentence: "<1:NOUN/root>(Leute) <2:SCONJ/mark>(wenn) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:PROPN/obl>(Iran) <6:ADV/advmod>(wo) <7:DET/det>(der) <8:NOUN/nsubj:pass>(Islam)\
    \ <9:DET/det>(den) <10:NOUN/obl:arg>(Menschen) <11:VERB/advcl>(aufgezwungen) <12:AUX/aux:pass>(wird)\
    \ <13:DET/det>(das) <14:NOUN/nsubj>(Kopftuch) <15:VERB/conj>(f\xE4llt) <16:ADV/advmod>(dann)\
    \ <17:AUX/cop>(ist) <18:PRON/nsubj>(das) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:PROPN/root>(Wow)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:ADP/case>(bei)
    <5:DET/det>(dem) <6:NOUN/obl>(Buch) <7:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(total)
    <ROOT> <5:ADV/advmod>(einfach) <6:ADV/root>(nur)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 4
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(finde)
    <5:ADP/case>(an) <6:DET/det>(der) <7:NOUN/obl>(Sache) <8:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:ADV/advmod>(dann) <3:VERB/root>(wird) <4:PRON/nsubj>(es)
    <ROOT> <5:PROPN/nsubj>(mega) <6:VERB/root>(vertrippt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(wie)
    <5:DET/det>(die) <6:ADV/advmod>(hier) <7:DET/nsubj>(alle) <8:VERB/root>(stehen)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - ccomp
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:PRON/obj>(es) <4:ADP/case>(aus)
    <5:NUM/nummod>(1) <6:NOUN/obl>(Hand) <7:VERB/root>(mitbekommen) <8:PRON/nsubj>(Es)
    <9:AUX/ccomp>(ist) <10:ADV/advmod>(schon) <ROOT> <11:AUX/root>(gewesen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 16
    - nsubj
  - !!python/tuple
    - 7
    - 16
    - aux
  - !!python/tuple
    - 8
    - 16
    - obj
  - !!python/tuple
    - 9
    - 16
    - advmod
  - !!python/tuple
    - 10
    - 16
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 16
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 4
    - conj
  sentence: "<1:PART/advmod>(nicht) <2:ADV/root>(so) <ROOT> <3:ADV/advmod>(hart) <4:VERB/root>(treffen)\
    \ <5:AUX/aux>(w\xFCrde) <6:PRON/nsubj>(Das) <7:AUX/aux>(hat) <8:PRON/obj>(sich)\
    \ <9:ADV/advmod>(aber) <10:ADV/advmod>(dann) <11:ADV/advmod>(ja) <12:ADV/advmod>(doch)\
    \ <13:ADV/advmod>(ganz) <14:ADV/advmod>(sch\xF6n) <15:ADV/advmod>(anders) <16:VERB/conj>(entwickelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - xcomp
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 16
    - ccomp
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 11
    - parataxis
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 16
    - advmod
  sentence: <1:DET/det>(die) <2:ADJ/amod>(oh) <3:NOUN/nmod>(Gott) <4:PRON/nsubj>(die)
    <5:AUX/root>(sind) <6:ADV/advmod>(schon) <ROOT> <7:PROPN/nsubj>(de) <8:AUX/aux>(will)
    <9:ADJ/advmod>(schwarz) <10:VERB/xcomp>(scheriff) <11:VERB/root>(werden) <12:ADV/advmod>(da)
    <13:DET/det>(ein) <14:AUX/ccomp>(ist) <15:NOUN/nsubj>(Wachmann) <16:VERB/parataxis>(hat)
    <17:ADV/advmod>(schon) <18:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - expl
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - ccomp
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - nsubj
  sentence: <1:ADP/case>(durch) <2:PRON/expl>(es) <3:AUX/aux>(ist) <4:AUX/aux>(muss)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(ehrlich) <7:VERB/root>(sagen) <8:ADV/advmod>(ja)
    <9:PRON/nsubj>(das) <10:AUX/ccomp>(ist) <11:ADV/advmod>(schon) <ROOT> <12:ADV/advmod>(ja)
    <13:ADV/advmod>(da) <14:VERB/root>(musst) <15:PRON/nsubj>(du)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - aux
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - advcl
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - obl:arg
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 19
    - cc
  - !!python/tuple
    - 18
    - 19
    - nsubj
  - !!python/tuple
    - 19
    - 16
    - conj
  sentence: <1:AUX/aux>(konnte) <2:PRON/nsubj>(der) <3:PRON/obj>(sich) <4:ADP/case>(in)
    <5:DET/det>(diesen) <6:NOUN/obl>(Mut) <7:VERB/root>(bringen) <8:SCONJ/mark>(weil)
    <9:PRON/nsubj>(das) <10:AUX/advcl>(ist) <11:ADV/advmod>(schon) <ROOT> <12:SCONJ/mark>(weil)
    <13:PRON/nsubj>(ich) <14:PRON/obl:arg>(mir) <15:ADV/advmod>(immer) <16:VERB/root>(denke)
    <17:CCONJ/cc>(und) <18:PRON/nsubj>(ich) <19:VERB/conj>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(das) <3:NOUN/nsubj>(Ergebnis) <4:AUX/cop>(ist)
    <5:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - obj
  - !!python/tuple
    - 10
    - 9
    - dep
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - dep
  - !!python/tuple
    - 14
    - 13
    - advmod
  sentence: <1:VERB/root>(zugegeben) <2:ADV/advmod>(schon) <ROOT> <3:ADV/advmod>(wie)
    <4:ADV/advmod>(wie) <5:ADJ/root>(unterschiedlich) <6:AUX/cop>(ist) <7:SCONJ/mark>(wenn)
    <8:PRON/nsubj>(man) <9:PRON/obj>(die) <10:SCONJ/dep>(wie) <11:PRON/nsubj>(man)
    <12:DET/det>(die) <13:NOUN/dep>(Geschichten) <14:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Titel) <3:AUX/root>(sind) <4:ADV/advmod>(oft)\
    \ <ROOT> <5:CCONJ/cc>(und) <6:ADJ/root>(\xFCbertrieben)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(eigentlich) <3:PRON/nsubj>(das) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(Effekt) <4:AUX/cop>(ist)
    <5:ADJ/root>(unfassbar) <ROOT> <6:ADP/case>(von) <7:DET/det>(diesem) <8:ADJ/amod>(kleinen)
    <9:NOUN/root>(Etikettenschwindel)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 16
    - nsubj
  - !!python/tuple
    - 12
    - 16
    - aux
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 16
    - obl:arg
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 10
    - ccomp
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADJ/root>(einfach)
    <ROOT> <5:SCONJ/mark>(weil) <6:PRON/nsubj>(ich) <7:AUX/aux>(konnte) <8:ADV/advmod>(wieder)
    <9:PRON/obj>(nichts) <10:VERB/root>(machen) <11:PRON/nsubj>(ich) <12:AUX/aux>(konnte)
    <13:DET/det>(dem) <14:NOUN/obl:arg>(Kind) <15:PART/advmod>(nicht) <16:VERB/ccomp>(helfen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(wird) <3:PRON/nsubj>(es) <4:ADJ/advmod>(ganz)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(w\xE4re) <3:ADJ/root>(richtig) <ROOT>\
    \ <4:ADP/case>(In) <5:PRON/obl>(mir) <6:AUX/aux>(w\xFCrde) <7:DET/obj>(alles)\
    \ <8:VERB/root>(kaputtgehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - advcl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(total) <ROOT> <4:VERB/advcl>(fand)
    <5:ADP/case>(auf) <6:NOUN/obl>(Platz) <7:NUM/appos>(eins) <8:VERB/root>(liegt)
    <9:NOUN/nsubj>(Alkohol)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:AUX/root>(wird) <ROOT> <2:PROPN/dep>(doll) <3:VERB/root>(untersch\xE4\
    tzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(will) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:NOUN/obj>(Alkohol) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(verteufeln)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - parataxis
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 5
    - advmod
  sentence: <1:VERB/root>(Stimmt) <3:ADV/advmod>(Also) <4:PRON/nsubj>(das) <5:VERB/parataxis>(finde)
    <6:PRON/nsubj>(ich) <7:ADV/advmod>(dann) <8:ADV/advmod>(schon) <9:DET/det>(ein)
    <10:ADV/advmod>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(auch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(das)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  sentence: <1:VERB/root>(Finde) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <4:ADV/advmod>(mal)
    <5:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihr) <2:AUX/cop>(seid) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(das) <2:DET/det>(des) <3:ADP/dep>(zu) <ROOT> <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:ADJ/advmod>(pl\xF6\
    tzlich) <4:PRON/obj>(sich) <5:DET/det>(die) <6:ADJ/amod>(eigene) <7:NOUN/nsubj>(Normalit\xE4\
    t) <8:VERB/root>(ver\xE4ndern) <9:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - obj
  - !!python/tuple
    - 10
    - 14
    - cc
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 3
    - conj
  - !!python/tuple
    - 15
    - 22
    - advmod
  - !!python/tuple
    - 16
    - 22
    - obl:arg
  - !!python/tuple
    - 17
    - 22
    - aux:pass
  - !!python/tuple
    - 18
    - 22
    - advmod
  - !!python/tuple
    - 19
    - 21
    - det
  - !!python/tuple
    - 20
    - 21
    - amod
  - !!python/tuple
    - 21
    - 22
    - nsubj:pass
  - !!python/tuple
    - 22
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:ADV/advmod>(auch)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(uns) <7:ADV/advmod>(so) <8:PROPN/amod>(Social)\
    \ <9:PROPN/obj>(Media) <10:CCONJ/cc>(und) <11:ADV/advmod>(so) <12:AUX/cop>(Ist)\
    \ <13:ADV/advmod>(schon) <14:ADJ/conj>(richtig) <ROOT> <15:ADV/advmod>(also) <16:PRON/obl:arg>(uns)\
    \ <17:AUX/aux:pass>(wird) <18:ADV/advmod>(so) <19:DET/det>(eine) <20:ADJ/amod>(perfekte)\
    \ <21:NOUN/nsubj:pass>(Welt) <22:VERB/root>(vorgelebt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: "<1:ADP/case>(Bei) <2:NOUN/obl>(Gew\xFCrzen) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(das) <6:ADV/advmod>(ja) <7:ADV/advmod>(auch) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(so) <2:ADJ/amod>(einzelne) <3:NOUN/root>(Bestandteile)
    <ROOT> <4:VERB/root>(rausschmecken)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  sentence: "<1:NOUN/nsubj>(Genie\xDF) <3:DET/det>(die) <4:NOUN/nsubj>(Aussicht) <5:ADJ/root>(grad)\
    \ <6:AUX/cop>(ist) <7:DET/det>(das) <8:NOUN/nsubj>(Panorama) <9:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:ADV/advmod>(also) <4:SCONJ/mark>(dass)\
    \ <5:PROPN/nsubj>(Erdogan) <6:DET/det>(die) <7:NOUN/obj>(Wahlen) <8:VERB/root>(manipulieren)\
    \ <9:AUX/aux>(k\xF6nnte)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:ADV/advmod>(schon) <3:ADV/root>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: <1:ADP/case>(mit) <2:PRON/obl>(wem) <3:PRON/nsubj>(ich) <4:VERB/root>(rausgehe)
    <5:ADP/case>(mit) <6:DET/det>(jedem) <7:NOUN/obl>(Einzelnen) <8:ADJ/advmod>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <2:PROPN/dep>(Ufftata) <4:VERB/root>(klingt) <ROOT> <5:CCONJ/cc>(und)
    <6:VERB/root>(macht) <7:ADJ/advmod>(aggressiv)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(du) <3:NOUN/obj>(Opfer) <4:DET/det>(die)
    <5:ADJ/amod>(eingekauften) <6:NOUN/obj>(Features) <7:VERB/root>(machst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  sentence: <1:ADV/advmod>(Zu) <2:ADJ/root>(blass) <4:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(sagst) <3:NOUN/obj>(Hurensohn) <4:ADP/case>(zu)\
    \ <5:NOUN/obl>(Rap) <6:CCONJ/cc>(und) <7:VERB/conj>(denkst) <8:PRON/nsubj>(du)\
    \ <9:VERB/ccomp>(w\xE4rst) <10:ADV/advmod>(jetzt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(ich) <3:NOUN/root>(Dichter) <ROOT>
    <4:ADP/case>(in) <5:DET/det>(dem) <6:PROPN/obl>(Flow) <7:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - obl:arg
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(seh) <3:ADV/advmod>(nur) <4:DET/det>(das)\
    \ <5:ADJ/amod>(blonde) <6:NOUN/obj>(Haar) <7:CCONJ/cc>(und) <8:VERB/conj>(denk)\
    \ <9:PRON/obl:arg>(mir) <10:ADV/advmod>(schei\xDFe) <ROOT> <11:DET/det:poss>(dein)\
    \ <12:NOUN/root>(Vater)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(Dass) <2:PRON/obj>(mich) <3:ADV/advmod>(hier) <4:DET/obj>(keiner)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(fasziniert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Rapper) <2:AUX/cop>(wollen) <ROOT> <3:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Rapper) <2:AUX/cop>(wollen) <ROOT> <3:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(sie) <2:AUX/root>(sind) <3:DET/obj>(alle) <4:ADV/advmod>(irgendwie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - dep
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:INTJ/root>(merk) <4:ADV/advmod>(dabei) <5:ADP/dep>(wie)
    <ROOT> <6:DET/det>(der) <7:NOUN/root>(Tag) <8:X/dep>(is)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(dabei) <2:VERB/root>(hab) <4:PRON/nsubj>(ich) <5:PRON/obj>(dich)
    <6:ADV/advmod>(mal) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(geliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det>(die) <3:NOUN/root>(Erinnerung) <5:PRON/nsubj>(Ich)\
    \ <6:VERB/parataxis>(hab') <7:PRON/obj>(dich) <8:ADV/advmod>(mal) <9:ADV/advmod>(so)\
    \ <ROOT> <10:VERB/root>(geliebt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:ADJ/root>(eingebildet) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  sentence: <1:ADV/root>(Wie) <ROOT> <2:ADJ/root>(anstrengend) <3:PRON/nsubj>(das)
    <4:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - dep
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 9
    - nmod
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PROPN/dep>(Rapp) <3:ADV/advmod>(nur) <4:ADP/case>(f\xFCr) <5:PROPN/nmod>(Sebastian)\
    \ <6:DET/det>(den) <7:NOUN/compound>(Gast) <9:NOUN/root>(Part) <ROOT> <11:X/root>(wa)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(es) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <ROOT> <5:PRON/nsubj>(das) <6:ADV/advmod>(so) <7:VERB/root>(mitzuerleben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Aale) <2:AUX/root>(sind) <ROOT> <3:ADJ/amod>(faszinierende)
    <4:NOUN/root>(Wesen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obj
  sentence: "<1:ADJ/root>(Okay) <ROOT> <2:PRON/nsubj>(sie) <3:VERB/root>(hat) <4:ADJ/advmod>(tats\xE4\
    chlich) <5:ADV/advmod>(schon) <6:DET/det>(ne) <7:NOUN/obj>(Anzeige)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:ADV/advmod>(nur) <4:VERB/root>(gedacht)
    <ROOT> <5:SCONJ/mark>(dass) <6:ADV/advmod>(so) <7:PRON/nsubj>(was) <8:VERB/root>(passieren)
    <9:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - obj
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - obl:arg
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det:poss
  - !!python/tuple
    - 15
    - 17
    - obl
  - !!python/tuple
    - 16
    - 17
    - mark
  - !!python/tuple
    - 17
    - 11
    - xcomp
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(dass)\
    \ <5:PROPN/nsubj>(Thomas) <6:PRON/obj>(sich) <7:DET/det>(ein) <8:DET/det>(solches)\
    \ <9:NOUN/obl:arg>(Ende) <10:ADV/advmod>(eher) <11:VERB/root>(vorstellen) <12:AUX/aux>(konnte)\
    \ <13:ADP/case>(als) <14:DET/det:poss>(seine) <15:NOUN/obl>(Sucht) <16:PART/mark>(zu)\
    \ <17:VERB/xcomp>(\xFCberwinden)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(wer) <2:AUX/aux>(h\xE4tte) <3:PRON/obj>(das) <4:VERB/root>(gedacht)\
    \ <6:ADV/advmod>(Da) <7:VERB/parataxis>(freu) <8:PRON/nsubj>(ich) <9:PRON/obj>(mich)\
    \ <10:ADV/advmod>(so) <ROOT> <11:ADV/root>(drauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(ziemlich) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <5:PRON/root>(uns)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(Sei) <ROOT> <2:ADP/case>(von) <3:PRON/root>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/root>(sei) <ROOT> <2:ADP/case>(von) <3:PRON/obl>(mir) <4:ADP/case>(in)
    <5:DET/det:poss>(seiner) <6:NOUN/obl>(Stadt) <7:VERB/root>(vorbeizukomm)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(schreib) <ROOT> <3:ADP/case>(auf) <4:PROPN/root>(Beats)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(w\xFCrde) <3:PRON/obj>(mich) <ROOT>\
    \ <4:VERB/root>(sch\xE4m'n)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - obj
  sentence: <1:DET/det>(dieser) <2:NOUN/nsubj>(Kampf) <3:AUX/cop>(war) <4:DET/det:poss>(mein)
    <5:ADJ/amod>(qualvolles) <6:NOUN/root>(Ende) <8:PRON/nsubj>(Ich) <9:VERB/parataxis>(find')
    <10:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/nsubj>(Engel) <3:ADP/case>(mit) <4:DET/det>(der)
    <5:PROPN/nmod>(AK) <6:AUX/cop>(ist) <7:ADJ/root>(bitter) <ROOT> <8:ADV/root>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - flat
  sentence: "<1:PRON/nsubj>(Er) <2:VERB/root>(w\xE4r) <3:DET/obj>(viel) <4:ADV/advmod>(lieber)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(wie) <7:PROPN/root>(Django) <8:PROPN/flat>(Reinhardt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(du) <3:DET/det:poss>(meine) <4:NOUN/obj>(Geheimratsecken)
    <5:VERB/root>(anguckst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: "<1:CCONJ/cc>(oder) <2:PRON/nsubj>(ich) <3:VERB/root>(\xE4nder) <4:PRON/obj>(mich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(nat\xFCrlich) <4:ADJ/root>(sch\xF6\
    n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(der) <2:ADV/advmod>(vorher) <3:ADV/advmod>(noch) <ROOT>
    <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 3
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADP/mark>(mit) <3:VERB/root>(f\xE4llt) <4:ADV/advmod>(wieder)\
    \ <5:ADP/compound:prt>(auf) <6:ADP/mark>(wie) <ROOT> <7:PRON/nsubj>(es) <8:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  sentence: "<1:DET/det>(der) <2:NOUN/root>(Schei\xDF) <3:AUX/cop>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 5
    - nummod
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 5
    - conj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 5
    - cop
  sentence: "<1:ADP/case>(\xDCber) <2:NUM/nummod>(200) <3:NOUN/compound>(e) <5:NOUN/root>(Mails)\
    \ <6:CCONJ/cc>(und) <7:ADP/advmod>(\xFCber) <8:NUM/nummod>(1000) <9:NOUN/conj>(Kommentare)\
    \ <10:DET/conj>(Viele) <11:DET/det>(der) <12:NOUN/nmod>(Geschichten) <13:AUX/cop>(sind)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det:poss>(mein) <3:ADJ/amod>(gro\xDFer) <4:NOUN/nsubj>(Bruder)\
    \ <5:CCONJ/cc>(und) <6:PRON/conj>(ich) <7:VERB/root>(haben) <8:DET/det>(das) <9:NOUN/obj>(Game)\
    \ <10:ADV/compound:prt>(zusammen) <ROOT> <11:VERB/root>(gegrindet)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:ADJ/root>(intensiv)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 16
    - advcl
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 16
    - cop
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - advmod
  - !!python/tuple
    - 18
    - 16
    - advmod
  - !!python/tuple
    - 19
    - 16
    - mark
  - !!python/tuple
    - 20
    - 19
    - nsubj
  - !!python/tuple
    - 21
    - 22
    - nsubj
  - !!python/tuple
    - 22
    - 16
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)
    <5:VERB/advcl>(ausblendet) <6:PRON/obj>(was) <7:PRON/nsubj>(man) <8:ADV/advmod>(hier)
    <9:ADV/advmod>(eigentlich) <10:VERB/ccomp>(macht) <11:PRON/nsubj>(es) <12:AUX/cop>(ist)
    <13:ADV/advmod>(ja) <14:ADV/advmod>(fast) <15:ADV/advmod>(ganz) <16:ADJ/root>(nett)
    <17:ADV/advmod>(Also) <18:ADV/advmod>(also) <19:SCONJ/mark>(wenn) <20:PRON/nsubj>(man)
    <21:PRON/nsubj>(es) <22:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - aux
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - aux
  sentence: <1:AUX/aux>(waren) <2:NOUN/nsubj>(Gummistiefel) <3:VERB/root>(ausverkauft)
    <4:PRON/expl>(Es) <5:AUX/aux>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 16
    - advmod
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 16
    - obj
  - !!python/tuple
    - 7
    - 14
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 14
    - obj
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 16
    - advcl
  - !!python/tuple
    - 15
    - 14
    - aux
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - nsubj
  - !!python/tuple
    - 18
    - 16
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:ADV/root>(schon) <ROOT> <3:INTJ/advmod>(Na) <4:ADV/advmod>(eben)
    <5:ADV/advmod>(auch) <6:DET/obj>(diese) <7:SCONJ/mark>(als) <8:DET/det>(die) <9:NOUN/nsubj>(Leute)
    <10:PRON/obj>(sich) <11:ADV/advmod>(so) <12:ADP/case>(mit) <13:NOUN/obl>(Sonnenmilch)
    <14:VERB/advcl>(eingecremt) <15:AUX/aux>(haben) <16:VERB/root>(dachte) <17:PRON/nsubj>(ich)
    <18:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - cop
  - !!python/tuple
    - 12
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(mal) <4:ADV/advmod>(irgendwo)
    <5:ADV/advmod>(Hier) <6:AUX/parataxis>(sind) <7:ADV/advmod>(einfach) <8:DET/det>(irgendwelche)
    <9:NOUN/nsubj>(Sachen) <10:PRON/nsubj>(Das) <11:AUX/cop>(ist) <12:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:NOUN/root>(Bass) <2:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(mal) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/root>(Arsch) <7:CCONJ/cc>(und) <8:VERB/conj>(abgefuckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - xcomp
  - !!python/tuple
    - 5
    - 10
    - cc
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:VERB/root>(Sagten) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/xcomp>(richtig)
    <ROOT> <5:CCONJ/cc>(und) <6:PRON/obj>(was) <7:PRON/nsubj>(ich) <8:DET/obj>(alles)
    <9:ADV/advmod>(richtig) <10:VERB/root>(mach)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PROPN/nsubj>(Daddy) <2:VERB/root>(fand) <3:PRON/obj>(es) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  sentence: <1:PROPN/nsubj>(Traya) <3:NOUN/flat>(Beats) <4:VERB/root>(scheppert) <5:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 8
    - 4
    - dep
  sentence: "<1:SCONJ/root>(wenn) <2:PRON/nsubj>(ich) <3:PRON/obj>(euch) <ROOT> <4:VERB/root>(entt\xE4\
    uscht) <5:AUX/aux>(hab) <8:X/dep>(Uh-uh)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Also) <2:ADV/root>(so) <ROOT> <3:VERB/root>(fand) <4:PRON/nsubj>(ich)
    <5:PRON/obj>(das) <6:ADV/advmod>(jetzt) <7:ADV/advmod>(auch) <8:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: "<1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(ich) <3:ADJ/root>(entt\xE4uscht)\
    \ <4:AUX/cop>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(rappe) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(deswegen) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:VERB/root>(tut) <3:ADV/advmod>(so) <ROOT> <4:ADV/root>(weh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:DET/det:poss>(Meinen) <2:NOUN/root>(Kopf) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:INTJ/root>(Ach) <2:ADP/advmod>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 12
    - aux
  - !!python/tuple
    - 4
    - 12
    - aux
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - cc
  - !!python/tuple
    - 14
    - 12
    - conj
  sentence: "<1:PRON/nsubj>(Was) <2:ADV/root>(immer) <ROOT> <3:AUX/aux>(ist) <4:AUX/aux>(ist)\
    \ <5:ADV/advmod>(halt) <6:DET/det>(dieser) <7:NOUN/nsubj>(Zinseszinseffekt) <8:ADV/advmod>(Also)\
    \ <9:ADV/advmod>(je) <10:ADJ/advmod>(fr\xFCher) <11:PRON/nsubj>(du) <12:VERB/root>(anf\xE4\
    ngst) <13:CCONJ/cc>(desto) <14:ADJ/conj>(st\xE4rker)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 2
    - conj
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 11
    - advmod
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 18
    - cop
  - !!python/tuple
    - 18
    - 2
    - parataxis
  - !!python/tuple
    - 19
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(glaubt) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(jetzt)
    <5:DET/det>(kein) <6:NOUN/obj>(Mensch) <7:CCONJ/cc>(aber) <8:ADP/case>(nach) <9:NUM/nummod>(zwei)
    <10:NOUN/obl>(Minuten) <11:AUX/conj>(kann) <12:PRON/nsubj>(ich) <13:ADV/advmod>(schon)
    <14:PART/advmod>(nicht) <15:ADV/advmod>(mehr) <16:PRON/nsubj>(Das) <17:AUX/cop>(ist)
    <18:ADV/parataxis>(so) <ROOT> <19:ADJ/root>(anstrengend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 7
    - flat
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <ROOT> <3:DET/det>(viele) <4:NOUN/root>(Fans)
    <5:ADP/case>(wie) <6:DET/det>(die) <7:PROPN/nmod>(Duchess) <8:PROPN/flat>(of)
    <9:PROPN/flat>(Cambridge)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - flat
  sentence: "<1:PRON/nsubj>(niemand) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf)\
    \ <ROOT> <4:PROPN/root>(wie\u2018n) <5:PROPN/flat>(Frajer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - flat
  sentence: "<1:PRON/nsubj>(niemand) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf)\
    \ <ROOT> <4:PROPN/root>(wie\u2018n) <5:PROPN/flat>(Fraj\u0435r)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: "<1:AUX/root>(habe) <2:PRON/nsubj>(ich) <3:ADV/advmod>(gar) <4:PRON/obj>(nichts)\
    \ <5:ADV/advmod>(\xFCbrig) <6:PRON/nsubj>(Es) <7:AUX/parataxis>(ist) <8:ADV/advmod>(wirklich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PRON/nsubj>(was)
    <5:ADV/advmod>(zurzeit) <6:DET/obj>(alles) <7:VERB/root>(rauskommt) <8:ADP/case>(an)
    <9:NOUN/obl>(Spielen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(warum) <2:VERB/root>(tust) <3:PRON/nsubj>(du) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:INTJ/advmod>(h\xF6) <2:NOUN/nsubj>(-h\xF6) <4:VERB/root>(h\xF6r) <5:PRON/obj>(dir)\
    \ <6:PRON/nsubj>(das) <7:ADP/compound:prt>(an) <8:SCONJ/advmod>(wie) <ROOT> <9:PRON/nsubj>(ich)\
    \ <10:NOUN/root>(Rap)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:VERB/root>(h\xF6r) <2:PRON/obj>(dir) <3:PRON/nsubj>(das) <4:ADP/compound:prt>(an)\
    \ <5:SCONJ/advmod>(wie) <ROOT> <6:PRON/nsubj>(ich) <7:NOUN/root>(Rap)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADV/advmod>(ziemlich) <ROOT>\
    \ <4:SCONJ/mark>(weil) <5:PRON/nsubj>(es) <6:ADV/advmod>(so) <7:ADJ/advmod>(pl\xF6\
    tzlich) <8:VERB/root>(passiert) <9:AUX/aux>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADP/root>(Au\xDFer) <ROOT> <2:NOUN/dep>(Gagen) <3:CCONJ/cc>(oder)\
    \ <4:ADJ/advmod>(nackt) <5:VERB/root>(baden)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 5
    - acl
  sentence: <1:ADV/advmod>(Damit) <2:DET/det:poss>(ihr) <3:NOUN/root>(Booty) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(bounct) <6:CCONJ/cc>(und) <7:PRON/nsubj>(sie) <8:DET/det>(die)
    <9:NOUN/obj>(Hemmung) <10:VERB/acl>(verliert)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obj
  - !!python/tuple
    - 10
    - 3
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(warum) <3:VERB/root>(sollte) <4:PRON/nsubj>(man)
    <5:ADV/advmod>(da) <6:DET/det>(das) <7:NOUN/obj>(Gehalt) <8:DET/det>(die) <9:NOUN/obj>(Bezahlung)
    <10:ADV/advmod>(so) <ROOT> <11:ADJ/advmod>(unterschiedlich) <12:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(Dein) <2:NOUN/nsubj>(Style) <3:VERB/root>(erinnert) <4:PRON/obj>(mich)
    <ROOT> <5:ADP/case>(an) <6:ADJ/amod>('ne) <7:NOUN/root>(Schreibblockade)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <5:ADJ/root>(dumm)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 4
    - compound:prt
  sentence: <1:DET/det>(Dieser) <2:NOUN/nsubj>(Teufel) <3:ADV/advmod>(hier) <4:VERB/root>(feiert)
    <5:DET/det:poss>(seinen) <6:NOUN/obj>(Song) <7:DET/det>(ein) <8:ADV/advmod>(bisschen)
    <9:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 13
    - mark
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 13
    - cop
  - !!python/tuple
    - 9
    - 13
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - cc
  - !!python/tuple
    - 15
    - 13
    - conj
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(es)\
    \ <5:ADV/advmod>(schon) <ROOT> <6:SCONJ/mark>(weil) <7:ADJ/advmod>(nat\xFCrlich)\
    \ <8:AUX/cop>(ist) <9:PRON/nsubj>(das) <10:DET/obj>(alles) <11:ADP/case>(als)\
    \ <12:NOUN/obl>(Witz) <13:VERB/root>(gemeint) <14:CCONJ/cc>(Und) <15:ADV/conj>(trotzdem)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:ADV/root>(Wie) <ROOT> <2:NOUN/nsubj>(Alkohol) <3:ADJ/advmod>(einfach)
    <4:VERB/root>(etabliert) <5:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 14
    - mark
  - !!python/tuple
    - 9
    - 14
    - obl:arg
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 7
    - ccomp
  - !!python/tuple
    - 15
    - 7
    - advmod
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(wirklich) <ROOT> <6:PRON/nsubj>(Ich) <7:VERB/root>(wei\xDF) <8:SCONJ/mark>(dass)\
    \ <9:PRON/obl:arg>(mir) <10:PRON/nsubj>(das) <11:DET/advmod>(selber) <12:ADV/advmod>(auch)\
    \ <13:NOUN/obj>(Spa\xDF) <14:VERB/ccomp>(macht) <15:ADV/advmod>(Aber)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - cop
  - !!python/tuple
    - 11
    - 9
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:ADV/advmod>(Also) <3:PRON/nsubj>(ich) <4:VERB/root>(meine)
    <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:ADV/advmod>(mal) <8:ADV/advmod>(ganz)
    <9:ADV/ccomp>(ehrlich) <10:AUX/cop>(ist) <11:AUX/cop>(ist) <12:ADV/advmod>(eigentlich)
    <13:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - xcomp
  - !!python/tuple
    - 10
    - 14
    - mark
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - cop
  - !!python/tuple
    - 16
    - 19
    - cc
  - !!python/tuple
    - 17
    - 19
    - nsubj
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 14
    - conj
  - !!python/tuple
    - 20
    - 19
    - aux
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(so) <3:ADV/advmod>(insgesamt) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(ich) <6:VERB/root>(finde) <7:PRON/nsubj>(ich) <8:ADV/advmod>(einfach)
    <9:ADJ/xcomp>(wahnsinnig) <ROOT> <10:SCONJ/mark>(dass) <11:ADV/advmod>(so) <12:DET/det>(ein)
    <13:NOUN/nsubj>(Angebot) <14:ADJ/root>(umsonst) <15:AUX/cop>(ist) <16:CCONJ/cc>(und)
    <17:PRON/nsubj>(man) <18:ADV/advmod>(einfach) <19:VERB/conj>(hingehen) <20:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nummod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(da) <3:VERB/root>(freue) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(mich) <6:ADV/advmod>(auch) <7:ADV/advmod>(sonst) <8:ADV/advmod>(dr\xFC\
    ber) <9:ADV/advmod>(Schon) <ROOT> <10:ADV/advmod>(trotzdem) <11:NUM/nummod>(vier)\
    \ <12:NOUN/root>(Flaschen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - aux
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - nummod
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 5
    - appos
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 5
    - parataxis
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 20
    - case
  - !!python/tuple
    - 19
    - 20
    - det
  - !!python/tuple
    - 20
    - 17
    - nmod
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(w\xFCrde) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(gerne)\
    \ <5:VERB/root>(schlafen) <6:PRON/nsubj>(Es) <7:AUX/aux>(ist) <8:ADV/advmod>(irgendwie)\
    \ <9:NUM/nummod>(22) <10:NUM/nummod>(00) <11:NOUN/appos>(Uhr) <12:ADV/advmod>(\xC4\
    hm) <13:PRON/nsubj>(Ich) <14:VERB/parataxis>(habe) <15:ADV/advmod>(aber) <16:ADV/advmod>(so)\
    \ <ROOT> <17:NOUN/root>(Stress) <18:ADP/case>(in) <19:DET/det>(dem) <20:NOUN/nmod>(Moment)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 2
    - advcl
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 10
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: <1:X/root>(Oh) <ROOT> <2:VERB/root>(riecht) <3:ADP/case>(auf) <4:DET/det>(jeden)
    <5:NOUN/obl>(Fall) <6:ADV/advmod>(wie) <7:ADV/advmod>(wie) <8:DET/det>(ein) <9:NOUN/nsubj>(Wein)
    <10:VERB/advcl>(schmecken) <11:AUX/aux>(soll) <12:NOUN/nsubj>(Warte) <13:ADV/advmod>(So)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:DET/det>(der) <3:NOUN/nmod>(Singularit\xE4t) <4:AUX/root>(ist)\
    \ <5:DET/det>(diese) <6:NOUN/nsubj>(Verbiegung) <7:ADV/advmod>(so) <ROOT> <8:SCONJ/mark>(dass)\
    \ <9:DET/det>(die) <10:NOUN/nsubj>(Raumzeit) <11:VERB/root>(zerbricht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - det
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(Weil) <2:DET/det>(die) <3:ADV/advmod>(teilweise) <4:PRON/obj>(sich)\
    \ <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(\xFCberschneiden)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(jeder) <3:NOUN/nsubj>(Spieler) <4:AUX/cop>(ist)
    <5:ADV/advmod>(halt) <6:ADJ/root>(super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(um) <2:ADV/root>(da) <ROOT> <3:ADV/advmod>(jetzt) <4:ADV/advmod>(daf\xFC\
    r) <5:PART/mark>(zu) <6:VERB/root>(argumentieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - parataxis
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 18
    - mark
  - !!python/tuple
    - 12
    - 18
    - nsubj
  - !!python/tuple
    - 13
    - 18
    - advmod
  - !!python/tuple
    - 14
    - 18
    - advmod
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 18
    - obj
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(auch)
    <5:DET/det>(ein) <6:NOUN/root>(Punkt) <7:PRON/nsubj>(Ich) <8:VERB/parataxis>(find)
    <9:PRON/obj>(das) <10:ADJ/advmod>(richtig) <ROOT> <11:SCONJ/mark>(dass) <12:PRON/nsubj>(die)
    <13:ADV/advmod>(da) <14:ADV/advmod>(offenbar) <15:ADV/advmod>(so) <16:NOUN/obj>(Tarnmitglieder)
    <17:ADV/advmod>(da) <18:VERB/root>(reinsetzen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 4
    - xcomp
  sentence: "<1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(das) <ROOT>\
    \ <4:VERB/root>(klingt) <5:PRON/nsubj>(es) <6:AUX/aux>(w\xFCrde) <7:DET/det>(das)\
    \ <8:NOUN/obj>(Problem) <9:ADV/advmod>(schnell) <10:VERB/xcomp>(l\xF6sen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 8
    - csubj
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: "<1:PRON/nsubj>(Was) <2:PROPN/obj>(George) <3:ADP/case>(von) <4:DET/det>(den)\
    \ <5:NOUN/obl>(K\xFChltrucks) <6:VERB/csubj>(erz\xE4hlt) <7:AUX/aux>(hat) <8:VERB/root>(fand)\
    \ <9:PRON/nsubj>(ich) <10:ADV/advmod>(mega) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Bilder) <3:ADP/case>(aus) <4:PROPN/nmod>(New)
    <5:PROPN/flat>(York) <6:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <2:X/root>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 16
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 15
    - obj
  - !!python/tuple
    - 8
    - 15
    - nsubj
  - !!python/tuple
    - 9
    - 15
    - advmod
  - !!python/tuple
    - 10
    - 14
    - case
  - !!python/tuple
    - 11
    - 14
    - det:poss
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 5
    - acl
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - nsubj
  - !!python/tuple
    - 18
    - 20
    - case
  - !!python/tuple
    - 19
    - 20
    - det
  - !!python/tuple
    - 20
    - 21
    - nmod
  - !!python/tuple
    - 21
    - 16
    - obj
  - !!python/tuple
    - 22
    - 16
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(erh\xF6ht) <3:ADJ/advmod>(einfach)\
    \ <ROOT> <4:DET/det>(die) <5:NOUN/nsubj>(Suggestibilit\xE4t) <6:ADV/advmod>(Also)\
    \ <7:PRON/obj>(was) <8:PRON/nsubj>(ich) <9:ADV/advmod>(jetzt) <10:ADP/case>(mit)\
    \ <11:DET/det:poss>(meiner) <12:ADV/advmod>(sehr) <13:ADJ/amod>(langen) <14:NOUN/obl>(Einleitung)\
    \ <15:VERB/acl>(mache) <16:VERB/root>(macht) <17:PRON/nsubj>(der) <18:ADP/case>(mit)\
    \ <19:DET/det>(diesem) <21:NOUN/obj>(Fingerschnippen)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 12
    - nmod
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - cop
  - !!python/tuple
    - 12
    - 5
    - parataxis
  - !!python/tuple
    - 13
    - 15
    - mark
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 22
    - advcl
  - !!python/tuple
    - 16
    - 22
    - nsubj
  - !!python/tuple
    - 17
    - 22
    - aux
  - !!python/tuple
    - 18
    - 22
    - advmod
  - !!python/tuple
    - 19
    - 22
    - advmod
  - !!python/tuple
    - 20
    - 21
    - case
  - !!python/tuple
    - 21
    - 22
    - obl
  - !!python/tuple
    - 22
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Ich) <3:VERB/root>(glaub) <4:PRON/nsubj>(ich) <5:VERB/ccomp>(war)\
    \ <6:PART/advmod>(nicht) <7:ADP/case>(in) <8:DET/det>(the) <9:NOUN/nmod>(Zone)\
    \ <10:PRON/nsubj>(Es) <11:AUX/cop>(war) <12:ADJ/parataxis>(voll) <ROOT> <13:SCONJ/mark>(weil)\
    \ <14:PRON/nsubj>(ich) <15:VERB/advcl>(dachte) <16:PRON/nsubj>(ich) <17:AUX/aux>(h\xE4\
    tte) <18:ADV/advmod>(bisher) <19:ADV/advmod>(immer) <20:ADP/case>(von) <21:PRON/obl>(mir)\
    \ <22:VERB/root>(behauptet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - parataxis
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 1
    - csubj
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  sentence: <1:ADJ/parataxis>(Okay) <2:SCONJ/mark>(dass) <3:NOUN/nsubj>(Leute) <4:ADP/case>(auf)
    <5:PRON/obl>(die) <6:ADV/advmod>(drauf) <7:VERB/csubj>(gefahren) <8:AUX/aux>(sind)
    <9:VERB/root>(finde) <10:PRON/nsubj>(ich) <11:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - det
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 1
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(die) <2:ADV/advmod>(selbst) <3:ADP/case>(f\xFCr) <4:DET/det>(die)\
    \ <5:NOUN/root>(Infiltratoren) <6:DET/det>(der) <7:NOUN/nmod>(Spezialkr\xE4fte)\
    \ <8:ADP/compound:prt>(zu) <ROOT> <9:AUX/root>(waren)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 7
    - obl
  - !!python/tuple
    - 14
    - 13
    - nmod
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(es) <3:ADV/advmod>(dort) <4:ADV/advmod>(wirklich)
    <5:VERB/csubj>(zugeht) <6:PRON/nsubj>(Ich) <7:VERB/root>(verspreche) <8:PRON/obj>(Dir)
    <9:PRON/obj>(nichts) <10:ADJ/advmod>(geringeres) <11:ADP/case>(als) <12:DET/det>(ein)
    <13:NOUN/obl>(Wechselbad) <14:PRON/nmod>(der)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Vielleicht) <2:VERB/root>(wurde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(grade)
    <5:ADV/advmod>(aber) <6:ADV/advmod>(auch) <7:ADV/advmod>(nur) <ROOT> <8:VERB/root>(gescammt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - conj
  sentence: <1:ADV/advmod>(Etwa) <2:PROPN/root>(Oxycodon) <3:PROPN/flat>(Morphin)
    <4:CCONJ/cc>(oder) <5:PROPN/conj>(Fentanyl) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - flat
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(wissen) <3:ADV/advmod>(jetzt) <4:ADP/case>(Seit)
    <5:NUM/obl>(2017) <6:VERB/conj>(gehen) <7:DET/det>(die) <8:PROPN/nsubj>(Tilidin)
    <10:NOUN/flat>(Zahlen) <ROOT> <11:ADP/case>(nach) <12:ADV/root>(oben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:AUX/root>(ist) <2:ADV/advmod>(schon) <ROOT> <3:ADV/advmod>(hart) <4:ADJ/root>(schwer)
    <5:AUX/cop>(gewesen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 14
    - cc
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - cop
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 2
    - conj
  sentence: "<1:ADV/advmod>(Da) <2:VERB/root>(gucken) <3:PRON/nsubj>(wir) <4:PRON/obj>(uns)\
    \ <5:ADV/advmod>(gleich) <6:ADV/advmod>(noch) <7:ADV/advmod>(mal) <8:ADP/compound:prt>(um)\
    \ <9:CCONJ/cc>(Aber) <10:PRON/nsubj>(es) <11:AUX/cop>(ist) <12:ADV/advmod>(schon)\
    \ <13:ADV/advmod>(ganz) <14:ADJ/conj>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 10
    - nsubj:pass
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 10
    - xcomp
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/root>(aber) <ROOT> <3:DET/det>(das) <4:ADJ/amod>(gro\xDF\
    e) <5:NOUN/nsubj:pass>(Schiff) <6:ADP/case>(auf) <7:DET/obl>(einen) <8:VERB/xcomp>(zukommen)\
    \ <9:PART/mark>(zu) <10:VERB/root>(sehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:ADV/advmod>(weiterhin) <3:VERB/root>(machst) <4:PRON/nsubj>(du)
    <ROOT> <5:ADP/case>(auf) <6:PROPN/root>(Proll)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(wo) <2:PRON/nsubj>(dich) <3:DET/det:poss>(dein) <4:ADJ/amod>(bester)\
    \ <5:NOUN/root>(Freund) <ROOT> <6:ADJ/root>(entt\xE4uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:VERB/root>(reden) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - dep
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADJ/amod>(Depressive) <2:NOUN/root>(Phase) <3:PRON/dep>(die) <4:PRON/obj>(sich)
    <5:ADV/advmod>(wirklich) <6:ADV/advmod>(so) <ROOT> <7:ADJ/advmod>(lang) <8:VERB/root>(zieht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - flat
  sentence: <1:VERB/root>(Findest) <2:PRON/nsubj>(du) <3:PROPN/obj>(Waving) <4:DET/det>(The)
    <5:PROPN/flat>(Guns) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/root>(selten) <2:ADV/advmod>(so) <ROOT> <3:ADP/case>(mit) <4:DET/det>(dem)
    <5:NOUN/obl>(Kopf) <6:VERB/root>(genickt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:CCONJ/cc>(und)\
    \ <5:ADV/advmod>(heut) <6:ADV/advmod>(noch) <7:NOUN/root>(Tickets) <8:ADP/case>(f\xFC\
    r) <9:PROPN/nmod>(Herford)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - expl
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:AUX/cop>(wird) <3:DET/nsubj>(alles) <4:ADJ/root>(okay)
    <5:SCONJ/mark>(weil) <6:PRON/nsubj>(ich) <ROOT> <7:INTJ/root>(mach)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Hass) <3:ADP/case>(unter) <4:DET/det>(den)\
    \ <5:DET/det>(beiden) <6:NOUN/nmod>(Partei'n) <7:AUX/cop>(ist) <8:ADJ/root>(\xFC\
    bertrieben) <ROOT>"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <2:DET/det>(Dieser) <3:NOUN/nsubj>(Text) <4:AUX/cop>(ist) <5:ADJ/root>(extrem)
    <ROOT> <6:ADJ/root>(behindert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 9
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:DET/det:poss>(meine) <2:NOUN/nsubj>(Flows) <3:AUX/root>(sind) <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/obl>(Rocken) <7:CCONJ/cc>(und) <8:AUX/cop>(sind) <9:ADJ/conj>(end)
    <10:ADP/compound:prt>(zu) <ROOT> <11:X/root>(Ha)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Unterschied) <3:AUX/cop>(ist) <4:ADV/root>(so)
    <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(ihr) <7:VERB/root>(sehen) <8:AUX/aux>(wollt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:PRON/nsubj>(mich) <4:ADJ/advmod>(richtig)
    <ROOT> <5:VERB/root>(aufgemuntert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(Das) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(auch) <4:PRON/obj>(etwas)
    <5:ADV/advmod>(wovor) <6:PRON/nsubj>(ich) <7:ADV/advmod>(richtig) <8:ADJ/xcomp>(richtig)
    <ROOT> <9:NOUN/root>(Angst) <10:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:ADP/case>(f\xFC\
    r) <5:PRON/root>(sie)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: "<1:ADV/advmod>(Doch) <2:ADP/case>(bei) <3:DET/det>(der) <4:NOUN/obl>(Wahl)\
    \ <5:ADP/case>(in) <6:PROPN/nmod>(Berlin) <7:AUX/root>(waren) <8:DET/det>(die)\
    \ <9:NOUN/nsubj>(Missst\xE4nde) <10:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(das) <3:ADP/case>(f\xFCr) <4:DET/det>(die)\
    \ <5:NOUN/nmod>(Spieler) <6:ADV/advmod>(innen) <7:AUX/root>(sein) <8:AUX/aux>(muss)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  sentence: <1:AUX/root>(war) <2:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Der) <2:ADJ/amod>(erste) <3:NOUN/root>(Sportunterricht) <4:ADV/advmod>(gleich)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Hilfe) <3:VERB/root>(braucht) <4:ADV/advmod>(Ja)
    <5:ADV/advmod>(guck) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  - !!python/tuple
    - 11
    - 6
    - cc
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/nsubj>(Ich) <6:VERB/root>(guck) <7:PRON/obl:arg>(mir) <8:PRON/obj>(das)
    <9:DET/obj>(alles) <10:ADP/compound:prt>(an) <11:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 6
    - compound:prt
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - compound:prt
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(gehen) <3:ADP/case>(ab) <4:ADP/case>(auf)
    <5:NOUN/obl>(heftich) <6:VERB/xcomp>(gehen) <7:ADP/compound:prt>(ab) <8:ADP/compound:prt>(auf)
    <ROOT> <10:ADV/advmod>(jetzt) <11:VERB/root>(geht's) <12:ADV/compound:prt>(los)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 6
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/cop>(bist) <4:ADJ/root>(einfach)\
    \ <ROOT> <5:ADV/advmod>(zu) <6:ADJ/root>(billig) <7:NOUN/nsubj>(baby) <8:PRON/nsubj>(das)\
    \ <9:AUX/cop>(ist) <10:PRON/nsubj>(nichts) <11:ADP/case>(f\xFCr) <12:PRON/nmod>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(wollte) <3:ADV/advmod>(da) <4:AUX/root>(sein)
    <6:ADV/advmod>(leider) <7:VERB/parataxis>(lief) <8:PRON/nsubj>(es) <ROOT> <9:ADV/root>(anders)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: "<1:SCONJ/mark>(Da) <2:ADV/advmod>(drau\xDFen) <3:VERB/root>(bist) <4:PRON/nsubj>(du)\
    \ <5:PART/advmod>(nicht) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <ROOT> <3:ADV/advmod>(darauf)
    <4:VERB/root>(steh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 5
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Also) <4:PRON/nsubj>(wir)
    <5:VERB/root>(haben) <6:NOUN/compound>(70er) <8:NOUN/obj>(Kids)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: <1:ADV/advmod>(Nee) <2:ADV/advmod>(so) <3:ADJ/root>(richtig) <ROOT> <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Sinn) <7:ADP/case>(von) <8:PRON/nmod>(Das) <9:VERB/root>(interessiert)
    <10:PRON/obj>(mich) <11:PART/advmod>(nicht) <12:ADV/advmod>(mehr)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - nmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(glaub) <3:PRON/nsubj>(wir) <4:AUX/cop>(sind)
    <5:ADV/advmod>(doch) <6:NOUN/parataxis>(Leute) <7:PRON/nmod>(die) <8:PRON/nsubj>(sich)
    <9:ADP/case>(mit) <10:DET/det>(der) <11:NOUN/nmod>(Materie) <ROOT> <12:VERB/root>(befassen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(einfach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  sentence: "<1:ADV/root>(so) <ROOT> <2:VERB/root>(w\xE4chst) <3:DET/det>(der) <4:NOUN/nsubj>(Markt)\
    \ <5:ADV/advmod>(ja) <6:ADV/advmod>(jetzt) <7:ADV/advmod>(auch) <8:PART/advmod>(nicht)\
    \ <9:ADV/advmod>(mehr)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - aux
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 12
    - advmod
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - aux:pass
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nsubj:pass
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(du) <3:VERB/root>(sagst) <4:PRON/nsubj>(das)
    <5:AUX/aux>(ist) <6:ADV/advmod>(so) <ROOT> <7:ADV/advmod>(lang) <8:ADV/advmod>(da)
    <9:AUX/aux:pass>(ist) <10:ADV/advmod>(so) <11:DET/nsubj:pass>(viel) <12:VERB/root>(versteckt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - mark
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:INTJ/advmod>(Oh) <2:PRON/nsubj>(du) <3:INTJ/advmod>(ey) <4:PRON/nsubj>(ich)\
    \ <5:VERB/root>(wei\xDF) <6:ADV/advmod>(gar) <7:PART/advmod>(nicht) <8:SCONJ/mark>(wie)\
    \ <ROOT> <9:PRON/obj>(sich) <10:PRON/nsubj>(das) <11:VERB/root>(auswirkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(dieses) <2:NOUN/nsubj>(Gamepad) <3:ADV/advmod>(so) <4:ADJ/root>(unfassbar)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 11
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:DET/root>(einen) <ROOT> <3:ADJ/advmod>(abh\xE4\
    ngig) <4:ADP/case>(von) <5:DET/det>(der) <6:NOUN/nmod>(Laune) <7:DET/det>(des)\
    \ <8:PROPN/amod>(/der) <9:NOUN/nmod>(Partner) <10:ADP/compound:prt>(in) <11:VERB/root>(macht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(war) <3:ADP/case>(mit) <4:DET/det:poss>(meinem)
    <5:NOUN/obl>(Exfreund) <6:ADP/case>(in) <7:DET/det>(den) <8:PROPN/nmod>(USA) <9:ADV/advmod>(auch)
    <10:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 5
    - cop
  sentence: <1:ADP/case>(in) <2:DET/det>(diesem) <3:NOUN/root>(Kontext) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/root>(wertend) <6:CCONJ/cc>(und) <7:ADV/advmod>(auch) <8:ADJ/conj>(supersubjektiv)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: "<1:ADP/case>(In) <2:DET/det>(den) <3:DET/det>(meisten) <4:NOUN/obl>(Krisen)\
    \ <5:VERB/root>(f\xFChrt) <6:DET/nsubj>(dieses) <ROOT> <7:ADJ/amod>(wertende)\
    \ <8:NOUN/root>(Label) <9:ADV/advmod>(dazu)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Unser) <2:NOUN/nsubj>(Leben) <3:VERB/root>(hat) <4:PRON/obj>(sich)
    <5:ADV/advmod>(so) <ROOT> <6:ADJ/root>(verbunden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Andreas) <2:VERB/root>(hat) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(zumindest)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:DET/det>(den) <7:NOUN/dep>(Spiegel) <8:VERB/root>(vorgehalten)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - xcomp
  sentence: <1:ADP/case>(Auf) <2:DET/det>(der) <3:DET/det>(anderen) <4:NOUN/obl>(Seite)
    <5:VERB/root>(denkt) <6:PRON/nsubj>(man) <7:PRON/nsubj>(sich) <8:ADJ/xcomp>(okay)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Boah) <2:PRON/nsubj>(du) <3:AUX/cop>(bist) <4:ADV/advmod>(aber)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT> <7:ADJ/root>(verkabelt)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<2:PROPN/nsubj>(Chris) <4:PRON/nsubj>(Das) <5:VERB/root>(sieht) <6:ADV/advmod>(bestimmt)\
    \ <7:ADJ/advmod>(voll) <ROOT> <8:ADP/case>(aus) <9:ADP/case>(f\xFCr) <10:PRON/root>(euch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:PROPN/root>(Hey) <ROOT> <2:PRON/nsubj>(das) <3:VERB/root>(kennen) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(gar) <6:PART/advmod>(nicht) <7:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ganz) <2:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/root>(du) <2:CCONJ/cc>(und) <ROOT> <3:PRON/nsubj>(Ich) <4:AUX/aux>(hab)
    <5:PRON/obj>(nichts) <6:VERB/root>(mitbekomm'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:AUX/root>(seid) <3:ADV/advmod>(so) <ROOT> <4:NOUN/root>(Blamage)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(bass) <3:VERB/root>(kommt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tust) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(jetzt) <3:VERB/root>(wird) <4:PRON/nsubj>(es)
    <ROOT> <5:ADJ/root>(spannend)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: "<1:ADJ/root>(\xDCberwach) <2:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(wird) <3:PRON/nsubj>(es) <ROOT> <4:ADJ/root>(spannend)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: "<1:ADJ/root>(\xDCberwach) <2:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Mixtape) <3:AUX/cop>(ist) <4:ADP/root>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:DET/det>(den) <7:NOUN/root>(Markt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(muss) <3:ADV/advmod>(schon) <ROOT> <4:DET/det:poss>(sein)
    <5:ADV/advmod>(so) <6:PART/mark>(zu) <7:AUX/root>(sein) <8:ADP/case>(wie) <9:PRON/obl>(Du)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - xcomp
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Bass) <3:VERB/root>(kommt) <ROOT> <4:NOUN/nsubj>(Nutte)
    <5:VERB/root>(mach) <6:DET/det>(die) <7:NOUN/nsubj>(Beine) <8:ADJ/xcomp>(breit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 3
    - obl
  sentence: <1:ADV/root>(Ja) <ROOT> <2:ADV/advmod>(endlich) <3:VERB/root>(habe) <4:PRON/nsubj>(ich)
    <5:DET/obj>(die) <6:ADV/advmod>(auch) <7:ADV/advmod>(mal) <8:ADP/case>(in) <9:DET/det>(der)
    <10:NOUN/obl>(Hand)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(wenn's) <ROOT> <2:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:ADP/case>(f\xFCr) <2:DET/det>(den) <3:ADJ/amod>(ersten) <4:NOUN/obl>(Tag)\
    \ <6:VERB/root>(find) <7:PRON/nsubj>(ich) <8:ADV/advmod>(schon) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ihr) <2:AUX/root>(seid) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/root>(verr\xFCckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 5
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mache) <ROOT> <3:NOUN/root>(Asche) <4:CCONJ/cc>(und)
    <5:VERB/conj>(hab) <6:PROPN/obj>(Chains)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(tritt) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(auf)
    <5:DET/det>(das) <6:NOUN/root>(Gas)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(er) <2:VERB/root>(pumpt) <3:ADV/advmod>(so) <ROOT> <4:DET/det>(den)
    <5:NOUN/root>(Bass)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <3:ADV/advmod>(so) <4:ADJ/compound>(okay)
    <6:NOUN/obj>(Okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(irgendwie) <3:VERB/root>(besch\xE4\
    ftigt) <4:PRON/obj>(mich) <5:PRON/nsubj>(das) <6:ADV/advmod>(immer) <7:ADV/advmod>(noch)\
    \ <8:ADJ/advmod>(total) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:ADJ/root>(verzweifelt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <ROOT> <5:SCONJ/root>(weil) <6:DET/det>(diese) <7:NOUN/dep>(Blase)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux:pass
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: "<1:PRON/nsubj>(was) <2:ADV/advmod>(dagegen) <3:VERB/root>(sprechen) <4:AUX/aux>(k\xF6\
    nnte) <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(abgeschnitten) <7:AUX/aux:pass>(werden)\
    \ <8:AUX/aux>(muss)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sehe) <3:PRON/nsubj>(ich) <4:ADV/advmod>(mittlerweile)
    <5:ADJ/advmod>(einfach) <ROOT> <6:ADP/case>(als) <7:PROPN/root>(Brainwash)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(Was) <3:AUX/aux>(ist) <4:ADV/advmod>(dann)
    <5:VERB/root>(passiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(gut) <4:ADP/case>(in)
    <5:PROPN/nmod>(Shape)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - aux
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: <1:ADP/case>(An) <2:DET/det>(dem) <3:NOUN/obl>(Anfang) <4:AUX/aux>(hab)
    <5:PRON/nsubj>(ich) <6:VERB/root>(gedacht) <7:PRON/nsubj>(das) <8:AUX/aux>(ist)
    <ROOT> <9:ADV/root>(hier) <10:ADP/case>(in) <11:PROPN/nmod>(Niederbayern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(deprimiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: "<1:ADP/case>(Ohne) <2:PROPN/obl>(MDMA) <3:AUX/root>(w\xE4re) <4:PRON/nsubj>(es)\
    \ <ROOT> <5:ADJ/root>(langweilig) <6:ADV/advmod>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - xcomp
  sentence: <1:PROPN/root>(Wow) <ROOT> <2:PRON/expl>(Es) <3:VERB/root>(brennt) <4:PRON/expl>(es)
    <5:VERB/ccomp>(brennt) <6:PRON/nsubj>(es) <7:VERB/xcomp>(brennt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:PRON/nsubj>(ich) <4:ADV/advmod>(vorher)
    <6:ADV/advmod>(Ja) <ROOT> <7:PRON/nsubj>(man) <8:VERB/root>(sieht) <9:PRON/obj>(es)
    <10:ADJ/advmod>(total)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - xcomp
  sentence: "<1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(das) <3:VERB/root>(sieht) <4:ADV/advmod>(heftig)\
    \ <5:ADP/compound:prt>(aus) <7:ADV/advmod>(Ziemlich) <8:ADJ/xcomp>(z\xE4h)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - obl
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - nummod
  - !!python/tuple
    - 14
    - 8
    - obl
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 8
    - advmod
  - !!python/tuple
    - 17
    - 8
    - cc
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <3:DET/advmod>(selber) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(total) <ROOT> <6:CCONJ/cc>(Denn) <7:PRON/nsubj>(ich) <8:VERB/root>(komme)
    <9:ADV/advmod>(gerade) <10:ADP/case>(aus) <11:PROPN/obl>(NRW) <12:DET/det>(Keine)
    <13:NUM/nummod>(zehn) <14:NOUN/obl>(Kilometer) <15:ADP/case>(von) <16:ADV/advmod>(hier)
    <17:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 15
    - cc
  - !!python/tuple
    - 11
    - 15
    - obj
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 9
    - conj
  sentence: <1:VERB/root>(dachte) <2:PRON/nsubj>(ich) <3:ADV/advmod>(auch) <4:ADV/advmod>(so)
    <5:ADV/advmod>(boah) <ROOT> <6:ADV/advmod>(wie) <7:ADV/advmod>(schnell) <8:PRON/nsubj>(das)
    <9:VERB/root>(geht) <10:CCONJ/cc>(und) <11:PRON/obj>(was) <12:PRON/nsubj>(das)
    <13:ADP/case>(mit) <14:DET/obl>(einem) <15:VERB/conj>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - cop
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 3
    - conj
  - !!python/tuple
    - 12
    - 11
    - compound:prt
  - !!python/tuple
    - 13
    - 18
    - mark
  - !!python/tuple
    - 14
    - 18
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 18
    - obl
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:ADJ/amod>(zweite) <2:NOUN/nsubj>(Impfung) <3:VERB/root>(wartet) <5:PRON/nsubj>(das)
    <6:AUX/cop>(ist) <7:PRON/nsubj>(ihr) <8:ADV/advmod>(dann) <9:ADV/advmod>(doch)
    <10:DET/det>(ne) <11:NOUN/conj>(Nummer) <12:ADP/compound:prt>(zu) <ROOT> <13:SCONJ/mark>(Bevor)
    <14:PRON/nsubj>(wir) <15:ADP/case>(in) <16:DET/det>(das) <17:NOUN/obl>(Taxi) <18:VERB/root>(steigen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 16
    - mark
  - !!python/tuple
    - 11
    - 8
    - nsubj
  - !!python/tuple
    - 12
    - 16
    - nsubj
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - cop
  - !!python/tuple
    - 16
    - 8
    - ccomp
  sentence: <1:PRON/nsubj>(du) <2:DET/det>(die) <3:NOUN/obj>(Maske) <4:VERB/root>(abnehmen)
    <5:X/punct>(Ah) <ROOT> <6:SCONJ/mark>(Weil) <7:ADV/advmod>(dann) <8:VERB/root>(wissen)
    <9:PRON/nsubj>(wir) <10:SCONJ/mark>(dass) <11:DET/nsubj>(alle) <12:PRON/nsubj>(die)
    <13:ADV/advmod>(da) <14:ADV/advmod>(drin) <15:AUX/cop>(sind) <16:ADJ/ccomp>(negativ)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 18
    - advmod
  - !!python/tuple
    - 15
    - 18
    - nsubj
  - !!python/tuple
    - 16
    - 18
    - cop
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 10
    - parataxis
  - !!python/tuple
    - 19
    - 18
    - cc
  sentence: "<1:NOUN/root>(Alter) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(so)\
    \ <ROOT> <5:PRON/nsubj>(ich) <6:AUX/aux>(kann) <7:PRON/obj>(das) <8:ADV/advmod>(gar)\
    \ <9:PART/advmod>(nicht) <10:VERB/root>(glauben) <11:PRON/nsubj>(Ich) <12:ADV/advmod>(auch)\
    \ <13:PART/advmod>(nicht) <14:ADV/advmod>(Ey) <15:PRON/nsubj>(das) <16:AUX/cop>(ist)\
    \ <17:ADV/advmod>(so) <18:ADJ/parataxis>(verr\xFCckt) <19:CCONJ/cc>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cop
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 13
    - 11
    - advmod
  sentence: "<1:AUX/cop>(ist) <2:PRON/nsubj>(das) <3:ADV/advmod>(auch) <4:ADV/advmod>(fast)\
    \ <5:ADV/advmod>(schon) <6:DET/det>(die) <7:ADJ/amod>(einzige) <8:NOUN/root>(\xC4\
    nderung) <9:ADP/case>(zu) <10:ADP/case>(vor) <11:PROPN/nmod>(Corona) <13:ADV/advmod>(schon)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 2
    - conj
  - !!python/tuple
    - 13
    - 12
    - obj
  - !!python/tuple
    - 14
    - 12
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(gehe) <3:ADP/case>(in) <4:DET/det>(solche)\
    \ <5:NOUN/obl>(L\xE4den) <6:ADV/advmod>(eigentlich) <7:PART/advmod>(nicht) <8:NOUN/obj>(Feiern)\
    \ <9:CCONJ/cc>(Aber) <10:PRON/nsubj>(das) <11:ADV/advmod>(hier) <12:VERB/conj>(flasht)\
    \ <13:PRON/obj>(mich) <14:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - conj
  sentence: "<1:PART/mark>(zu) <2:VERB/root>(gehen) <3:AUX/aux>(War) <ROOT> <4:PRON/nsubj>(Es)\
    \ <5:AUX/cop>(war) <6:ADJ/root>(sch\xF6n) <7:PRON/nsubj>(Man) <8:AUX/cop>(war)\
    \ <9:ADV/advmod>(richtig) <10:ADV/advmod>(gl\xFCcklich) <11:ADV/advmod>(Richtig)\
    \ <12:ADJ/conj>(toll)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - obl
  - !!python/tuple
    - 10
    - 4
    - compound:prt
  - !!python/tuple
    - 11
    - 15
    - case
  - !!python/tuple
    - 12
    - 15
    - mark
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 4
    - advcl
  - !!python/tuple
    - 16
    - 15
    - aux
  sentence: "<1:ADV/root>(So) <ROOT> <2:ADP/case>(Auf) <3:ADV/advmod>(einmal) <4:VERB/root>(steht)\
    \ <5:PRON/nsubj>(man) <6:ADV/advmod>(wieder) <7:ADP/case>(mit) <8:DET/det>(allen)\
    \ <9:NOUN/obl>(Leuten) <10:ADV/compound:prt>(zusammen) <11:ADP/case>(als) <12:SCONJ/mark>(wenn)\
    \ <13:ADV/advmod>(nie) <14:PRON/nsubj>(was) <15:VERB/advcl>(passiert) <16:AUX/aux>(w\xE4\
    re)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:PRON/obj>(ihn) <4:ADV/advmod>(halt)
    <5:PART/advmod>(nicht) <6:VERB/root>(vermisst) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(vermisst)
    <9:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 14
    - mark
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 10
    - obj
  sentence: "<1:ADV/advmod>(Manchmal) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:NOUN/obj>(s)\
    \ <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:ADV/advmod>(so) <8:DET/obj>(viel)\
    \ <9:ADV/advmod>(daf\xFCr) <10:VERB/root>(gek\xE4mpft) <11:AUX/aux>(habe) <12:SCONJ/mark>(dass)\
    \ <13:DET/det>(dieser) <14:NOUN/obj>(Zustand)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:DET/det:poss>(Deine) <3:NOUN/nsubj>(Musik) <4:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - mark
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(sag) <3:ADV/advmod>(mal) <4:ADP/mark>(wie)
    <ROOT> <5:DET/det:poss>(meine) <6:NOUN/obj>(Tage) <7:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(dich) <2:ADV/advmod>(so) <ROOT> <3:PART/mark>(zu) <4:VERB/root>(inszenieren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <3:PRON/obj>(dir) <ROOT> <4:VERB/root>(vertraut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:ADP/case>(auf) <2:NOUN/root>(Anabolika)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - aux:pass
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Da) <2:AUX/aux:pass>(wird) <3:VERB/root>(geschlossen) <4:CCONJ/cc>(und)
    <5:ADV/conj>(hier) <6:ADV/advmod>(offensichtlich) <7:PART/advmod>(nicht) <8:ADV/advmod>(Schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(sag) <ROOT> <3:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:SCONJ/mark>(wie) <3:PRON/nsubj>(wir) <4:VERB/root>(kling)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - expl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 7
    - obl
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/root>(was) <3:ADV/advmod>(auch) <ROOT> <4:ADV/advmod>(dabei)\
    \ <5:AUX/aux>(ist) <6:PRON/expl>(Ihr) <7:VERB/root>(k\xF6nnt) <8:DET/det>(das)\
    \ <9:DET/nsubj>(alles) <10:ADV/advmod>(eigentlich) <11:ADP/case>(in) <12:DET/det>(jedem)\
    \ <13:NOUN/obl>(Zeichenprogramm)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/expl>(Ihr) <2:VERB/root>(seid) <3:DET/obj>(alle) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/root>(Stra\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/advmod>(doch) <2:PRON/nsubj>(du) <3:AUX/root>(bist) <4:PART/advmod>(nicht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  sentence: "<1:DET/det>(diese) <2:NOUN/nsubj>(S\xE4tze) <3:AUX/root>(sind) <4:ADP/case>(zu)\
    \ <5:ADV/advmod>(fast) <6:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/root>(wird) <ROOT> <3:VERB/root>(verarscht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: "<1:NOUN/root>(Tut) <2:SCONJ/mark>(als) <3:VERB/appos>(w\xE4r) <4:PRON/nsubj>(er)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: "<1:DET/nsubj>(Alles) <2:VERB/root>(\xE4ndert) <3:PRON/obj>(sich) <4:ADV/advmod>(so)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <ROOT> <3:AUX/root>(bin) <5:X/dep>(yeah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 13
    - 11
    - appos
  sentence: <1:NUM/nummod>(10) <2:NOUN/nsubj>(Prozent) <3:AUX/root>(sind) <4:PRON/obl:arg>(mir)
    <5:ADP/compound:prt>(zu) <ROOT> <6:CCONJ/cc>(und) <7:PRON/nsubj>(ich) <8:AUX/cop>(bin)
    <9:ADV/advmod>(direkt) <10:ADV/advmod>(wieder) <11:ADJ/root>(neidisch) <13:NOUN/appos>(Mmm)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: <1:NOUN/root>(Bleibe) <ROOT> <2:CCONJ/cc>(und) <3:VERB/root>(nutz) <4:DET/det>(die)
    <5:NOUN/obj>(Macht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(klingt) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:ADV/root>(Schon) <ROOT> <2:DET/det>(dieser) <3:NOUN/root>(Vulkanausbruch)
    <4:ADP/case>(auf) <5:PROPN/nmod>(La) <6:PROPN/nmod>(Palma)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADP/case>(wie)
    <5:ADV/advmod>(so) <6:DET/det>(eine) <7:NOUN/root>(Halle) <8:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(k\xFCssen) <2:CCONJ/cc>(und) <3:PRON/obj>(sich) <ROOT>\
    \ <4:VERB/root>(genieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nmod
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(An) <2:DET/det>(dem) <3:NOUN/nmod>(Anfang) <4:AUX/cop>(ist)
    <5:DET/det>(das) <6:NOUN/nsubj>(Verliebtein) <7:ADJ/root>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(sind) <ROOT> <3:DET/det>(viele) <4:NOUN/root>(Leute)\
    \ <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/nmod>(Einsatz) <8:ADP/case>(f\xFC\
    r) <9:DET/det>(einen) <10:NOUN/nmod>(Videodreh)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(dachte) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(so) <6:ADJ/advmod>(okay) <ROOT> <7:ADJ/amod>(schwarze) <8:NOUN/nsubj>(Frau)
    <9:ADJ/root>(jung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(manchmal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 3
    - cop
  sentence: "<1:PRON/nsubj>(wir) <2:AUX/root>(k\xF6nnen) <ROOT> <3:ADV/root>(stolz)\
    \ <4:ADP/case>(auf) <5:PRON/nmod>(uns) <6:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(alter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(riecht) <3:ADJ/advmod>(richtig) <ROOT>
    <4:ADP/case>(nach) <5:NOUN/root>(Zwiebeln)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 9
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: "<1:ADV/advmod>(Ja) <2:ADJ/root>(Richtig) <ROOT> <3:NUM/nummod>(Zweieinhalb)\
    \ <4:NOUN/obl>(Jahre) <5:ADP/case>(auf) <6:NOUN/nmod>(Bew\xE4hrung) <7:AUX/aux>(haben)\
    \ <8:PRON/nsubj>(die) <9:VERB/root>(bekommen) <10:ADV/advmod>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(Finde) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(w\xFCrde) <3:ADV/advmod>(gerne) <4:ADV/advmod>(so)\
    \ <ROOT> <5:VERB/root>(teilen) <6:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 8
    - advmod
  - !!python/tuple
    - 13
    - 8
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 8
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:PRON/root>(das)\
    \ <5:PRON/nsubj>(was) <6:ADV/advmod>(drau\xDFen) <7:ADV/appos>(so) <ROOT> <8:VERB/root>(passiert)\
    \ <9:PRON/nsubj>(es) <10:ADV/advmod>(ja) <11:ADV/advmod>(auch) <12:PART/advmod>(nicht)\
    \ <13:ADV/advmod>(aber) <14:ADV/advmod>(schon) <15:ADV/advmod>(eher)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Boah) <2:ADV/advmod>(so) <3:NOUN/nsubj>(St\xFCrme) <4:AUX/cop>(sind)\
    \ <5:ADJ/root>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 2
    - advmod
  - !!python/tuple
    - 12
    - 2
    - compound:prt
  - !!python/tuple
    - 13
    - 2
    - advmod
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:ADV/advmod>(Deswegen) <2:VERB/root>(verwandelten) <3:DET/det>(die)
    <4:PRON/obj>(sich) <5:ADV/advmod>(dann) <6:ADV/advmod>(auch) <7:ADP/case>(nach)
    <8:DET/det>(der) <9:PROPN/obl>(Order) <10:PROPN/appos>(66) <11:ADV/advmod>(noch)
    <12:ADV/compound:prt>(weiter) <13:ADV/advmod>(so) <ROOT> <14:ADP/case>(in) <15:ADV/root>(quasi)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 18
    - mark
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 18
    - obj
  - !!python/tuple
    - 13
    - 18
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 18
    - obl:arg
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 8
    - ccomp
  - !!python/tuple
    - 19
    - 18
    - aux
  - !!python/tuple
    - 20
    - 18
    - aux
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:PRON/obj>(was)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(da) <7:DET/obj>(alles) <8:VERB/root>(getan)
    <9:AUX/aux>(hat) <10:SCONJ/mark>(wie) <11:DET/det>(viel) <12:NOUN/obj>(Stress)
    <13:PRON/nsubj>(das) <14:ADV/advmod>(eigentlich) <15:ADV/advmod>(unterbewusst)
    <16:PRON/obl:arg>(mir) <17:ADV/advmod>(auch) <18:VERB/ccomp>(verursacht) <19:AUX/aux>(haben)
    <20:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 18
    - mark
  - !!python/tuple
    - 12
    - 18
    - nsubj
  - !!python/tuple
    - 13
    - 18
    - obj
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 18
    - obl
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 18
    - aux
  sentence: <1:CCONJ/cc>(und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:PRON/obj>(das)
    <5:ADV/advmod>(jetzt) <6:VERB/root>(sage) <7:AUX/aux>(ist) <8:PRON/nsubj>(es)
    <9:ADV/advmod>(auch) <10:ADV/advmod>(so) <ROOT> <11:SCONJ/mark>(weil) <12:PRON/nsubj>(man)
    <13:PRON/obj>(das) <14:ADP/case>(in) <15:DET/det>(dem) <16:NOUN/obl>(Moment) <17:PART/advmod>(nicht)
    <18:VERB/root>(bemerkt) <19:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 18
    - mark
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 18
    - obj
  - !!python/tuple
    - 13
    - 18
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 18
    - obl:arg
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 8
    - ccomp
  - !!python/tuple
    - 19
    - 18
    - aux
  - !!python/tuple
    - 20
    - 18
    - aux
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:PRON/obj>(was)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(da) <7:DET/obj>(alles) <8:VERB/root>(getan)
    <9:AUX/aux>(hat) <10:SCONJ/mark>(wie) <11:DET/det>(viel) <12:NOUN/obj>(Stress)
    <13:PRON/nsubj>(das) <14:ADV/advmod>(eigentlich) <15:ADV/advmod>(unterbewusst)
    <16:PRON/obl:arg>(mir) <17:ADV/advmod>(auch) <18:VERB/ccomp>(verursacht) <19:AUX/aux>(haben)
    <20:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 15
    - cc
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - mark
  - !!python/tuple
    - 15
    - 9
    - conj
  - !!python/tuple
    - 16
    - 20
    - nsubj
  - !!python/tuple
    - 17
    - 20
    - cop
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 20
    - advmod
  - !!python/tuple
    - 20
    - 9
    - conj
  sentence: <1:ADV/advmod>(So) <2:X/advmod>(Oh) <3:ADV/advmod>(ja) <4:PRON/nsubj>(es)
    <5:AUX/cop>(ist) <6:ADV/advmod>(weg) <7:ADV/advmod>(also) <8:ADV/advmod>(so) <9:NOUN/root>(Erleichterung)
    <10:CCONJ/cc>(und) <11:PRON/nsubj>(das) <12:ADV/advmod>(auch) <13:ADV/advmod>(so)
    <14:PART/mark>(zu) <15:VERB/conj>(sehen) <16:PRON/nsubj>(es) <17:AUX/cop>(ist)
    <18:ADV/advmod>(einfach) <19:ADV/advmod>(ja) <20:ADJ/conj>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - amod
  sentence: "<1:ADV/advmod>(Also) <2:DET/det>(das) <3:NOUN/root>(Wort) <ROOT> <4:VERB/root>(beschreibt)\
    \ <5:PRON/nsubj>(das) <6:ADJ/advmod>(tats\xE4chlich) <7:ADP/case>(an) <8:DET/det>(dem)\
    \ <9:ADJ/amod>(besten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 13
    - mark
  - !!python/tuple
    - 3
    - 13
    - nsubj
  - !!python/tuple
    - 4
    - 13
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 13
    - obj
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 13
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 1
    - advcl
  - !!python/tuple
    - 14
    - 13
    - aux
  sentence: "<ROOT> <1:AUX/root>(ist) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(ich) <4:ADJ/advmod>(fr\xFC\
    her) <5:DET/det>(dieses) <6:NOUN/obj>(Wort) <7:ADV/advmod>(niemals) <8:ADP/case>(in)\
    \ <9:NOUN/obl>(Verbindung) <10:ADP/case>(mit) <11:DET/det:poss>(meinen) <12:NOUN/nmod>(Beinen)\
    \ <13:VERB/advcl>(gesehen) <14:AUX/aux>(h\xE4tte)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(die) <2:ADP/advmod>(auf) <ROOT> <3:VERB/root>(machen) <4:AUX/aux>(wollen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  sentence: <1:ADJ/root>(fresh) <2:CCONJ/cc>(und) <3:VERB/conj>(bleibe) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(wir) <3:PRON/obj>(sie) <ROOT> <4:VERB/root>(verarschten)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(Beat) <4:AUX/root>(ist)
    <5:ADV/advmod>(wieder) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Doch) <2:PRON/nsubj>(du) <3:VERB/root>(warst) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:ADP/case>(auf) <6:PROPN/root>(Wei\xDFem)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/root>(Bitch) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(in)
    <5:DET/det>(den) <6:PROPN/obl>(G) <7:VERB/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advcl
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(auftaucht) <3:CCONJ/cc>(und) <4:PRON/obj>(sich)
    <ROOT> <5:VERB/root>(aufstaut) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(ich) <8:ADV/advmod>(nachts)
    <9:VERB/advcl>(aufrauch)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 5
    - compound:prt
  sentence: "<1:PRON/nsubj>(was) <3:PRON/nsubj>(Das) <4:ADV/advmod>(hier) <5:AUX/root>(ist)\
    \ <6:ADP/case>(f\xFCr) <7:PROPN/obl>(YouTube) <8:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:ADV/advmod>(hier) <3:AUX/root>(ist) <4:ADP/case>(f\xFC\
    r) <5:PROPN/obl>(YouTube) <6:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - compound:prt
  sentence: "<1:SCONJ/mark>(wie) <2:PRON/obj>(sich) <3:DET/det>(eine) <4:NOUN/nsubj>(NAFLD)\
    \ <5:VERB/root>(ver\xE4ndern) <6:AUX/aux>(wird) <7:CCONJ/cc>(Und) <8:PRON/nsubj>(das)\
    \ <9:VERB/conj>(finde) <10:PRON/nsubj>(ich) <11:ADV/advmod>(mega) <ROOT> <12:PRON/nsubj>(Wir)\
    \ <13:VERB/root>(leben) <14:ADP/compound:prt>(in)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 8
    - cc
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(mega) <ROOT> <4:PRON/nsubj>(Ich)\
    \ <5:AUX/root>(bin) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/obl>(B\xFCro) <9:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(irgendwie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(wird) <3:ADV/advmod>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nmod
  - !!python/tuple
    - 2
    - 7
    - obl
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux:pass
  sentence: <1:NOUN/nmod>(Ende) <2:NUM/obl>(2022) <3:AUX/aux>(haben) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(auch) <6:PART/advmod>(nicht) <7:VERB/root>(gedacht) <8:SCONJ/mark>(wie)
    <ROOT> <9:NUM/root>(2023) <10:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(hypen) <3:PRON/nsubj>(die) <4:DET/det:poss>(ihre)
    <5:ADJ/amod>(eigene) <6:NOUN/obj>(Kultur) <7:ADV/advmod>(auch) <8:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(das) <3:AUX/aux>(hab) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(noch) <6:ADV/advmod>(gar) <7:PART/advmod>(nicht) <8:VERB/root>(gesehen)
    <9:X/punct>(wow)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/nsubj>(Alle) <2:VERB/root>(nennen) <3:PRON/obj>(ihn) <4:ADV/advmod>(nur)
    <5:PROPN/xcomp>(Hugo) <ROOT> <7:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - conj
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(wurde) <3:DET/det>(keine) <4:NOUN/nsubj>(Bev\xF6\
    lkerungsgruppe) <ROOT> <5:VERB/root>(unterdr\xFCckt) <6:CCONJ/cc>(oder) <7:ADJ/advmod>(politisch)\
    \ <8:VERB/conj>(verfolgt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: "<1:VERB/root>(leben) <2:PRON/nsubj>(wir) <3:ADP/case>(in) <4:DET/det>(einer)\
    \ <5:NOUN/obl>(Industriegesellschaft) <6:PRON/obj>(die) <ROOT> <7:ADJ/root>(abh\xE4\
    ngig) <8:AUX/cop>(ist) <9:ADP/case>(von) <10:ADJ/nmod>(fossilen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(ist) <3:PRON/nsubj>(er) <4:VERB/root>(reingekommen)
    <5:CCONJ/cc>(und) <6:VERB/conj>(hat) <7:ADJ/advmod>(voll) <ROOT> <8:VERB/root>(geweint)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - aux
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - mark
  - !!python/tuple
    - 12
    - 10
    - aux
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/nmod>(mich) <3:AUX/cop>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/root>(so) <ROOT> <6:ADV/advmod>(wieder) <7:ADV/advmod>(drau\xDFen) <8:PART/mark>(zu)\
    \ <9:AUX/aux>(sein) <10:VERB/root>(laufen) <11:PART/mark>(zu) <12:AUX/aux>(k\xF6\
    nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obl:arg
  - !!python/tuple
    - 9
    - 7
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADP/case>(f\xFCr) <4:PRON/obl>(mich)\
    \ <5:ADV/advmod>(so) <ROOT> <6:PRON/nsubj>(ich) <7:VERB/root>(nahm) <8:PRON/obl:arg>(mir)\
    \ <9:ADP/compound:prt>(vor)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - nsubj
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:ADV/advmod>(damit) <4:VERB/root>(umgeht)
    <5:AUX/aux>(ist) <6:PRON/nsubj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Man) <2:AUX/root>(kann) <3:PRON/obj>(es) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(einsch\xE4tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(echt)
    <5:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:NOUN/obj>(Momente) <4:ADP/case>(in)
    <5:PRON/obl>(denen) <6:PRON/obj>(mich) <7:PRON/nsubj>(das) <ROOT> <8:VERB/root>(belastet)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 7
    - obl
  sentence: <1:NOUN/nsubj>(Gott) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:ADJ/amod>(guter)
    <5:NOUN/nsubj>(Gott) <6:PRON/nsubj>(er) <7:VERB/root>(hat) <8:ADV/advmod>(nen)
    <9:ADJ/amod>(guten) <10:NOUN/obj>(Plan) <11:ADP/case>(mit) <12:DET/det:poss>(deinem)
    <13:NOUN/obl>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:PRON/obl:arg>(mir) <3:VERB/root>(wurde) <4:ADP/case>(bei)\
    \ <5:DET/det>(dem) <6:ADJ/amod>(ersten) <7:NOUN/obl>(Tumor) <ROOT> <8:ADP/case>(von)\
    \ <9:NOUN/obl>(\xC4rzten) <10:VERB/root>(geholfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:INTJ/root>(Danke) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:PRON/obj>(mich)\
    \ <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(durchtr\xE4gst)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - nummod
  - !!python/tuple
    - 12
    - 9
    - nmod
  sentence: <1:ADV/advmod>(Nun) <2:DET/det>(die) <3:NOUN/nsubj>(Unterschiede) <4:AUX/root>(sind)
    <5:ADV/advmod>(schon) <ROOT> <6:SCONJ/root>(wenn) <7:PRON/nsubj>(man) <8:DET/det>(das)
    <9:NOUN/obj>(Handeln) <10:DET/det>(dieser) <11:NUM/nummod>(zwei) <12:ADJ/nmod>(unterschiedlichen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Hier) <2:ADJ/amod>(direkt) <3:ADP/case>(an) <4:DET/det>(der)
    <5:NOUN/obl>(Front) <6:VERB/root>(tobte) <7:DET/det>(der) <8:NOUN/nsubj>(Krieg)
    <9:ADV/advmod>(besonders) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: "<1:AUX/root>(W\xE4re) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Eins) <2:NUM/nummod>(zwei) <3:NUM/nummod>(drei) <4:NOUN/root>(Woah)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - aux
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl:arg
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: "<1:AUX/aux>(haben) <2:PRON/nsubj>(wir) <3:ADP/case>(bei) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(sp\xFCrhundetraining) <6:DET/det>(der) <7:ADJ/amod>(bayerischen)\
    \ <8:NOUN/obl:arg>(Polizei) <9:VERB/root>(erfahren) <10:CCONJ/cc>(und) <11:PROPN/conj>(Alina)\
    \ <ROOT> <12:PRON/nsubj>(die) <13:AUX/root>(war) <14:ADP/case>(mit) <15:ADV/advmod>(dabei)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(der) <2:ADJ/root>(unglaublich) <ROOT> <3:VERB/root>(kam)
    <4:ADV/advmod>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(mag) <4:ADV/advmod>(ja)
    <5:DET/obj>(alles) <6:PART/advmod>(nicht) <7:ADV/advmod>(mehr) <8:ADV/advmod>(so)
    <ROOT> <9:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:ADP/case>(an) <3:DET/det>(dem) <4:ADJ/root>(lautesten)
    <ROOT> <5:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:ADV/advmod>(Wann) <2:VERB/root>(kam) <3:ADP/case>(f\xFCr) <4:PRON/obl>(dich)\
    \ <5:DET/det>(der) <6:ADJ/amod>(erste) <7:NOUN/nsubj>(Moment) <8:ADV/advmod>(wo)\
    \ <9:PRON/nsubj>(du) <10:VERB/acl>(gedacht) <11:AUX/aux>(hast) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:VERB/root>(gemerkt)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <ROOT> <7:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(musst) <2:PRON/nsubj>(du) <3:ADJ/advmod>(ganz) <ROOT> <4:VERB/root>(zur\xFC\
    ckstecken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - parataxis
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:NOUN/obl>(Interviews) <3:VERB/root>(sagen) <4:PRON/nsubj>(sie)
    <7:PRON/nsubj>(Ich) <8:AUX/parataxis>(bin) <9:ADV/advmod>(so) <ROOT> <10:NOUN/root>(fame)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <4:ADV/advmod>(unterwegs)
    <5:VERB/root>(hol') <6:DET/det:poss>(meine) <7:NOUN/obj>(Titten) <8:ADV/advmod>(einfach)
    <9:ADV/compound:prt>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(tun) <3:ADP/compound:prt>(auf) <ROOT>
    <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/root>(Netz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Schlampen) <2:VERB/root>(tun) <3:ADP/compound:prt>(auf)
    <ROOT> <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/root>(Netz)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(dieser) <3:NOUN/nsubj>(Schei\xDF) <4:VERB/root>(pumpt)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(hab) <3:PRON/obj>(mich) <4:ADV/advmod>(sehr) <ROOT> <5:VERB/root>(ver\xE4\
    ndert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/advmod>(so) <2:ADJ/root>(hart) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(bleibe) <3:ADV/advmod>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/nsubj>(jeder) <3:ADP/case>(von) <4:PRON/nmod>(ihnen)
    <5:VERB/root>(hat) <6:PRON/obj>(es) <7:ADJ/advmod>(ganz) <ROOT> <8:VERB/root>(verkackt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:VERB/root>(blamiern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wer) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(h\xE4ngt) <2:PRON/obj>(ihr) <ROOT> <3:ADP/case>(in) <4:DET/det>(der)\
    \ <5:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/obl:arg>(mir) <2:VERB/root>(geht) <3:PRON/nsubj>(es) <4:ADP/compound:prt>(\xFC\
    ber) <ROOT> <5:ADJ/root>(beschissen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:VERB/root>(finde) <3:PRON/nsubj>(ich)
    <4:ADV/advmod>(hier) <5:DET/det>(eine) <6:NOUN/obj>(Collage)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(die) <3:NOUN/nsubj>(Kommentare) <4:ADV/advmod>(darunter)
    <5:AUX/root>(sind) <6:ADV/advmod>(aber) <7:ADV/advmod>(so) <ROOT> <8:ADJ/root>(einfach)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 9
    - nmod
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/expl>(es) <3:VERB/root>(gibt) <4:ADV/advmod>(auch)
    <5:DET/det>(eine) <6:NOUN/obj>(Seite) <7:ADP/case>(mit) <8:DET/det>(einer) <9:NOUN/obl>(Freundin)
    <10:ADP/case>(von) <11:PRON/nmod>(mir) <12:ADP/case>(auf) <13:NOUN/nmod>(XHamster)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 13
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 6
    - acl
  sentence: <1:ADV/root>(Also) <ROOT> <2:ADV/advmod>(ey) <3:ADV/advmod>(ja) <4:AUX/cop>(Ist)
    <5:PRON/nsubj>(das) <6:PRON/root>(jemand) <7:PRON/nsubj>(der) <8:DET/det>(die)
    <9:NOUN/obj>(Frauen) <10:ADP/case>(auf) <11:DET/det>(jeden) <12:NOUN/obl>(Fall)
    <13:VERB/acl>(kennt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: "<1:PRON/nsubj>(Ich) <2:ADV/advmod>(pers\xF6nlich) <3:AUX/root>(war) <4:ADV/advmod>(wirklich)\
    \ <ROOT> <5:VERB/root>(geflasht) <6:ADP/case>(von) <7:DET/det>(dem) <8:NOUN/obl>(Ende)"
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <2:PROPN/nsubj>(Witcher) <3:PROPN/appos>(3) <4:VERB/root>(hat) <5:PRON/obj>(mich)
    <6:ADV/advmod>(damals) <7:ADV/advmod>(grafisch) <8:ADJ/xcomp>(mega) <ROOT> <9:VERB/root>(weggeflasht)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(die) <3:NOUN/nsubj>(Skitour) <4:AUX/cop>(war)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - advcl
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(durfte) <3:DET/obj>(die) <4:PART/advmod>(nicht)
    <5:ADP/compound:prt>(zu) <ROOT> <6:VERB/advcl>(haben) <7:ADV/advmod>(sonst) <8:VERB/root>(hatten)
    <9:PRON/nsubj>(sie) <10:NOUN/obj>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 8
    - nmod
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:PRON/nmod>(uns) <3:AUX/cop>(ist) <4:ADV/advmod>(eher)
    <5:DET/det>(der) <6:NOUN/compound>(Salat) <8:NOUN/root>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(der) <2:AUX/cop>(war) <3:ADJ/advmod>(fr\xFCher) <4:ADJ/root>(richtig)\
    \ <ROOT> <5:AUX/aux>(hat) <6:ADV/advmod>(richtig) <7:DET/obj>(viel) <8:VERB/root>(gev\xF6\
    gelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:ADV/advmod>(ja) <4:PRON/nsubj>(das)
    <5:AUX/cop>(ist) <6:ADJ/root>(echt) <ROOT> <7:X/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - appos
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:ADJ/root>(Schei\xDFe) <3:PRON/nsubj>(du) <4:NOUN/appos>(Flachpfeife)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Weil) <2:NOUN/nsubj>(Fu\xDFball) <3:ADV/advmod>(noch)\
    \ <4:DET/det>(ein) <5:NOUN/root>(Sport) <6:CCONJ/cc>(und) <7:ADV/advmod>(noch)\
    \ <8:PART/advmod>(nicht) <9:ADV/conj>(so) <ROOT> <10:ADP/case>(in) <11:NOUN/obl>(Mode)\
    \ <12:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:DET/nsubj>(wenig) <3:VERB/root>(geht) <4:AUX/aux>(ist)
    <5:DET/det>(die) <6:NOUN/nsubj>(Szene) <ROOT> <7:ADJ/root>(kollegial)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: "<1:NOUN/root>(Spielsucht) <2:AUX/cop>(ist) <ROOT> <3:ADJ/amod>(h\xF6\
    chste) <4:NOUN/root>(Selbstmordrate) <5:ADP/case>(unter) <6:DET/det>(allen) <7:NOUN/nmod>(Suchterkrankungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 4
    - acl
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  - !!python/tuple
    - 12
    - 10
    - flat
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 16
    - nummod
  - !!python/tuple
    - 16
    - 17
    - nummod
  - !!python/tuple
    - 17
    - 7
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:NOUN/root>(Dreh)
    <5:PRON/nmod>(mich) <6:ADP/mark>(um) <7:VERB/acl>(mach) <8:ADP/case>(an) <9:DET/det>(dem)
    <10:PROPN/obl>(Merkur) <12:NOUN/flat>(Automaten) <13:ADV/advmod>(noch) <14:ADV/advmod>(mal)
    <15:NUM/nummod>(1) <16:NUM/nummod>(000) <17:PROPN/obj>(Euro)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - appos
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: <1:ADJ/root>(check) <2:PRON/nsubj>(das) <4:DET/det>(Die) <5:NOUN/nsubj>(Beginner)
    <6:VERB/appos>(kommen) <7:CCONJ/cc>(und) <8:PRON/nsubj>(sie) <9:VERB/conj>(kommen)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(er) <2:VERB/root>(f\xE4nd) <3:PROPN/obj>(Mongo) <4:PROPN/flat>(Clikke)\
    \ <5:CCONJ/cc>(und) <6:PROPN/conj>(Eimsb\xFCttel) <7:ADV/advmod>(schon) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Beginner) <3:VERB/root>(komm) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wie) <2:PRON/nsubj>(ich) <3:PRON/obj>(es) <4:VERB/root>(sp\xFC\
    r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(gelangweilt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(wo) <2:AUX/root>(ist) <3:DET/det:poss>(deine) <4:NOUN/nsubj>(Gang)
    <ROOT> <6:X/root>(wo?)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(f\xFChl) <4:PRON/obj>(mich) <ROOT>\
    \ <5:CCONJ/cc>(und) <6:NOUN/root>(lauf) <8:ADP/case>(mit) <9:NOUN/nmod>(Bodyguards)\
    \ <10:ADV/compound:prt>(rum)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 1
    - cc
  sentence: <1:NOUN/root>(Sex) <2:CCONJ/cc>(und) <3:NOUN/conj>(Ruhm) <4:CCONJ/cc>(oder)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(sp\xFCr) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(war) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 5
    - advcl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  sentence: "<1:NOUN/root>(Leute) <2:DET/det>(die) <3:PRON/appos>(du) <ROOT> <4:VERB/advcl>(findest)\
    \ <5:VERB/root>(dr\xFCcken) <6:ADP/case>(bei) <7:PRON/obl>(mir) <8:NOUN/obj>(Scheine)\
    \ <9:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:AUX/aux>(hab) <4:ADV/advmod>(selbst)\
    \ <5:VERB/root>(gesehen) <6:ADP/mark>(wie) <ROOT> <7:DET/det>(die) <8:NOUN/nsubj>(Kinder)\
    \ <9:VERB/root>(verpr\xFCgeln)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: <1:DET/root>(Alles) <2:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  sentence: "<1:NOUN/nsubj>(Zukunft) <2:VERB/root>(wird) <ROOT> <3:CCONJ/cc>(und)\
    \ <4:PRON/nsubj>(ich) <5:VERB/root>(wei\xDF) <6:PRON/obj>(es)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(hab) <3:PRON/nsubj>(ich) <ROOT> <4:VERB/root>(gespielt)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nat\xFCrlich) <2:AUX/aux>(isses) <3:ADJ/advmod>(schwer)\
    \ <4:DET/det>(die) <5:NOUN/nsubj>(Gegner) <6:VERB/root>(hauen) <ROOT> <7:ADJ/root>(rein)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Ein) <2:ADJ/amod>(gl\xE4nzendes) <3:NOUN/nsubj>(Nasenloch)\
    \ <4:PRON/nsubj>(das) <5:AUX/cop>(war) <6:ADJ/root>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 7
    - conj
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:AUX/aux>(hab) <3:PRON/obj>(das) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(stark) <7:VERB/root>(mitbekommen) <8:ADP/case>(in)
    <9:DET/det>(der) <10:NOUN/obl>(Schwangerschaft) <11:CCONJ/cc>(und) <12:PRON/nsubj>(das)
    <13:VERB/conj>(fand) <14:PRON/nsubj>(ich) <15:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - appos
  sentence: <1:ADV/advmod>(Deshalb) <2:AUX/root>(hab) <4:PRON/nsubj>(ich) <5:PRON/obj>(mich)
    <ROOT> <6:VERB/root>(entwickelt) <8:X/appos>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 3
    - cop
  sentence: "<1:SCONJ/mark>(Dass) <2:PRON/nsubj>(Sie) <3:ADJ/root>(\xFCberrascht)\
    \ <4:AUX/cop>(sind) <5:AUX/cop>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - obl
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:AUX/aux>(hat) <3:PRON/nsubj>(es) <4:PROPN/obj>(Luis)
    <5:VERB/root>(erlebt) <6:ADP/case>(in) <7:DET/det>(einem) <8:NOUN/obl>(Sommer)
    <9:ADP/case>(vor) <10:DET/det>(der) <11:NOUN/obl>(Pandemie)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:ADV/advmod>(allein) <3:DET/det>(diese) <4:ADJ/amod>(ganzen)\
    \ <5:NOUN/nsubj>(Ger\xE4te) <6:PRON/nsubj>(das) <7:AUX/root>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - cop
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 4
    - nsubj
  sentence: "<1:PRON/root>(Was) <2:PRON/obj>(sich) <3:ADV/advmod>(sehr) <ROOT> <4:VERB/root>(ver\xE4\
    ndert) <5:AUX/aux>(hat) <6:AUX/cop>(ist) <7:DET/det:poss>(mein) <8:NOUN/nsubj>(Schlaf)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Warum) <2:AUX/cop>(ist) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(dich)\
    \ <5:ADV/advmod>(gerade) <6:NOUN/root>(Einkaufen) <ROOT> <7:ADJ/root>(schwer)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(ich) <3:PRON/root>(das) <ROOT> <4:VERB/root>(untersch\xE4\
    tzt) <5:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cc
  sentence: <1:NOUN/nsubj>(Diktatur) <2:VERB/root>(klingt) <3:PRON/obj>(etwas) <ROOT>
    <5:ADV/root>(Ja) <6:CCONJ/cc>(aber)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Plus) <2:CCONJ/cc>(oder) <ROOT> <3:NOUN/root>(Minus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(sind) <2:PRON/root>(sie) <ROOT> <3:ADJ/root>(verwirrt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(PTK) <2:AUX/root>(ist) <ROOT> <3:ADP/case>(an) <4:DET/det>(dem)
    <5:NOUN/root>(Start)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  sentence: "<1:VERB/root>(F\xFChlst) <2:PRON/nsubj>(du) <3:PRON/obj>(dich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(dieses) <3:NOUN/nsubj>(Organ) <4:VERB/root>(hat)
    <ROOT> <5:DET/root>(viel) <6:ADV/advmod>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Noch) <2:VERB/root>(zugedeckt) <3:ADP/case>(in) <4:ADJ/advmod>(gut)\
    \ <5:ADJ/amod>(versteckten) <6:NOUN/obl>(N\xE4chten) <ROOT> <7:ADV/root>(alleine)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(zittere) <3:ADV/advmod>(gerade) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 12
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 12
    - advmod
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(die) <3:ADV/advmod>(gerade) <4:ADV/advmod>(nah)\
    \ <5:ADP/case>(an) <6:PRON/nmod>(mich) <7:ADJ/advmod>(rankamen) <8:CCONJ/cc>(und)\
    \ <9:ADV/advmod>(\xFCberhaupt) <10:DET/det>(keine) <11:NOUN/obj>(Scheu) <12:VERB/root>(hatten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 10
    - obl
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 10
    - obj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obl:arg
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - cop
  - !!python/tuple
    - 14
    - 10
    - ccomp
  sentence: "<1:DET/det>(Das) <2:ADJ/amod>(erste) <3:NOUN/obl>(Mal) <4:PROPN/appos>(MDMA)\
    \ <5:PRON/obj>(das) <6:AUX/aux>(h\xE4tt) <7:PRON/nsubj>(ich) <8:PRON/obl:arg>(mir)\
    \ <9:ADV/advmod>(niemals) <10:VERB/root>(vorstellen) <11:AUX/aux>(k\xF6nnen) <12:PRON/nsubj>(das)\
    \ <13:AUX/cop>(ist) <14:ADJ/ccomp>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - aux
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: <1:SCONJ/mark>(Dass) <2:PRON/nsubj>(man) <3:DET/det:poss>(sein) <4:NOUN/obj>(Bewusstsein)
    <5:ADV/advmod>(so) <6:VERB/root>(erweitern) <7:AUX/aux>(kann) <8:AUX/aux>(ist)
    <9:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/compound>(Ah) <2:NOUN/nsubj>(Geld) <3:PRON/nsubj>(Das) <4:AUX/cop>(ist)
    <5:ADV/advmod>(ja) <6:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:ADV/advmod>(auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(ich) <4:PRON/obj>(das)
    <5:PART/advmod>(nicht) <ROOT> <6:ADJ/root>(gut) <7:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/root>(Angewohnheit) <ROOT>
    <4:PART/mark>(zu) <5:VERB/root>(betonen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - case
  - !!python/tuple
    - 3
    - 6
    - det
  - !!python/tuple
    - 4
    - 6
    - amod
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 12
    - mark
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - obj
  sentence: <1:PRON/root>(die) <2:ADP/case>(in) <3:DET/det>(den) <4:ADJ/amod>(letzten)
    <5:NUM/nummod>(15) <6:NOUN/nmod>(Jahren) <ROOT> <7:VERB/root>(angestiegen) <8:AUX/cop>(sind)
    <9:SCONJ/mark>(dass) <10:PRON/nsubj>(das) <11:ADV/advmod>(auch) <12:NOUN/obj>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(war) <ROOT> <3:PRON/nsubj>(das) <4:AUX/cop>(war)
    <5:ADV/advmod>(wirklich) <6:DET/det>(ein) <7:PROPN/amod>(Magic) <8:NOUN/root>(Moment)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:VERB/root>(sieht) <4:ADV/advmod>(einfach)
    <5:DET/obj>(alles) <6:ADV/advmod>(schon) <7:ADV/advmod>(mal) <ROOT> <8:ADJ/root>(gut)
    <9:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(diese) <2:NOUN/compound>(Render) <4:NOUN/root>(Sequenz) <5:PRON/appos>(die)
    <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(aussah)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/compound>(Kalt) <3:NOUN/root>(Alter) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 8
    - parataxis
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - obj
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - obl:arg
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 15
    - advmod
  sentence: "<1:ADV/advmod>(immer) <2:ADV/advmod>(noch) <3:ADV/advmod>(da) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(absolut) <6:NUM/nummod>(28) <7:NOUN/nsubj>(jahre) <8:ADJ/root>(alt)\
    \ <9:ADV/advmod>(mindestens) <10:ADV/advmod>(hier) <11:ADV/advmod>(da) <12:VERB/parataxis>(seht)\
    \ <13:PRON/nsubj>(ihr) <14:NOUN/obj>(s) <ROOT> <15:VERB/root>(w\xE4r) <16:PRON/obl:arg>(mir)\
    \ <17:ADV/advmod>(gar) <18:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Lass) <2:PRON/obj>(mich) <3:DET/det>(ein) <4:NOUN/obj>(Beat)
    <ROOT> <5:VERB/root>(misshandeln)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: "<1:ADV/root>(Aber) <ROOT> <2:PRON/nsubj>(der) <3:VERB/root>(h\xE4lt)\
    \ <4:PRON/obj>(das) <5:ADV/advmod>(echt) <6:ADV/advmod>(immer) <7:ADV/advmod>(noch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADP/case>(aus) <4:ADP/case>(wie)
    <5:ADJ/amod>(richtige) <6:NOUN/obl>(Seile) <7:NOUN/obj>(Super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:DET/det:poss>(Meine) <3:NOUN/nsubj>(Slackline)\
    \ <4:AUX/aux>(h\xE4tte) <5:DET/det>(keine) <6:NOUN/obj>(Sekunde) <7:ADJ/advmod>(l\xE4\
    nger) <8:VERB/root>(gehalten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 11
    - csubj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(-Okay) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:PART/mark>(zu)\
    \ <5:VERB/csubj>(h\xF6ren) <7:ADV/advmod>(Jetzt) <8:AUX/cop>(wird) <9:PRON/nsubj>(es)\
    \ <10:ADV/advmod>(schon) <11:ADJ/root>(spannend)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 7
    - ccomp
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - obl
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(sagen) <3:PRON/nsubj>(Das) <4:AUX/ccomp>(ist)
    <ROOT> <5:CCONJ/cc>(aber) <6:PRON/nsubj>(ich) <7:VERB/root>(teile) <8:PART/advmod>(nicht)
    <9:DET/obj>(alles) <10:PRON/obj>(was) <11:PRON/nsubj>(du) <12:VERB/ccomp>(sagst)
    <13:ADP/case>(aufgrund) <14:DET/obl>(meiner)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <3:NOUN/nsubj>(Alter) <4:PRON/nsubj>(das) <5:AUX/root>(war)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 3
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 3
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:AUX/cop>(ist) <3:ADJ/root>(bereit) <4:ADP/case>(mit)
    <5:PRON/obl>(uns) <6:PART/mark>(zu) <7:VERB/xcomp>(sprechen) <8:PRON/nsubj>(Ich)
    <9:VERB/parataxis>(find) <10:X/advmod>(s) <ROOT> <11:ADV/advmod>(wie) <12:ADJ/advmod>(leicht)
    <13:PRON/nsubj>(er) <14:VERB/root>(sagt)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Weil) <2:DET/det>(der) <3:NOUN/nsubj>(Vorwurf) <4:ADP/case>(gegen)\
    \ <5:PRON/nmod>(ihn) <6:AUX/cop>(ist) <7:ADV/advmod>(ja) <8:ADV/advmod>(ganz)\
    \ <9:ADJ/root>(sch\xF6n) <ROOT> <10:ADV/root>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:PRON/nsubj>(Er) <2:AUX/root>(sei) <3:ADV/advmod>(raus) <4:ADP/case>(aus)
    <5:DET/det>(der) <6:NOUN/obl>(Szene) <7:CCONJ/cc>(Aber) <8:DET/det:poss>(sein)
    <9:NOUN/conj>(Hinweis) <10:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 3
    - ccomp
  sentence: <1:NOUN/root>(Fentanyl) <2:AUX/cop>(sei) <ROOT> <3:VERB/root>(sagt) <4:PRON/nsubj>(er)
    <5:PRON/nsubj>(er) <6:AUX/aux>(hat) <7:PRON/obj>(es) <8:ADV/advmod>(selbst) <9:ADV/advmod>(schon)
    <10:VERB/ccomp>(konsumiert)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Denn) <2:PRON/obj>(was) <3:PRON/nsubj>(er) <4:VERB/root>(getan)
    <5:AUX/aux>(hat) <6:AUX/aux>(ist) <ROOT> <8:ADJ/amod>(Unruhige) <9:NOUN/root>(Musik)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - flat
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(wem) <3:ADV/advmod>(vielleicht) <4:PROPN/amod>(Three)
    <5:PROPN/flat>(Houses) <6:DET/det>(ein) <7:ADV/advmod>(bisschen) <8:ADP/compound:prt>(zu)
    <ROOT> <9:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(sagen) <3:ADV/advmod>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADV/advmod>(ja) <4:ADV/advmod>(ganz)\
    \ <5:ADJ/xcomp>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADV/advmod>(so) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(ich) <6:PRON/obj>(ihn) <7:ADV/advmod>(noch) <8:VERB/root>(treffen)
    <9:AUX/aux>(konnte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 2
    - ccomp
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(sass) <3:ADV/advmod>(auch) <4:ADP/case>(auf)
    <5:DET/det>(diesem) <6:NOUN/obl>(Stuhl) <7:PRON/obj>(Das) <8:AUX/ccomp>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADP/case>(f\xFCr) <3:PRON/obl>(mich) <4:VERB/root>(muss)\
    \ <5:PRON/nsubj>(das) <6:PART/advmod>(nicht) <ROOT> <7:AUX/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <5:ADV/advmod>(Eigentlich)
    <6:AUX/cop>(ist) <7:PRON/nsubj>(es) <8:ADJ/root>(schrecklich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(es) <3:VERB/root>(riecht) <4:ADP/case>(bei)
    <5:DET/det>(dem) <6:NOUN/obl>(Braten) <7:ADJ/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADJ/root>(stimulierend) <2:CCONJ/cc>(und) <3:VERB/conj>(pushen) <4:DET/obj>(einen)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(man) <4:AUX/aux>(hat)
    <5:ADV/advmod>(bereits) <6:VERB/root>(vergessen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(warum) <3:VERB/root>(eskaliert) <4:DET/det>(die)
    <5:NOUN/nsubj>(Situation) <6:ADV/advmod>(ausgerechnet) <7:ADP/case>(in) <8:PROPN/obl>(Belgien)
    <9:CCONJ/cc>(und) <10:DET/det>(den) <11:PROPN/conj>(Niederlanden) <12:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:VERB/root>(dachte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:SCONJ/root>(weil) <6:ADV/advmod>(irgendwie)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:NOUN/root>(bitte)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 4
    - case
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Oh) <2:DET/det:poss>(mein) <3:NOUN/root>(Gott) <4:PROPN/appos>(Robert)
    <ROOT> <6:AUX/cop>(ist) <7:PRON/nsubj>(das) <8:NOUN/root>(bitte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 6
    - obl
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PROPN/obl>(Deutschland) <4:NOUN/flat>(Urlaub)\
    \ <5:PRON/nsubj>(das) <6:AUX/root>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(noch) <4:ADV/advmod>(nie)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(geflogen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(doch) <2:INTJ/advmod>(merk) <4:PRON/nsubj>(sie) <5:VERB/root>(hat)\
    \ <ROOT> <6:ADJ/amod>(gro\xDFe) <7:NOUN/root>(Titten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(text) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADJ/root>(Unfassbar) <ROOT> <2:AUX/cop>(ist) <3:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 4
    - 1
    - appos
  sentence: <1:NOUN/root>(Sagen) <4:X/appos>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 4
    - obl
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 4
    - obl
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(wirklich) <ROOT>
    <4:VERB/root>(fand) <5:AUX/aux>(war) <6:DET/det>(diese) <7:NOUN/nsubj>(Bandbreite)
    <8:ADP/case>(mit) <9:ADJ/amod>(verschiedenen) <10:NOUN/obl>(Sichtweisen) <11:ADP/case>(auf)
    <12:DET/det>(das) <13:NOUN/obl>(Scheitern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(f\xFChlst) <3:PRON/obj>(dich) <ROOT>\
    \ <4:ADP/case>(in) <5:PROPN/nmod>('nem) <6:PROPN/root>(Mercedes)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(f\xFChl') <3:PRON/obj>(mich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:ADV/advmod>(schnell) <3:DET/det>(ein) <4:NOUN/obl>(Jahr)
    <5:VERB/root>(vorbeigeht) <ROOT> <6:NOUN/root>(Wahnsinn)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - obl:arg
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 10
    - obj
  - !!python/tuple
    - 15
    - 10
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT> <5:PRON/nsubj>(Ich) <6:AUX/aux>(habe) <7:PRON/obj>(ihn) <8:ADP/case>(nach)\
    \ <9:NOUN/obl>(Fotos) <10:VERB/root>(gefragt) <11:ADP/case>(um) <12:PRON/obl:arg>(mir)\
    \ <13:DET/det>(einen) <14:NOUN/obj>(Eindruck) <15:ADP/compound:prt>(von)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: "<1:NUM/dep>(300) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:VERB/root>(gesch\xE4\
    tzt) <5:ADV/advmod>(Ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Unser) <2:NOUN/root>(Motto) <4:NOUN/appos>(Grade) <5:CCONJ/cc>(und)
    <ROOT> <6:VERB/root>(bleiben)
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<2:PROPN/dep>(V\xF6lkel) <4:PRON/expl>(Es) <5:AUX/root>(ist) <6:ADV/advmod>(dann)\
    \ <7:ADV/advmod>(auch) <ROOT> <8:CCONJ/cc>(aber) <9:ADV/advmod>(auch) <10:ADJ/root>(mutig)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj:pass
  - !!python/tuple
    - 4
    - 2
    - acl
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:PRON/root>(das) <3:PRON/nsubj:pass>(was) <4:VERB/acl>(geschrieben)
    <5:AUX/aux:pass>(wurde) <6:AUX/aux>(war) <7:ADV/advmod>(teilweise) <8:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  sentence: <1:DET/det>(Die) <2:NOUN/obj>(Zeit) <3:VERB/root>(rast) <4:PRON/nsubj>(das)
    <5:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADJ/root>(okay) <3:CCONJ/cc>(Und) <4:PRON/nsubj>(ich) <5:AUX/cop>(bin)
    <6:ADJ/conj>(richtig) <ROOT> <7:ADV/advmod>(jetzt) <8:ADV/advmod>(gerade) <9:ADP/case>(auf)
    <10:NOUN/root>(Adrenalin)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(n\xFCchtern) <3:ADP/case>(in) <4:DET/det>(das)\
    \ <5:NOUN/obl>(Bett) <6:VERB/root>(find) <8:PRON/nsubj>(ich) <9:PART/advmod>(nicht)\
    \ <10:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  sentence: <1:SCONJ/root>(Obwohl) <2:DET/det>(der) <3:NOUN/nsubj>(Altersunterschied)
    <4:ADV/advmod>(gar) <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(ist)
    <8:ADP/case>(in) <9:DET/det>(dem) <10:NOUN/obl>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:VERB/root>(Findest) <2:PRON/nsubj>(du) <3:PRON/obj>(es) <4:PART/advmod>(nicht)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:DET/det>(den) <8:NOUN/obj>(Text)
    <9:ADV/advmod>(noch) <10:AUX/root>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj:pass
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(auch) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT> <6:ADJ/advmod>(schwer) <7:PRON/nsubj:pass>(die) <8:PART/mark>(zu)
    <9:VERB/root>(finden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(braungebrannt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:PRON/nsubj>(das) <4:AUX/cop>(war)
    <5:ADJ/root>(unerwartet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - dep
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(wusste) <3:PRON/nsubj>(ich) <4:ADJ/amod>(okay)
    <5:NOUN/obj>(Kinder) <ROOT> <6:NOUN/root>(Verantwortung) <7:X/dep>(wow)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Look) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/nsubj>(sie) <2:VERB/root>(w\xE4r'n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Heute) <2:VERB/root>(f\xE4hrt) <3:ADJ/advmod>(echt) <ROOT>\
    \ <4:ADP/case>(in) <5:DET/det>(jede) <6:NOUN/nmod>(Etage) <7:NOUN/nsubj>(n) <8:NOUN/root>(Lift)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/root>(halt)
    <ROOT> <5:SCONJ/root>(weil) <6:ADV/advmod>(also)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Gro\xDFteil) <3:DET/det>(dieser) <4:NOUN/nmod>(Redaktion)\
    \ <5:AUX/root>(ist) <ROOT> <6:ADV/advmod>(davon) <7:ADJ/root>(abh\xE4ngig)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:NOUN/root>(Leute) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADV/advmod>(hier)
    <5:VERB/acl>(sehe) <6:AUX/aux>(ist) <7:ADV/advmod>(wirklich) <8:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:PRON/obj>(sich)
    <5:PART/mark>(zu) <6:VERB/root>(entscheiden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 4
    - acl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obl:arg
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:PART/mark>(zu) <3:VERB/acl>(schlafen) <4:VERB/root>(stelle)
    <5:PRON/nsubj>(ich) <6:PRON/obl:arg>(mir) <7:ADV/advmod>(so) <ROOT> <8:ADP/root>(vor)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 2
    - advmod
  sentence: <1:ADV/root>(besonders) <ROOT> <2:VERB/root>(kommt) <3:DET/det>(die) <4:NOUN/nsubj>(salamitaktik)
    <5:ADP/case>(zu) <6:DET/det>(dem) <7:NOUN/obl>(einsatz) <8:SCONJ/mark>(wenn) <9:NOUN/conj>(promi)
    <10:ADV/advmod>(vielleicht) <11:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/obj>(Das) <4:AUX/aux>(h\xE4\
    tte) <5:PRON/nsubj>(ich) <6:PART/advmod>(nicht) <7:VERB/root>(gedacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 2
    - advcl
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 16
    - cc
  - !!python/tuple
    - 16
    - 14
    - conj
  sentence: <1:ADV/advmod>(so) <2:VERB/root>(umgehen) <3:CCONJ/cc>(Aber) <4:PRON/nsubj>(das)
    <5:AUX/conj>(ist) <6:ADJ/conj>(wahrscheinlich) <7:ADV/advmod>(auch) <8:SCONJ/mark>(weil)
    <9:DET/det>(die) <10:NOUN/nsubj>(Leute) <11:VERB/advcl>(sehen) <ROOT> <13:DET/det>(keine)
    <14:NOUN/root>(Beine) <15:CCONJ/cc>(und) <16:PRON/conj>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 10
    - aux:pass
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/root>(das) <2:ADV/advmod>(so) <ROOT> <3:AUX/aux:pass>(war) <4:SCONJ/mark>(dass)
    <5:ADV/advmod>(selbst) <6:DET/det>(die) <7:PROPN/nsubj>(AfD) <8:ADP/case>(gegen)
    <9:PRON/obl>(ihn) <10:VERB/root>(ermittelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:ADV/advmod>(auch) <4:DET/det>(einen)\
    \ <5:NOUN/obj>(Grund) <6:ADV/advmod>(warum) <7:PRON/nsubj>(ich) <8:PART/advmod>(nicht)\
    \ <9:ADV/advmod>(so) <ROOT> <10:ADP/case>(auf) <11:DET/det>(der) <12:NOUN/obl>(B\xFC\
    hne) <13:VERB/root>(abgehe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/root>(wie) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(du)
    <5:ADP/case>(als) <6:ADJ/amod>(kleines) <7:NOUN/obl>(Menschenkind) <8:ADV/advmod>(irgendwo)
    <9:VERB/root>(hinkommst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - cc
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/aux>(ist) <4:ADP/case>(innerhalb)\
    \ <5:ADP/case>(von) <6:ADJ/amod>(k\xFCrzester) <7:NOUN/obl>(Zeit) <8:ADV/advmod>(schon)\
    \ <9:VERB/root>(zusammengekommen) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:ADV/advmod>(Nein) <2:PRON/nsubj>(wir) <3:AUX/aux>(haben) <4:PRON/obj>(dich)
    <5:ADV/advmod>(gerade) <6:VERB/xcomp>(tanzen) <7:VERB/root>(sehen) <8:CCONJ/cc>(und)
    <9:VERB/conj>(dachten) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 12
    - cc
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 2
    - conj
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(war) <3:ADV/advmod>(so) <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/obl>(Scrollen) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(so) <10:ADV/advmod>(okay) <11:ADV/advmod>(ah) <12:ADJ/conj>(geil)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 12
    - obl
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADV/advmod>(\xFCberhaupt) <2:ADV/advmod>(erst) <3:ADP/case>(auf) <4:DET/det:poss>(sein)\
    \ <5:NOUN/obl>(Grundlevel) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:ADV/advmod>(daran)\
    \ <9:VERB/advcl>(gew\xF6hnt) <10:AUX/aux>(ist) <12:VERB/root>(fand) <13:PRON/nsubj>(ich)\
    \ <14:ADV/advmod>(schon) <ROOT> <15:ADJ/root>(Richtig)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 4
    - compound
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 6
    - conj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 12
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 12
    - advmod
  sentence: "<1:PRON/nsubj>(Was) <2:PRON/obj>(uns) <3:NOUN/compound>(Professor) <4:PROPN/obj>(Elmenhorst)\
    \ <5:ADV/advmod>(noch) <6:VERB/root>(erkl\xE4rt) <7:AUX/aux>(hat) <8:CCONJ/cc>(und)\
    \ <9:ADP/case>(f\xFCr) <10:PRON/nmod>(mich) <11:ADV/conj>(total) <ROOT> <12:VERB/root>(war)\
    \ <13:SCONJ/mark>(weil) <14:PRON/nsubj>(ich) <15:ADV/advmod>(nur) <16:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Vielleicht) <2:VERB/root>(werd) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(einfach) <6:ADV/advmod>(gerade) <7:ADV/advmod>(nur) <ROOT> <8:ADJ/root>(paranoid)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 13
    - parataxis
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - nmod
  - !!python/tuple
    - 15
    - 13
    - obj
  sentence: <1:PRON/nsubj>(du) <2:ADV/advmod>(dann) <3:DET/det>(die) <4:NOUN/root>(Spielregeln)
    <5:CCONJ/cc>(oder) <6:VERB/conj>(bist) <7:PRON/nsubj>(du) <8:ADV/advmod>(nur)
    <ROOT> <9:ADJ/parataxis>(naiv) <10:ADV/advmod>(Ganz) <11:ADV/advmod>(ehrlich)
    <12:PRON/nsubj>(ich) <13:VERB/root>(find) <14:PROPN/nmod>(Naumanns) <15:NOUN/obj>(Argumentation)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 15
    - aux
  - !!python/tuple
    - 7
    - 15
    - mark
  - !!python/tuple
    - 8
    - 15
    - nsubj
  - !!python/tuple
    - 9
    - 15
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 15
    - obj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:SCONJ/root>(Wenn) <2:NOUN/nsubj>(Fans) <3:DET/det>(ein) <4:NOUN/obj>(Foto)\
    \ <5:ADV/advmod>(so) <ROOT> <6:AUX/aux>(wollen) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(sie)\
    \ <9:ADV/advmod>(sogar) <10:DET/det:poss>(ihr) <11:NOUN/obj>(Handy) <12:ADP/case>(auf)\
    \ <13:DET/det>(die) <14:NOUN/obl>(B\xFChne) <15:VERB/root>(werfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <ROOT> <3:PART/root>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:ADV/advmod>(Warum) <3:AUX/root>(ist) <4:PRON/nsubj>(das)
    <5:ADP/case>(in) <6:DET/det>(den) <7:ADJ/amod>(letzten) <8:NOUN/obl>(Jahren) <9:ADV/advmod>(so)
    <ROOT> <10:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 7
    - ccomp
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 16
    - obl
  - !!python/tuple
    - 13
    - 16
    - obl:arg
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - mark
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <2:PROPN/nsubj>(Wow) <3:ADV/advmod>(Also) <4:PRON/nsubj>(ich) <5:AUX/aux>(muss)
    <6:ADV/advmod>(echt) <7:VERB/root>(sagen) <8:PRON/nsubj>(es) <9:AUX/cop>(ist)
    <10:ADJ/ccomp>(total) <ROOT> <11:ADP/case>(vor) <12:PRON/obl>(Ihnen) <13:DET/obl:arg>(allen)
    <14:ADV/advmod>(hier) <15:PART/mark>(zu) <16:VERB/root>(stehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - amod
  sentence: "<1:ADV/advmod>(Obendrauf) <2:VERB/root>(kommt) <3:PRON/nsubj>(das) <4:PRON/obj>(sich)\
    \ <5:ADJ/amod>(chinesische) <6:NOUN/nsubj>(Wirtschaft) <7:PART/advmod>(nicht)\
    \ <8:ADV/advmod>(mehr) <9:ADV/advmod>(so) <ROOT> <10:AUX/root>(ist) <11:ADP/case>(wie)\
    \ <12:ADJ/amod>(fr\xFCher)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advmod
  - !!python/tuple
    - 13
    - 9
    - obj
  - !!python/tuple
    - 14
    - 9
    - advmod
  - !!python/tuple
    - 15
    - 18
    - mark
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 9
    - ccomp
  sentence: <1:ADP/case>(In) <2:PROPN/obl>(China) <3:VERB/root>(ging) <4:PRON/nsubj>(es)
    <5:ADJ/advmod>(richtig) <ROOT> <6:ADJ/root>(bergauf) <7:CCONJ/cc>(und) <8:ADV/advmod>(eigentlich)
    <9:VERB/conj>(hat) <10:ADV/advmod>(auch) <11:PRON/nsubj>(niemand) <12:ADV/advmod>(wirklich)
    <13:NOUN/obj>(Zweifel) <14:ADV/advmod>(daran) <15:SCONJ/mark>(dass) <16:DET/det>(diese)
    <17:NOUN/nsubj>(Zahlen) <18:VERB/ccomp>(stimmen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 12
    - mark
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 12
    - obl
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(du) <6:ADP/case>(in) <7:DET/det:poss>(deinem) <8:NOUN/obl>(Alter)
    <9:ADV/advmod>(schon) <10:ADP/case>(auf) <11:NOUN/obl>(Sachen) <12:VERB/root>(kommst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:VERB/root>(Find) <2:PRON/nsubj>(ich) <3:ADV/advmod>(halt) <4:ADV/advmod>(einfach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj:pass
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj:pass
  sentence: <ROOT> <1:NOUN/nsubj:pass>(Leute) <2:PART/mark>(zu) <3:VERB/root>(sehen)
    <4:PRON/nsubj:pass>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj:pass
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(sehr) <ROOT> <2:NOUN/nsubj:pass>(Leute) <3:PART/mark>(zu)
    <4:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(du)
    <5:PRON/obj>(dich) <6:VERB/root>(getraut) <7:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(das) <4:ADV/advmod>(grad)
    <5:ADJ/xcomp>(unfassbar) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - aux
  - !!python/tuple
    - 3
    - 8
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:PRON/obl:arg>(mir) <4:DET/det>(den)\
    \ <5:NOUN/obj>(Podcast) <6:ADV/advmod>(auch) <7:ADV/advmod>(mal) <8:VERB/root>(angeh\xF6\
    rt) <9:CCONJ/cc>(und) <10:PRON/nsubj>(es) <11:AUX/conj>(ist) <12:ADV/advmod>(schon)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(wie) <2:DET/det>(diese) <3:NOUN/nmod>(Weiber) <4:DET/root>(alle)
    <ROOT> <5:VERB/root>(rummachen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 1
    - flat
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Habibi) <3:PROPN/flat>(Music) <4:PRON/flat>(wir) <5:AUX/cop>(sind)\
    \ <6:ADJ/root>(\xFCbertrieben) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(rappe) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(machen) <3:ADV/advmod>(ein'n) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/nsubj>(Treter) <3:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/cop>(bin) <3:ADV/root>(allein) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(die) <ROOT> <2:ADP/case>(auf) <3:DET/obl>(andere) <4:VERB/root>(kacken)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(die) <4:NOUN/nsubj>(Zeit)
    <5:VERB/root>(vergeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/root>(Brechen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: "<1:NOUN/dep>(Schwarzfahrn) <2:VERB/root>(kommt) <ROOT> <3:PRON/nsubj>(ich)\
    \ <4:VERB/root>(rauche) <5:ADP/case>(f\xFCr) <6:NUM/nummod>(hundert) <7:NOUN/obl>(Mann)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - dep
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  sentence: "<1:NOUN/dep>(Alter) <2:ADV/advmod>(heute) <3:VERB/root>(f\xFChlt) <4:PRON/obj>(sich)\
    \ <5:DET/nsubj>(jeder) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advcl
  sentence: <1:INTJ/advmod>(Hey) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <4:PRON/obj>(dich)
    <ROOT> <5:VERB/root>(gebessert) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(du) <8:NOUN/obj>(Fehler)
    <9:ADV/advmod>(schnell) <10:VERB/advcl>(erkennst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Immer) <2:ADV/root>(wieder) <ROOT> <3:VERB/root>(geflasht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(steigt) <3:ADV/advmod>(so) <4:ADJ/advmod>(richtig)
    <ROOT> <5:ADP/case>(auf) <6:DET/det>(das) <7:NOUN/root>(Gas)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/case>(Von) <2:ADP/root>(wegen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Einmal) <2:NOUN/root>(Erdbeeren) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:ADV/advmod>(schon) <ROOT> <6:AUX/aux>(muss) <7:PRON/nsubj>(man) <8:ADV/advmod>(schon)
    <9:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(es) <3:VERB/root>(kommt) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/root>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <3:ADV/advmod>(so) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - appos
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 8
    - acl
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - aux
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det:poss
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/root>(kalt) <5:ADV/advmod>(YEAH)
    <7:ADJ/amod>(junge) <8:NOUN/appos>(spar) <10:PRON/obj>(dir) <11:PRON/nsubj>(das)
    <12:VERB/acl>(rappen) <13:PRON/nsubj>(du) <14:AUX/aux>(bist) <ROOT> <15:ADP/case>(in)
    <16:DET/det:poss>(meiner) <17:NOUN/root>(Stadt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:DET/det>(dieser) <3:NOUN/nsubj>(Freeze) <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 4
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT> <4:X/compound>(damn) <5:X/root>(son)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  sentence: <1:ADJ/root>(skruppellos) <2:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(sch\xE4m) <5:PRON/obj>(mich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(du) <3:ADV/advmod>(nie) <4:ADV/advmod>(so)
    <ROOT> <5:SCONJ/mark>(wie) <6:PRON/nsubj>(ich) <7:VERB/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:INTJ/root>(Lass) <3:PRON/obj>(dich) <ROOT> <4:ADP/root>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PROPN/root>(Dacht'st) <2:ADP/compound:prt>(auf) <ROOT> <3:PRON/nsubj>(Du)
    <4:AUX/aux>(hast) <5:PRON/obj>(mich) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/obl>(Internet)
    <9:VERB/root>(beleidigt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT> <4:CCONJ/cc>(und)
    <5:ADV/root>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(gehst) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(auf)
    <5:DET/det>(die) <6:NOUN/root>(Eier)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  sentence: <1:ADV/advmod>(Einfach) <2:DET/nsubj>(jeder) <3:VERB/root>(macht) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(mach) <5:PART/advmod>(nicht)
    <6:ADV/advmod>(nur) <7:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(der) <3:AUX/cop>(war) <4:ADP/root>(zu)
    <ROOT> <5:VERB/root>(geschossen) <6:ADP/case>(mit) <7:DET/det>(dem) <8:NOUN/obl>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  sentence: <1:VERB/root>(bewegt) <2:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 13
    - mark
  - !!python/tuple
    - 8
    - 13
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(irgendwann) <3:AUX/root>(war) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(dann) <6:ADV/advmod>(so) <ROOT> <7:SCONJ/mark>(dass) <8:PRON/nsubj>(man)
    <9:ADP/case>(ohne) <10:ADV/advmod>(auch) <11:PART/advmod>(nicht) <12:ADV/advmod>(mehr)
    <13:AUX/root>(konnte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)\
    \ <5:ADV/advmod>(da) <6:VERB/root>(r\xFCberguckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Wirtschaftskraft) <3:AUX/root>(ist) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:ADJ/amod>(globalisierte) <7:NOUN/root>(Welt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - cop
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/root>(Hau) <2:PRON/nsubj>(was) <4:DET/det>(Die) <5:NOUN/nsubj>(Musik)
    <6:AUX/cop>(ist) <7:ADV/advmod>(ja) <ROOT> <8:ADJ/root>(krank)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 6
    - acl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:PART/mark>(zu) <4:VERB/acl>(sagen)
    <5:PRON/nsubj>(Wir) <6:VERB/root>(fahren) <7:ADP/case>(nach) <8:PROPN/obl>(Amerika)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(aber)
    <5:ADV/advmod>(ja) <6:ADV/advmod>(schon) <7:ADJ/root>(richtig) <ROOT> <8:ADV/advmod>(also)
    <9:PROPN/root>(mega)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:DET/det>(viel)
    <5:NOUN/nsubj>(Zeit) <6:VERB/root>(vergangen) <7:AUX/aux>(ist) <8:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PRON/root>(das) <4:AUX/cop>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  sentence: <1:VERB/root>(macht) <2:ADV/advmod>(mal) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:VERB/root>(war) <ROOT> <4:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:DET/obj>(viel) <4:VERB/root>(erlebt)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(es) <7:AUX/cop>(war) <8:DET/conj>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:VERB/advcl>(mitkommen)\
    \ <5:AUX/aux>(w\xFCrde) <6:AUX/root>(w\xE4r) <7:PRON/nsubj>(das) <8:ADV/advmod>(dann)\
    \ <ROOT> <9:ADJ/root>(egoistisch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - cc
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 1
    - conj
  - !!python/tuple
    - 10
    - 9
    - mark
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 13
    - xcomp
  sentence: "<1:NOUN/root>(G\xE4nsehaut) <2:CCONJ/cc>(und) <3:AUX/aux>(war) <4:ADV/advmod>(so)\
    \ <5:ADV/advmod>(richtig) <6:AUX/aux>(hab) <7:ADV/advmod>(so) <8:ADV/advmod>(richtig)\
    \ <9:VERB/conj>(gemerkt) <10:SCONJ/mark>(wie) <ROOT> <11:PRON/nsubj>(ich) <12:PRON/nsubj>(das)\
    \ <13:VERB/root>(vermisse) <14:PROPN/obj>(Boah) <15:ADV/advmod>(richtig) <16:ADJ/xcomp>(geil)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 15
    - cc
  - !!python/tuple
    - 11
    - 15
    - mark
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 8
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <ROOT> <3:SCONJ/mark>(wie) <4:ADV/advmod>(egal)
    <5:DET/det>(diesen) <6:NOUN/obl:arg>(Leuten) <7:ADV/advmod>(hier) <8:PROPN/root>(Corona)
    <9:AUX/cop>(ist) <10:CCONJ/cc>(und) <11:SCONJ/mark>(dass) <12:PRON/nsubj>(das)
    <13:ADV/advmod>(hier) <14:ADV/advmod>(heute) <15:ADJ/conj>(anscheinend)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 9
    - nsubj
  sentence: "<1:VERB/root>(erwartet) <2:SCONJ/mark>(dass) <3:PRON/obj>(mich) <4:DET/det>(das)\
    \ <5:NOUN/obj>(Setting) <6:CCONJ/cc>(und) <7:DET/det>(die) <8:NOUN/conj>(Musik)\
    \ <ROOT> <9:VERB/root>(mitrei\xDFt) <10:ADV/advmod>(genau) <11:DET/det>(das) <12:NOUN/nsubj>(Gegenteil)\
    \ <13:AUX/cop>(ist) <14:DET/det>(der) <15:NOUN/nsubj>(Fall)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(du) <3:PRON/obj>(mich) <4:ADV/advmod>(weiter)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(anturnst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/root>(\xFCberdurchschnittlich)\
    \ <ROOT> <4:ADP/case>(in) <5:NOUN/nmod>(Sachen) <6:NOUN/root>(Kokain)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 2
    - parataxis
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADP/case>(nach) <4:DET/det>(viel)
    <5:NOUN/obl>(Hardware) <6:ADP/case>(aus) <7:DET/det>(Mehrere) <8:NOUN/obl>(Monitore)
    <9:PRON/nsubj>(Das) <10:AUX/parataxis>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(ich) <3:AUX/root>(bin) <4:ADV/advmod>(schon)
    <ROOT> <5:PRON/nsubj>(Ich) <6:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/expl>(es) <2:VERB/root>(reicht) <3:PART/mark>(zu) <4:VERB/xcomp>(wissen)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:ADJ/ccomp>(unfassbar) <ROOT> <8:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:AUX/aux>(muss)
    <5:PRON/nsubj>(man) <6:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(jetzt) <ROOT> <4:ADP/case>(auf)
    <5:DET/det>(jeden) <6:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 7
    - parataxis
  sentence: "<1:ADV/advmod>(Auch) <2:DET/det>(dieses) <3:NOUN/nsubj>(Gef\xFChl) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:ADV/advmod>(echt) <7:ADJ/root>(strange) <8:PRON/nsubj>(das)\
    \ <9:AUX/cop>(ist) <10:ADJ/parataxis>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Erstmal) <2:VERB/root>(machst) <3:PRON/nsubj>(du) <ROOT>
    <4:ADP/case>(auf) <5:NOUN/root>(Vernunftsmensch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 10
    - nmod
  - !!python/tuple
    - 9
    - 8
    - fixed
  - !!python/tuple
    - 10
    - 4
    - xcomp
  sentence: "<1:SCONJ/root>(Dass) <2:PRON/nsubj>(sie) <3:PRON/obj>(sich) <ROOT> <4:VERB/root>(\xFC\
    bersch\xE4tzen) <5:AUX/cop>(war) <6:PRON/obl:arg>(mir) <7:ADP/case>(von) <8:NOUN/nmod>(Anfang)\
    \ <9:ADP/fixed>(an) <10:ADJ/xcomp>(klar)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:DET/det:poss>(Ihr) <3:NOUN/nsubj>(Schei\xDFcharakter)\
    \ <4:VERB/root>(hat) <5:PRON/obj>(mich) <6:ADV/advmod>(damals) <7:ADV/advmod>(so)\
    \ <ROOT> <8:VERB/root>(motiviert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  sentence: <1:NOUN/root>(Herr) <2:ADP/case>(von) <3:PROPN/nmod>(Blume) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Seitdem) <2:DET/det>(die) <3:NOUN/root>(Liebe) <ROOT> <5:NOUN/root>(Pech)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(bist) <3:DET/advmod>(viel) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - conj
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 13
    - nmod
  - !!python/tuple
    - 16
    - 13
    - cop
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(erz\xE4hle) <3:PRON/obj>(euch) <4:ADP/case>(wie)\
    \ <5:PRON/obl>(das) <6:DET/obj>(alles) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(eskalieren)\
    \ <9:AUX/aux>(konnte) <10:CCONJ/cc>(und) <11:PRON/nsubj>(was) <12:DET/det>(der)\
    \ <13:NOUN/conj>(Ursprung) <14:DET/det>(des) <15:NOUN/nmod>(Konfliktes) <16:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 4
    - compound:prt
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(sagst) <3:PRON/nsubj>(ich) <4:VERB/ccomp>(seh)
    <5:PRON/obj>(das) <6:ADP/case>(mit) <7:DET/det>(den) <8:NOUN/obl>(Vorurteilen)
    <9:DET/obj>(viel) <10:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(leider)
    <5:ADV/advmod>(so) <7:ADV/advmod>(Trotzdem) <ROOT> <8:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 2
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:VERB/root>(finde) <3:PRON/nsubj>(ich)
    <4:DET/obj>(Folgendes) <5:DET/det>(Eine) <6:NOUN/obj>(KI) <7:DET/det>(die) <8:NOUN/obj>(Go)
    <9:VERB/ccomp>(spielen) <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 6
    - 1
    - appos
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - xcomp
  sentence: "<1:ADV/root>(Sch\xF6n) <2:ADV/advmod>(hier) <3:PART/mark>(zu) <4:AUX/cop>(sein)\
    \ <6:NOUN/appos>(Oh) <ROOT> <7:VERB/root>(stimmt) <8:ADJ/xcomp>(Sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(will) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(immer) <6:ADV/advmod>(so) <ROOT> <7:DET/det>(den) <8:NOUN/obj>(Vergleich)
    <9:VERB/root>(ziehen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PRON/nsubj>(Das)\
    \ <5:AUX/cop>(ist) <6:ADV/advmod>(echt) <7:ADJ/root>(verr\xFCckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - mark
  sentence: "<1:ADP/case>(Zu) <2:DET/det>(dem) <3:NOUN/obl>(Gl\xFCck) <4:VERB/root>(wusste)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(vorher) <7:PART/advmod>(nicht) <8:ADP/mark>(wie)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 8
    - obl:arg
  sentence: "<1:ADV/advmod>(Da) <2:ADV/root>(so) <ROOT> <3:PART/mark>(zu) <4:VERB/root>(sagen)\
    \ <5:ADV/advmod>(eben) <6:PART/advmod>(nicht) <7:PRON/nsubj>(er) <8:VERB/conj>(geh\xF6\
    rt) <9:PRON/obl:arg>(mir)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(w\xE4r) <3:ADV/advmod>(schon) <4:ADV/advmod>(sehr)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - expl
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 5
    - conj
  sentence: "<1:PRON/expl>(Ihr) <2:AUX/aux>(k\xF6nnt) <3:PRON/nsubj>(das) <4:PART/advmod>(nicht)\
    \ <5:VERB/root>(riechen) <6:CCONJ/cc>(aber) <7:DET/det>(der) <8:NOUN/nsubj>(Geruch)\
    \ <9:ADP/case>(von) <10:DET/det>(dem) <11:NOUN/nmod>(Ver\xF6den) <12:AUX/conj>(ist)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(auch) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 7
    - advcl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:PRON/obj>(das) <4:VERB/advcl>(lese)\
    \ <6:PRON/nsubj>(das) <7:VERB/root>(h\xF6rt) <8:PRON/obj>(sich) <9:ADV/advmod>(ziemlich)\
    \ <ROOT> <10:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obj
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(sage) <3:PROPN/obj>(Ey) <ROOT> <4:ADV/advmod>(guck)\
    \ <5:ADV/advmod>(mal) <6:ADV/advmod>(da) <7:VERB/root>(gibt) <8:NOUN/nsubj>(s)\
    \ <9:DET/det>(diese) <10:NOUN/obj>(M\xF6glichkeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finden) <3:ADV/advmod>(ganz) <4:DET/obj>(viele)
    <5:ADJ/advmod>(ganz) <ROOT> <6:CCONJ/cc>(und) <7:ADV/advmod>(ganz) <8:ADJ/root>(heftig)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - conj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 13
    - advmod
  - !!python/tuple
    - 16
    - 18
    - obj
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 13
    - ccomp
  - !!python/tuple
    - 19
    - 18
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADV/advmod>(so) <4:DET/det:poss>(mein)\
    \ <5:ADJ/amod>(erster) <6:NOUN/root>(Gedanke) <7:NOUN/appos>(Okay) <ROOT> <8:PRON/nsubj>(Es)\
    \ <9:AUX/cop>(ist) <10:ADJ/root>(schrecklich) <11:CCONJ/cc>(aber) <12:PRON/nsubj>(ich)\
    \ <13:VERB/conj>(wei\xDF) <14:ADV/advmod>(gar) <15:PART/advmod>(nicht) <16:PRON/obj>(was)\
    \ <17:PRON/nsubj>(ich) <18:VERB/ccomp>(machen) <19:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/aux>(haben) <3:NOUN/obj>(Gl\xFCck) <4:ADJ/root>(wunderbar)\
    \ <6:PRON/nsubj>(Das) <7:AUX/parataxis>(ist) <8:ADV/advmod>(ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(Wei\xDFt) <2:PRON/nsubj>(du) <3:PRON/obj>(was) <4:PRON/nsubj>(ich)\
    \ <ROOT> <5:VERB/root>(finde)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(wirklich) <ROOT> <4:CCONJ/cc>(aber)
    <5:PRON/nsubj>(es) <6:AUX/cop>(war) <7:ADV/advmod>(ja) <8:ADV/advmod>(nur) <9:DET/det>(ein)
    <10:NOUN/root>(Filmsturm)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(kennst) <3:ADV/advmod>(irgendwen) <4:CCONJ/cc>(und)\
    \ <5:PRON/nsubj>(du) <6:VERB/conj>(h\xE4lst) <7:PRON/obj>(dich) <8:ADP/xcomp>(f\xFC\
    r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 1
    - compound:prt
  sentence: "<1:VERB/root>(Sind) <2:NUM/nummod>(zwei) <3:NOUN/nsubj>(Zentiliter) <4:ADP/case>(f\xFC\
    r) <5:DET/det>(den) <6:NOUN/obl>(Anfang) <7:PART/advmod>(nicht) <8:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADJ/root>(gangster) <2:CCONJ/cc>(und) <ROOT> <3:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  sentence: <1:AUX/root>(war) <2:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADJ/root>(Klingt) <ROOT> <2:ADV/advmod>(doch) <3:ADV/advmod>(daran)
    <4:AUX/cop>(ist) <5:PROPN/nsubj>(Notch) <6:ADV/advmod>(selbst) <7:ADJ/root>(schuld)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 4
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Weg) <3:ADV/advmod>(hier) <4:AUX/root>(war)
    <5:ADV/advmod>(aber) <6:ADV/advmod>(gestern) <7:ADV/advmod>(auch) <8:ADV/advmod>(noch)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <ROOT> <11:VERB/root>(geebnet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADV/advmod>(so) <ROOT> <4:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - dep
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(gehen) <3:PRON/nsubj>(wir) <4:ADV/advmod>(rein)
    <6:X/dep>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(irgendwie)
    <5:ADV/advmod>(schon) <ROOT> <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:ADV/advmod>(morgens)
    <9:VERB/root>(aufwacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Noch) <2:ADV/advmod>(nie) <3:VERB/root>(gesehen) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Joint) <2:VERB/root>(schmeckt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Texte) <3:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - expl
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 2
    - advmod
  sentence: "<1:ADV/advmod>(Wie) <2:AUX/root>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(jetzt)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(dich) <8:PRON/expl>(Es) <9:AUX/parataxis>(ist)\
    \ <10:ADV/advmod>(schon) <11:ADV/advmod>(noch) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:DET/det>(ein) <4:ADJ/nmod>(paar)
    <5:NOUN/obj>(Erlebnisse) <6:PRON/nmod>(die) <7:PRON/obj>(mich) <ROOT> <8:VERB/root>(beeindruckt)
    <9:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(ziemlich) <ROOT> <2:ADP/case>(mit) <3:DET/det>(der) <4:NOUN/obl>(Krankheit)
    <5:VERB/root>(auseinandergesetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(fand) <4:PRON/obj>(das)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADJ/advmod>(voll)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(nat\xFCrlich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 2
    - ccomp
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:VERB/root>(Sieht) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(ich)
    <5:DET/det>(eine) <6:NOUN/obj>(Brille) <7:VERB/ccomp>(anhabe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADV/advmod>(schon)
    <ROOT> <5:ADV/advmod>(einfach) <6:ADV/advmod>(auch) <7:PART/mark>(zu) <8:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 2
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <2:X/root>(on) <4:X/dep>(Ach) <5:X/dep>(ja) <ROOT> <6:X/root>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(sind) <3:ADV/advmod>(aber) <4:NOUN/compound>(Fra\xDF\
    spuren) <6:NOUN/root>(Ach) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  sentence: <1:PRON/expl>(Ihr) <2:VERB/root>(kennt) <3:PRON/nsubj>(sie) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(deshalb) <6:ADV/advmod>(vielleicht) <7:PART/advmod>(nicht) <8:ADV/advmod>(ganz)
    <9:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - dep
  sentence: <1:NOUN/obj>(Holt) <2:VERB/root>(glaube) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:PRON/obj>(niemanden) <6:ADV/advmod>(so) <7:ADJ/advmod>(richtig) <ROOT> <8:ADP/case>(vorm)
    <9:NOUN/root>(Ofen) <10:ADV/dep>(hervor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:PRON/nsubj>(die)
    <5:ADP/case>(mit) <6:DET/obl>(einem) <7:VERB/root>(reden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: "<ROOT> <1:ADP/case>(\xFCber) <2:NOUN/root>(Schlagzeug) <3:CCONJ/cc>(und)\
    \ <4:NOUN/conj>(Bass)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:PRON/nsubj>(du) <2:ADV/advmod>(nur) <3:VERB/root>(denkst) <5:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 1
    - compound:prt
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 13
    - case
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 8
    - obl
  sentence: "<1:SCONJ/root>(Wenn) <2:DET/det>(der) <3:PROPN/nsubj>(Bitcoin) <5:NOUN/flat>(Kurs)\
    \ <6:ADV/compound:prt>(weiter) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(steigt)\
    \ <9:ADP/case>(wie) <10:ADP/case>(\xFCber) <11:DET/det>(die) <12:ADJ/amod>(letzten)\
    \ <13:NOUN/obl>(Jahre)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advcl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - acl
  - !!python/tuple
    - 14
    - 13
    - aux
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 5
    - parataxis
  - !!python/tuple
    - 17
    - 16
    - nsubj
  - !!python/tuple
    - 18
    - 16
    - advmod
  - !!python/tuple
    - 19
    - 21
    - obj
  - !!python/tuple
    - 20
    - 21
    - nsubj
  - !!python/tuple
    - 21
    - 0
    - root
  - !!python/tuple
    - 22
    - 27
    - cc
  - !!python/tuple
    - 23
    - 24
    - det
  - !!python/tuple
    - 24
    - 21
    - conj
  - !!python/tuple
    - 25
    - 27
    - obj
  - !!python/tuple
    - 26
    - 27
    - nsubj
  - !!python/tuple
    - 27
    - 24
    - acl
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:ADV/advmod>(ehrlich) <4:AUX/advcl>(bin)\
    \ <5:VERB/root>(wei\xDF) <6:PRON/nsubj>(ich) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)\
    \ <9:ADV/advmod>(richtig) <10:ADV/advmod>(genau) <11:PRON/obj>(was) <12:PRON/nsubj>(ich)\
    \ <13:VERB/acl>(denken) <14:AUX/aux>(soll) <15:ADV/advmod>(Einerseits) <16:AUX/parataxis>(ist)\
    \ <17:PRON/nsubj>(das) <18:ADV/advmod>(schon) <ROOT> <19:PRON/obj>(was) <20:PRON/nsubj>(die)\
    \ <21:VERB/root>(machen) <22:CCONJ/cc>(und) <23:DET/det>(die) <24:NOUN/conj>(Man\xF6\
    ver) <25:PRON/obj>(die) <26:PRON/nsubj>(die) <27:VERB/acl>(fliegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <ROOT> <1:AUX/cop>(bin) <2:PRON/nsubj>(ich) <3:ADJ/root>(breit)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(einfach) <4:DET/advmod>(viel)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(ich) <3:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:PRON/nsubj>(ich) <2:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cop
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:AUX/cop>(ist) <2:DET/nsubj>(jeder) <3:ADP/case>(auf) <4:ADV/advmod>(einmal)
    <5:ADJ/root>(korrekt) <6:CCONJ/cc>(und) <7:DET/conj>(keiner) <8:ADV/advmod>(mehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(du) <2:VERB/root>(bist) <3:DET/advmod>(viel) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:NOUN/root>(Rap)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(du) <2:VERB/root>(bist) <3:DET/advmod>(viel) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:NOUN/root>(Rap)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(chill) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <ROOT> <1:VERB/root>(kommt) <2:PRON/nsubj>(er)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(reime) <2:DET/obj>(viel) <3:ADP/compound:prt>(zu) <ROOT>
    <5:X/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:PRON/obl:arg>(mir) <3:ADV/root>(voll) <ROOT> <4:DET/det>(den)
    <5:NOUN/obj>(Atem) <6:VERB/root>(raubt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:AUX/root>(bin) <3:ADP/compound:prt>(zu) <ROOT>
    <4:VERB/root>(benebelt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(echt) <4:ADJ/root>(richtig)\
    \ <ROOT> <5:NOUN/root>(Danke) <6:ADV/advmod>(vielmals) <7:DET/case>(f\xFCrs) <8:NOUN/nmod>(Zeigen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADJ/amod>(flackernde) <2:NOUN/nsubj>(Lichter) <3:VERB/root>(deaktiviert)
    <4:DET/det>(die) <5:ADJ/amod>(folgenden) <6:NOUN/obj>(Bilder) <7:AUX/ccomp>(sind)
    <8:ADV/advmod>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:DET/det:poss>(mein) <2:NOUN/nsubj>(Rap) <3:AUX/root>(ist) <4:PRON/obj>(dir)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(wirklich) <4:ADV/advmod>(ganz)\
    \ <5:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 12
    - advmod
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - aux
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 17
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - aux
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 12
    - ccomp
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADJ/root>(total)
    <ROOT> <5:ADV/advmod>(Also) <6:PRON/nsubj>(man) <7:AUX/aux>(hat) <8:DET/det>(den)
    <9:NOUN/obj>(Boden) <10:PART/advmod>(nicht) <11:ADV/advmod>(mehr) <12:VERB/root>(gesehen)
    <13:PRON/nsubj>(Ich) <14:AUX/aux>(bin) <15:ADV/advmod>(fast) <16:ADV/advmod>(davon)
    <17:VERB/ccomp>(geflogen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - dep
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(haben) <3:ADV/advmod>(so) <ROOT> <4:DET/det>(viel)
    <5:NOUN/dep>(Herzblut) <6:ADP/case>(in) <7:DET/det>(dieses) <8:NOUN/obl>(Projekt)
    <9:VERB/root>(reingesteckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(Wei\xDFt) <2:PRON/nsubj>(du) <3:PRON/obj>(was) <4:PRON/nsubj>(ich)\
    \ <ROOT> <5:VERB/root>(finde)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(erst) <4:NUM/nummod>(50)
    <5:NOUN/nmod>(Jahre) <6:ADV/advmod>(her) <7:PRON/root>(Das) <8:AUX/cop>(ist) <ROOT>
    <9:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - obl:arg
  sentence: "<1:NOUN/root>(Schei\xDF) <2:ADP/advmod>(mit) <ROOT> <3:ADJ/amod>(positiven)\
    \ <4:NOUN/nsubj>(Eigenschaften) <5:PROPN/appos>(Joana) <6:PROPN/flat>(what) <7:DET/flat>(the)\
    \ <11:VERB/root>(erz\xE4hlst) <12:PRON/nsubj>(du) <13:DET/det>(den) <14:NOUN/obl:arg>(Leuten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - nsubj
  - !!python/tuple
    - 8
    - 1
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/root>(verbessert) <2:PRON/obj>(sich) <3:DET/det:poss>(eure) <4:NOUN/nsubj>(Gesundheit)\
    \ <5:ADJ/advmod>(sp\xFCrbar) <6:PRON/nsubj>(Was) <7:PRON/nsubj>(ich) <8:ADV/advmod>(besonders)\
    \ <ROOT> <9:VERB/root>(finde)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <2:PRON/nsubj>(es) <3:PART/advmod>(nicht) <ROOT> <4:DET/det>(ein)
    <5:ADJ/amod>(junger) <6:NOUN/nsubj>(Mensch) <7:DET/nsubj>(alle) <8:AUX/aux>(wollen)
    <9:PRON/obj>(etwas) <10:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - cc
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 6
    - compound:prt
  sentence: <1:ADJ/root>(Klingt) <ROOT> <2:CCONJ/cc>(oder) <3:ADP/case>(In) <4:DET/det>(der)
    <5:NOUN/obl>(Umsetzung) <6:VERB/root>(sieht) <7:DET/det>(das) <8:NOUN/nsubj>(Ganze)
    <9:ADV/advmod>(aber) <10:ADV/advmod>(so) <11:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 14
    - det
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 6
    - obl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(einfach) <ROOT> <4:DET/det>(Dieser)\
    \ <5:NOUN/nsubj>(Sto\xDF) <6:VERB/root>(geht) <7:ADP/case>(durch) <8:DET/det>(diesen)\
    \ <9:NOUN/obl>(Greifarm) <10:DET/det>(einem) <11:ADV/advmod>(mitten) <12:ADP/case>(in)\
    \ <13:DET/det>(die) <14:NOUN/obl>(Magengegend)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  sentence: <1:PRON/nsubj>(der) <2:NOUN/nsubj>(grade) <3:ADJ/root>(richtig) <ROOT>
    <4:VERB/root>(rotiert) <5:ADP/case>(bei) <6:PROPN/obl>(Pilotwings)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(w\xE4r) <3:ADV/advmod>(jetzt) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:PRON/nsubj>(das) <6:VERB/root>(glaub) <7:PRON/nsubj>(ich) <8:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 13
    - 11
    - nsubj
  - !!python/tuple
    - 14
    - 11
    - advmod
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(manifestiert) <3:PRON/obj>(sich) <4:DET/det>(der)
    <5:NOUN/nsubj>(Kapitalismus) <6:ADV/advmod>(halt) <7:ADV/advmod>(auch) <8:ADV/advmod>(sehr)
    <ROOT> <9:CCONJ/cc>(und) <10:ADV/advmod>(deswegen) <11:VERB/root>(fasziniert)
    <12:PRON/obj>(mich) <13:PRON/nsubj>(das) <14:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  sentence: <1:ADJ/root>(Primitiv) <2:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(muss) <3:ADV/advmod>(schon) <ROOT> <4:DET/det:poss>(sein)
    <5:ADV/advmod>(so) <6:PART/mark>(zu) <7:AUX/root>(sein) <8:ADP/case>(wie) <9:PRON/obl>(Du)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(deswegen) <3:PRON/nsubj>(man) <4:VERB/root>(sabbert)
    <5:ADV/advmod>(so) <ROOT> <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:PRON/obj>(sich)
    <9:PRON/obj>(das) <10:VERB/root>(rausnimmt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:ADP/case>(Inklusive) <2:NOUN/obl>(Versand) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 8
    - ccomp
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT> <4:SCONJ/mark>(dass)\
    \ <5:PRON/nsubj>(die) <6:DET/det>(das) <7:DET/obj>(alles) <8:VERB/root>(abspeichern)\
    \ <9:DET/det>(Viel) <10:NOUN/obj>(Spa\xDF) <11:X/ccomp>(hey)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <2:PROPN/dep>(Orhan) <4:PRON/nsubj>(Das) <5:AUX/root>(ist) <6:ADV/advmod>(einfach)
    <7:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(h\xE4tte) <3:ADV/advmod>(niemals) <4:ADV/advmod>(damit)\
    \ <5:VERB/root>(gerechnet) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(das) <8:ADV/advmod>(so)\
    \ <ROOT> <9:AUX/root>(wird)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:PROPN/root>(Hammer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Warum) <2:AUX/root>(war) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/cop>(war) <3:NOUN/compound>(s) <5:PRON/nsubj>(Das)
    <6:AUX/cop>(war) <7:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 8
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/root>(Und) <ROOT> <2:SCONJ/mark>(wie) <3:PRON/nsubj>(wir) <4:PRON/obj>(uns)
    <5:ADP/case>(von) <6:NOUN/obl>(Herstellern) <7:VERB/xcomp>(austricksen) <8:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(war) <ROOT> <3:ADV/advmod>(so) <4:DET/det>(die)\
    \ <5:ADJ/amod>(ersten) <6:NOUN/root>(N\xE4chte) <7:ADV/advmod>(drau\xDFen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:DET/det>(viele) <4:NOUN/obj>(Themen)\
    \ <5:ADV/advmod>(wo) <6:PRON/nsubj>(wir) <7:ADV/advmod>(nie) <8:ADV/advmod>(genauso)\
    \ <ROOT> <9:VERB/root>(erz\xE4hlt) <10:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 11
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - obl
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - aux:pass
  - !!python/tuple
    - 14
    - 11
    - advmod
  sentence: <1:DET/det:poss>(meine) <2:NOUN/obj>(CD) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/nmod>(Regal) <6:ADP/case>(bei) <7:DET/det>(dem) <8:PROPN/obl>(Media) <9:PROPN/flat>(Markt)
    <10:PART/mark>(zu) <11:VERB/root>(sehen) <12:PRON/nsubj>(Das) <13:AUX/aux:pass>(war)
    <14:ADV/advmod>(halt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:NOUN/compound>(Top) <3:NOUN/nsubj>(Ten) <4:PRON/nsubj>(Das) <5:AUX/root>(war)\
    \ <6:ADV/advmod>(schon) <ROOT> <7:PRON/nsubj>(das) <8:AUX/cop>(war) <9:DET/det>(das)\
    \ <10:ADJ/amod>(beste) <11:NOUN/root>(Gef\xFChl) <12:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:CCONJ/cc>(aber) <2:NOUN/nsubj>(Leute) <3:ADV/advmod>(heute) <4:VERB/root>(wird)
    <5:PRON/nsubj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cc
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(wie) <2:ADJ/root>(heftig) <3:CCONJ/cc>(und) <ROOT> <4:ADV/advmod>(unethisch)
    <5:PRON/nsubj>(ich) <6:PRON/nsubj>(das) <7:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Sache) <3:ADP/case>(mit) <4:PROPN/nmod>(Albert)
    <5:AUX/root>(war) <6:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:ADJ/amod>(ethischen) <3:NOUN/nsubj>(Standards) <4:VERB/root>(haben)\
    \ <5:PRON/obj>(sich) <6:ADP/case>(zu) <7:DET/det>(dem) <8:NOUN/obl>(Gl\xFCck)\
    \ <ROOT> <9:VERB/root>(ver\xE4ndert)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Achtung) <2:ADP/case>(in) <3:DET/det>(diesem) <4:NOUN/nmod>(Video)
    <5:VERB/root>(geht) <6:PRON/nsubj>(es) <7:ADP/case>(um) <8:DET/obl>(ein) <ROOT>
    <9:ADJ/amod>(rassistisches) <10:NOUN/root>(Konzept)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj:pass
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(teilweise) <3:VERB/root>(merken) <4:PRON/nsubj>(wir)\
    \ <5:ADV/advmod>(gar) <6:PART/advmod>(nicht) <7:ADP/mark>(wie) <ROOT> <8:PRON/nsubj:pass>(wir)\
    \ <9:ADP/case>(durch) <10:PRON/obl>(die) <11:VERB/root>(gepr\xE4gt) <12:AUX/aux:pass>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Umst\xE4nde) <3:AUX/cop>(sind) <4:ADV/advmod>(heute)\
    \ <5:PART/advmod>(nicht) <6:ADV/advmod>(ganz) <7:ADV/root>(so) <ROOT> <8:ADP/case>(wie)\
    \ <9:ADJ/amod>(letztes) <10:NOUN/root>(Mal)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/root>(ist) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:PRON/nsubj>(Ihr) <6:AUX/aux>(habt) <7:NOUN/obj>(s) <8:ADV/advmod>(bestimmt)
    <9:VERB/root>(mitbekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj:pass
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  sentence: <1:ADV/advmod>(Da) <2:AUX/cop>(ist) <3:DET/det>(das) <4:NOUN/nsubj:pass>(Licht)
    <5:VERB/root>(angegangen) <6:PRON/nsubj>(Das) <7:VERB/parataxis>(funktioniert)
    <8:ADV/advmod>(echt) <9:ADJ/obj>(Total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: "<1:CCONJ/cc>(Und) <2:ADP/case>(f\xFCr) <3:PRON/obl>(mich) <4:VERB/root>(war)\
    \ <5:PRON/nsubj>(es) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - expl
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 1
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - xcomp
  sentence: "<1:AUX/root>(ist) <2:PRON/expl>(es) <3:ADV/advmod>(nat\xFCrlich) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(so) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(man) <8:PRON/obj>(sich)\
    \ <9:VERB/ccomp>(denkt) <10:ADJ/xcomp>(okay) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/root>(Wow) <ROOT> <2:ADV/advmod>(voll) <3:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  sentence: <1:ADV/advmod>(All) <2:DET/det>(diese) <3:NOUN/nsubj>(Technologien) <4:AUX/cop>(werden)
    <5:ADV/advmod>(immer) <6:ADJ/root>(besser) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich)
    <9:VERB/conj>(finde) <10:PRON/nsubj>(es) <11:NOUN/obj>(mega) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <5:PRON/nsubj>(Es)\
    \ <6:VERB/root>(l\xF6st) <7:PRON/obj>(sich) <8:PRON/obj>(nichts) <9:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 8
    - case
  - !!python/tuple
    - 12
    - 8
    - dep
  - !!python/tuple
    - 13
    - 8
    - advmod
  sentence: "<1:PROPN/nsubj>(Steve) <2:PROPN/flat>(Ballmer) <3:VERB/root>(spielte)\
    \ <4:PRON/obj>(sich) <5:ADV/advmod>(derart) <ROOT> <6:ADP/case>(an) <7:DET/det>(dem)\
    \ <8:NOUN/root>(Rande) <9:DET/det>(der) <10:NOUN/nmod>(Illegalit\xE4t) <11:ADP/case>(ab)\
    \ <12:SCONJ/dep>(dass) <13:ADV/advmod>(schlie\xDFlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 5
    - fixed
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(h\xF6rt) <3:PRON/obj>(sich) <ROOT>\
    \ <4:ADP/case>(nach) <5:NOUN/obl>(Labor) <6:ADP/fixed>(an) <8:ADV/advmod>(So)\
    \ <9:AUX/root>(ist) <10:PRON/nsubj>(das) <11:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 1
    - conj
  - !!python/tuple
    - 6
    - 1
    - appos
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 1
    - advmod
  sentence: <1:NOUN/root>(Glas) <2:NOUN/appos>(Plastik) <3:NOUN/appos>(Metall) <4:CCONJ/cc>(und)
    <5:NOUN/conj>(Bauschutt) <6:PRON/appos>(Das) <7:AUX/cop>(ist) <8:ADV/advmod>(wirklich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - mark
  - !!python/tuple
    - 11
    - 8
    - cop
  sentence: <1:PROPN/compound>(Wow) <2:PRON/nsubj>(Das) <3:AUX/root>(war) <4:ADV/advmod>(schon)
    <ROOT> <5:ADP/case>(bei) <6:ADV/advmod>(so) <7:DET/det>(eine) <8:NOUN/root>(Auswilderung)
    <9:ADV/advmod>(dabei) <10:PART/mark>(zu) <11:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 11
    - 5
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wie) <2:PRON/nsubj>(man) <3:ADV/advmod>(so) <4:ADV/advmod>(sch\xF6\
    n) <5:VERB/root>(sagt) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(es) <8:ADV/advmod>(einfach)\
    \ <9:ADP/case>(f\xFCr) <10:PRON/obl>(mich) <11:ADV/advmod>(so) <ROOT> <12:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:VERB/root>(relativiert) <4:PRON/obj>(das)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(f\xFCr) <7:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:NOUN/root>(Leute) <3:ADP/case>(wie) <ROOT> <4:AUX/cop>(ist)
    <5:ADV/advmod>(bitte) <6:DET/det>(der) <7:NOUN/root>(Wasserverbrauch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - xcomp
  sentence: "<1:VERB/root>(Klingt) <2:ADP/case>(in) <3:DET/det>(dem) <4:ADJ/amod>(ersten)\
    \ <5:NOUN/obl>(Moment) <6:DET/det>(ein) <7:ADV/advmod>(bisschen) <ROOT> <8:CCONJ/cc>(aber)\
    \ <9:DET/det>(viele) <10:NOUN/nsubj>(Milliard\xE4re) <11:VERB/root>(bereiten)\
    \ <12:PRON/nsubj>(sich) <13:ADJ/xcomp>(aktiv)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NUM/dep>(75) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <ROOT> <4:AUX/cop>(ist)
    <5:ADV/advmod>(fast) <6:NUM/nummod>(100) <7:NOUN/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Dass) <2:PRON/nsubj>(du) <3:DET/det>(ein) <4:NOUN/root>(Pitbull)
    <5:AUX/cop>(bist) <6:AUX/cop>(ist) <7:ADV/advmod>(irgendwie) <8:ADV/advmod>(nur)
    <ROOT> <9:VERB/root>(geklaut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(will) <ROOT> <3:NOUN/dep>(Karriere) <4:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/det>(diesen) <4:NOUN/obj>(Hype)
    <5:CCONJ/cc>(und) <6:NOUN/conj>(Film) <ROOT> <7:ADJ/advmod>(mathematisch) <8:VERB/root>(vorbereitet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: <1:VERB/root>(Bewegt) <2:PRON/obj>(euch) <ROOT> <3:ADP/case>(zu) <4:DET/det>(dem)
    <5:PROPN/root>(Bootyshake) <7:NOUN/flat>(Bass)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - cop
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/root>(Shit) <3:DET/det:poss>(Deine) <4:NOUN/nsubj>(Gegend) <5:AUX/cop>(ist)
    <6:ADV/advmod>(zwar) <ROOT> <7:CCONJ/cc>(und) <8:ADJ/root>(bekannt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(ihr) <3:DET/root>(alle) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/obl>(Start) <7:VERB/root>(seid)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:DET/det>(Die) <2:PROPN/root>(Nikes) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(wollt) <ROOT> <3:VERB/root>(wirken) <5:PRON/obj>(nichts)
    <6:ADV/compound:prt>(weiter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(sie) <ROOT> <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 9
    - obl:arg
  - !!python/tuple
    - 11
    - 9
    - mark
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(da) <4:ADV/advmod>(so)
    <5:DET/det>(ein) <6:NOUN/nsubj>(Mann) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich) <9:VERB/conj>(denke)
    <10:PRON/obl:arg>(mir) <11:ADP/mark>(wie) <ROOT> <12:PRON/nsubj>(du) <13:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(war) <2:PRON/root>(das) <ROOT> <3:VERB/root>(gelogen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - dep
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hass) <3:PRON/obj>(es) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/dep>(Tag) <6:DET/det>(ein) <7:NOUN/nmod>(Tag) <8:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADP/root>(wie) <ROOT> <2:VERB/root>(bist) <3:PRON/nsubj>(du) <4:ADV/advmod>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/aux>(willst) <4:VERB/root>(sehen)
    <5:SCONJ/mark>(wie) <6:PRON/nsubj>(ich) <7:PRON/obj>(mich) <ROOT> <8:NOUN/root>(blamier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:INTJ/root>(guck) <2:SCONJ/advmod>(wie) <3:PRON/nsubj>(ich) <ROOT> <4:NOUN/root>(zauber)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - compound:prt
  sentence: "<1:DET/det:poss>(Mein) <2:ADJ/amod>(st\xE4ndiger) <3:NOUN/nsubj>(Kontrollverlust)\
    \ <4:VERB/root>(wurde) <5:ADV/advmod>(einfach) <6:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - csubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(immer) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(ich)
    <5:VERB/csubj>(rappe) <6:AUX/cop>(ist) <7:DET/det>(der) <8:NOUN/root>(Puls) <ROOT>
    <9:ADP/case>(an) <10:DET/det>(dem) <11:VERB/root>(durchdrehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Au\xDFenseiter) <3:NOUN/root>(Status)\
    \ <4:ADV/advmod>(dann) <ROOT> <5:INTJ/root>(zelebrier)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/nsubj>(Haltung) <3:AUX/cop>(ist) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advcl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - mark
  - !!python/tuple
    - 10
    - 5
    - obj
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(ich) <ROOT> <4:VERB/advcl>(kassiere)
    <5:VERB/root>(werd) <7:PRON/nsubj>(ich) <8:ADV/advmod>(immer) <9:ADV/mark>(weiter)
    <10:NOUN/obj>(Zuboxen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PROPN/nsubj>(Oscar) <2:VERB/root>(macht) <3:DET/det>(den) <4:NOUN/obj>(Beat)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 5
    - conj
  - !!python/tuple
    - 16
    - 15
    - obj
  - !!python/tuple
    - 17
    - 18
    - case
  - !!python/tuple
    - 18
    - 16
    - nmod
  - !!python/tuple
    - 19
    - 21
    - cc
  - !!python/tuple
    - 20
    - 21
    - det:poss
  - !!python/tuple
    - 21
    - 18
    - conj
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:CCONJ/cc>(aber) <4:ADV/advmod>(da)
    <5:AUX/cop>(ist) <6:PRON/root>(was) <7:ADP/case>(zwischen) <8:PRON/nmod>(dir)
    <9:CCONJ/cc>(und) <10:DET/det:poss>(deiner) <11:NOUN/conj>(Mama) <13:CCONJ/cc>(Und)
    <14:ADV/advmod>(da) <15:VERB/conj>(ist) <16:DET/obj>(viel) <17:ADP/case>(zwischen)
    <18:PRON/nmod>(mir) <19:CCONJ/cc>(und) <20:DET/det:poss>(deiner) <21:NOUN/conj>(Mama)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:VERB/root>(vermisse) <3:CCONJ/cc>(und) <4:PRON/nsubj>(ich)
    <5:VERB/conj>(frag) <6:SCONJ/mark>(ob) <7:PRON/nsubj>(ich) <8:ADV/advmod>(hier)
    <9:ADV/advmod>(unten) <10:VERB/ccomp>(bleib)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:DET/root>(viel)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(ist) <2:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Ding) <3:ADP/case>(in) <4:DET/det:poss>(meiner)\
    \ <5:NOUN/nmod>(Brust) <6:VERB/root>(schl\xE4gt) <7:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Ding) <3:ADP/case>(in) <4:DET/det:poss>(meiner)\
    \ <5:NOUN/nmod>(Brust) <6:VERB/root>(schl\xE4gt) <7:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 10
    - obl
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(versuche) <3:PRON/obj>(mich) <4:ADV/advmod>(dabei)
    <5:ADJ/advmod>(total) <ROOT> <6:ADP/case>(auf) <7:DET/det:poss>(meinen) <8:NOUN/obl>(Atem)
    <9:PART/mark>(zu) <10:VERB/root>(konzentrieren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(habt) <3:ADJ/advmod>(extrem) <ROOT>
    <4:ADP/case>(auf) <5:DET/det>(die) <6:NOUN/obl>(Schuldinduktion) <7:VERB/root>(reagiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(schon)
    <ROOT> <5:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - flat
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <ROOT> <3:ADP/case>(aus) <4:SCONJ/root>(wenn)
    <5:PRON/obj>(sich) <6:PROPN/nsubj>(n) <7:PROPN/flat>(Vulkan) <9:PROPN/flat>(Odogaron)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(Dass) <2:PRON/nsubj>(ich) <ROOT> <3:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 5
    - aux
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(alles) <4:ADV/advmod>(sehr)\
    \ <ROOT> <5:VERB/root>(limitiert) <6:DET/det>(Welche) <7:NOUN/obj>(Informationen)\
    \ <8:AUX/aux>(d\xFCrfen) <9:ADV/advmod>(raus)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:DET/root>(alles) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(gestreamlined)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(bei) <3:ADV/advmod>(so) <4:PRON/nsubj>(was)
    <5:ADP/case>(wie) <6:PROPN/nmod>(Blizzard) <7:ADV/advmod>(also) <8:PRON/nsubj>(das)
    <9:AUX/cop>(ist) <10:DET/root>(alles) <11:ADV/advmod>(so) <ROOT> <12:VERB/root>(reglementiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 6
    - flat
  sentence: <1:CCONJ/cc>(und) <2:ADV/root>(so) <ROOT> <3:ADP/case>(unter) <4:NOUN/root>(Verschluss)
    <5:ADP/case>(no) <6:NOUN/nmod>(chance) <8:X/flat>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 6
    - nsubj
  sentence: "<1:SCONJ/mark>(wenn) <2:PRON/nsubj>(du) <3:VERB/root>(wei\xDFt) <4:ADJ/xcomp>(okay)\
    \ <ROOT> <5:ADV/advmod>(da) <6:AUX/root>(waren) <7:ADV/advmod>(jetzt) <8:ADV/advmod>(irgendwie)\
    \ <9:ADV/advmod>(nur) <10:NUM/nummod>(f\xFCnf) <11:NOUN/nsubj>(Leute)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wenn) <2:ADV/advmod>(da) <3:ADV/advmod>(so) <4:X/root>(n)\
    \ <ROOT> <5:ADJ/amod>(gro\xDFes) <6:NOUN/obj>(Spiel) <7:ADV/advmod>(dabei) <8:VERB/root>(rauskommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:ADP/root>(wie) <ROOT> <3:AUX/cop>(ist) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(irgendwie) <6:NOUN/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Daf\xFCr) <2:VERB/root>(kannst) <3:PRON/nsubj>(du) <4:PRON/obj>(dich)\
    \ <5:ADP/case>(mit) <6:NOUN/obl>(Gangstern) <7:ADP/case>(in) <8:NOUN/obl>(Videos)\
    \ <ROOT> <9:VERB/root>(schm\xFCcken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(es) <ROOT> <4:NOUN/root>(sorry)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(wird) <3:ADJ/xcomp>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADJ/root>(unheimlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - advmod
  - !!python/tuple
    - 16
    - 13
    - compound:prt
  sentence: "<1:PRON/nsubj>(man) <2:ADP/case>(bei) <3:DET/det>(einer) <4:NOUN/obl>(Rakete)\
    \ <5:DET/det>(ein) <6:NOUN/obj>(Triebwerk) <7:VERB/root>(z\xFCndet) <8:ADV/advmod>(nur)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(ganz) <11:ADV/advmod>(so) <ROOT> <12:ADV/advmod>(Dadurch)\
    \ <13:VERB/root>(hat) <14:PROPN/nsubj>(Oumuamua) <15:ADV/advmod>(dann) <16:ADP/compound:prt>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - cop
  sentence: <1:ADV/advmod>(oftmals) <2:PART/advmod>(nicht) <3:ADJ/root>(nachvollziehbar)
    <4:CCONJ/cc>(oder) <5:ADV/conj>(so) <ROOT> <6:ADJ/root>(erkennbar) <8:CCONJ/cc>(doch)
    <9:ADV/advmod>(jetzt) <10:AUX/cop>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:NOUN/nsubj>(Indie) <3:AUX/cop>(ist) <4:PROPN/nsubj>(Maquette)
    <5:ADJ/root>(definitiv)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:NUM/nummod>(Zwei) <2:NOUN/nmod>(Jahre) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(echt) <7:DET/det>(ein) <8:ADV/root>(bisschen)
    <ROOT> <10:PROPN/root>(Mhm)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT> <3:ADP/case>(f\xFCr) <4:PROPN/root>(Dich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 10
    - acl
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(es)\
    \ <ROOT> <5:VERB/acl>(reflektiert) <6:AUX/aux>(h\xE4tte) <7:PRON/nsubj>(ich) <8:PART/advmod>(nicht)\
    \ <9:ADV/advmod>(so) <10:VERB/root>(gedacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:SCONJ/root>(Dass) <2:PRON/nsubj>(sie) <3:PRON/obj>(das) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(analysieren) <6:AUX/aux>(konnte) <7:ADV/advmod>(trotzdem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - cop
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(da) <2:AUX/root>(war) <3:PRON/nsubj>(es) <4:ADV/advmod>(besonders)
    <ROOT> <5:SCONJ/mark>(weil) <6:PRON/nsubj>(es) <7:AUX/cop>(war) <8:ADV/advmod>(eher)
    <9:ADP/case>(wie) <10:DET/det>(ein) <11:NOUN/root>(Onlineshop)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 1
    - advcl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/root>(Ach) <2:ADV/advmod>(vielleicht) <3:SCONJ/mark>(weil) <4:PRON/nsubj>(man)
    <5:DET/det>(die) <6:ADJ/amod>(Lego-) <7:NOUN/obj>(Arenen) <8:ADJ/advcl>(total)
    <ROOT> <9:VERB/root>(zerlegen) <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(Um) <2:PRON/nsubj>(das) <3:ADJ/root>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:ADV/advmod>(Hier) <3:VERB/root>(steht) <4:DET/det>(der)\
    \ <5:NOUN/nsubj>(Name\u2026)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Hey) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:DET/det>(Diese) <2:NOUN/nsubj>(Strecke) <3:AUX/root>(war) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <4:ADV/advmod>(grad)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:ADV/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Oh) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:X/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  sentence: <1:ADV/root>(Schon) <ROOT> <2:CCONJ/cc>(und) <3:ADP/case>(hinter) <4:PRON/root>(dir)
    <5:ADV/advmod>(auch) <6:DET/det>(diese) <7:NOUN/nsubj>(Notstromaggregate) <8:ADV/advmod>(immer)
    <9:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <ROOT> <1:ADP/case>(mit) <2:DET/det:poss>(deiner) <3:NOUN/root>(Gang)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:ADV/advmod>(oft) <3:AUX/root>(sind) <4:PRON/nsubj>(sie)
    <ROOT> <5:ADJ/root>(arrogant)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:ADV/root>(Wie) <ROOT> <2:DET/det:poss>(mein) <3:NOUN/root>(Flow) <4:AUX/cop>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Allein) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADP/case>(von) <6:ADV/advmod>(hier) <7:VERB/root>(entt\xE4uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(f\xFChl) <3:PRON/obj>(mich) <4:ADP/case>(von)\
    \ <5:DET/det>(dem) <6:NOUN/obl>(Glauben) <7:ADP/case>(an) <8:ADV/advmod>(sowas)\
    \ <ROOT> <9:ADP/case>(unter) <10:NOUN/obl>(Druck) <11:VERB/root>(gesetzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADJ/amod>(Hellbraune) <2:NOUN/nsubj>(Augen) <3:ADP/case>(in) <4:DET/det>(den)
    <5:PROPN/nmod>(Ray) <7:PROPN/flat>(Bans) <8:ADJ/root>(tiefschwarz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Schon) <2:ADJ/root>(relativ) <ROOT> <3:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(macht) <3:PRON/obl:arg>(mir) <4:DET/obj>(alle)
    <5:ADP/compound:prt>(zu) <ROOT> <6:ADP/case>(auf) <7:PROPN/root>(Scarface)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(auf) <3:DET/det>(dem) <4:NOUN/obl>(Spiel)\
    \ <5:VERB/root>(steht) <6:AUX/aux>(ist) <7:ADP/case>(f\xFCr) <8:PRON/obl>(mich)\
    \ <9:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Letztens) <2:VERB/root>(hab) <3:PRON/nsubj>(ich) <4:PRON/obj>(mich)
    <5:ADP/case>(bei) <6:DET/det>(dem) <7:NOUN/obl>(Treppensteigen) <ROOT> <8:VERB/root>(verausgabt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PROPN/root>(dis) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Wieder) <2:ADV/root>(so) <ROOT> <3:ADP/case>(auf) <4:NOUN/root>(Chemie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: "<1:NOUN/nsubj>(Rappers) <2:VERB/root>(machen) <3:ADV/advmod>(\xFCberall)\
    \ <4:ADP/compound:prt>(auf) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 11
    - obl
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PROPN/nsubj>(Jascha) <3:ADP/case>(mit) <4:PRON/obl>(mir)
    <ROOT> <5:ADJ/advmod>(verwirrtem) <6:ADV/advmod>(nachts) <7:ADP/case>(um) <8:NUM/obl>(4)
    <9:DET/det>(die) <10:NOUN/nsubj>(Patte) <11:VERB/root>(teilt)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 2
    - advmod
  sentence: <2:VERB/root>(Machst) <3:PRON/nsubj>(du) <4:NOUN/obj>(Filme) <5:PROPN/appos>(Hamad)
    <6:CCONJ/cc>(oder) <7:AUX/conj>(bist) <8:PRON/nsubj>(du) <9:ADV/advmod>(echt)
    <10:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 11
    - obl
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 4
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  - !!python/tuple
    - 16
    - 11
    - advmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/amod>(fulltime) <4:NOUN/root>(Hustler)\
    \ <5:DET/det:poss>(ihr) <6:VERB/parataxis>(seid) <7:NOUN/obj>(S\xE4ufer) <8:ADP/case>(durch)\
    \ <9:NOUN/obl>(Rap) <10:PRON/nsubj>(ich) <11:VERB/parataxis>(war) <12:ADV/advmod>(damals)\
    \ <13:ADP/case>(in) <14:DET/det>(der) <15:NOUN/obl>(Schulzeit) <16:ADV/advmod>(schon)\
    \ <ROOT> <17:ADP/case>(an) <18:DET/det>(dem) <19:NOUN/root>(Arsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  sentence: <1:DET/det:poss>(mein) <2:NOUN/root>(Outfit) <3:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  sentence: "<1:ADP/case>(Auf) <2:ADV/advmod>(einmal) <3:AUX/cop>(ist) <4:DET/det>(jeder)\
    \ <5:NOUN/nsubj>(Kr\xFCppel) <6:ADJ/root>(hart) <7:CCONJ/cc>(und) <8:ADV/conj>(so)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(wollen) <3:ADP/compound:prt>(auf)
    <ROOT> <4:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(kannst) <ROOT> <3:NOUN/root>(rhymen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(machen) <2:NOUN/obj>(Videos) <3:ADJ/advmod>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: "<1:ADJ/advmod>(fr\xFCher) <2:VERB/root>(wart) <3:PRON/nsubj>(ihr) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Typ) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 1
    - dep
  sentence: <1:NOUN/root>(Thema) <3:PROPN/appos>(Okay) <4:X/dep>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:AUX/cop>(war) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:NOUN/nsubj>(Kinder) <2:VERB/root>(heiraten) <3:ADV/advmod>(hier) <4:ADP/case>(mit)
    <5:NUM/obl>(15) <6:ADV/advmod>(dann) <7:VERB/conj>(klingt) <8:PRON/nsubj>(das)
    <9:ADV/advmod>(erstmal) <10:ADV/advmod>(irgendwie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: "<1:PROPN/root>(Wow) <ROOT> <2:NOUN/nsubj>(Polo) <3:AUX/aux>(kann) <4:ADV/advmod>(wirklich)\
    \ <5:DET/det>(die) <6:NOUN/root>(Abk\xFCrzung) <7:AUX/cop>(sein) <8:ADP/case>(f\xFC\
    r) <9:NOUN/nmod>(Poloch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nsubj
  sentence: <1:ADV/root>(Ja) <ROOT> <2:PRON/expl>(Es) <3:VERB/root>(dauert) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(mehr) <6:ADV/advmod>(lange) <7:ADV/advmod>(dann) <8:VERB/conj>(kommt)
    <9:DET/det>(das) <10:NOUN/nsubj>(Ei)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(die) <2:ADP/case>(f\xFCr) <3:ADJ/amod>(damalige) <4:NOUN/root>(Verh\xE4\
    ltnisse) <ROOT> <5:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 3
    - parataxis
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(da) <3:VERB/root>(denkt) <4:PRON/nsubj>(man)
    <5:PROPN/obj>(Oah) <6:DET/det>(die) <7:NOUN/obj>(Technik) <8:AUX/parataxis>(ist)
    <9:NUM/obl>(2021) <10:ADV/advmod>(ja) <11:ADV/advmod>(soooo) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 9
    - nmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 4
    - nsubj
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/root>(so) <ROOT> <3:ADV/advmod>(sogar) <4:SCONJ/root>(dass)\
    \ <5:ADP/case>(in) <6:PROPN/nmod>(Outriders) <7:ADJ/advmod>(regelm\xE4\xDFig)\
    \ <8:ADJ/advmod>(hart) <9:ADJ/amod>(ergrindetes) <10:NOUN/nsubj>(Inventar)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - obl
  - !!python/tuple
    - 11
    - 8
    - compound:prt
  sentence: <1:PRON/nsubj>(Wer) <2:ADP/case>(von) <3:PRON/obl>(euch) <4:AUX/root>(ist)
    <ROOT> <5:ADV/advmod>(drauf) <7:PRON/nsubj>(Wir) <8:VERB/root>(sind) <9:ADP/case>(auf)
    <10:NOUN/obl>(Kontakt) <11:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(so)
    <ROOT> <5:SCONJ/mark>(wie) <6:DET/det>(viele) <7:ADJ/amod>(einzelne) <8:NOUN/nsubj>(Arbeitsschritte)
    <9:PRON/root>(das) <10:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 2
    - advcl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - aux
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(kann) <3:SCONJ/mark>(dass) <4:AUX/advcl>(sein)
    <6:DET/det>(Der) <7:NOUN/nsubj>(Typ) <8:AUX/aux>(kann) <ROOT> <9:ADJ/root>(reim)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:ADV/advmod>(aber) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: "<1:ADP/root>(zu) <ROOT> <2:AUX/root>(w\xE4re) <3:PRON/obl:arg>(mir) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(jetzt) <6:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Kumpel) <3:ADP/case>(von) <4:PRON/nmod>(mir)
    <5:VERB/root>(hat) <6:ADV/advmod>(richtig) <ROOT> <7:ADP/case>(aus) <8:DET/det>(der)
    <9:NOUN/obl>(Unterlippe) <10:VERB/root>(geblutet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 6
    - xcomp
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Ausma\xDF) <3:AUX/root>(ist) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:ADV/advmod>(Hier) <6:VERB/root>(bleiben) <7:ADV/advmod>(einfach) <8:DET/det>(keine)\
    \ <9:NOUN/nsubj>(Leute) <10:ADV/advmod>(mehr) <11:VERB/xcomp>(h\xE4ngen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - ccomp
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:PRON/obj>(die) <2:PRON/nsubj>(ich) <3:ADV/advmod>(bisher) <4:VERB/root>(hatte)
    <5:PRON/nsubj>(das) <6:AUX/ccomp>(war) <7:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - obl:arg
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:AUX/cop>(Ist) <4:PRON/obl:arg>(mir)
    <5:ADJ/root>(egal)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  sentence: <1:INTJ/root>(Machst) <2:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:ADJ/root>(echt) <ROOT> <3:PRON/nsubj>(Es) <4:AUX/cop>(ist)\
    \ <5:ADJ/root>(wundersch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(fand)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:SCONJ/mark>(als) <2:PRON/nsubj>(wir) <3:ADV/advmod>(unterwegs) <4:AUX/cop>(waren)
    <5:ADJ/root>(voll) <ROOT> <6:PRON/nsubj>(die) <7:VERB/root>(merkt) <8:PRON/obj>(es)
    <9:ADV/advmod>(gar) <10:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADV/advmod>(auch)\
    \ <5:ADV/root>(so) <ROOT> <6:SCONJ/mark>(dass) <7:PRON/nsubj>(das) <8:ADV/advmod>(so)\
    \ <9:ADJ/root>(m\xF6glich) <10:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:SCONJ/mark>(weil) <6:ADV/advmod>(dann) <7:VERB/root>(wei\xDF) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(noch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obl:arg
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/obl:arg>(Moment) <3:PRON/nsubj>(das) <4:VERB/root>(stelle)
    <5:PRON/nsubj>(ich) <6:PRON/obl:arg>(mir) <7:ADV/advmod>(auch) <ROOT> <8:ADP/root>(vor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/advmod>(auch)
    <5:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(sind) <2:DET/root>(alle) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: <1:ADJ/root>(Okay) <2:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 13
    - mark
  - !!python/tuple
    - 9
    - 13
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 4
    - advcl
  - !!python/tuple
    - 14
    - 13
    - aux
  - !!python/tuple
    - 15
    - 19
    - mark
  - !!python/tuple
    - 16
    - 19
    - nsubj
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 13
    - ccomp
  - !!python/tuple
    - 20
    - 19
    - advmod
  - !!python/tuple
    - 21
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:ADP/case>(vor) <3:DET/obl>(allem) <4:VERB/root>(gab)
    <5:PRON/expl>(es) <6:NOUN/obj>(Momente) <7:ADV/advmod>(wo) <8:SCONJ/mark>(bevor)
    <9:PRON/nsubj>(wir) <10:DET/det>(diese) <11:NOUN/obj>(Treppe) <12:ADV/advmod>(runter)
    <13:VERB/advcl>(gegangen) <14:AUX/aux>(sind) <15:SCONJ/mark>(dass) <16:PRON/nsubj>(ich)
    <17:ADV/advmod>(ganz) <18:ADV/advmod>(woanders) <19:VERB/ccomp>(war) <20:ADJ/advmod>(ganz)
    <ROOT> <21:ADV/root>(woanders)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 10
    - 3
    - obl
  - !!python/tuple
    - 11
    - 10
    - appos
  sentence: "<1:ADV/advmod>(Irgendwann) <2:ADJ/advmod>(sp\xE4ter) <3:VERB/root>(l\xE4\
    uft) <4:ADV/advmod>(dann) <5:ADV/advmod>(zuf\xE4llig) <6:DET/det>(eine) <7:NOUN/nsubj>(Werbung)\
    \ <8:ADP/case>(f\xFCr) <10:INTJ/obl>(Mach) <11:PRON/appos>(dich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(Die) <2:VERB/root>(sehen) <ROOT> <3:ADP/case>(aus) <4:PRON/nmod>(Was)\
    \ <5:AUX/cop>(sind) <6:PRON/root>(das) <7:ADP/case>(f\xFCr) <8:NOUN/nmod>(Tropfsteine)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - ccomp
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/aux>(muss) <3:PRON/nsubj>(man) <4:ADV/advmod>(richtig)\
    \ <5:VERB/root>(\xFCben) <6:PRON/nsubj>(Das) <7:AUX/ccomp>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(dabei) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(erfolgreich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nmod>(sich) <3:DET/det>(der) <4:ADJ/amod>(soziale)
    <5:NOUN/root>(Einfluss)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: "<1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(das) <3:VERB/root>(geworden)\
    \ <4:AUX/aux>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 8
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:PRON/obj>(was) <4:DET/det>(manche)\
    \ <5:NOUN/nsubj>(Leute) <6:ADP/case>(f\xFCr) <7:NOUN/obl>(Kindergeld) <8:VERB/root>(tun)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:VERB/root>(War) <2:ADV/advmod>(wohl) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 7
    - parataxis
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADP/case>(von) <2:ADJ/amod>(dicken) <3:NOUN/obl>(Menschen) <4:ADP/case>(zu)
    <5:DET/det>(dem) <6:NOUN/obl>(Thema) <7:VERB/root>(machen) <8:PRON/nsubj>(Es)
    <9:AUX/cop>(ist) <10:ADJ/parataxis>(einfach) <ROOT> <11:DET/det>(welchen) <12:ADJ/root>(gesundheitlichen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <ROOT> <3:SCONJ/mark>(wie) <4:DET/det>(viele)
    <5:NOUN/nsubj>(Kinder) <6:ADP/case>(mit) <7:ADJ/amod>(suchtkranken) <8:NOUN/obl>(Eltern)
    <9:VERB/root>(aufwachsen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/nsubj>(manches) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - nmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:NOUN/nsubj>(Thema) <3:VERB/root>(liegt) <4:PRON/obl:arg>(mir)
    <ROOT> <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/nmod>(Herzen) <8:PRON/nsubj>(Das)
    <9:AUX/cop>(ist) <10:NOUN/root>(Fleisch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Fleisch) <3:AUX/cop>(ist) <4:ADJ/root>(schmackhaft)
    <5:CCONJ/cc>(und) <ROOT> <6:ADJ/root>(beliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(So) <2:ADJ/root>(voll) <ROOT> <3:ADV/advmod>(gar) <4:DET/det>(keine)\
    \ <5:NOUN/root>(Privatsph\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 13
    - cc
  - !!python/tuple
    - 10
    - 13
    - mark
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - obl:arg
  - !!python/tuple
    - 13
    - 5
    - advcl
  - !!python/tuple
    - 14
    - 13
    - aux
  - !!python/tuple
    - 15
    - 13
    - mark
  - !!python/tuple
    - 16
    - 13
    - nsubj
  - !!python/tuple
    - 17
    - 16
    - advmod
  sentence: "<1:ADV/advmod>(So) <2:ADJ/root>(voll) <ROOT> <3:ADV/advmod>(gar) <4:DET/det>(keine)\
    \ <5:NOUN/root>(Privatsph\xE4re) <6:ADV/advmod>(mehr) <7:ADV/advmod>(irgendwie)\
    \ <9:CCONJ/cc>(Und) <10:SCONJ/mark>(nachdem) <11:PRON/nsubj>(ich) <12:PRON/obl:arg>(ihnen)\
    \ <13:VERB/advcl>(erkl\xE4rt) <14:AUX/aux>(hab) <15:SCONJ/mark>(dass) <16:PRON/nsubj>(das)\
    \ <17:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux:pass
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 6
    - csubj:pass
  - !!python/tuple
    - 13
    - 12
    - aux
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 12
    - mark
  sentence: <1:VERB/root>(bekommen) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(das) <ROOT>
    <4:AUX/aux:pass>(ist) <5:PART/mark>(zu) <6:VERB/root>(sehen) <7:SCONJ/mark>(wie)
    <8:PRON/nsubj>(man) <9:ADV/advmod>(so) <10:DET/det>(viele) <11:NOUN/obj>(Menschen)
    <12:VERB/csubj:pass>(bewegen) <13:AUX/aux>(kann) <14:ADV/advmod>(nur) <15:SCONJ/mark>(weil)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 16
    - cc
  - !!python/tuple
    - 11
    - 16
    - aux
  - !!python/tuple
    - 12
    - 15
    - det
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:ADV/advmod>(dann) <2:DET/det>(diese) <3:ADJ/amod>(riesigen) <4:NOUN/obj>(Menschenmassen)
    <5:PRON/nsubj>(das) <6:VERB/root>(fand) <7:PRON/nsubj>(ich) <8:ADV/advmod>(schon)
    <9:ADV/advmod>(sehr) <ROOT> <10:CCONJ/cc>(und) <11:AUX/aux>(hat) <12:DET/det>(einen)
    <13:ADV/advmod>(sehr) <14:ADJ/amod>(tiefen) <15:NOUN/obj>(Eindruck) <16:VERB/root>(hinterlassen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Ey) <2:PRON/nsubj>(das) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(grad) <6:ADV/advmod>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - xcomp
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADJ/amod>(wirklichen) <2:NOUN/obj>(Krise) <3:VERB/root>(abziehen) <4:AUX/aux>(werden)
    <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(sie) <7:ADV/advmod>(schon) <8:ADV/advmod>(derart)
    <ROOT> <9:DET/det>(die) <10:NOUN/obj>(Kanonen) <11:VERB/xcomp>(donnern) <12:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT> <3:ADP/case>(auf) <4:DET/det>(dem)
    <5:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:SCONJ/mark>(Wenn) <2:ADV/advmod>(doch) <3:VERB/root>(wird) <4:ADP/compound:prt>(aus)\
    \ <ROOT> <5:ADJ/root>(kreidebleich) <6:ADP/case>(auf) <7:DET/det>(dem) <8:NOUN/nmod>(R\xFC\
    cksitz)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:AUX/cop>(seid) <3:DET/root>(alle) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Der) <2:DET/nsubj>(andere) <3:AUX/root>(war) <4:ADV/advmod>(aber)
    <5:ADV/advmod>(auch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(morgen) <2:VERB/root>(wird) <3:ADV/advmod>(so) <ROOT> <4:AUX/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:VERB/root>(konntest) <3:PRON/nsubj>(du) <4:PRON/obj>(mich)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(blamier'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <ROOT> <1:PRON/nsubj>(das) <2:AUX/cop>(wird) <3:PRON/obj>(uns) <4:ADP/case>(zu)
    <5:ADJ/amod>(tiefsinnigen) <6:ADJ/root>(tief)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:ADJ/root>(anstrengend)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:ADP/case>(mit) <4:PRON/obl>(ihr)
    <5:VERB/root>(telefoniert) <6:CCONJ/cc>(und) <7:PRON/nsubj>(das) <8:AUX/conj>(war)
    <9:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <ROOT> <5:SCONJ/root>(dass) <6:DET/det>(die) <7:NOUN/nsubj>(Ermittler) <8:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:DET/det>(ein) <2:NOUN/nsubj>(Gericht) <3:ADP/case>(ohne) <4:NOUN/nmod>(Tomate)
    <5:VERB/root>(gekocht) <6:AUX/aux>(hat) <8:ADV/advmod>(So) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - nsubj
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:AUX/cop>(ist)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(nur) <7:DET/det>(der) <8:NOUN/nsubj>(Teig)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(So) <2:SCONJ/mark>(als) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)\
    \ <5:PRON/nsubj>(ich) <6:VERB/root>(f\xFChle) <7:PRON/obj>(mich) <8:ADV/advmod>(grad)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 1
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - mark
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 15
    - case
  - !!python/tuple
    - 12
    - 15
    - advmod
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 9
    - obl
  sentence: "<1:VERB/root>(merke) <2:PRON/nsubj>(ich) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/nmod>(mich) <7:ADJ/xcomp>(einfach) <ROOT> <8:AUX/root>(ist)\
    \ <9:SCONJ/mark>(dass) <10:PRON/nsubj>(ich) <11:ADP/case>(in) <12:ADV/advmod>(so)\
    \ <13:DET/det>(einem) <14:ADJ/amod>(zus\xE4tzlichen) <15:NOUN/obl>(Druck)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  sentence: "<1:PRON/obl:arg>(Mir) <2:VERB/root>(geht) <3:PRON/expl>(es) <4:ADV/advmod>(gerade)\
    \ <5:ADV/advmod>(leider) <6:ADV/advmod>(ziemlich) <7:ADV/advmod>(schei\xDFe) <8:PRON/nsubj>(Ich)\
    \ <9:VERB/conj>(habe) <10:ADV/advmod>(so) <11:ADJ/advmod>(richtig) <ROOT> <12:NOUN/root>(Probleme)\
    \ <13:ADP/advmod>(mit)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - advmod
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 13
    - advcl
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 13
    - aux
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:SCONJ/mark>(dass) <3:DET/det>(der) <4:NOUN/nsubj>(Durchschnitt)\
    \ <5:ADV/advmod>(jetzt) <6:ADV/advmod>(wirklich) <7:ADV/advmod>(so) <8:ADJ/advcl>(hoch)\
    \ <9:AUX/cop>(ist) <10:AUX/aux>(h\xE4tte) <11:PRON/nsubj>(ich) <12:PART/advmod>(nicht)\
    \ <13:VERB/root>(gedacht) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PROPN/root>(bohaha)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 10
    - obl
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 3
    - ccomp
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/nsubj>(du)
    <5:AUX/aux>(musst) <6:ADP/case>(in) <7:NOUN/obl>(Zukunft) <8:DET/det>(ein) <9:ADV/obj>(bisschen)
    <10:VERB/ccomp>(runterschrauben) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Geht) <ROOT> <2:ADP/case>(in) <3:DET/det>(dein') <4:NOUN/nmod>(Kopf)
    <5:ADJ/root>(rein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/nsubj>(Text) <3:AUX/cop>(ist) <4:ADJ/root>(extrem)
    <ROOT> <5:ADJ/root>(behindert)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/cop>(sind) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(diese) <2:NOUN/nsubj>(Regenszeit) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 14
    - nmod
  - !!python/tuple
    - 17
    - 18
    - cc
  - !!python/tuple
    - 18
    - 14
    - advmod
  sentence: "<1:NOUN/nsubj>(Ruhn) <2:VERB/root>(wirst) <3:VERB/xcomp>(schieb) <4:PRON/obj>(dir)\
    \ <5:NOUN/obj>(DBO) <6:ADP/case>(in) <7:NOUN/obl>(stereo) <8:CCONJ/cc>(und) <9:NOUN/conj>(dreh)\
    \ <10:DET/det>(die) <11:ADJ/conj>(schei\xDFe) <ROOT> <12:ADP/case>(auf) <13:ADV/advmod>(dazu)\
    \ <14:NOUN/root>(tracks) <15:ADP/case>(von) <16:PROPN/nmod>(Bushido) <17:CCONJ/cc>(und)\
    \ <18:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Knast) <4:VERB/root>(landen)
    <5:CCONJ/cc>(und) <ROOT> <6:VERB/root>(verderben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - obl
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <ROOT> <4:SCONJ/mark>(wie)
    <5:ADJ/advmod>(unterschiedlich) <6:NOUN/nsubj>(Leute) <7:ADP/case>(auf) <8:DET/det>(das)
    <9:NOUN/obl>(Thema) <10:NOUN/appos>(Impfen) <11:VERB/root>(reagieren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:NOUN/obj>(s) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(empfunden) <7:ADP/case>(an) <8:DET/det>(dem)
    <9:NOUN/obl>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - compound:prt
  sentence: "<1:PRON/expl>(Ihr) <2:VERB/root>(fandet) <3:ADV/advmod>(fr\xFCher) <4:PRON/obj>(was)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(spitte) <7:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(dein) <3:NOUN/nsubj>(Mord) <4:AUX/root>(ist)
    <5:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/nsubj>(ich) <3:AUX/root>(kann) <4:ADV/advmod>(so)\
    \ <5:ADV/advmod>(voll) <ROOT> <6:DET/det:poss>(meine) <7:NOUN/obj>(Kippe) <8:ADP/case>(in)\
    \ <9:ADJ/amod>(ne) <10:NOUN/obl>(Zahnl\xFCcke) <11:VERB/root>(stecken)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: "<1:PROPN/nsubj>(AZ) <2:PRON/flat>(Die) <3:AUX/root>(waren) <4:ADP/case>(f\xFC\
    r) <5:PRON/obl>(uns) <6:ADV/advmod>(auch) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <ROOT> <4:DET/nsubj>(viel)
    <5:VERB/root>(gespielt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PROPN/nmod>(Jakobs) <4:NOUN/obj>(Geschichte)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(so)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(wir) <7:PRON/obj>(uns) <8:ADV/advmod>(erst)
    <9:DET/det>(ein) <10:NOUN/obl>(Jahr) <11:VERB/root>(kennen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - ccomp
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(studiere) <3:PRON/nsubj>(ich) <4:NOUN/obj>(Psychologie)
    <5:PRON/nsubj>(Das) <6:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(irgendwie)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(auf) <3:DET/det>(den) <4:ADJ/amod>(zweiten)
    <5:NOUN/obl>(Blick) <6:AUX/root>(ist) <7:DET/det>(die) <8:NOUN/nsubj>(Location)
    <9:ADV/advmod>(schon) <10:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(hat) <3:PRON/nsubj>(man) <ROOT> <4:ADJ/advmod>(stark)
    <5:ADJ/amod>(verkoteten) <6:NOUN/root>(Spaltenboden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/dep>(Ah) <2:ADJ/root>(okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 14
    - mark
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 7
    - ccomp
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(hat) <3:PRON/obj>(sich) <4:ADP/case>(mit)
    <5:NOUN/obl>(Wein) <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(besoffen) <8:SCONJ/mark>(dass)
    <9:PRON/nsubj>(er) <10:ADJ/advmod>(nackt) <11:ADP/case>(in) <12:DET/det:poss>(seinem)
    <13:NOUN/obl>(Zelt) <14:VERB/ccomp>(einpennt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 6
    - nsubj
  sentence: "<1:SCONJ/mark>(sodass) <2:PRON/nsubj>(ich) <3:VERB/root>(dachte) <4:NOUN/obj>(Okay)\
    \ <ROOT> <5:ADV/advmod>(Wie) <6:VERB/root>(ver\xE4ndert) <7:PRON/obj>(sich) <8:ADV/advmod>(dann)\
    \ <9:ADV/advmod>(pl\xF6tzlich) <10:DET/det:poss>(mein) <11:NOUN/nsubj>(Beuteschema)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advcl
  sentence: <1:NOUN/nsubj>(Gott) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(viel)
    <5:ADJ/root>(schwieriger) <6:SCONJ/mark>(als) <7:PRON/nsubj>(ich) <8:VERB/advcl>(dachte)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:DET/det>(Das) <3:PROPN/amod>(T-) <4:NOUN/obj>(Shirt)
    <5:VERB/root>(mochte) <6:PRON/nsubj>(ich) <7:ADV/advmod>(auch) <8:ADV/advmod>(gerne)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Auswirkungen) <3:AUX/cop>(w\xE4ren) <4:ADV/advmod>(ja)\
    \ <5:ADV/advmod>(auch) <6:ADJ/root>(total) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - mark
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 2
    - advmod
  sentence: "<1:PRON/obl:arg>(Mir) <2:VERB/root>(kommen) <3:ADV/advmod>(halt) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(schon) <6:DET/det>(die) <7:NOUN/nsubj>(Tr\xE4nen) <8:SCONJ/mark>(weil)\
    \ <9:PRON/nsubj>(ich) <10:PRON/nsubj>(es) <11:ADV/advmod>(\xE4hnlich) <12:PART/advmod>(nicht)\
    \ <13:ADV/advmod>(so) <14:ADJ/advmod>(ganz) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:ADV/root>(So) <ROOT> <2:AUX/root>(ist) <3:PRON/nsubj>(es) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Zweifelsfall) <7:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(man)\
    \ <5:ADV/advmod>(\xFCberall) <6:ADP/case>(in) <7:PRON/obl>(mich) <8:VERB/root>(reinschauen)\
    \ <9:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - dep
  sentence: <1:X/advmod>(Bumm) <2:X/root>(bumm) <3:X/advmod>(bumm) <4:X/advmod>(bumm)
    <5:X/dep>(bumm) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: "<1:NOUN/nsubj>(Gegen\xFCberstellungen) <2:AUX/aux>(k\xF6nnen) <3:ADV/advmod>(n\xE4\
    mlich) <4:ADJ/root>(richtig) <ROOT> <5:ADJ/root>(unfair) <6:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 8
    - nmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/nsubj>(s) <4:ADJ/advmod>(richtig)
    <ROOT> <5:ADP/case>(wie) <6:NOUN/nmod>(easy) <7:DET/det>(die) <8:NOUN/root>(Erinnerungen)
    <9:ADP/case>(von) <10:NOUN/nmod>(Augenzeug) <11:ADV/advmod>(innen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 6
    - obj
  - !!python/tuple
    - 12
    - 6
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(zu) <3:DET/det>(dem) <4:NOUN/obl>(Teufel)\
    \ <5:AUX/aux>(ist) <6:VERB/root>(passiert) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(die)\
    \ <9:DET/det>(die) <10:ADJ/amod>(urspr\xFCnglichen) <11:NOUN/obj>(Projektionen)\
    \ <12:ADV/advmod>(so) <ROOT> <13:ADJ/root>(falsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADJ/advmod>(\xDCberlebenswichtig) <2:VERB/root>(klingt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - obl
  sentence: <1:PROPN/dep>(3D) <2:NOUN/root>(Spielen) <ROOT> <3:VERB/root>(fand) <4:ADP/case>(wie)
    <5:DET/det>(viele) <6:ADJ/amod>(einzelne) <7:NOUN/obl>(Bilder)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADP/root>(zu) <ROOT> <4:ADP/case>(f\xFC\
    r) <5:PRON/root>(ihn)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advcl
  sentence: <1:NOUN/root>(Rap) <ROOT> <2:CCONJ/cc>(und) <3:VERB/root>(pushe) <4:DET/det:poss>(mein)
    <5:NOUN/obj>(Stolz) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(ich) <8:ADV/advmod>(mies)
    <9:NOUN/advcl>(rap)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nmod
  sentence: <1:PROPN/nsubj>(Li) <2:CCONJ/cc>(und) <3:DET/det:poss>(ihre) <4:NOUN/conj>(Regierungschefin)
    <5:PROPN/appos>(Sanna) <6:PROPN/flat>(Marin) <7:ADV/advmod>(dagegen) <8:VERB/root>(planen)
    <9:DET/obj>(eine) <ROOT> <10:ADJ/amod>(linke) <11:NOUN/root>(Politik) <12:ADP/case>(mit)
    <13:DET/det>(dem) <14:NOUN/nmod>(Kernziel)
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 10
    - nmod
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(von) <3:DET/det>(dem) <4:NOUN/nmod>(Spielerischen)
    <5:ADV/advmod>(her) <6:ADP/case>(von) <7:DET/det>(dem) <8:NOUN/nmod>(Suchtfaktor)
    <9:AUX/cop>(ist) <10:PROPN/root>(Nioh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - ccomp
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)
    <5:VERB/root>(sieht) <6:ADV/advmod>(wie) <7:ADJ/ccomp>(alt) <8:PRON/nsubj>(die)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:SCONJ/mark>(wie) <3:PRON/nsubj>(ich) <4:PRON/obj>(das)
    <5:DET/obj>(alles) <6:VERB/root>(gefangen) <7:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PART/advmod>(Nicht) <2:ADJ/root>(wirklich) <ROOT> <3:CCONJ/cc>(aber)
    <4:ADV/advmod>(auch) <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <7:NOUN/root>(Seid)
    <8:ADV/advmod>(da)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:X/root>(Ach) <ROOT> <2:ADV/advmod>(Sehr) <3:ADJ/root>(salzig) <4:ADV/advmod>(sogar)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PROPN/root>(Wow) <ROOT> <3:ADV/advmod>(Genau) <4:PRON/nsubj>(das) <5:AUX/cop>(war)
    <6:ADV/advmod>(so) <7:DET/det>(das) <8:ADJ/amod>(erste) <9:NOUN/root>(Mal)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PRON/root>(das) <4:PRON/nsubj>(was)
    <5:PRON/nsubj>(ich) <ROOT> <6:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(erkenne) <3:PRON/obj>(mich) <4:ADP/case>(in)
    <5:DET/det>(den) <6:NOUN/obl>(Videos) <ROOT> <7:ADV/root>(wieder)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:ADP/case>(Nach) <2:DET/det>(der) <3:ADJ/amod>(ersten) <4:NOUN/nmod>(Woche)
    <5:AUX/root>(war) <6:X/advmod>(s) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/root>(irgendwie) <ROOT> <3:SCONJ/mark>(weil)\
    \ <4:PRON/nsubj>(es) <5:AUX/aux>(hat) <6:PRON/obj>(sich) <7:ADV/advmod>(so) <8:VERB/root>(best\xE4\
    tigt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:VERB/root>(festgestellt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj:pass
  - !!python/tuple
    - 6
    - 7
    - nsubj:pass
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADV/advmod>(so) <ROOT> <4:DET/det>(die)
    <5:NOUN/nsubj:pass>(Differenzierung) <6:PRON/nsubj:pass>(die) <7:VERB/root>(gemacht)
    <8:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:ADJ/root>(versaut) <4:CCONJ/cc>(und)
    <5:PRON/conj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(finden) <3:PRON/obj>('s) <4:DET/obj>(alle)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(total) <ROOT> <4:ADP/case>(f\xFC\
    r) <5:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 12
    - obl
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - conj
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - advmod
  - !!python/tuple
    - 17
    - 14
    - compound:prt
  sentence: "<1:AUX/root>(ist) <2:NOUN/dep>(Moment) <3:ADV/advmod>(noch) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(ganz) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(wie) <8:ADP/case>(in)\
    \ <9:PROPN/obl>(M\xFCnchen) <10:CCONJ/cc>(aber) <11:PRON/nsubj>(ich) <12:VERB/root>(denke)\
    \ <13:PRON/nsubj>(wir) <14:VERB/conj>(kommen) <15:ADV/advmod>(da) <16:ADV/advmod>(langsam)\
    \ <17:ADV/compound:prt>(hin)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: <1:NOUN/root>(Wetterleuchten) <2:ADJ/amod>(ganz) <ROOT> <3:PRON/nsubj>(Das)
    <4:VERB/root>(nennt) <5:PRON/nsubj>(man) <6:NOUN/obj>(Gewitter)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(sieht) <3:ADJ/advmod>(richtig) <ROOT>
    <4:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - nsubj:pass
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(der) <3:ADJ/amod>(jetzigen) <4:NOUN/obl>(Zeit)
    <5:AUX/root>(ist) <6:PRON/nsubj>(es) <ROOT> <7:PRON/nsubj:pass>(das) <8:PART/mark>(zu)
    <9:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT> <4:SCONJ/mark>(Als)\
    \ <5:AUX/cop>(w\xE4r) <6:X/advmod>(s) <7:PRON/root>(nix)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - case
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(genau) <3:ADV/root>(darum) <4:ADP/case>(wie)
    <ROOT> <5:PRON/nsubj>(das) <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <ROOT> <4:SCONJ/mark>(wenn)
    <5:PRON/nsubj>(man) <6:VERB/root>(aufwacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:ADP/case>(mit) <4:DET/det>(der)
    <5:NOUN/nmod>(Orientierung) <6:VERB/root>(hilft) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(ja)
    <9:ADV/advmod>(trotzdem) <ROOT> <10:ADJ/root>(grad) <11:ADV/advmod>(aber)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 1
    - xcomp
  - !!python/tuple
    - 5
    - 1
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:VERB/root>(Lass) <2:PRON/obj>(mich) <3:PRON/obj>(dir) <4:VERB/xcomp>(sagen)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:PRON/obj>(mich) <8:ADV/advmod>(echt)
    <ROOT> <9:ADP/case>(in) <10:PRON/obl>(dich) <11:VERB/root>(verliebt) <12:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(zu)
    <ROOT> <5:ADP/case>(von) <6:DET/det>(dem) <7:NOUN/root>(Geschmack) <8:ADV/advmod>(her)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/advmod>(Ah) <2:X/advmod>(ey) <3:PRON/nsubj>(das) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Au) <2:ADV/advmod>(ja) <3:AUX/aux>(h\xE4tte) <4:PRON/nsubj>(ich)\
    \ <5:PART/advmod>(nicht) <6:VERB/root>(gedacht) <7:SCONJ/mark>(dass) <8:DET/det>(der)\
    \ <9:NOUN/nsubj>(Unterschied) <10:ADV/advmod>(so) <ROOT> <11:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:DET/obj>(den) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(wieder) <ROOT> <6:ADJ/root>(paternalistisch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Machst) <2:PRON/obj>(ein') <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Bruder) <2:VERB/root>(gib) <3:PRON/nsubj>(es) <4:ADP/case>(zu)\
    \ <5:PRON/obl>(ich) <6:VERB/conj>(h\xF6r) <7:PRON/nsubj>(mich) <8:ADJ/xcomp>(unfassbar)\
    \ <ROOT> <9:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - xcomp
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 11
    - nmod
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:INTJ/advmod>(Bastard) <3:INTJ/advmod>(chalas) <4:PRON/nsubj>(ich)
    <5:VERB/root>(geh) <6:ADJ/xcomp>(unfassbar) <ROOT> <7:ADP/case>(ab) <8:ADP/case>(wie)
    <9:PROPN/nmod>(Gala) <10:X/flat>(`s) <11:PROPN/root>(Ultraslan)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(es) <3:VERB/root>(verwirrt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Tracks) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - case
  sentence: <1:X/root>(Ah) <2:ADP/case>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - xcomp
  sentence: "<1:DET/det>(Jeder) <2:ADJ/amod>(F\xFCnfte) <3:PRON/obj>(Das) <4:VERB/root>(finde)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(ganz) <7:ADJ/xcomp>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:ADV/advmod>(auch) <3:PRON/nsubj>(das) <4:VERB/root>(geh\xF6\
    rt) <5:ADV/advmod>(dazu)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  sentence: "<ROOT> <1:ADV/advmod>(da) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <4:PROPN/nsubj>(Dennis)\
    \ <5:ADP/case>(auf) <6:DET/det>(der) <7:DET/det>(anderen) <8:NOUN/obl>(Stra\xDF\
    enseite)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 5
    - obl
  sentence: "<2:X/root>(Ja) <3:X/punct>(is) <ROOT> <4:CCONJ/cc>(aber) <5:VERB/root>(warte)\
    \ <6:PRON/nsubj>(ich) <7:ADV/advmod>(laber) <8:ADV/advmod>(gerade) <9:ADP/case>(auf)\
    \ <10:PROPN/nmod>(Mad\u2018s) <11:NOUN/obl>(Quatsche)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <ROOT> <1:PRON/nsubj>(ich) <2:ADV/advmod>(auch) <3:ADV/advmod>(digger)
    <4:INTJ/root>(zeig) <5:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(sie) <2:VERB/root>(hat) <3:PRON/obj>(dich) <ROOT> <4:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obj>(sie) <ROOT> <4:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Cem) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:ADV/advmod>(Also) <2:VERB/root>(mach) <3:ADV/advmod>(hier) <4:PART/advmod>(nicht)
    <5:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(war'n) <3:NOUN/nsubj>(Freundschaften)
    <ROOT> <4:ADJ/root>(rar)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - appos
  sentence: <1:ADV/advmod>(Gestern) <2:AUX/root>(war) <3:PRON/nsubj>(ich) <ROOT> <4:ADJ/root>(verliebt)
    <6:ADV/advmod>(heut) <7:AUX/cop>(bin) <8:PRON/nsubj>(ich) <9:NOUN/appos>(single)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADP/root>(zu) <ROOT> <2:ADP/case>(f\xFCr) <3:DET/det>(die) <4:NOUN/root>(Majors)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(auch) <2:SCONJ/root>(wenn) <3:DET/det>(die) <4:NOUN/nsubj>(Noten)
    <5:PART/advmod>(nicht) <ROOT> <6:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Autos) <2:ADP/case>(mit) <3:ADJ/amod>(f\xC3\xBCnfhundert)\
    \ <4:NOUN/nmod>(Pferde) <5:AUX/root>(sind) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - obj
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Zunge) <3:AUX/root>(ist) <ROOT> <4:CCONJ/cc>(aber)\
    \ <5:PRON/nsubj>(ich) <6:AUX/aux>(hab) <7:VERB/root>(gesehen) <8:PRON/nsubj>(sie)\
    \ <9:VERB/conj>(hat) <10:ADV/advmod>(nur) <11:ADV/advmod>(unten) <12:NOUN/obj>(Z\xE4\
    hne)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(ja) <3:PRON/nsubj>(ich) <4:AUX/aux>(hab)\
    \ <5:PRON/obj>(mich) <6:ADJ/root>(echt) <ROOT> <7:VERB/root>(ver\xE4ndert)"
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - aux
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <2:PROPN/dep>(Ayra) <4:DET/det>(Die) <5:NOUN/obj>(Saison) <6:ADP/case>(an)
    <7:PRON/nmod>(sich) <8:AUX/root>(war) <9:ADV/advmod>(schon) <ROOT> <10:PRON/nsubj>(Wir)
    <11:AUX/aux>(haben) <12:ADV/advmod>(so) <13:DET/obj>(viel) <14:VERB/root>(erlebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADJ/amod>(Psychische) <2:NOUN/nsubj>(Probleme) <3:AUX/cop>(sind) <4:ADP/case>(bei)
    <5:PRON/nmod>(uns) <6:NOUN/root>(Jugendlichen) <ROOT> <7:VERB/root>(gestiegen)
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:X/dep>(on) <4:NOUN/root>(Okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<ROOT> <1:ADJ/advmod>(\xE4hnlich) <2:ADP/case>(wie) <3:NOUN/nmod>(Thunfisch)\
    \ <4:ADV/advmod>(ehrlich) <5:VERB/root>(gesagt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:NOUN/obj>(s)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:ADJ/root>(echt)
    <ROOT> <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:VERB/root>(dachte)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(die) <2:ADJ/amod>(redaktionelle) <3:NOUN/nsubj>(Arbeit) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  sentence: "<1:VERB/root>(F\xFChl'n) <2:PRON/obj>(sich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Ganz) <2:ADJ/advmod>(rational) <3:VERB/root>(betrachtet)
    <4:AUX/cop>(ist) <5:DET/det>(eine) <6:NOUN/nsubj>(Impfpflicht) <7:ADV/advmod>(sogar)
    <8:ADJ/advmod>(weniger) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 4
    - xcomp
  sentence: <1:CCONJ/cc>(Und) <2:AUX/aux>(wollt) <3:PRON/obl:arg>(mir) <4:VERB/root>(sagen)
    <5:PRON/obj>(ihr) <6:VERB/xcomp>(seid) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(ging) <3:PRON/nsubj>('s) <4:ADV/compound:prt>(voran)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(komm) <4:ADV/advmod>(so) <ROOT> <5:ADV/root>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(Kontrast) <4:AUX/cop>(war)
    <5:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:PRON/nsubj>(du) <3:AUX/root>(hast) <4:PRON/obj>(mich)
    <ROOT> <5:VERB/root>(geliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/obj>(dies) <4:CCONJ/cc>(und)
    <5:SCONJ/mark>(das) <6:PRON/nsubj>(er) <7:VERB/conj>(lebt) <8:DET/advmod>(viel)
    <9:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - appos
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(denkst) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(wieder) <7:INTJ/advmod>(wat) <8:ADV/advmod>(\u2019ne) <9:NOUN/appos>(Strophe)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:CCONJ/cc>(und) <4:ADV/root>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(machst) <3:ADV/advmod>(immer) <4:ADV/advmod>(noch)
    <5:DET/obj>(einen) <6:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(du)
    <5:ADP/case>(in) <6:DET/det:poss>(meinem) <7:NOUN/obl>(Alter) <8:VERB/root>(stirbst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(er) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - case
  - !!python/tuple
    - 5
    - 9
    - det
  - !!python/tuple
    - 6
    - 9
    - amod
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADP/root>(zu) <ROOT> <4:ADP/case>(f\xFC\
    r) <5:DET/det>(das) <6:ADJ/amod>(ganze) <7:NOUN/compound>(Schei\xDF) <9:NOUN/root>(Business)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(wollt) <3:PART/advmod>(nicht) <4:VERB/root>(\xFC\
    bertreiben) <5:CCONJ/cc>(und) <6:PART/advmod>(nicht) <7:ADP/compound:prt>(zu)\
    \ <ROOT> <8:ADP/case>(bei) <9:PRON/obl>(dir) <10:VERB/root>(geiern)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 1
    - advcl
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 11
    - compound:prt
  - !!python/tuple
    - 15
    - 16
    - mark
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:VERB/root>(Find) <2:CCONJ/cc>(aber) <3:ADV/advmod>(auch) <4:DET/det>(die)
    <5:NOUN/obj>(Sache) <6:ADP/case>(mit) <7:DET/det>(den) <8:NOUN/nmod>(Walen) <9:SCONJ/mark>(wenn)
    <10:PRON/nsubj>(die) <11:VERB/advcl>(stranden) <12:DET/det>(ein) <13:ADV/advmod>(bisschen)
    <14:ADP/compound:prt>(zu) <ROOT> <15:SCONJ/mark>(Wenn) <16:PRON/root>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - obl
  sentence: "<1:CCONJ/cc>(Sondern) <2:X/root>(Ach) <ROOT> <3:ADV/advmod>(okay) <4:ADV/advmod>(Dann)\
    \ <5:VERB/root>(geh\xF6rt) <6:PRON/nsubj>(es) <7:ADV/advmod>(nat\xFCrlich) <8:PART/advmod>(nicht)\
    \ <9:ADP/case>(in) <10:DET/det>(eine) <11:NOUN/obl>(Teamsitzung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/root>(Ah) <ROOT> <2:ADJ/root>(okay)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(Au\xDFer) <2:PRON/obl>(es) <3:AUX/root>(wird) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <5:PRON/nsubj>(Es)\
    \ <6:VERB/root>(l\xF6st) <7:PRON/obj>(sich) <8:ADV/advmod>(auch) <9:PRON/obj>(nichts)\
    \ <10:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 8
    - csubj
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obl:arg
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:PRON/obj>(was) <2:DET/det>(die) <3:NOUN/nsubj>(Jungs) <4:ADV/advmod>(da)
    <5:VERB/csubj>(produziert) <6:AUX/aux>(haben) <7:ADV/advmod>(dann) <8:VERB/root>(denk)
    <9:PRON/nsubj>(ich) <10:PRON/obl:arg>(mir) <11:ADV/advmod>(oft) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - aux
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(rockte) <3:PRON/obj>(Das) <4:AUX/aux>(habe)
    <5:PRON/nsubj>(ich) <ROOT> <6:VERB/root>(vermisst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - ccomp
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(willst) <ROOT> <3:AUX/root>(sein) <5:PRON/nsubj>(Du)
    <6:AUX/aux>(willst) <7:ADV/advmod>(harst) <8:AUX/ccomp>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 5
    - conj
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(ich) <3:ADV/advmod>(high) <4:NOUN/obj>(carb)
    <5:NOUN/root>(koch) <7:CCONJ/cc>(und) <8:PRON/obj>(mich) <9:ADP/case>(mit) <10:PROPN/obl>(Carbs)
    <11:VERB/conj>(vollstopf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - dep
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/dep>(Uhh) <3:DET/det>(die) <4:NOUN/nsubj>(frau) <5:VERB/root>(kam)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADJ/root>(\xE4u\xDFerlich) <ROOT> <2:ADJ/root>(alt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/aux>(wirst) <3:ADP/case>(mit) <4:PROPN/obl>(Aids)
    <5:VERB/root>(gebor'n) <7:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:NOUN/nsubj>(Rap) <2:AUX/root>(ist) <3:PART/advmod>(nicht) <4:ADV/advmod>(mehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(bist) <ROOT> <2:ADP/case>(auf) <3:NOUN/root>(Songs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(machen) <3:ADV/advmod>(ein') <4:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(Man) <2:PRON/nsubj>(ich) <3:VERB/root>(roll) <4:DET/det>(das)
    <5:NOUN/obj>(R) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <ROOT> <1:CCONJ/cc>(und) <2:ADV/advmod>(2m) <3:ADJ/root>(breit) <4:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 9
    - nummod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 12
    - nmod
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 2
    - xcomp
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(hatten) <3:ADV/advmod>(mal) <4:NUM/nummod>(60)
    <5:CCONJ/cc>(oder) <6:NUM/conj>(70) <8:NUM/nummod>(100) <9:NOUN/nmod>(Liter) <10:AUX/cop>(war)
    <11:ADV/advmod>(schon) <12:ADJ/xcomp>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Herz) <3:VERB/root>(geht) <ROOT> <4:ADV/advmod>(schnell)
    <5:ADV/root>(dann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ganz) <2:ADJ/root>(sch\xF6n) <ROOT> <3:CCONJ/root>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - det
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:NUM/nummod>(60) <3:NUM/nummod>(000) <4:PROPN/root>(Euro)\
    \ <5:ADV/advmod>(aufw\xE4rts) <6:CCONJ/cc>(aber) <7:ADV/advmod>(offenbar) <8:DET/det>(ein)\
    \ <9:NOUN/compound>(Standard) <11:NOUN/conj>(Auto) <12:ADP/case>(in) <13:PROPN/nmod>(Berlin)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(halt)
    <ROOT> <5:SCONJ/mark>(wie) <6:DET/det>(viel) <7:NOUN/root>(Zeug) <8:PRON/nsubj>(die)
    <9:ADV/advmod>(da) <10:VERB/acl>(liegen) <11:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advcl
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - obj
  sentence: "<1:VERB/advcl>(Wei\xDFt) <2:PRON/nsubj>(du) <3:ADV/advmod>(dann) <4:VERB/root>(denk)\
    \ <5:PRON/nsubj>(ich) <6:PRON/obl:arg>(mir) <7:ADV/advmod>(so) <8:NOUN/obj>(Alter)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(denk) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(grade)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(sehr) <7:DET/obj>(viel) <9:PRON/nsubj>(Ich)
    <10:VERB/parataxis>(find) <11:PRON/obj>(das) <12:ADV/advmod>(schon) <13:ADV/advmod>(grad)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADJ/advmod>(Fr\xFCher) <2:VERB/root>(ging) <3:NOUN/nsubj>(s) <4:ADV/advmod>(darum)\
    \ <5:ADP/mark>(wie) <ROOT> <6:PRON/nsubj>(man) <7:ADJ/advmod>(wirklich) <8:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(da) <4:ADJ/advmod>(richtig)
    <ROOT> <5:NOUN/root>(Bock) <6:ADV/advmod>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 5
    - nmod
  sentence: "<1:NOUN/root>(Leute) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/root>(spannend) <6:PRON/nsubj>(was) <7:ADP/case>(f\xFCr) <8:DET/det>(eine)\
    \ <9:ADJ/amod>(heftige) <10:NOUN/nmod>(Entwicklung)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:AUX/aux>(Habt) <2:PRON/obj>(ihr) <3:PRON/obj>(euch) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(mal) <6:VERB/root>(gefragt) <7:ADV/advmod>(warum) <8:NOUN/nsubj>(Babys)
    <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(weinen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:PRON/obj>(was)
    <5:PRON/nsubj>(man) <6:DET/obj>(alles) <7:VERB/root>(findet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ihr) <2:VERB/root>(habt) <ROOT> <3:NOUN/root>(R\xFCcken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Wahrscheinlich) <2:VERB/root>(hab) <3:PRON/nsubj>(ich)
    <4:PRON/obj>(mich) <5:ADV/advmod>(dadurch) <6:ADP/compound:prt>(zu) <ROOT> <7:VERB/root>(entfernt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 4
    - obl
  sentence: <1:AUX/root>(Ist) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <ROOT> <4:VERB/root>(Wisst)
    <5:PRON/obj>(ihr) <6:ADV/advmod>(noch) <7:ADP/case>(vor) <8:NUM/nummod>(3) <9:NOUN/obl>(Jahren)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 11
    - mark
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 2
    - advcl
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 13
    - advmod
  sentence: "<1:ADJ/root>(richtig) <ROOT> <2:VERB/root>(entgegenkommt) <3:SCONJ/mark>(zumal)\
    \ <4:PRON/nsubj>(er) <5:ADV/advmod>(halt) <6:ADV/advmod>(vorher) <7:ADV/advmod>(nie)\
    \ <8:NOUN/obj>(Ber\xFChrungspunkte) <9:ADP/case>(zu) <10:NOUN/obl>(Migr\xE4ne)\
    \ <11:VERB/advcl>(hatte) <12:CCONJ/cc>(und) <13:PRON/conj>(das) <14:ADV/advmod>(nur)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - ccomp
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - conj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 16
    - cc
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 11
    - conj
  sentence: "<1:VERB/root>(geht) <2:SCONJ/mark>(wie) <3:PRON/nsubj>(sie) <4:AUX/ccomp>(will)\
    \ <5:CCONJ/cc>(und) <6:PRON/nsubj>(das) <7:AUX/conj>(ist) <8:ADV/advmod>(halt)\
    \ <9:ADV/advmod>(ja) <10:ADV/advmod>(schon) <ROOT> <11:VERB/root>(beeintr\xE4\
    chtigt) <12:CCONJ/cc>(und) <13:ADV/advmod>(da) <14:PRON/nsubj>(wir) <15:ADV/advmod>(super)\
    \ <16:DET/conj>(viel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - cc
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 13
    - mark
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 9
    - ccomp
  - !!python/tuple
    - 14
    - 13
    - aux
  sentence: <ROOT> <1:PART/mark>(zu) <2:VERB/root>(sehen) <3:CCONJ/cc>(aber) <4:PRON/nsubj>(sie)
    <5:AUX/cop>(sind) <6:ADV/advmod>(auch) <7:ADV/advmod>(sehr) <8:ADV/advmod>(sehr)
    <9:ADJ/conj>(stolz) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(wir) <12:PRON/obj>(das)
    <13:VERB/ccomp>(gemacht) <14:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cop
  - !!python/tuple
    - 2
    - 5
    - det
  - !!python/tuple
    - 3
    - 5
    - amod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - obj
  sentence: "<1:AUX/cop>(war) <2:DET/det>(diese) <3:ADJ/amod>(gro\xDFe) <4:ADJ/amod>(alpin)\
    \ <5:NOUN/nsubj>(Bahn) <6:ADJ/root>(richtig) <ROOT> <7:DET/det>(das) <8:NOUN/nsubj>(Riesenrad)\
    \ <9:VERB/root>(klass) <10:DET/det>(das) <11:NOUN/obj>(Riesenrad) <12:DET/det>(die)\
    \ <13:NOUN/obj>(Achterbahn)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 10
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obl:arg
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  - !!python/tuple
    - 16
    - 18
    - cc
  - !!python/tuple
    - 17
    - 18
    - det:poss
  - !!python/tuple
    - 18
    - 15
    - conj
  sentence: "<1:X/advmod>(\u20AC) <2:ADV/advmod>(oh) <3:ADJ/amod>(oh) <4:NOUN/nsubj>(Gott)\
    \ <5:NOUN/root>(Alter) <6:AUX/cop>(ist) <7:ADJ/advmod>(wirklich) <ROOT> <8:DET/det:poss>(mein)\
    \ <9:DET/det:poss>(mein) <10:NOUN/nsubj>(Herz) <11:VERB/root>(h\xE4ngt) <12:PRON/obl:arg>(mir)\
    \ <13:ADP/case>(in) <14:DET/det>(der) <15:NOUN/obl>(Hose) <16:CCONJ/cc>(und) <17:DET/det:poss>(meine)\
    \ <18:NOUN/conj>(Ged\xE4rme)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 19
    - nsubj
  - !!python/tuple
    - 16
    - 19
    - cop
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 12
    - parataxis
  sentence: "<1:ADV/advmod>(hier) <2:ADV/root>(oben) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:NOUN/nmod>(Kopf) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADV/advmod>(so)\
    \ <ROOT> <9:CCONJ/cc>(und) <10:DET/det:poss>(meine) <11:NOUN/nsubj>(Knie) <12:VERB/root>(sch\xF6\
    teln) <13:ADV/advmod>(echt) <14:ADV/advmod>(also) <15:PRON/nsubj>(das) <16:AUX/cop>(ist)\
    \ <17:ADV/advmod>(echt) <18:PART/advmod>(nicht) <19:ADP/parataxis>(f\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/det>(ein) <4:ADJ/amod>(kleines)
    <5:NOUN/obj>(Problem) <6:ADP/compound:prt>(mit) <ROOT> <7:ADJ/amod>(langen) <8:NOUN/root>(Filmen)
    <9:ADP/case>(in) <10:DET/det>(dem) <11:NOUN/nmod>(Kino)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(Pl\xF6tzlich) <2:DET/det>(die) <3:NOUN/obj>(Beine) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(mehr) <6:VERB/root>(bewegen) <7:AUX/aux>(k\xF6nnen) <8:ADV/advmod>(schon)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 6
    - ccomp
  sentence: "<1:ADJ/advmod>(Gleichzeitig) <2:AUX/root>(ist) <3:PRON/nsubj>(es) <ROOT>\
    \ <4:SCONJ/mark>(wenn) <5:PRON/nsubj>(man) <6:VERB/root>(wei\xDF) <7:SCONJ/mark>(dass)\
    \ <8:PRON/nsubj>(du) <9:DET/det>(diese) <10:NOUN/obj>(Themen) <11:VERB/ccomp>(hast)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 8
    - nmod
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - acl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:PRON/nmod>(mir) <3:AUX/cop>(war) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(so) <6:DET/det>(der) <7:NUM/nummod>(1) <8:NOUN/root>(Song) <9:PRON/nsubj>(der)
    <10:VERB/acl>(hat) <ROOT> <11:VERB/root>(polarisiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(rede) <3:ADV/advmod>(eigentlich) <4:ADV/advmod>(nie)\
    \ <ROOT> <5:ADV/root>(dar\xFCber)"
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<2:PROPN/nsubj>(Ceylan) <4:PRON/flat>(Das) <5:AUX/cop>(ist) <6:ADV/root>(so)\
    \ <ROOT> <7:ADP/case>(f\xFCr) <8:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - ccomp
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kann) <3:PRON/obj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:ADP/case>(an) <6:DET/det>(diesen) <7:NOUN/obl>(Moment) <8:VERB/root>(erinnern)
    <9:SCONJ/mark>(wie) <10:PRON/nsubj>(das) <11:AUX/ccomp>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Auch) <2:ADP/case>(f\xFCr) <3:DET/det:poss>(dein) <4:NOUN/obl>(Gef\xFC\
    hl) <5:PART/advmod>(nicht) <6:PRON/nsubj>(du) <7:AUX/root>(wirst) <ROOT> <8:VERB/root>(aufgewertet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - xcomp
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/xcomp>(Zeiten) <2:VERB/root>(werden) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - aux
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:AUX/root>(war) <ROOT> <4:PRON/nsubj>(ihr)
    <5:AUX/aux>(konntet) <6:PRON/obj>(euch) <7:DET/advmod>(selber) <8:ADV/advmod>(kaum)
    <9:VERB/root>(auseinanderhalten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:NOUN/root>(Knolle) <2:ADP/case>(f\xFCr) <3:NOUN/nmod>(Knolle) <ROOT>\
    \ <4:AUX/cop>(war) <5:DET/det>(das) <6:NOUN/root>(Weekend)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:DET/det:poss>(mein) <3:NOUN/nsubj>(Weed) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:CCONJ/cc>(und) <3:DET/det>(kein) <4:NOUN/root>(Einzelfall)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj:pass
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux:pass
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(jede) <4:NOUN/nsubj:pass>(Entscheidung)
    <5:VERB/root>(kommentiert) <6:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/root>(Und) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADV/advmod>(echt)
    <ROOT> <5:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det>(ein) <3:PROPN/amod>(Early) <4:PROPN/obl>(Access)\
    \ <5:AUX/root>(ist) <6:PRON/nsubj>(das) <7:ADV/advmod>(schon) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(doch) <4:ADV/advmod>(irgendwie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(riecht) <3:ADV/advmod>(aber) <4:ADV/advmod>(auch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 11
    - 6
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(wird) <3:ADV/advmod>(dann) <4:ADJ/xcomp>(ganz)
    <ROOT> <6:VERB/root>(geb') <7:PRON/obl:arg>(mir) <8:DET/det>('nen) <9:NOUN/obj>(Anlass)
    <11:INTJ/parataxis>(mach) <12:PRON/nsubj>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <ROOT> <1:SCONJ/mark>(wie) <2:PRON/obl:arg>(mir) <3:DET/det>(jeder) <4:NOUN/nsubj>(Schwanz)
    <5:VERB/root>(folgt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/root>(war) <ROOT> <2:ADP/case>(auf) <3:DET/det>(jeden) <4:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:NOUN/root>(abflowen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: "<1:DET/det:poss>(Seine) <2:NOUN/nsubj>(Schule) <3:VERB/root>(verkackte)\
    \ <4:DET/det>(dieser) <5:NOUN/obj>(Gr\xFCnschnabel) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:PRON/nmod>(mir) <3:ADP/case>(auf) <4:DET/det>(das)
    <5:NOUN/root>(But)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(schiebt) <3:ADP/case>(nach) <4:DET/det>(einem)
    <5:NOUN/obl>(Kurzen) <6:ADV/advmod>(schon) <7:NOUN/obj>(Absturz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: <1:NOUN/root>(Outfit) <2:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:NOUN/nsubj>(Frauen) <2:VERB/root>(finden) <3:PRON/obj>('s) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(ihr) <3:DET/root>(alle) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/obl>(Start) <7:VERB/root>(seid)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:DET/nsubj>(alle) <2:VERB/root>(komm) <3:ADP/compound:prt>(mit) <ROOT>
    <4:ADJ/amod>(geficktem) <5:NOUN/root>(Zeug) <6:ADP/dep>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 1
    - dep
  - !!python/tuple
    - 9
    - 1
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:INTJ/root>(Komm) <2:ADV/advmod>('ne) <3:ADJ/amod>(halbe) <4:NOUN/nmod>(Stunde)\
    \ <5:ADV/advmod>(sp\xE4ter) <6:ADV/advmod>(wieder) <7:ADV/advmod>(raus) <8:SCONJ/dep>(weil)\
    \ <9:PRON/nsubj>(ich) <ROOT> <10:AUX/root>(bin)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 3
    - advmod
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - det:poss
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/obj>(Klamotten) <3:VERB/root>(verdammt)
    <4:ADV/advmod>(noch) <5:ADV/advmod>(ma') <6:DET/det:poss>(meine) <7:NOUN/nsubj>(Jacke)
    <8:ADV/advmod>(noch) <9:ADV/advmod>(fast) <10:ADV/advmod>(so) <ROOT> <11:ADP/case>(wie)
    <12:DET/det:poss>(mein) <13:PROPN/amod>(T-) <14:NOUN/root>(Shirt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Irgendwas) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn)
    <4:PRON/nsubj>(du) <5:PRON/obj>(mich) <6:VERB/root>(anblickst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(er) <2:AUX/root>(w\xE4r) <ROOT> <4:ADP/case>(wegen) <5:DET/det>(einer)\
    \ <6:NOUN/root>(Kette)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 10
    - 8
    - appos
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(noch) <ROOT> <4:VERB/root>(fand)
    <6:ADP/case>(vor) <7:DET/det>('nem) <8:NOUN/obl>(Jahr) <10:PROPN/appos>(Hah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(k\xE4mpfe) <ROOT> <3:ADV/root>(darum)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ihr) <2:VERB/root>(braucht) <3:PRON/obl:arg>(mir) <4:PART/advmod>(nicht)\
    \ <5:VERB/xcomp>(erz\xE4hlen) <6:PRON/nsubj>(was) <7:ADV/advmod>(so) <ROOT> <8:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:SCONJ/mark>(das) <2:DET/det:poss>(sein) <3:ADJ/amod>(gutes) <4:NOUN/nsubj>(Recht)
    <5:AUX/cop>(ist) <6:PRON/root>(Das) <7:AUX/cop>(ist) <8:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(ja) <2:ADV/root>(so) <ROOT> <3:ADV/advmod>(daran) <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - dep
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - appos
  sentence: <1:ADP/case>(auf) <2:ADV/advmod>(einmal) <3:DET/det>(ne) <4:NOUN/obj>(Panikattacke)
    <5:VERB/root>(bekommen) <7:X/dep>(Ach) <ROOT> <8:NOUN/compound>(Herzrasen) <10:NOUN/root>(Herzrasen)
    <11:NOUN/appos>(Schnappatmung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - acl
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 7
    - advmod
  - !!python/tuple
    - 16
    - 17
    - cc
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADJ/amod>(eiskalte) <2:NOUN/root>(H\xE4nde) <3:CCONJ/cc>(und) <4:NOUN/conj>(F\xFC\
    \xDFe) <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:VERB/conj>(wusste) <8:PART/advmod>(nicht)\
    \ <9:PRON/obj>(was) <10:ADP/case>(auf) <11:ADV/advmod>(einmal) <12:VERB/acl>(passiert)\
    \ <14:ADV/advmod>(Ach) <15:SCONJ/advmod>(wie) <ROOT> <16:CCONJ/cc>(Und) <17:ADV/root>(dann)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(das) <3:AUX/aux>(hatte) <4:PRON/obj>(sie)
    <5:ADV/advmod>(gestern) <6:ADV/advmod>(auch) <7:VERB/root>(angesprochen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - ccomp
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 13
    - obl
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - xcomp
  sentence: "<1:ADV/advmod>(so) <2:VERB/root>(macht) <3:NOUN/nsubj>(Alter) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:ADJ/ccomp>(echt) <ROOT> <7:ADP/case>(mit) <8:DET/det>(nem)\
    \ <9:NOUN/obl>(Fremden) <10:CCONJ/cc>(Und) <11:DET/det>(die) <12:NOUN/nsubj>(\xDC\
    bung) <13:VERB/root>(machen) <14:DET/nsubj>(andere) <15:ADJ/xcomp>(nackt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 1
    - nmod
  - !!python/tuple
    - 9
    - 8
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 10
    - obl
  sentence: "<1:NOUN/root>(Energie) <2:ADP/case>(zwischen) <3:PRON/nmod>(uns) <4:NOUN/nmod>(Mega)\
    \ <5:ADJ/advmod>(intensiv) <6:ADP/case>(Mit) <7:DET/det>(einem) <8:NOUN/nmod>(Fremden)\
    \ <9:X/dep>(Wie) <ROOT> <10:AUX/root>(w\xE4re) <11:PRON/nsubj>(das) <12:ADP/case>(mit)\
    \ <13:DET/det>(einer) <14:NOUN/obl>(Person)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 6
    - obl
  sentence: "<1:ADV/root>(Schon) <ROOT> <3:ADP/case>(bei) <4:NUM/nummod>(100) <5:NOUN/obl>(\xB0\
    C) <6:VERB/root>(kocht) <7:NOUN/nsubj>(Wasser) <8:ADP/case>(bei) <9:PRON/obl>(uns)\
    \ <10:ADV/advmod>(hier) <11:ADP/case>(auf) <12:DET/det>(der) <13:NOUN/obl>(Erde)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 14
    - mark
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(bringt) <3:PRON/obj>(uns) <4:DET/obj>(alle)
    <5:ADP/case>(in) <6:NOUN/obl>(Gefahr) <7:CCONJ/cc>(und) <8:ADV/advmod>(zwar) <9:ADV/advmod>(so)
    <ROOT> <10:SCONJ/mark>(wie) <11:PRON/nsubj>('s) <12:ADV/advmod>(noch) <13:ADV/advmod>(nie)
    <14:VERB/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:AUX/root>(kann) <2:PRON/nsubj>(das) <ROOT> <3:ADJ/amod>(starke) <4:NOUN/obj>(Folgen)\
    \ <5:ADP/case>(f\xFCr) <6:DET/det>(die) <7:NOUN/nmod>(Gesundheit) <8:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(du) <3:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - ccomp
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:DET/det>(diese) <3:NOUN/nsubj>(Ver\xE4nderung)\
    \ <4:AUX/ccomp>(ist) <5:VERB/root>(zeigen) <6:DET/det>(diese) <7:NOUN/obj>(Fotos)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)
    <ROOT> <5:ADV/advmod>(wie) <6:PRON/root>(du) <7:DET/det:poss>(dein) <8:NOUN/nsubj>(Leben)
    <9:ADV/advmod>(meisterst)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 4
    - acl
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - ccomp
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/cop>(bist) <4:DET/root>(diejenige)
    <5:PRON/nsubj>(die) <6:PRON/obl:arg>(mir) <7:NOUN/obj>(Mut) <8:VERB/acl>(macht)
    <9:PRON/nsubj>(das) <10:AUX/ccomp>(ist) <11:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(echt) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:PROPN/root>(Hammer)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/root>(Dass) <2:DET/det:poss>(mein) <3:NOUN/nsubj>(K\xF6rper)\
    \ <4:PART/advmod>(nicht) <5:ADV/advmod>(mehr) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(gegen)\
    \ <8:DET/det>(das) <9:NOUN/obl>(Medikament) <10:VERB/root>(rebelliert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - aux
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: "<1:AUX/aux>(k\xF6nnen) <2:ADV/advmod>(dann) <3:VERB/root>(find) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(das) <6:ADJ/advmod>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 13
    - nsubj
  - !!python/tuple
    - 6
    - 13
    - aux
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 13
    - advmod
  - !!python/tuple
    - 9
    - 12
    - det:poss
  - !!python/tuple
    - 10
    - 12
    - amod
  - !!python/tuple
    - 11
    - 12
    - compound
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 3
    - ccomp
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(ich) <3:VERB/root>(sehe) <4:ADV/advmod>(gerade)
    <5:PRON/nsubj>(du) <6:AUX/aux>(hast) <7:ADV/advmod>(heute) <8:ADV/advmod>(auch)
    <9:DET/det:poss>(dein) <10:ADJ/amod>(besonderes) <11:NOUN/compound>(T-) <12:NOUN/obj>(Shirt)
    <13:VERB/ccomp>(angezogen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(das) <3:ADV/advmod>(hier) <4:AUX/aux>(hast)
    <5:PRON/nsubj>(du) <6:VERB/root>(geschrieben) <7:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:ADJ/root>(echt)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: <1:PRON/nsubj>(wir) <2:PRON/nsubj>(das) <3:ADP/case>(bei) <4:DET/det>(den)
    <5:NOUN/obl>(filmen) <6:ADP/case>(bei) <7:NOUN/nmod>(deals) <8:VERB/root>(war)
    <9:ADV/advmod>(wirklich) <10:ADV/advmod>(sehr) <ROOT> <11:VERB/root>(konzentriert)
    <12:ADV/advmod>(also)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 12
    - cc
  - !!python/tuple
    - 3
    - 12
    - advmod
  - !!python/tuple
    - 4
    - 11
    - aux
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 1
    - conj
  - !!python/tuple
    - 12
    - 1
    - conj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADJ/root>(weltfremd) <2:CCONJ/cc>(aber) <3:ADJ/advmod>(nat\xFCrlich)\
    \ <4:AUX/aux>(hat) <5:PRON/nsubj>(der) <6:NOUN/nsubj>(verein) <7:ADV/advmod>(da)\
    \ <8:ADV/advmod>(auch) <9:ADV/advmod>(erst) <10:ADV/advmod>(mal) <11:VERB/conj>(gesagt)\
    \ <12:ADJ/conj>(okay) <ROOT> <13:SCONJ/root>(wenn)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  sentence: <1:INTJ/root>(Mach) <3:ADV/advmod>(mal) <4:PART/advmod>(nicht) <5:ADP/compound:prt>(auf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 7
    - obl
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(nervt) <3:PRON/obj>(mich) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(immer) <6:ADV/advmod>(so) <ROOT> <7:SCONJ/root>(wenn) <8:PRON/nsubj>(man)\
    \ <9:ADP/case>(bei) <10:DET/det>(dem) <11:ADJ/amod>(schei\xDF) <12:NOUN/obl>(Manipad)\
    \ <13:ADP/case>(an) <14:DET/det>(dem) <15:NOUN/nmod>(Anfang)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: "<1:NOUN/nsubj>(Schl\xFCpfer) <2:DET/det>(Dieses) <3:NOUN/nsubj>(Wort)\
    \ <4:PRON/nsubj>(das) <5:AUX/root>(ist) <ROOT> <6:NOUN/root>(Schreib) <7:PRON/nsubj>(das)\
    \ <8:NOUN/obj>(bitte) <9:ADP/case>(auf) <10:DET/det:poss>(meinen) <11:NOUN/nmod>(Grabstein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:PRON/nsubj>(Ich) <3:VERB/root>(kenne) <4:DET/det>(die)
    <5:NOUN/obj>(Marke) <6:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - appos
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obj
  sentence: <1:ADJ/root>(wild) <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(irgendwie)
    <5:PART/advmod>(nicht) <6:PRON/nsubj>(Ich) <7:VERB/appos>(find) <8:NOUN/obj>(s)
    <9:ADV/advmod>(ziemlich) <ROOT> <10:PRON/nsubj>(Der) <11:VERB/root>(benimmt) <12:PRON/obj>(sich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - mark
  - !!python/tuple
    - 4
    - 1
    - xcomp
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 11
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - parataxis
  - !!python/tuple
    - 12
    - 14
    - compound
  - !!python/tuple
    - 14
    - 11
    - nsubj
  sentence: <1:VERB/root>(Brauchst) <2:PART/advmod>(nicht) <3:ADV/mark>(fest) <4:VERB/xcomp>(halten)
    <5:ADV/advmod>(da) <6:AUX/ccomp>(ist) <7:DET/det>(ein) <8:NOUN/nsubj>(Magnet)
    <9:ADV/advmod>(dran) <10:ADV/advmod>(hier) <11:VERB/parataxis>(passiert) <12:PRON/compound>(nichts)
    <14:NOUN/nsubj>(Boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - dep
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Wem) <2:DET/det>(die) <3:NOUN/root>(Herausforderung) <4:ADP/dep>(zu)
    <ROOT> <5:AUX/aux>(ist) <6:AUX/aux>(kann) <7:DET/det>(einen) <8:ADJ/amod>(zweiten)
    <9:NOUN/obj>(Spieler) <10:VERB/root>(dazuholen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 11
    - aux
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - obl
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:DET/det>(der) <3:NOUN/nsubj>(Kontrast) <4:ADV/advmod>(so)
    <ROOT> <5:AUX/aux>(ist) <6:ADP/case>(zu) <7:DET/det>(diesem) <8:NOUN/obl>(Charakter)
    <9:PRON/obj>(den) <10:PRON/nsubj>(du) <11:VERB/root>(siehst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(auch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(halt)
    <ROOT> <5:PRON/nsubj>(es) <6:AUX/cop>(ist) <7:ADV/advmod>(halt) <8:ADJ/root>(spannend)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 3
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(es) <3:VERB/root>(wird) <4:DET/det>(jedes)
    <5:NOUN/obl>(Jahr) <6:ADP/case>(zu) <7:DET/det>(dem) <8:NOUN/obl>(Release) <9:ADP/case>(von)
    <10:PROPN/nmod>(FIFA) <11:DET/det>(das) <12:NOUN/obj>(Spiel) <ROOT> <13:VERB/root>(verkauft)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - aux
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:AUX/aux>(Hast) <2:PRON/nsubj>(du) <3:VERB/root>(gesehen) <5:ADV/advmod>(Wie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(ich) <3:VERB/root>(dachte) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(so) <ROOT> <6:AUX/cop>(ist) <7:ADV/advmod>(ja) <8:ADV/advmod>(richtig)
    <9:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(fand)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(noch) <6:ADV/advmod>(so) <7:VERB/root>(lebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT> <5:PRON/nsubj>(Das)
    <6:VERB/root>(sieht) <7:ADV/advmod>(so) <8:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 9
    - advcl
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - mark
  - !!python/tuple
    - 12
    - 18
    - obj
  - !!python/tuple
    - 13
    - 18
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - case
  - !!python/tuple
    - 15
    - 17
    - det
  - !!python/tuple
    - 16
    - 17
    - amod
  - !!python/tuple
    - 17
    - 18
    - obl
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 18
    - aux
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(wir) <4:ADP/case>(auf)\
    \ <5:DET/det>(die) <6:NOUN/obl>(Karte) <7:VERB/advcl>(gucken) <8:ADV/advmod>(dann)\
    \ <9:VERB/root>(sehen) <10:PRON/nsubj>(wir) <11:ADP/mark>(wie) <ROOT> <12:PRON/obj>(sich)\
    \ <13:PRON/nsubj>(das) <14:ADP/case>(auf) <15:DET/det>(diese) <16:ADJ/amod>(ganzen)\
    \ <17:NOUN/obl>(L\xE4nder) <18:VERB/root>(auswirken) <19:AUX/aux>(w\xFCrde)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - cop
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(was) <3:ADV/advmod>(da) <4:VERB/root>(rausgekommen)
    <5:AUX/aux>(ist) <6:AUX/cop>(ist) <7:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 8
    - obl
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 2
    - flat
  - !!python/tuple
    - 7
    - 3
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(mit) <2:PROPN/nmod>(Super) <3:PROPN/obl>(Mario) <4:PROPN/flat>(Galaxy)\
    \ <5:PROPN/flat>(2) <7:PRON/flat>(Das) <8:AUX/root>(w\xE4r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 7
    - conj
  sentence: <1:ADV/advmod>(Vielleicht) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <4:ADP/compound:prt>(zu)
    <ROOT> <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/root>(Thema) <8:CCONJ/cc>(und)
    <9:ADV/advmod>(zu) <10:ADV/advmod>(sehr) <11:ADP/case>(auf) <12:DET/det>(die)
    <13:NOUN/conj>(Nische)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - det
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 6
    - parataxis
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(eine) <4:ADV/advmod>(unfassbar)\
    \ <5:ADJ/amod>(gute) <6:NOUN/root>(Idee) <8:PRON/nsubj>(Das) <9:AUX/cop>(w\xE4\
    r) <10:ADV/parataxis>(halt) <ROOT> <11:ADV/root>(ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(heutzutage) <2:AUX/root>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(eher)\
    \ <ROOT> <5:ADJ/root>(eint\xF6nig)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:ADJ/root>(mega)\
    \ <ROOT> <5:CCONJ/cc>(oder) <6:ADV/advmod>(mega) <7:ADJ/root>(schwer) <8:ADP/case>(f\xFC\
    r) <9:PRON/nmod>(euch)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 7
    - mark
  - !!python/tuple
    - 11
    - 7
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 7
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:ADJ/root>(mega)\
    \ <ROOT> <5:CCONJ/cc>(oder) <6:ADV/advmod>(mega) <7:ADJ/root>(schwer) <8:ADP/case>(f\xFC\
    r) <9:PRON/nmod>(euch) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(ihr) <12:ADV/advmod>(sozusagen)\
    \ <13:ADV/advmod>(nur) <14:ADV/advmod>(so) <15:DET/det>(wenig) <16:NOUN/nmod>(Kontakt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 17
    - mark
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 17
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 17
    - aux
  - !!python/tuple
    - 12
    - 17
    - aux
  - !!python/tuple
    - 13
    - 17
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - xcomp
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(es) <4:ADV/advmod>(echt)\
    \ <ROOT> <5:SCONJ/mark>(wie) <6:ADV/advmod>(offen) <7:DET/det>(die) <8:NOUN/nsubj>(Mormonen)\
    \ <9:ADP/case>(von) <10:PRON/nmod>(mir) <11:AUX/aux>(sind) <12:AUX/aux>(H\xE4\
    tte) <13:PRON/nsubj>(ich) <14:ADV/advmod>(ehrlich) <15:VERB/xcomp>(gesagt) <16:PART/advmod>(nicht)\
    \ <17:VERB/root>(erwartet)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - mark
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 7
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det:poss
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:AUX/aux>(will) <4:ADV/advmod>(trotzdem)
    <5:ADV/advmod>(irgendwie) <6:ADV/advmod>(besser) <7:VERB/root>(verstehen) <8:SCONJ/mark>(wieso)
    <9:PRON/nsubj>(man) <10:PRON/obj>(sich) <11:ADV/advmod>(so) <12:ADV/advmod>(jung)
    <13:ADV/advmod>(so) <ROOT> <14:DET/det:poss>(seiner) <15:NOUN/obj>(Religion) <16:VERB/root>(verschreibt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:PRON/nsubj>(die) <3:VERB/root>(haben) <4:ADV/advmod>(hier)\
    \ <5:NOUN/obj>(Flyer) <6:ADP/case>(f\xFCr) <7:DET/det:poss>(ihre) <8:NOUN/nmod>(Sendung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(irgendwie) <3:ADJ/root>(unterschiedlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:NOUN/root>(Schei\xDF) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(auf)\
    \ <5:NOUN/root>(rappen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:AUX/aux>(muss) <3:ADV/advmod>(nochmal) <4:ADV/root>(zur\xFC\
    ck) <5:CCONJ/cc>(und) <6:VERB/conj>(krieg) <ROOT> <7:ADP/case>(in) <8:DET/det>(die)\
    \ <9:NOUN/root>(Fresse)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - dep
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 3
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:VERB/root>(sag) <4:PRON/obj>(dir)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(ehrlich) <8:SCONJ/dep>(wenn) <9:PRON/nsubj>(du)
    <10:ADV/advmod>(da) <ROOT> <11:ADV/advmod>(hinterher) <12:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(meine) <2:NOUN/nsubj>(Videos) <3:AUX/cop>(sind) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: "<1:PRON/nsubj>(das) <2:VERB/root>(w\xE4r) <3:ADV/advmod>(echt) <4:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - conj
  sentence: <1:ADV/root>(Wo) <2:PRON/nsubj>(ich) <ROOT> <3:ADP/case>(an) <4:DET/det>(dem)
    <5:NOUN/obl>(Arsch) <6:AUX/root>(war) <7:CCONJ/cc>(und) <8:PRON/nsubj>(du) <9:ADV/advmod>(noch)
    <10:ADV/advmod>(da) <11:VERB/conj>(warst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:AUX/root>(bin) <2:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(die) <ROOT> <2:NOUN/root>(flowen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PART/advmod>(Nicht) <2:DET/nsubj>(jeder) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(War) <2:ADV/advmod>(schon) <3:DET/det>(ein) <4:ADV/root>(bisschen)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:PROPN/nmod>(Mittwoch) <7:NOUN/root>(Nacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:INTJ/root>(Komm) <ROOT> <3:ADV/root>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(sowas) <4:ADP/compound:prt>(von)
    <ROOT> <5:ADJ/root>(arrogant)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(denkst) <4:PRON/obj>(dir)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(machen) <2:ADP/case>(auf) <3:ADJ/advmod>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(dreht) <3:ADV/advmod>(so) <ROOT> <4:X/root>(am)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(auf) <2:NOUN/root>(Onlineplattformen) <ROOT> <3:VERB/root>(gestiegen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - obl
  sentence: <1:ADP/case>(mit) <2:DET/det:poss>(seinem) <3:ADJ/amod>(geklauten) <4:NOUN/obl>(fahrrad)
    <5:PRON/obj>(sich) <6:VERB/root>(versteckt) <7:ADJ/amod>(ah) <8:NOUN/nsubj>(naturschutzgebiet)
    <9:ADV/advmod>(sogar) <ROOT> <10:ADV/advmod>(hier) <11:VERB/root>(wurde) <12:ADP/case>(auf)
    <13:DET/det>(jeden) <14:NOUN/obl>(fall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - compound:prt
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obj
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 5
    - advcl
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 17
    - mark
  - !!python/tuple
    - 15
    - 17
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - obj
  - !!python/tuple
    - 17
    - 12
    - ccomp
  - !!python/tuple
    - 18
    - 17
    - mark
  - !!python/tuple
    - 19
    - 20
    - nsubj
  - !!python/tuple
    - 20
    - 0
    - root
  - !!python/tuple
    - 21
    - 23
    - case
  - !!python/tuple
    - 22
    - 23
    - amod
  - !!python/tuple
    - 23
    - 20
    - obj
  sentence: "<1:PART/advmod>(nicht) <2:ADP/compound:prt>(aus) <3:CCONJ/cc>(aber) <4:PRON/nsubj>(ich)\
    \ <5:VERB/root>(drehe) <6:PRON/obj>(euch) <7:ADV/advmod>(mal) <8:DET/det>(das)\
    \ <9:NOUN/obj>(mikro) <10:ADP/mark>(um) <11:PRON/nsubj>(ich) <12:VERB/advcl>(wei\xDF\
    ) <13:PART/advmod>(nicht) <14:SCONJ/mark>(ob) <15:PRON/nsubj>(er) <16:PRON/obj>(das)\
    \ <17:VERB/ccomp>(h\xF6rt) <18:ADP/mark>(wie) <ROOT> <19:PRON/nsubj>(das) <20:VERB/root>(knistert)\
    \ <22:ADJ/amod>(lautes) <23:NOUN/obj>(knistern)"
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 9
    - ccomp
  sentence: <2:CCONJ/cc>(Und) <3:ADV/advmod>(da) <4:VERB/root>(stehen) <5:NUM/nummod>(drei)
    <6:NOUN/nsubj>(Leute) <7:CCONJ/cc>(und) <8:PRON/nsubj>(du) <9:VERB/conj>(drohst)
    <10:PRON/obj>(denen) <11:PRON/nsubj>(du) <12:AUX/cop>(bist) <13:ADV/advmod>(so)
    <14:ADJ/ccomp>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(richtig) <4:ADJ/root>(richtig)
    <ROOT> <5:ADV/root>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:VERB/root>(fallen) <3:DET/det>(die)
    <4:NOUN/nsubj>(Unterschiede) <5:ADP/case>(bei) <6:NOUN/nmod>(Frauenrechten) <7:ADP/case>(aus)
    <8:NOUN/nmod>(Frauen) <9:ADP/case>(in) <10:DET/det>(dem) <11:PROPN/nmod>(Westjordanland)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/root>(ist) <ROOT> <3:VERB/root>(gebaut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 11
    - cc
  - !!python/tuple
    - 6
    - 11
    - aux
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - obl:arg
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihr) <2:NOUN/nsubj>(Penner) <3:VERB/root>(hatet) <4:PRON/obj>(mich)
    <ROOT> <5:CCONJ/cc>(und) <6:AUX/aux>(wollt) <7:SCONJ/mark>(dass) <8:PRON/obl:arg>(mir)
    <9:PRON/obj>(was) <10:NOUN/obj>(Schlimmes) <11:VERB/root>(geschieht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADP/root>(zu) <ROOT> <4:DET/det>(ein)
    <5:NOUN/root>(Robocop)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/root>(Arsch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(m\xFCsste) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(echt) <ROOT> <6:VERB/root>(\xFCberlegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:AUX/aux>(habe) <3:PRON/nsubj>(ich) <4:VERB/root>(gesagt)
    <5:X/punct>(oh) <ROOT> <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:NOUN/root>(Polizei)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 13
    - nsubj
  - !!python/tuple
    - 9
    - 13
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - cc
  sentence: <1:ADV/advmod>(Wieso) <2:NOUN/obj>(Wahnsinn) <3:PRON/nsubj>(das) <4:VERB/root>(finde)
    <5:PRON/nsubj>(ich) <6:ADJ/advmod>(super) <ROOT> <7:ADV/advmod>(Also) <8:PRON/nsubj>(die)
    <9:AUX/cop>(sind) <10:ADV/advmod>(super) <11:ADV/advmod>(offen) <12:ADV/advmod>(super)
    <13:ADJ/root>(nett) <14:CCONJ/cc>(aber)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - obj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - aux
  - !!python/tuple
    - 9
    - 13
    - cc
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: <1:PRON/obj>(das) <2:AUX/aux>(kann) <3:PRON/nsubj>(ich) <4:PART/advmod>(nicht)
    <5:DET/obj>(vielen) <6:VERB/root>(zeigen) <7:PRON/nsubj>(das) <8:AUX/aux>(ist)
    <ROOT> <9:CCONJ/cc>(Aber) <10:DET/det>(den) <11:ADJ/amod>(rechten) <12:NOUN/obj>(Arm)
    <13:VERB/root>(habe) <14:PRON/nsubj>(ich) <15:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 13
    - advcl
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 13
    - aux
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<ROOT> <1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:PRON/obl:arg>(mir)\
    \ <5:ADV/advmod>(jetzt) <6:VERB/advcl>(vorstelle) <7:PRON/nsubj>(ich) <8:AUX/aux>(w\xFC\
    rde) <9:ADV/advmod>(so) <10:DET/det>(einen) <11:NOUN/obj>(Menschen) <12:ADV/advmod>(nie)\
    \ <13:VERB/root>(kennenlernen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - conj
  sentence: "<1:DET/det>(Die) <2:ADJ/amod>(h\xE4ufigste) <3:NOUN/nsubj>(Reaktion)\
    \ <4:AUX/cop>(war) <5:NOUN/root>(Entsetzen) <6:CCONJ/cc>(und) <7:ADV/advmod>(erst)\
    \ <8:ADV/advmod>(mal) <9:NOUN/conj>(Oh) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:PRON/obj>(das)
    <5:DET/obj>(alles) <6:VERB/xcomp>(zusammengefasst) <7:VERB/root>(sieht)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(erst) <3:ADV/advmod>(mal) <4:NOUN/root>(Oh)
    <ROOT> <5:ADJ/advmod>(okay) <6:ADJ/root>(cool)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 8
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(echt)
    <5:ADV/advmod>(schon) <ROOT> <7:ADV/advmod>(Immer) <8:ADV/root>(hier) <9:ADP/case>(von)
    <10:DET/det>(dem) <11:NOUN/nmod>(Klebeband) <12:ADV/compound:prt>(weg)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 17
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 17
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 17
    - obl
  - !!python/tuple
    - 14
    - 16
    - cc
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 13
    - conj
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 19
    - nsubj
  - !!python/tuple
    - 19
    - 17
    - obj
  sentence: "<1:DET/det>(Das) <2:ADJ/amod>(gr\xF6\xDFte) <3:NOUN/nsubj>(Problem) <4:ADJ/amod>(Gro\xDF\
    e) <5:NOUN/nmod>(Schlachten) <6:PRON/obj>(Die) <7:VERB/root>(kosten) <ROOT> <8:DET/det>(viel)\
    \ <9:NOUN/nsubj>(Kohle) <10:ADV/advmod>(Einfach) <11:ADV/advmod>(mal) <12:ADP/case>(bei)\
    \ <13:PROPN/obl>(Hitler) <14:CCONJ/cc>(und) <15:DET/det>(der) <16:NOUN/conj>(Reichsbank)\
    \ <17:VERB/root>(nachfragen) <18:NOUN/nsubj>(Stichwort) <19:NOUN/obj>(Kriegsanleihe)"
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 17
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 13
    - acl
  sentence: <2:PROPN/nsubj>(Wow) <4:PRON/nsubj>(das) <5:AUX/cop>(war) <6:ADV/advmod>(wieder)
    <7:ADV/advmod>(so) <8:ADJ/root>(spannend) <9:ADV/advmod>(Wieder) <10:ADV/advmod>(mal)
    <11:ADV/advmod>(so) <ROOT> <12:ADJ/amod>(geile) <13:NOUN/root>(Hinweise) <14:ADP/case>(auf)
    <15:PRON/nsubj>(was) <16:ADV/advmod>(noch) <17:VERB/acl>(kommt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Fernbeziehung) <2:ADV/advmod>(So) <3:ADJ/root>(richtig)
    <ROOT> <4:PRON/nsubj>(Sie) <5:ADP/case>(in) <6:NOUN/root>(Mitte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)
    <5:ADV/advmod>(da) <6:VERB/root>(rauskommt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/nsubj>(Jeder) <2:VERB/root>(hat) <3:PRON/obj>(sich) <ROOT> <4:VERB/root>(get\xE4\
    uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:NOUN/root>(Hass) <2:ADV/advmod>(hier) <ROOT> <3:ADV/advmod>(hier) <4:DET/det>(ein)
    <5:NOUN/root>(leben) <6:ADP/case>(in) <7:DET/det>(dem) <8:ADJ/nmod>(blaulicht)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:PART/advmod>(nicht) <2:ADV/advmod>(nur) <3:DET/det>(der) <4:NOUN/root>(Sex)
    <5:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - xcomp
  sentence: "<1:PRON/nsubj>(Ihr) <2:AUX/cop>(seid) <3:DET/root>(alle) <ROOT> <4:INTJ/advmod>(b\u0435\
    scheuert) <5:VERB/root>(haltet) <6:ADV/advmod>(\u0435uch) <7:ADP/case>(f\xFCr)\
    \ <8:ADV/advmod>(ach) <9:ADV/advmod>(so) <10:ADJ/xcomp>(toll)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(trotzdem) <3:AUX/root>(bin) <4:PRON/nsubj>(ich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(fickst) <3:ADV/advmod>(so) <ROOT> <4:DET/det:poss>(meinen)
    <5:NOUN/root>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(sitze) <ROOT> <3:ADJ/root>(bequem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - cc
  sentence: "<1:ADV/advmod>(Also) <2:PRON/root>(wer) <3:CCONJ/cc>(oder) <4:PRON/nsubj>(was)\
    \ <5:AUX/cop>(ist) <6:ADJ/conj>(gef\xE4hrlich) <7:CCONJ/cc>(und) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/nsubj>(er) <2:AUX/root>(w\xE4r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(bekommt) <3:ADV/advmod>(so) <ROOT> <4:DET/det>(viele)
    <5:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(ihr) <3:VERB/root>(bekommt) <4:ADV/advmod>(so)
    <ROOT> <5:DET/det>(viele) <6:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(es) <4:ADJ/advmod>(total)
    <ROOT> <5:SCONJ/mark>(weil) <6:PRON/nsubj>(ich) <7:ADV/advmod>(so) <8:PRON/obj>(was)
    <9:ADV/advmod>(noch) <10:ADV/advmod>(nie) <11:VERB/root>(gesehen) <12:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 4
    - xcomp
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 4
    - conj
  - !!python/tuple
    - 15
    - 17
    - nsubj:pass
  - !!python/tuple
    - 16
    - 17
    - mark
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(das) <3:NOUN/nsubj>(Meer) <4:VERB/root>(verf\xE4\
    rbt) <5:PRON/obj>(sich) <6:ADV/advmod>(dann) <7:ADV/advmod>(ziemlich) <8:ADV/advmod>(schnell)\
    \ <9:ADJ/xcomp>(blutrot) <10:CCONJ/cc>(und) <11:PRON/nsubj>(das) <12:AUX/cop>(war)\
    \ <13:ADV/advmod>(schon) <14:ADV/conj>(ziemlich) <ROOT> <15:PRON/nsubj:pass>(das)\
    \ <16:PART/mark>(zu) <17:VERB/root>(sehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(meine) <3:PRON/nsubj>(das) <4:AUX/ccomp>(ist)
    <5:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:AUX/cop>(war) <3:DET/det>(dieses) <4:NOUN/nmod>(Mal)
    <5:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:DET/det>(dem) <3:NOUN/obl>(Spielzeugsand) <4:PRON/nsubj>(das)
    <5:VERB/root>(zieht) <ROOT> <6:ADP/case>(an) <7:ADV/root>(hinterher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Und) <2:ADJ/root>(ganz) <ROOT> <3:AUX/root>(war) <4:PRON/nsubj>(es)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - aux
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<2:NOUN/root>(Anrufer) <4:ADV/advmod>(Ja) <5:CCONJ/cc>(und) <6:PRON/nsubj>(Sie)\
    \ <7:AUX/aux>(soll) <8:PRON/obj>(sich) <ROOT> <9:VERB/root>(erh\xF6hen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cc
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(echt) <4:ADV/advmod>(richtig)
    <5:ADJ/root>(lang) <6:CCONJ/cc>(und) <ROOT> <7:PRON/nsubj>(Ich) <8:AUX/cop>(bin)
    <9:ADJ/root>(gespannt) <10:ADP/case>(auf) <11:DET/det>(das) <12:NOUN/nmod>(Rennen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 11
    - obl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/root>(so) <ROOT> <4:ADP/case>(mit)\
    \ <5:DET/det>(den) <6:NOUN/obl>(M\xE4dels) <7:ADP/case>(auf) <8:DET/det>(dem)\
    \ <9:NOUN/nmod>(Trail) <10:PART/mark>(zu) <11:VERB/root>(fahren)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADP/case>(bei) <4:PRON/nmod>(mir)
    <5:ADV/advmod>(auch) <6:ADJ/root>(richtig) <ROOT> <7:ADV/root>(witzigerweise)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADJ/root>(Okay) <2:ADP/dep>(wie) <ROOT> <3:AUX/cop>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(\xFCberhaupt) <6:ADP/case>(bei) <7:PRON/root>(dem)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:ADP/case>(bei) <3:PRON/root>(dir)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/advmod>(hier) <3:AUX/root>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(mit) <7:DET/det>(dem) <8:NOUN/root>(\xD6\
    l)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux:pass
  sentence: "<1:ADP/case>(in) <2:PRON/nmod>(dem) <3:DET/det>(die) <4:ADJ/amod>(weibliche)\
    \ <5:NOUN/root>(Sexualit\xE4t) <ROOT> <6:VERB/root>(dezimiert) <7:AUX/aux:pass>(wurde)"
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 3
    - advcl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - obl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 11
    - advmod
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(eben)\
    \ <5:ADV/advmod>(auch) <6:SCONJ/mark>(wenn) <7:PROPN/nsubj>(Peggy) <8:ADV/advmod>(jetzt)\
    \ <9:NUM/nummod>(drei) <10:NOUN/obj>(Frauen) <11:VERB/advcl>(hat) <12:ADP/case>(f\xFC\
    r) <13:PRON/obl>(sie) <14:ADV/advmod>(auch) <15:ADJ/advmod>(echt) <ROOT> <16:PRON/nsubj>(was)\
    \ <17:PRON/root>(sie)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 1
    - mark
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - nmod
  sentence: <1:ADJ/root>(einfach) <2:AUX/cop>(ist) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(in) <7:DET/det:poss>(seiner) <8:NOUN/nmod>(Routine)
    <9:ADJ/root>(festgefahren) <10:AUX/cop>(ist) <11:ADP/case>(wie) <12:DET/det>(die)
    <13:NOUN/nmod>(Autisten)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:AUX/cop>(ist) <3:ADV/advmod>(auch) <4:ADJ/root>(richtig)
    <ROOT> <5:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:PRON/nsubj>(das) <3:ADJ/root>(nat\xFCrlich) <ROOT>\
    \ <4:ADJ/root>(ungerecht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(zerst\xF6r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <5:DET/det>(nen) <6:NOUN/obj>(Butler)
    <7:CCONJ/cc>(und) <8:PRON/nsubj>(der) <9:VERB/conj>(spurt) <10:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obj
  - !!python/tuple
    - 11
    - 6
    - compound:prt
  sentence: <1:NOUN/nsubj>(Leute) <2:VERB/root>(sagen) <3:ADV/advmod>(manchmal) <6:VERB/parataxis>(Ist)
    <7:PRON/nsubj>(das) <8:PART/advmod>(nicht) <9:DET/det>('ne) <10:NOUN/obj>(Spur)
    <11:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - cc
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 4
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 10
    - obl:arg
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:DET/det>(der) <4:NOUN/root>(Clown)
    <5:CCONJ/cc>(und) <6:SCONJ/mark>(ob) <7:PRON/nsubj>(du) <8:DET/det>(der) <9:NOUN/nsubj>(Slut)
    <10:VERB/parataxis>(vertraust) <11:PRON/obj>(is') <12:PRON/obl:arg>(mir) <13:ADV/advmod>(scheissegal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Mich) <2:VERB/root>(juckt) <3:PRON/nsubj>(es) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(wird) <3:ADV/advmod>(immer) <ROOT> <4:ADP/case>(auf)
    <5:PROPN/root>(Nak)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Milliard\xE4rleben) <3:AUX/cop>(ist)\
    \ <4:ADV/root>(so) <ROOT> <5:X/root>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADP/case>(w\xE4hrend) <2:DET/det>(der) <3:DET/root>(eine) <4:ADP/compound:prt>(auf)\
    \ <ROOT> <5:VERB/root>(macht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/root>(War) <2:ADV/advmod>(einfach) <3:ADV/advmod>(nur) <ROOT> <4:ADJ/root>(aggressiv)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/root>(Eeieiei) <3:PROPN/flat>(Boah) <ROOT> <5:NOUN/root>(Okay)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - expl
  - !!python/tuple
    - 9
    - 3
    - advcl
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 9
    - conj
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - obj
  - !!python/tuple
    - 17
    - 13
    - obj
  sentence: "<1:NOUN/root>(Raten) <2:CCONJ/cc>(und) <3:VERB/conj>(kommen) <4:ADV/advmod>(gut)\
    \ <5:ADV/advmod>(zurecht) <6:ADV/advmod>(so) <7:SCONJ/mark>(wie) <8:PRON/expl>(es)\
    \ <9:VERB/advcl>(l\xE4uft) <10:ADV/advmod>(Hin) <11:CCONJ/cc>(und) <12:ADV/conj>(wieder)\
    \ <13:VERB/conj>(denk) <14:PRON/nsubj>(ich) <15:PRON/obj>(mir) <17:NOUN/obj>(boah)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj:pass
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  - !!python/tuple
    - 13
    - 11
    - advmod
  sentence: "<1:ADV/advmod>(Nein) <2:ADV/advmod>(also) <3:PRON/nsubj>(ich) <4:VERB/root>(finde)\
    \ <5:PRON/obj>(es) <6:ADV/advmod>(schon) <ROOT> <7:SCONJ/mark>(dass) <8:SCONJ/mark>(da)\
    \ <9:DET/det>(die) <10:NOUN/nsubj:pass>(Kosten) <11:VERB/root>(\xFCbernommen)\
    \ <12:AUX/aux:pass>(werden) <13:ADV/advmod>(sogar)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 7
    - xcomp
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:PRON/nsubj>(was)
    <5:DET/det>(die) <6:NOUN/nsubj>(Gesellschaft) <7:VERB/root>(versucht) <8:PRON/obj>(uns)
    <9:NOUN/obj>(Frauen) <10:VERB/xcomp>(vorzuschreiben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 8
    - parataxis
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - ccomp
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 17
    - mark
  - !!python/tuple
    - 15
    - 17
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 12
    - ccomp
  sentence: "<1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:ADV/advmod>(mal) <4:DET/det>(dieses)\
    \ <5:NOUN/obj>(Gef\xFChl) <6:ADP/case>(von) <7:PRON/obl>(nichts) <8:VERB/root>(denken)\
    \ <9:PRON/obj>(Was) <10:VERB/parataxis>(meinst) <11:PRON/nsubj>(du) <12:VERB/ccomp>(steckt)\
    \ <13:ADV/advmod>(dahinter) <14:SCONJ/mark>(dass) <15:PRON/nsubj>(man) <16:ADV/advmod>(einfach)\
    \ <17:VERB/ccomp>(sagt)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advcl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - mark
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Erst) <2:SCONJ/mark>(als) <3:PRON/nsubj>(ich) <4:DET/det>(die)
    <5:NOUN/obj>(Augen) <6:ADV/advmod>(wieder) <7:VERB/advcl>(aufmache) <8:VERB/root>(merke)
    <9:PRON/nsubj>(ich) <10:SCONJ/mark>(wie) <ROOT> <11:PRON/nsubj>(das) <12:ADJ/advmod>(eigentlich)
    <13:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:X/root>(Ah) <ROOT> <2:PRON/nsubj>(Die) <3:AUX/aux>(hast) <4:PRON/nsubj>(du)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(mich) <7:VERB/root>(vorbereitet)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(total) <ROOT> <4:ADV/advmod>(Absolut)\
    \ <5:ADJ/root>(verr\xFCckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:ADV/advmod>(Erst) <2:ADV/root>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:NOUN/root>(Gew\xF6\
    hnungssache)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT> <4:ADV/advmod>(wie)
    <5:ADV/advmod>(schnell) <6:PRON/nsubj>(das) <7:VERB/root>(gehen) <8:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 4
    - advcl
  sentence: <1:ADV/advmod>(Wo) <2:PRON/nsubj>(ich) <3:ADV/advmod>(dann) <4:VERB/root>(gesagt)
    <5:AUX/aux>(habe) <6:ADP/case>(Um) <7:NOUN/obl>(Gottes) <8:VERB/advcl>(willen)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(hast) <3:PRON/obj>(dich) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/root>(verbogen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/cop>(bin) <3:ADV/advmod>(sowas) <4:ADP/root>(von)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 7
    - nmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <3:NOUN/nmod>(Rapstar) <5:PRON/nsubj>(Ihr)\
    \ <6:AUX/cop>(seid) <7:DET/root>(alle) <ROOT> <8:NOUN/root>(Blamage)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:VERB/root>(gelitten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:PRON/obj>(was)
    <5:PRON/nsubj>(die) <6:DET/obj>(alles) <7:VERB/root>(draufhaben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/root>(auch) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(das) <4:ADP/case>(zu)\
    \ <5:DET/det:poss>(deinem) <6:NOUN/obl>(Beruf) <7:VERB/root>(geh\xF6rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Immer) <2:SCONJ/mark>(wenn) <3:ADV/advmod>(s) <4:ADJ/root>(dunkel)\
    \ <5:AUX/cop>(war) <6:AUX/aux>(musste) <7:PRON/nsubj>(ich) <8:ADV/advmod>(so)\
    \ <ROOT> <9:ADV/advmod>(dr\xFCber) <10:VERB/root>(nachdenken)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PROPN/nsubj>(Suriname) <2:AUX/cop>(ist) <3:DET/det>(ein) <4:NOUN/root>(Land)\
    \ <5:PRON/nsubj>(das) <6:PRON/nsubj>(mich) <7:ADJ/amod>(echt) <ROOT> <8:VERB/root>(\xFC\
    berrascht) <9:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 15
    - cc
  - !!python/tuple
    - 9
    - 15
    - advmod
  - !!python/tuple
    - 10
    - 15
    - aux
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - advmod
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 7
    - conj
  sentence: "<1:CCONJ/cc>(aber) <2:DET/det>(eine) <3:NOUN/nsubj>(Story) <4:VERB/root>(hat)\
    \ <5:PRON/obj>(mich) <6:ADV/advmod>(besonders) <ROOT> <7:VERB/root>(abgeholt)\
    \ <8:CCONJ/cc>(und) <9:ADV/advmod>(daf\xFCr) <10:AUX/aux>(m\xFCssen) <11:PRON/nsubj>(wir)\
    \ <12:ADV/advmod>(kurz) <13:ADP/case>(\xFCber) <14:PRON/obl>(ihn) <15:VERB/conj>(reden)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:ADV/advmod>(dr\xFCber) <8:VERB/root>(nachdenkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(zeigt) <4:PRON/obl:arg>(mir)\
    \ <5:ADP/mark>(wie) <ROOT> <6:PRON/nsubj>(ich) <7:PRON/obj>(das) <8:VERB/root>(untersch\xE4\
    tzt) <9:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - compound:prt
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(mich) <3:VERB/root>(f\xFChlt) <4:PRON/obj>(sich)\
    \ <5:NOUN/nsubj>(Sex) <ROOT> <6:ADJ/root>(befremdlich) <7:ADP/compound:prt>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:DET/det>(die) <3:NOUN/nsubj>(Aussage) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  sentence: "<1:PROPN/root>(Wow) <2:PRON/nsubj>(was) <3:ADP/case>(f\xFCr) <4:DET/det>(ein)\
    \ <5:NOUN/nmod>(Ort) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 2
    - 4
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - dep
  sentence: <1:AUX/aux>(Ist) <2:PRON/obl:arg>(mir) <3:ADV/advmod>(grade) <4:VERB/root>(aufgefallen)
    <5:PRON/nsubj>(das) <6:AUX/cop>(ist) <ROOT> <7:ADJ/root>(lang) <8:ADV/advmod>(her)
    <10:NOUN/dep>(Stimmt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:SCONJ/mark>(wie)
    <5:DET/det>(viele) <6:NOUN/nsubj>(Mails) <7:ADP/case>(in) <8:DET/det>(diesen)
    <9:NOUN/obl>(Tagen) <10:VERB/root>(reinkommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:PRON/nsubj>(der) <3:VERB/root>(nachschmeckt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - cop
  sentence: <1:ADP/case>(Vor) <2:DET/obl>(allem) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)
    <5:PRON/obj>(das) <6:ADV/advmod>(so) <ROOT> <7:ADV/advmod>(wie) <8:ADJ/root>(bevormundend)
    <9:PRON/nsubj>(das) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADJ/advmod>(d\xFCsterer) <2:VERB/root>(aussehen) <3:SCONJ/mark>(denn)\
    \ <4:DET/det>(die) <5:ADJ/amod>(offiziellen) <6:NOUN/nsubj>(Zahlen) <7:AUX/cop>(sind)\
    \ <8:ADV/advmod>(auch) <9:ADJ/conj>(hierb) <ROOT> <10:VERB/root>(verf\xE4lscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:ADP/case>(in) <2:DET/det>(einem) <3:NOUN/obl>(Team) <4:PART/mark>(zu)
    <5:VERB/root>(arbeiten) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(es) <8:ADV/advmod>(einfach)
    <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(gepasst) <11:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fahr) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:PROPN/obl>(M10) <6:DET/det>(den) <7:NOUN/obj>(Block) <8:ADV/compound:prt>(rauf)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 4
    - parataxis
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/det:poss>(unsere) <4:NOUN/root>(Hochzeitsreise)
    <5:PRON/nsubj>(das) <6:AUX/cop>(war) <7:ADJ/parataxis>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(war) <3:ADV/advmod>(total) <4:ADV/advmod>(nerv\xF6\
    s) <5:ADV/advmod>(dann) <6:AUX/aux>(habe) <7:PRON/nsubj>(ich) <8:VERB/root>(gedacht)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - mark
  - !!python/tuple
    - 2
    - 11
    - advmod
  - !!python/tuple
    - 3
    - 11
    - cop
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 16
    - case
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 13
    - nmod
  - !!python/tuple
    - 15
    - 16
    - cop
  - !!python/tuple
    - 16
    - 11
    - conj
  sentence: "<ROOT> <1:SCONJ/mark>(denn) <2:ADV/advmod>(dort) <3:AUX/cop>(ist) <4:PRON/nsubj>(man)\
    \ <5:ADP/case>(bei) <6:DET/det>(dieser) <7:NOUN/obl>(Entwicklung) <8:ADV/advmod>(noch)\
    \ <9:DET/det>(ein) <10:ADV/advmod>(wenig) <11:ADV/root>(weiter) <12:SCONJ/case>(als)\
    \ <13:PRON/nsubj>(wir) <14:NUM/nmod>(2012) <15:AUX/cop>(war) <16:PROPN/conj>(S\xFC\
    dkorea)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(einfach) <4:ADJ/root>(total)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - amod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:INTJ/amod>(waste) <4:X/amod>(big)
    <5:NOUN/root>(time) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/aux>(hatten) <3:ADJ/amod>(letztes) <4:NOUN/obl>(Mal)\
    \ <5:VERB/root>(telefoniert) <6:ADV/advmod>(allerdings) <7:AUX/cop>(war) <8:PRON/nsubj>(das)\
    \ <ROOT> <9:DET/det>(die) <10:NOUN/root>(B\xE4sse)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - ccomp
  - !!python/tuple
    - 13
    - 12
    - cop
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 12
    - nmod
  - !!python/tuple
    - 16
    - 12
    - advmod
  sentence: "<1:ADV/advmod>(nat\xFCrlich) <2:ADV/advmod>(einfach) <3:ADV/advmod>(noch)\
    \ <4:ADV/root>(mal) <ROOT> <5:PRON/nsubj>(ich) <6:AUX/aux>(hab) <7:PRON/obj>(mich)\
    \ <8:ADV/advmod>(so) <9:VERB/root>(gefragt) <10:SCONJ/mark>(ob) <11:PRON/nsubj>(es)\
    \ <12:ADJ/ccomp>(okay) <13:AUX/cop>(ist) <14:ADP/case>(f\xFCr) <15:DET/nmod>(alle)\
    \ <16:ADV/advmod>(auch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 10
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 17
    - cc
  - !!python/tuple
    - 12
    - 17
    - nsubj
  - !!python/tuple
    - 13
    - 17
    - aux
  - !!python/tuple
    - 14
    - 17
    - obj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 10
    - conj
  sentence: "<1:VERB/root>(fand) <2:PRON/nsubj>(sie) <3:ADV/advmod>(sehr) <4:ADV/advmod>(sehr)\
    \ <ROOT> <5:CCONJ/cc>(und) <6:ADV/advmod>(sehr) <7:ADV/advmod>(direkt) <8:ADV/advmod>(sehr)\
    \ <9:ADV/advmod>(fast) <10:ADJ/root>(k\xFChl) <11:CCONJ/cc>(und) <12:PRON/nsubj>(ich)\
    \ <13:AUX/aux>(hab) <14:PRON/obj>(das) <15:ADV/advmod>(so) <16:ADV/advmod>(oft)\
    \ <17:VERB/conj>(erlebt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 3
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 3
    - parataxis
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 14
    - advmod
  - !!python/tuple
    - 18
    - 19
    - case
  - !!python/tuple
    - 19
    - 14
    - advmod
  sentence: "<1:ADV/advmod>(dann) <2:PROPN/nsubj>(Akito) <3:VERB/root>(st\xFCrzt)\
    \ <4:PRON/obj>(sich) <5:ADV/advmod>(sobald) <6:PRON/nsubj>(er) <7:PRON/obj>(den)\
    \ <8:VERB/ccomp>(sieht) <9:ADV/advmod>(richtig) <10:ADP/case>(auf) <11:DET/det>(den)\
    \ <12:ADV/advmod>(also) <13:PRON/nsubj>(der) <14:VERB/parataxis>(l\xE4sst) <15:ADV/advmod>(dann)\
    \ <16:ADV/advmod>(auch) <17:PART/advmod>(nicht) <18:ADP/case>(ab) <19:ADJ/advmod>(richtig)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 1
    - appos
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 1
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:NOUN/root>(Hauptdarstellern) <2:ADP/case>(in) <3:DET/det>(den) <4:NOUN/nmod>(Filmen)\
    \ <5:PRON/appos>(Die) <6:AUX/cop>(waren) <7:ADV/advmod>(immer) <8:ADV/advmod>(so)\
    \ <9:ADV/advmod>(so) <ROOT> <10:ADJ/root>(oberfl\xE4chlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 1
    - advcl
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 17
    - advmod
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - flat
  sentence: <1:VERB/root>(anhat) <2:ADP/case>(in) <3:DET/det>(der) <4:NOUN/obl>(Werbung)
    <5:CCONJ/cc>(oder) <6:ADP/case>(auf) <7:ADV/advmod>(so) <8:DET/det>(einem) <9:NOUN/conj>(Bild)
    <10:PRON/nsubj>(Es) <11:AUX/advcl>(ist) <ROOT> <12:ADV/advmod>(wirklich) <13:ADV/advmod>(also)
    <14:ADV/advmod>(eins) <15:ADP/case>(zu) <16:ADV/advmod>(eins) <17:PROPN/root>(Steve)
    <18:PROPN/flat>(Jobs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT> <4:PRON/nsubj>(Das)
    <5:AUX/cop>(war) <6:PART/advmod>(nicht) <7:ADJ/root>(schlecht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:ADV/advmod>(unerwartet) <3:VERB/root>(traf)
    <4:PRON/nsubj>(ich) <5:DET/det>(den) <6:NOUN/obj>(Nerv)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:PRON/nsubj>(die) <2:PART/advmod>(nicht) <3:ADJ/root>(zwingend) <4:ADP/case>(auf)
    <5:DET/det>(die) <6:NOUN/nmod>(Architektur) <ROOT> <7:VERB/root>(ausgelegt) <8:AUX/aux:pass>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  - !!python/tuple
    - 11
    - 5
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 12
    - ccomp
  - !!python/tuple
    - 17
    - 16
    - cop
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/aux>(k\xF6nnen) <3:ADV/mark>(weiter) <4:PRON/nsubj>(Ich)\
    \ <5:VERB/root>(merke) <6:ADV/advmod>(danach) <7:DET/det>(die) <8:NOUN/nsubj>(Leute)\
    \ <9:ADV/advmod>(hier) <10:AUX/ccomp>(sind) <11:ADV/advmod>(so) <ROOT> <12:VERB/root>(verunsichert)\
    \ <13:SCONJ/mark>(dass) <14:PRON/nsubj>(sie) <15:ADV/advmod>(total) <16:ADJ/ccomp>(misstrauisch)\
    \ <17:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(war) <4:ADV/advmod>(hier)\
    \ <5:ADP/case>(in) <6:PROPN/obl>(Berlin) <7:ADV/advmod>(erstmal) <8:DET/det>(ein)\
    \ <9:ADV/advmod>(bisschen) <ROOT> <10:VERB/root>(\xFCberfordert) <11:ADP/case>(von)\
    \ <12:DET/det>(dem) <13:NOUN/obl>(Datingmarkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - cc
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:CCONJ/cc>(und) <3:DET/det>(das) <4:NOUN/nsubj>(Ding)
    <5:AUX/cop>(ist) <6:PRON/nsubj>(ich) <7:VERB/root>(finde) <8:NOUN/obj>(Dates)
    <9:ADV/advmod>(auch) <10:ADV/advmod>(irgendwie) <ROOT> <11:ADJ/root>(anstrengend)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - cop
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 5
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(die)\
    \ <ROOT> <5:ADJ/root>(gef\xE4hrlich) <6:PRON/nsubj>(die) <7:AUX/cop>(sind) <8:ADP/case>(wie)\
    \ <9:PROPN/nmod>(Medusa)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:ADP/case>(mit) <2:DET/det>(den) <3:PROPN/root>(Homies) <ROOT> <4:ADJ/root>(hart)
    <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/nmod>(relaxen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Warum) <3:SCONJ/root>(Weil) <4:ADV/advmod>(sonst) <5:DET/det>(das)
    <6:NOUN/nsubj>(Lied) <7:ADP/compound:prt>(zu) <ROOT> <8:AUX/root>(Ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(wir) <4:ADP/case>(aus)
    <5:DET/det>(den) <6:NUM/nummod>(10) <7:NOUN/obl>(Wagen) <8:VERB/root>(steigen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:SCONJ/root>(Weil) <2:PRON/obj>(ihr) <3:ADV/advmod>(jetzt) <ROOT> <4:CCONJ/cc>(aber)\
    \ <5:ADV/advmod>(immer) <6:ADV/advmod>(noch) <7:ADV/advmod>(sehr) <8:ADJ/root>(sch\xE4\
    big) <9:AUX/cop>(seid)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:PRON/obj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(reingezogen) <6:ADP/case>(in) <7:DET/det:poss>(seine) <8:NOUN/obl>(Welt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - aux
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: "<1:ADV/advmod>(Ansonsten) <2:AUX/root>(sind) <3:ADV/advmod>(hier) <4:ADV/advmod>(noch)\
    \ <5:NOUN/nsubj>(Videos) <6:PRON/nsubj>(die) <7:AUX/aux>(k\xF6nnten) <8:ADV/advmod>(auch)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Salz) <3:VERB/root>(kommt) <4:ADV/advmod>(aber)
    <5:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:CCONJ/cc>(aber) <2:VERB/root>(machen) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(dieser) <2:NOUN/nsubj>(Remix) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:PART/mark>(zu) <2:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(seh') <3:DET/det>(die) <4:NOUN/obj>(Augen)\
    \ <5:DET/det:poss>(meiner) <6:NOUN/nmod>(Tochter) <7:CCONJ/cc>(und) <8:VERB/conj>(sch\xE4\
    m') <9:PRON/obj>(mich) <10:ADV/advmod>(so) <ROOT> <12:INTJ/advmod>(sch\xE4m) <14:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - ccomp
  sentence: "<1:PRON/nsubj>(Sie) <2:VERB/root>(sagt) <5:DET/det>(Ein) <6:NOUN/nsubj>(Foto)\
    \ <7:AUX/ccomp>(w\xE4re) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:VERB/root>(erkl\xE4r) <4:PRON/obl:arg>(mir) <5:ADV/advmod>(bitte)\
    \ <6:ADV/advmod>(sp\xE4ter) <7:PART/advmod>(nicht) <8:ADP/advmod>(wie) <ROOT>\
    \ <9:ADV/advmod>(gerad') <10:DET/det>(die) <11:NOUN/nsubj>(Beziehung) <12:VERB/root>(l\xE4\
    uft)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(jeder) <2:NOUN/root>(bar) <ROOT> <4:ADJ/root>(perfekt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(man) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(verdient)
    <5:ADP/case>(mit) <6:NOUN/obl>(Mord)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 2
    - advmod
  - !!python/tuple
    - 11
    - 2
    - compound:prt
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 12
    - obj
  sentence: "<1:ADV/advmod>(so) <2:VERB/root>(soll) <3:ADV/advmod>(halt) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(irgendwie) <6:ADV/advmod>(so) <7:ADP/case>(in) <8:DET/det:poss>(unseren)\
    \ <9:NOUN/obl>(Alltag) <10:ADV/advmod>(so) <11:ADP/compound:prt>(zu) <ROOT> <12:VERB/root>(\xFC\
    bergehen) <13:SCONJ/mark>(weil) <14:PRON/nsubj>(was) <15:PRON/obj>(was)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obl
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - advmod
  - !!python/tuple
    - 13
    - 5
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADV/advmod>(irgendwie) <2:DET/det>(eine) <3:ADJ/amod>(vern\xFCnftige)\
    \ <4:NOUN/nsubj>(Entscheidung) <5:VERB/root>(treffe) <6:ADV/advmod>(so) <7:ADP/case>(in)\
    \ <8:DET/det>(dem) <9:NOUN/obl>(Moment) <10:ADV/advmod>(zumindest) <11:ADV/advmod>(so)\
    \ <13:ADV/advmod>(So) <ROOT> <15:X/root>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:ADV/advmod>(Gerade) <3:ADP/case>(bei) <4:NOUN/obl>(Alleinerziehenden)
    <5:AUX/root>(ist) <6:PRON/nsubj>(es) <7:ADV/advmod>(besonders) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Glasfaserausbau) <3:VERB/root>(wurde)
    <4:ADP/case>(in) <5:PROPN/nmod>(Deutschland) <6:ADJ/xcomp>(ganz) <ROOT> <7:VERB/root>(verrissen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - obl
  - !!python/tuple
    - 12
    - 11
    - flat
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 9
    - det:poss
  sentence: <1:ADV/advmod>(Hier) <2:ADV/advmod>(da) <3:AUX/root>(ist) <4:ADV/advmod>(letztens)
    <5:ADV/advmod>(so) <6:DET/det>(ein) <7:NOUN/nsubj>(Fan) <8:ADV/advmod>(ziemlich)
    <ROOT> <9:VERB/root>(ausgerastet) <10:ADP/case>(als) <11:PROPN/obl>(Taylor) <12:PROPN/flat>(Swift)
    <13:ADP/case>(in) <14:DET/det:poss>(seinen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Genau) <2:INTJ/advmod>(hallo) <3:PRON/nsubj>(Das) <4:AUX/root>(ist)
    <5:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 5
    - nmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 16
    - cc
  - !!python/tuple
    - 12
    - 16
    - advmod
  - !!python/tuple
    - 13
    - 16
    - aux
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 5
    - conj
  sentence: "<1:ADP/root>(zu) <ROOT> <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(zu)\
    \ <5:ADV/root>(nah) <6:ADP/case>(an) <7:DET/det:poss>(ihrer) <8:ADJ/amod>(eigenen)\
    \ <9:NOUN/nmod>(Welt) <10:ADV/advmod>(dran) <11:CCONJ/cc>(Und) <12:ADV/advmod>(dann)\
    \ <13:AUX/aux>(haben) <14:PRON/nsubj>(wir) <15:PRON/obj>(uns) <16:VERB/conj>(\xFC\
    berlegt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - expl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - obl
  sentence: <1:ADJ/root>(Total) <ROOT> <2:CCONJ/cc>(Und) <3:PRON/expl>(es) <4:AUX/root>(ist)
    <5:ADV/advmod>(immer) <6:ADV/advmod>(noch) <7:ADP/case>(auf) <8:DET/obl>(demselben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(waren) <3:ADV/advmod>(schon) <4:PRON/root>(das)
    <5:AUX/cop>(war) <6:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:AUX/aux>(haben) <3:ADV/advmod>(korrigierend) <4:VERB/root>(eingewirkt)
    <5:SCONJ/mark>(wenn) <6:NOUN/obj>(s) <7:ADP/compound:prt>(zu) <ROOT> <8:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(war) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(so) <6:PROPN/obj>(Wow) <7:ADV/advmod>(okay) <8:NUM/nummod>(sieben)\
    \ <9:NOUN/obl>(Minuten) <10:ADP/case>(f\xFCr) <11:DET/det>(ein) <12:NOUN/nmod>(Spiel)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - nsubj
  sentence: "<1:PRON/obj>(Was) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(was)\
    \ <5:PRON/obj>(sich) <ROOT> <6:VERB/root>(ver\xE4ndert) <7:AUX/aux>(hat) <8:AUX/cop>(sind)\
    \ <9:DET/det>(die) <10:NOUN/nsubj>(Drehs)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/aux>(ist) <4:VERB/root>(find)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(einfach) <7:ADV/advmod>(mittlerweile) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(da) <2:VERB/root>(hat) <3:PRON/obj>(sich) <4:ADV/advmod>(nat\xFC\
    rlich) <5:ADV/advmod>(auch) <6:ADV/advmod>(einfach) <7:DET/det>(die) <8:NOUN/nsubj>(Technik)\
    \ <ROOT> <9:VERB/root>(weiterentwickelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(dieses) <3:NOUN/nsubj>(Format) <4:VERB/root>(hat)\
    \ <5:DET/det>(alle) <6:NOUN/obj>(Kr\xE4fte) <7:ADP/case>(von) <8:DET/obl>(allen)\
    \ <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(abgesaugt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/nsubj>(was) <4:ADV/advmod>(so)
    <5:ADJ/advmod>(ganz) <ROOT> <6:ADV/advmod>(auch) <7:ADV/advmod>(noch) <8:ADP/case>(zu)
    <9:DET/det>(diesem) <10:NOUN/obl>(Stress) <11:VERB/root>(beigetragen) <12:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(einfach) <3:ADV/root>(irgendwie) <ROOT>
    <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  sentence: "<1:ADV/advmod>(Ja) <2:INTJ/advmod>(nee) <3:ADP/case>(ohne) <4:NOUN/obl>(Schei\xDF\
    ) <5:PRON/nsubj>(das) <6:VERB/root>(fand) <7:PRON/nsubj>(ich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obl:arg
  - !!python/tuple
    - 11
    - 8
    - obj
  - !!python/tuple
    - 12
    - 8
    - advmod
  - !!python/tuple
    - 13
    - 8
    - compound:prt
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(ich) <3:VERB/root>(gedacht) <4:AUX/aux>(hab)
    <5:ADV/advmod>(so) <6:ADV/advmod>(ey) <ROOT> <7:ADV/advmod>(so) <8:VERB/root>(stell)
    <9:PRON/nsubj>(ich) <10:PRON/obl:arg>(mir) <11:PRON/obj>(das) <12:ADV/advmod>(irgendwie)
    <13:ADP/compound:prt>(vor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADV/advmod>(damals) <6:AUX/root>(war) <7:PRON/nsubj>(das) <8:ADP/case>(f\xFC\
    r) <9:PRON/obl>(uns) <10:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advcl
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Wobei) <2:PRON/nsubj>(ich) <3:VERB/advcl>(sagen) <4:AUX/aux>(muss)
    <5:PRON/nsubj>(das) <6:VERB/root>(fand) <7:PRON/nsubj>(ich) <8:ADV/advmod>(auch)
    <9:ADV/advmod>(schon) <10:ADV/advmod>(immer) <11:ADJ/advmod>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux:pass
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(das) <3:AUX/aux:pass>(war) <4:DET/det>(diese)
    <5:NOUN/obj>(Kommentare) <6:PART/mark>(zu) <7:VERB/root>(lesen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(War) <2:PRON/nsubj>(es) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  sentence: "<1:ADJ/root>(Wei\xDF) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux:pass
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADJ/advmod>(Statisch) <2:VERB/root>(gesehen) <3:AUX/aux:pass>(wird)\
    \ <4:PRON/obj>(sich) <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <7:DET/nsubj>(viel)\
    \ <ROOT> <8:VERB/root>(\xE4ndern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obj
  - !!python/tuple
    - 9
    - 4
    - compound:prt
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(macht) <3:CCONJ/cc>(und) <4:VERB/conj>(tut)
    <5:CCONJ/cc>(und) <6:NOUN/conj>(slapped) <7:DET/det>(das) <8:NOUN/obj>(Ding) <9:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADP/root>(von) <3:ADP/case>(wegen) <ROOT> <4:CCONJ/cc>(und)
    <5:ADJ/root>(real)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(ist) <ROOT> <3:DET/det>(das) <4:NOUN/root>(Letzte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/dep>(is') <2:PRON/root>(der) <ROOT> <4:PROPN/root>(Wuh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:DET/root>(alles) <3:PRON/obj>(was) <4:PRON/nsubj>(ich)
    <5:VERB/acl>(rappe) <6:VERB/parataxis>(finden) <7:DET/det:poss>(deine) <8:NOUN/obj>(Homies)
    <9:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: <1:DET/det:poss>(meine) <2:NOUN/nsubj>(Stimme) <3:VERB/root>(macht) <4:DET/det>(den)
    <5:NOUN/obj>(Beat) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 2
    - conj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(wird) <3:DET/det>(die) <4:NOUN/nsubj>(Nacht)
    <5:ADP/case>(zu) <6:DET/det>(dem) <7:NOUN/nmod>(Tag) <8:CCONJ/cc>(und) <9:PRON/nsubj>(du)
    <10:AUX/conj>(bist) <ROOT> <11:ADP/case>(an) <12:DET/det>(dem) <13:NOUN/root>(Arsch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - compound:prt
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(wird) <3:ADJ/xcomp>(sicher) <ROOT> <4:CCONJ/cc>(und)
    <5:VERB/root>(geht) <6:ADV/advmod>(voll) <7:ADP/compound:prt>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(auch) <2:DET/det>(der) <3:NOUN/nsubj>(Typ) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:CCONJ/cc>(und)
    <5:ADJ/root>(cool) <6:ADP/case>(an) <7:DET/det>(dem) <8:PROPN/nmod>(Mic)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - csubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cc
  sentence: "<1:PRON/nsubj>(Was) <2:PRON/nsubj>(du) <3:PART/advmod>(nicht) <4:VERB/csubj>(sagst)\
    \ <6:NOUN/root>(Stra\xDFenpate) <7:CCONJ/cc>(und) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(sie) <3:VERB/root>(feiern) <4:PRON/obj>(mich)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:DET/det>(den) <7:NOUN/root>(Style)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - obj
  sentence: "<1:VERB/root>(freut) <2:PRON/obj>(sich) <3:ADP/compound:prt>(\xFCber)\
    \ <ROOT> <4:CCONJ/cc>(und) <5:PRON/nsubj>(ich) <6:VERB/root>(sag) <7:PRON/nsubj>(es)\
    \ <8:VERB/ccomp>(gibt) <9:ADV/advmod>(noch) <10:DET/det>('ne) <11:NOUN/obj>(\xDC\
    berraschung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - obj
  sentence: "<1:VERB/root>(freut) <2:PRON/obj>(sich) <3:ADP/compound:prt>(\xFCber)\
    \ <ROOT> <4:CCONJ/cc>(und) <5:PRON/nsubj>(ich) <6:VERB/root>(sag) <7:PRON/nsubj>(es)\
    \ <8:VERB/ccomp>(gibt) <9:ADV/advmod>(noch) <10:DET/det>('ne) <11:NOUN/obj>(\xDC\
    berraschung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
    <4:SCONJ/mark>(weil) <5:PRON/nsubj>(du) <6:ADP/case>(seit) <7:NOUN/obl>(Jahren)
    <8:ADP/case>(in) <9:DET/det>(dem) <10:NOUN/obl>(Berufsleben) <11:VERB/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(sind) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/obl:arg>(mir) <2:ADV/root>(egal) <3:ADP/advmod>(wie) <ROOT> <4:PRON/nsubj>(du)
    <5:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obl:arg
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:DET/det>(Jedes) <2:NOUN/obl:arg>(Wochenende) <3:VERB/root>(fehlst)
    <4:PRON/nsubj>(du) <5:PRON/obl:arg>(mir) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <2:PRON/nsubj>(Ich) <3:VERB/root>(bin) <4:ADV/advmod>(jetzt) <5:ADV/advmod>(so)
    <ROOT> <6:ADJ/root>(spitz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hass') <3:PRON/obj>(euch) <4:DET/obj>(alle)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  sentence: <1:ADJ/root>(endgeil) <2:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(gehypt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(werdet) <2:ADV/advmod>(erstma') <3:ADV/advmod>(so) <ROOT>
    <4:ADP/case>(wie) <5:PROPN/root>(Joel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 9
    - obl
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 16
    - nsubj
  - !!python/tuple
    - 13
    - 16
    - aux
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:DET/det>(jeden) <2:NOUN/obl>(Tag) <3:ADV/advmod>(noch) <4:ADV/advmod>(so)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:DET/det>(jeden) <8:NOUN/obl>(Tag)
    <9:VERB/root>(denke) <10:PROPN/nsubj>(Oh) <11:NOUN/obj>(Mann) <ROOT> <12:PRON/nsubj>(das)
    <13:AUX/aux>(hat) <14:ADV/advmod>(ja) <15:ADV/advmod>(wirklich) <16:VERB/root>(geklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(sehr) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 14
    - mark
  - !!python/tuple
    - 9
    - 14
    - advmod
  - !!python/tuple
    - 10
    - 14
    - mark
  - !!python/tuple
    - 11
    - 14
    - nsubj:pass
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - aux:pass
  sentence: <1:ADV/advmod>(Ja) <2:ADV/advmod>(also) <3:PRON/nsubj>(ich) <4:VERB/root>(finde)
    <5:PRON/obj>(es) <6:ADV/advmod>(halt) <7:ADJ/advmod>(total) <ROOT> <8:SCONJ/mark>(dass)
    <9:ADV/advmod>(so) <10:SCONJ/mark>(dass) <11:PRON/nsubj:pass>(das) <12:ADV/advmod>(so)
    <13:ADV/advmod>(gegeneinander) <14:VERB/root>(ausgespielt) <15:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(glaube) <3:PRON/nsubj>(wir) <4:AUX/cop>(werden)\
    \ <5:ADV/advmod>(gerade) <6:ADJ/advmod>(richtig) <ROOT> <7:VERB/root>(geh\xF6\
    rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - xcomp
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - obj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:VERB/root>(lasst) <3:PRON/obj>(uns) <4:ADV/advmod>(direkt)
    <5:ADP/case>(als) <6:ADJ/amod>(erstes) <7:NOUN/obl>(mal) <8:VERB/xcomp>(checken)
    <9:SCONJ/advmod>(wie) <ROOT> <10:DET/det>(diese) <11:NOUN/nsubj>(Droge) <12:ADV/advmod>(gerade)
    <13:DET/det>(alle) <14:NOUN/obj>(Dimensionen) <15:VERB/root>(sprengt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(Seit) <2:NUM/obl>(2016) <3:VERB/root>(gehen) <4:DET/det>(die)
    <5:NOUN/nsubj>(Zahlen) <ROOT> <6:ADP/case>(nach) <7:ADV/root>(oben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - expl
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - mark
  - !!python/tuple
    - 9
    - 5
    - aux
  - !!python/tuple
    - 11
    - 5
    - advmod
  sentence: <2:NOUN/dep>(Reporterin) <4:ADV/advmod>(Wie) <5:AUX/root>(ist) <6:PRON/expl>(es)
    <7:ADV/advmod>(hier) <8:PART/mark>(zu) <9:AUX/aux>(sein) <11:ADV/advmod>(Schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(Finde) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 6
    - ccomp
  sentence: "<1:ADV/root>(Aber) <ROOT> <2:PRON/nsubj>(ich) <3:VERB/root>(habe) <4:ADV/advmod>(wirklich)\
    \ <5:PRON/nsubj>(ich) <6:VERB/xcomp>(bete) <7:ADP/case>(zu) <8:NOUN/obl>(Gott)\
    \ <9:SCONJ/mark>(dass) <10:PRON/nsubj>(das) <11:VERB/ccomp>(aufh\xF6rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:X/root>(Ey) <ROOT> <2:SCONJ/mark>(wie) <3:PROPN/nsubj>(Heidi) <4:PROPN/flat>(Klum)\
    \ <5:ADP/case>(\xFCber) <6:DET/det:poss>(ihre) <7:NOUN/obl>(M\xE4dchen) <8:VERB/root>(redet)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - mark
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 10
    - flat
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Sorry) <2:PRON/nsubj>(ich) <3:ADV/advmod>(nochmal) <4:PRON/nsubj>(ich)\
    \ <5:VERB/root>(komme) <6:PART/advmod>(nicht) <7:ADV/advmod>(dr\xC3\xBCber) <8:ADV/mark>(hinweg)\
    \ <9:SCONJ/compound:prt>(wie) <ROOT> <10:PROPN/nsubj>(Alex) <11:PROPN/flat>(Stoldt)\
    \ <12:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/obl:arg>(mir) <3:VERB/root>(zahlen) <4:PRON/nsubj>(die)
    <5:DET/det>(das) <6:NOUN/obj>(Doppelte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:AUX/root>(Ist) <ROOT> <2:ADV/advmod>(wie) <3:ADV/advmod>(schnell) <4:PRON/nsubj>(du)
    <5:ADV/advmod>(darauf) <6:VERB/root>(geantwortet) <7:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(spricht) <2:PRON/obj>(mich) <3:ADP/case>(von) <4:DET/det>(dem)
    <5:NOUN/obl>(Setting) <6:PART/advmod>(nicht) <ROOT> <7:ADP/root>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/root>(ist) <2:PRON/nsubj>(es) <ROOT> <3:ADP/case>(wie) <4:ADJ/root>(kryptonit)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(find) <4:PRON/obj>(das) <5:ADV/advmod>(ja)
    <6:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/advmod>(Oh) <2:ADV/root>(ja) <ROOT> <3:ADV/advmod>(sehr) <4:ADJ/root>(lecker)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:AUX/root>(w\xE4r) <2:PRON/nsubj>(ich) <ROOT> <3:ADJ/root>(verbittert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(fick) <4:ADV/advmod>(jetzt) <5:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/dep>(von) <2:ADP/case>(wegen) <3:PRON/nsubj>(er) <4:AUX/root>(ist)
    <ROOT> <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/root>(Game)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 2
    - advcl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - obl
  - !!python/tuple
    - 14
    - 11
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - mark
  - !!python/tuple
    - 17
    - 15
    - xcomp
  - !!python/tuple
    - 18
    - 24
    - mark
  - !!python/tuple
    - 19
    - 24
    - nsubj
  - !!python/tuple
    - 20
    - 24
    - advmod
  - !!python/tuple
    - 21
    - 23
    - case
  - !!python/tuple
    - 22
    - 23
    - det
  - !!python/tuple
    - 23
    - 24
    - obl
  - !!python/tuple
    - 24
    - 17
    - ccomp
  - !!python/tuple
    - 25
    - 27
    - case
  - !!python/tuple
    - 26
    - 27
    - det
  - !!python/tuple
    - 27
    - 24
    - obl
  sentence: "<1:ADV/advmod>(Jetzt) <2:VERB/root>(denkt) <3:PRON/obj>(ihr) <4:ADV/advmod>(wahrscheinlich)\
    \ <5:ADV/advmod>(ja) <6:ADV/advmod>(wie) <7:ADJ/ccomp>(bl\xF6d) <8:AUX/aux>(muss)\
    \ <9:PRON/nsubj>(man) <10:ADV/advmod>(auch) <11:AUX/advcl>(sein) <12:ADP/case>(um)\
    \ <13:PRON/obl>(sich) <14:ADV/advmod>(so) <ROOT> <15:VERB/root>(verarschen) <16:PART/mark>(zu)\
    \ <17:VERB/xcomp>(lassen) <18:SCONJ/mark>(dass) <19:PRON/nsubj>(man) <20:ADV/advmod>(sogar)\
    \ <21:ADP/case>(in) <22:DET/det>(das) <23:NOUN/obl>(Ausland) <24:VERB/ccomp>(geht)\
    \ <25:ADP/case>(f\xFCr) <26:DET/det>(einen) <27:NOUN/obl>(Job)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 13
    - obl
  sentence: <1:ADV/advmod>(anders) <2:ADV/advmod>(wahr) <3:ADV/advmod>(Also) <4:ADP/case>(bei)
    <5:PRON/obl>(mir) <6:AUX/root>(war) <7:PRON/nsubj>(das) <8:ADP/case>(in) <9:DET/det>(dieser)
    <10:NOUN/obl>(Zeit) <ROOT> <11:ADV/advmod>(so) <12:ADV/advmod>(Da) <13:VERB/root>(war)
    <14:PRON/nsubj>(ich) <15:ADP/case>(zu) <16:DET/det>(dem) <17:NOUN/obl>(Teil)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 14
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <2:PRON/nsubj>(Die) <3:VERB/root>(sieht) <4:ADV/advmod>(doch) <5:ADV/advmod>(jetzt)
    <6:ADV/advmod>(perfekt) <7:ADP/compound:prt>(aus) <9:ADV/advmod>(Wie) <ROOT> <10:PRON/nsubj>(Die)
    <11:AUX/cop>(ist) <12:ADV/advmod>(mega) <13:ADV/advmod>(frisch) <14:ADV/root>(innen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(Wie) <2:DET/det>(ein) <3:NOUN/root>(Backofen) <ROOT> <5:X/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(stinkt) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(b\xE4\
    h)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - obl:arg
  - !!python/tuple
    - 12
    - 10
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 10
    - compound:prt
  sentence: <1:NOUN/nsubj>(Blut) <2:VERB/root>(brauchen) <3:AUX/aux>(sollte) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(dann) <7:VERB/ccomp>(sterbe) <8:CCONJ/cc>(und)
    <9:ADV/advmod>(irgendwie) <10:AUX/conj>(war) <11:PRON/obl:arg>(mir) <12:PRON/nsubj>(das)
    <13:ADV/advmod>(einfach) <14:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 10
    - obl
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  sentence: "<1:NOUN/obj>(R\xFCcksicht) <2:VERB/root>(nimmt) <3:ADV/advmod>(also)\
    \ <4:ADV/advmod>(sehr) <ROOT> <5:DET/nsubj>(dieses) <6:ADP/case>(auf) <7:NOUN/obl>(Gef\xFC\
    hle) <8:DET/det>(anderer) <9:NOUN/nmod>(R\xFCcksicht) <10:VERB/root>(nehmen) <11:CCONJ/cc>(Und)\
    \ <12:NOUN/conj>(Vorsicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nmod>(Bonnies) <2:NOUN/nsubj>(Geschichte) <3:AUX/cop>(ist) <4:ADJ/root>(wirklich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 14
    - cc
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 3
    - conj
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:ADV/advmod>(auch)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(uns) <7:ADP/case>(mit) <8:PROPN/amod>(Social)\
    \ <9:PROPN/obl>(Media) <10:CCONJ/cc>(und) <11:ADV/advmod>(so) <12:AUX/cop>(ist)\
    \ <13:PRON/nsubj>(es) <14:ADJ/conj>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 6
    - nmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADP/case>(\xFCber) <2:NUM/nummod>(60) <3:PRON/nmod>(sich) <4:ADV/advmod>(noch)\
    \ <5:ADV/advmod>(mal) <6:ADJ/root>(richtig) <ROOT> <7:ADP/case>(in) <8:DET/det:poss>(seiner)\
    \ <9:NOUN/obl>(Pers\xF6nlichkeit) <10:VERB/root>(ver\xE4ndert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - conj
  sentence: "<1:VERB/root>(glaube) <2:PRON/nsubj>(ich) <3:ADJ/advmod>(ganz) <ROOT>\
    \ <4:DET/det>(dieses) <5:NOUN/root>(Z\xE4rtlichkeit) <6:NOUN/appos>(F\xFCreinander)\
    \ <8:ADV/advmod>(da) <10:NOUN/conj>(Sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(habens) <3:ADV/advmod>(nie) <ROOT> <4:VERB/root>(hinterfragt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:PRON/nsubj>(das)\
    \ <5:DET/obj>(alles) <6:PART/mark>(zu) <7:VERB/root>(beantworten) <8:AUX/aux>(m\xFC\
    ssen) <9:ADP/case>(auf) <10:ADV/advmod>(einmal)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - flat
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(richtig) <ROOT> <5:PROPN/root>(Boah)
    <6:NOUN/flat>(Wahnsinn)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 6
    - 3
    - dep
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(ich) <3:ADV/root>(so) <6:X/dep>(Ach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:PART/advmod>(nicht) <4:ADV/root>(drin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADV/advmod>(so)
    <5:PROPN/root>(Diggi)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Kurz) <2:ADP/case>(vor) <3:NOUN/root>(Psychose) <4:CCONJ/cc>(und)\
    \ <5:AUX/conj>(bin) <ROOT> <6:VERB/root>(gekr\xE4nkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - ccomp
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 14
    - 20
    - nsubj
  - !!python/tuple
    - 15
    - 20
    - aux
  - !!python/tuple
    - 16
    - 20
    - obl:arg
  - !!python/tuple
    - 17
    - 20
    - advmod
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 20
    - obj
  - !!python/tuple
    - 20
    - 11
    - conj
  sentence: <1:PROPN/root>(Woah) <ROOT> <2:NOUN/obj>(alter) <3:AUX/aux>(hab) <4:PRON/nsubj>(ich)
    <5:VERB/root>(gepennt) <7:ADV/advmod>(Warum) <8:AUX/aux>(hast) <9:PRON/obj>(mich)
    <10:PART/advmod>(nicht) <11:VERB/ccomp>(geweckt) <12:NOUN/obj>(alter) <14:PRON/nsubj>(Ich)
    <15:AUX/aux>(muss) <16:PRON/obl:arg>(mir) <17:ADV/advmod>(noch) <18:DET/det>(die)
    <19:NOUN/obj>(Testospritze) <20:VERB/conj>(geben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Industrie) <3:VERB/root>(hat) <4:PRON/obj>(sich)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(in) <7:DET/det>(das) <8:NOUN/obl>(Knie)
    <9:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - conj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - nmod
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/obj>(Hass) <3:VERB/root>(hat) <4:PRON/nsubj>(man)
    <5:ADV/advmod>(dann) <6:ADJ/advmod>(ganz) <ROOT> <7:ADP/case>(auf) <8:DET/root>(alles)
    <9:CCONJ/cc>(und) <10:DET/conj>(jeden) <11:ADP/case>(in) <12:DET/det>(dem) <13:NOUN/nmod>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 13
    - obl
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - aux
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(w\xE4rst) <3:ADV/advmod>(ja) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/obl>(hustlen) <8:CCONJ/cc>(und)\
    \ <9:DET/det>(der) <10:NOUN/nsubj>(Knast) <11:AUX/aux>(hat) <12:PRON/obj>(dich)\
    \ <13:VERB/root>(gepr\xE4gt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(hab) <ROOT> <3:NOUN/obj>(Bock) <4:PART/mark>(zu)\
    \ <5:VERB/root>(p\xF6beln)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 6
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:NOUN/root>(Erz\xE4hl) <2:PRON/nmod>(mir) <3:PART/advmod>(nicht) <4:DET/det>(ein)\
    \ <5:ADJ/amod>(zehntes) <6:NOUN/nmod>(Mal) <7:SCONJ/case>(wie) <ROOT> <8:DET/det:poss>(dein)\
    \ <9:NOUN/nsubj>(Business) <10:VERB/root>(l\xE4uft)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: "<1:SCONJ/mark>(W\xE4hrend) <2:DET/det>(die) <3:DET/root>(andren) <ROOT>\
    \ <4:VERB/root>(gefickt) <5:AUX/aux:pass>(sind) <6:CCONJ/cc>(und) <7:ADV/advmod>(nur)\
    \ <8:NOUN/conj>(wein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Hatte) <2:PRON/nsubj>(das) <3:DET/obj>(alles) <ROOT> <4:ADJ/root>(satt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:NOUN/nsubj>(Entscheidungen) <3:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Auf) <2:NOUN/obl>(Tour) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <ROOT> <3:ADP/case>(vor) <4:DET/det>(der)\
    \ <5:NOUN/root>(R\xF6hre)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - conj
  sentence: <1:ADV/advmod>(Jetzt) <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:ADJ/root>(beruflich)
    <ROOT> <5:ADJ/root>(erfolgreich) <6:CCONJ/cc>(und) <7:DET/det>(die) <8:NOUN/conj>(Gage)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/root>(und) <ROOT> <2:VERB/root>(denunziert)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 14
    - cop
  - !!python/tuple
    - 7
    - 14
    - aux
  - !!python/tuple
    - 8
    - 14
    - cc
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:DET/det>(das) <3:NOUN/nsubj>(Gef\xFChl) <4:ADV/advmod>(irgendwie)\
    \ <5:ADJ/root>(total) <ROOT> <6:AUX/cop>(sein) <7:AUX/aux>(muss) <8:CCONJ/cc>(Und)\
    \ <9:PRON/nsubj>(das) <10:ADV/advmod>(so) <11:ADV/advmod>(auch) <12:ADV/advmod>(so)\
    \ <13:DET/det>(ein) <14:NOUN/root>(Angstgef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - conj
  sentence: <1:ADV/advmod>(darein) <2:ADP/mark>(um) <3:NOUN/obj>(Dinge) <4:VERB/root>(rauszufinden)
    <5:CCONJ/cc>(Und) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:ADV/advmod>(schon) <9:ADV/conj>(irgendwie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADJ/advmod>(Kurz) <2:ADP/case>(nach) <3:DET/det:poss>(unserem) <4:NOUN/obl>(Telefonat)\
    \ <5:VERB/root>(st\xFCrzt) <6:DET/det>(die) <7:ADJ/amod>(t\xFCrkische) <8:NOUN/nsubj>(W\xE4\
    hrung) <ROOT> <9:ADP/root>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 8
    - cop
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(war) <3:PRON/nsubj>(ich) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/nsubj>(ich) <6:AUX/aux>(kann) <7:ADV/advmod>(auch) <8:DET/root>(einer)
    <9:ADP/case>(von) <10:PRON/nmod>(denen) <11:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:AUX/aux>(bin) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <4:ADV/advmod>(so)
    <5:ADV/advmod>(weit) <6:VERB/root>(gekommen) <7:AUX/aux>(Ist) <8:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Assassin) <2:AUX/cop>(war) <3:ADV/advmod>(damals) <4:ADV/advmod>(so)
    <5:ADJ/root>(richtig) <ROOT> <6:ADJ/root>(bekannt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 11
    - aux
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 2
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(voll) <4:ADP/case>(bei)\
    \ <5:PRON/obl>(mir) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/obl>(Fokus) <9:AUX/aux>(habe)\
    \ <10:PRON/nsubj>(mich) <11:ADJ/advmod>(richtig) <ROOT> <12:VERB/root>(gef\xFC\
    hlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(echt)
    <5:ADV/root>(sehr) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:X/compound>(Ja) <4:X/root>(Ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:INTJ/advmod>(Ach) <2:NOUN/nsubj>(Gott) <3:PRON/nsubj>(das) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - aux
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(musst) <3:PRON/nsubj>(du) <4:PRON/obj>(dir)
    <5:VERB/root>(vorstellen) <6:PRON/nsubj>(das) <7:AUX/aux>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(sagte) <ROOT> <3:ADJ/amod>(internalisierte)
    <4:NOUN/nsubj>(Geschlechterklischees) <5:ADV/mark>(drin) <6:VERB/root>(haben)
    <7:CCONJ/cc>(sondern) <8:PRON/nsubj>(sie) <9:VERB/conj>(agieren) <10:PRON/obj>(es)
    <11:ADV/advmod>(dann) <12:ADV/advmod>(eben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(stell) <3:PRON/nsubj>(ich) <4:PRON/obl:arg>(mir)
    <ROOT> <5:ADP/root>(vor)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - case
  - !!python/tuple
    - 9
    - 12
    - mark
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 7
    - advcl
  - !!python/tuple
    - 13
    - 12
    - aux
  sentence: "<1:PROPN/nsubj>(blablabla) <2:ADV/advmod>(dann) <3:VERB/root>(tut) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(nochmal) <ROOT> <6:ADV/advmod>(anders) <7:ADV/root>(weh) <8:ADP/case>(wie)\
    \ <9:SCONJ/mark>(wenn) <10:PRON/nsubj>(es) <11:NOUN/obj>(Freunde) <12:VERB/advcl>(sagen)\
    \ <13:AUX/aux>(w\xFCrden)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/nmod>(Kapitol) <6:AUX/root>(war) <7:ADV/advmod>(wohl) <8:ADV/advmod>(nur)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<ROOT> <1:ADJ/advmod>(nuklearbunker) <2:VERB/root>(guck) <3:ADV/advmod>(mal)\
    \ <4:ADV/advmod>(hier) <5:ADV/advmod>(ja) <6:ADJ/amod>(gesch\xE4tzte) <7:NOUN/nsubj>(Anzahl)\
    \ <8:DET/det>(der) <9:NOUN/nmod>(nukleark\xF6pfe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 10
    - nsubj
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(beruhigt) <3:PRON/obj>(mich) <4:ADV/advmod>(okay)
    <5:ADV/advmod>(ach) <ROOT> <6:ADV/advmod>(hier) <7:AUX/cop>(ist) <8:ADV/advmod>(so)
    <9:DET/det>(ein) <10:ADJ/root>(ganzes) <11:ADP/case>(ab) <12:ADV/advmod>(hier)
    <13:ADP/case>(ab) <14:ADV/advmod>(hier) <15:NOUN/nsubj>(Museum) <16:ADV/advmod>(bitte)
    <17:PRON/nsubj>(nichts)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 1
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:ADJ/root>(breit) <2:DET/nsubj>(keiner) <3:ADV/advmod>(ne) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(eigentlich) <6:NOUN/nsubj>(Supermarkt) <7:ADV/advmod>(auch) <8:PART/advmod>(nicht)
    <9:ADV/advmod>(ne) <10:PART/advmod>(nicht) <ROOT> <11:ADV/advmod>(ja) <12:ADV/advmod>(hier)
    <13:ADV/advmod>(so) <14:ADV/root>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obl
  sentence: "<1:NOUN/dep>(Feier) <3:DET/det:poss>(meine) <4:NOUN/root>(Mucke) <ROOT>\
    \ <5:CCONJ/cc>(und) <6:VERB/root>(schmei\xDF') <7:ADP/case>(mit) <8:PROPN/obl>(Hunnis)\
    \ <9:ADP/case>(durch) <10:DET/det>(die) <11:NOUN/obl>(Nacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obl
  sentence: "<1:NOUN/dep>(Feier) <3:DET/det:poss>(meine) <4:NOUN/root>(Mucke) <ROOT>\
    \ <5:CCONJ/cc>(und) <6:VERB/root>(schmei\xDF') <7:ADP/case>(mit) <8:PROPN/obl>(Hunnis)\
    \ <9:ADP/case>(durch) <10:DET/det>(die) <11:NOUN/obl>(Nacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:DET/det:poss>(meine)
    <5:NOUN/nsubj>(Beine) <6:VERB/root>(zittern) <7:ADV/advmod>(auch) <8:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/nsubj>(Alle) <2:VERB/root>(sagen) <ROOT> <3:AUX/aux>(hast) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(allein) <7:VERB/root>(geschafft)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 6
    - advmod
  sentence: "<1:CCONJ/cc>(aber) <2:PART/advmod>(nicht) <3:ADV/root>(so) <ROOT> <4:ADV/advmod>(\xFC\
    berw\xE4ltigend) <5:ADV/advmod>(Trotzdem) <6:VERB/root>(mach) <7:PRON/nsubj>(ich)\
    \ <8:PRON/obj>(das) <9:ADV/advmod>(erst) <10:ADV/advmod>(mal) <11:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:AUX/aux>(habe) <3:ADV/advmod>(nur) <4:VERB/root>(gesehen)
    <5:SCONJ/mark>(wie) <6:PRON/nsubj>(du) <7:PRON/appos>(dich) <ROOT> <8:NOUN/root>(blamierst)
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - aux
  sentence: <2:PROPN/dep>(Kenneth) <4:SCONJ/mark>(Wenn) <5:PRON/nsubj>(man) <6:ADP/obj>(z)
    <7:PROPN/obj>(B) <8:VERB/root>(sieht) <9:DET/det>(dieser) <10:NOUN/obj>(Spieler)
    <11:AUX/aux>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(wundert) <3:PRON/nsubj>(man) <4:PRON/obj>(sich)
    <5:ADV/advmod>(wieso) <6:AUX/parataxis>(ist) <7:PRON/nsubj>(der) <8:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(um) <ROOT> <2:PART/mark>(zu) <3:AUX/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - cop
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/nsubj>(Jeder) <2:AUX/root>(will) <ROOT> <3:AUX/cop>(werden) <4:CCONJ/cc>(aber)\
    \ <5:DET/det>(das) <6:NOUN/nsubj>(Ding) <7:AUX/cop>(ist) <8:DET/det>(das) <9:NOUN/root>(Durchhalteverm\xF6\
    gen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(das) <2:ADJ/amod>(kriminelle) <3:NOUN/nsubj>(Potenzial) <4:DET/det:poss>(meiner)
    <5:NOUN/nmod>(Freunde) <6:AUX/cop>(ist) <7:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(bevor's) <2:ADP/root>(zu) <ROOT> <3:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(wirst) <ROOT> <3:VERB/root>(gedisst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(wirst) <ROOT> <3:VERB/root>(gedisst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(wirst) <ROOT> <3:VERB/root>(gedisst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:AUX/cop>(sind) <3:ADJ/root>(einfach) <ROOT> <4:NOUN/compound>(Geschmacksache)
    <6:X/root>(Mh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Uh) <2:ADJ/root>(okay) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:ADJ/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(kommst)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(dann) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(mich) <6:ADJ/root>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Wow) <2:PRON/nsubj>(Das) <3:AUX/cop>(w\xE4re) <4:ADJ/root>(richtig)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - expl
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(heute) <3:AUX/root>(ist) <4:ADV/advmod>(wirklich)
    <5:PRON/expl>(es) <6:AUX/cop>(ist) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - aux:pass
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/root>(so) <ROOT> <3:DET/det>(die) <4:NOUN/nsubj>(OP)
    <5:AUX/aux:pass>(ist) <6:VERB/root>(geschafft)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 12
    - nmod
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(denke) <4:PRON/nsubj>(ich)
    <ROOT> <5:ADP/case>(vor) <6:NUM/nummod>(3) <7:NOUN/nmod>(Jahren) <8:AUX/cop>(war)
    <9:NOUN/nsubj>(Einkaufen) <10:ADV/advmod>(noch) <11:DET/det>(eine) <12:NOUN/root>(Qual)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:AUX/root>(ist) <2:PRON/nsubj>(das) <3:ADV/advmod>(halt) <4:ADV/advmod>(so)
    <ROOT> <5:ADV/advmod>(einfach) <6:ADP/case>(in) <7:DET/det>(den) <8:NOUN/obl>(Laden)
    <9:VERB/root>(reinzugehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - appos
  - !!python/tuple
    - 7
    - 6
    - cc
  sentence: <1:VERB/root>(Hat) <2:DET/obj>(ein) <ROOT> <3:ADJ/amod>(gutes) <4:NOUN/root>(Auge)
    <5:DET/det>(der) <6:NOUN/appos>(Kommissar) <7:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:INTJ/root>(Ach) <2:ADV/advmod>(so) <3:ADV/advmod>(oh) <4:ADV/advmod>(ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:DET/det>(das) <2:DET/nsubj>(alles) <3:AUX/root>(ist) <4:PRON/obl:arg>(mir)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:X/root>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:ADV/advmod>(dann) <4:ADV/advmod>(auch)
    <5:DET/obj>(alles) <6:ADJ/advmod>(echt) <ROOT> <7:ADV/advmod>(schnell) <8:VERB/root>(geklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:X/root>(Ach) <ROOT> <2:NUM/nummod>(74) <3:NUM/nummod>(95) <4:PROPN/obj>(Euro)\
    \ <5:AUX/aux>(haben) <6:PRON/nsubj>(wir) <7:ADV/advmod>(daf\xFCr) <8:VERB/root>(bezahlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 3
    - conj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(nice) <4:CCONJ/cc>(oder)
    <6:PRON/nsubj>(Das) <7:AUX/cop>(ist) <8:ADJ/conj>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - obj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(du) <4:AUX/cop>(bist)\
    \ <5:NUM/root>(23) <6:CCONJ/cc>(und) <7:VERB/conj>(sagst) <8:DET/advmod>(selber)\
    \ <9:PRON/nsubj>(ich) <10:VERB/conj>(habe) <11:DET/det>(eine) <12:NOUN/obj>(gro\xDF\
    e)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADP/case>(f\xFCr) <4:PRON/obl>(mich)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 17
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 15
    - cc
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det:poss
  - !!python/tuple
    - 15
    - 11
    - conj
  - !!python/tuple
    - 16
    - 17
    - mark
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - aux
  - !!python/tuple
    - 19
    - 20
    - nsubj
  - !!python/tuple
    - 20
    - 17
    - advmod
  - !!python/tuple
    - 21
    - 0
    - root
  sentence: "<1:DET/det:poss>(Mein) <2:NOUN/obj>(Fokus) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:NOUN/nmod>(Leben) <6:CCONJ/cc>(und) <7:DET/det:poss>(mein) <8:NOUN/conj>(Blick)\
    \ <9:ADP/case>(auf) <10:DET/det>(das) <11:NOUN/nmod>(Leben) <12:CCONJ/cc>(und)\
    \ <13:ADV/advmod>(auch) <14:DET/det:poss>(meine) <15:NOUN/conj>(Art) <16:PART/mark>(zu)\
    \ <17:VERB/root>(leben) <18:AUX/aux>(haben) <19:PRON/nsubj>(sich) <20:ADJ/advmod>(einfach)\
    \ <ROOT> <21:VERB/root>(ver\xE4ndert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/dep>(Ah) <2:X/root>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 10
    - advcl
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Wetter) <3:AUX/root>(ist) <4:ADV/advmod>(auch)
    <ROOT> <5:VERB/advcl>(geworden) <6:ADV/advmod>(Dann) <7:AUX/aux>(hat) <8:NOUN/nsubj>(s)
    <9:VERB/xcomp>(gehagelt) <10:VERB/root>(geregnet)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(ist) <3:ADJ/root>(mega) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Unsere) <2:NOUN/nsubj>(Demokratie) <3:AUX/root>(ist)
    <ROOT> <4:VERB/root>(gescheitert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(vollkommen) <2:ADV/root>(egal) <3:ADP/advmod>(wie) <ROOT>
    <4:PRON/nsubj>(du) <5:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:NUM/nummod>(50) <2:NOUN/root>(Tonnen) <ROOT> <5:PRON/nsubj>(Das) <6:AUX/cop>(ist)
    <7:ADV/advmod>(wirklich) <8:ADJ/amod>(n) <9:NOUN/root>(Bruchteil)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: <1:X/root>(Ach) <ROOT> <2:CCONJ/cc>(Und) <3:PRON/nsubj>(das) <4:VERB/root>(geht)
    <5:ADP/case>(mit) <6:DET/det>(allen) <7:NOUN/obl>(Videos)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ganz) <2:ADJ/root>(sch\xF6n) <ROOT> <3:ADP/case>(f\xFC\
    r) <4:DET/det>(eine) <5:NUM/compound>(21) <7:NOUN/root>(J\xE4hrige)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - cc
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: "<1:ADV/advmod>(Klingt) <2:ADJ/root>(nat\xFCrlich) <ROOT> <3:CCONJ/cc>(aber)\
    \ <4:ADP/case>(auf) <5:DET/det>(eine) <6:NOUN/obl>(Art) <7:ADV/advmod>(ja) <8:PRON/nsubj>(Ich)\
    \ <9:VERB/root>(glaub) <10:ADV/advmod>(schon)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <5:ADJ/advmod>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:INTJ/advmod>(Oh) <2:ADV/advmod>(nein) <3:ADJ/root>(Voll) <ROOT> <4:NOUN/root>(Leute)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(hatte) <3:PART/advmod>(nicht) <4:VERB/root>(gedacht)\
    \ <5:PRON/nsubj>(das) <6:VERB/parataxis>(w\xFCrde) <7:ADV/advmod>(hier) <8:ADV/advmod>(so)\
    \ <ROOT> <9:NOUN/root>(beginn)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - compound
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - advmod
  sentence: "<1:PROPN/compound>(I-I) <3:NOUN/compound>(Influencer) <5:NOUN/nsubj>(Model)\
    \ <6:ADP/case>(in) <7:ADJ/amod>(mein'n) <8:NOUN/nmod>(DMs) <9:VERB/root>(f\xFC\
    hlt) <10:PRON/obj>(sich) <11:ADV/advmod>(sehr) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - dep
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Auch) <2:ADP/root>(wie) <ROOT> <3:PROPN/dep>(Saskia) <4:PROPN/flat>(Sven)
    <5:ADV/advmod>(immer) <6:VERB/root>(vermisst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det:poss>(deine) <2:NOUN/nsubj>(Boys) <3:AUX/root>(sind) <ROOT>
    <5:NOUN/root>(Weak)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: "<1:PRON/nsubj>(es) <2:AUX/root>(ist) <3:ADP/case>(f\xFCr) <4:DET/obl>(viele)\
    \ <5:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - cop
  sentence: "<1:ADV/advmod>(Richtig) <2:ADJ/root>(gut) <3:CCONJ/cc>(und) <4:PART/advmod>(nicht)\
    \ <5:ADV/conj>(so) <ROOT> <6:ADJ/root>(s\xFC\xDF) <7:ADP/case>(wie) <8:PRON/nmod>(die)\
    \ <9:ADV/advmod>(oft) <10:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - cop
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADJ/root>(abgespaced)
    <5:DET/det>(dieser) <6:NOUN/nsubj>(Trip) <7:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - amod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det:poss>(Eure) <2:ADJ/amod>(sch\xF6ne) <3:ADJ/amod>(neue) <4:NOUN/nsubj>(Welt)\
    \ <5:AUX/root>(ist) <6:ADV/advmod>(jetzt) <ROOT> <7:ADP/case>(an) <8:DET/det>(dem)\
    \ <9:NOUN/root>(Arsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Entweder) <2:ADJ/amod>(schlimmer) <3:NOUN/root>(Sprachfehler)
    <4:CCONJ/cc>(oder) <ROOT> <5:ADJ/root>(besoffen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:PRON/obl:arg>(mir) <ROOT> <4:VERB/root>(\xFC\
    berlegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:PART/advmod>(nicht) <ROOT> <4:ADV/advmod>(unterwegs)\
    \ <5:PRON/nsubj>(Das) <6:AUX/aux>(w\xFCrde) <7:PRON/nsubj>(ich) <8:PART/advmod>(nicht)\
    \ <9:VERB/root>(behaupten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Gefahr) <3:AUX/root>(war) <ROOT> <4:ADV/advmod>(da)
    <5:ADV/root>(drin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 4
    - conj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(wei\xDF) <3:PRON/nsubj>(ich) <4:VERB/ccomp>(habe)\
    \ <5:DET/det>(eine) <6:NOUN/obj>(Ausstrahlung) <7:PROPN/appos>(Moritz) <8:CCONJ/cc>(aber)\
    \ <9:PRON/nsubj>(das) <10:AUX/conj>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 10
    - cop
  - !!python/tuple
    - 3
    - 10
    - det
  - !!python/tuple
    - 4
    - 10
    - compound
  - !!python/tuple
    - 6
    - 10
    - compound
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(eine) <4:NOUN/compound>(Walnuss)
    <6:NOUN/compound>(Paprika) <8:NOUN/compound>(Paste) <10:NOUN/root>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 7
    - flat
  sentence: "<1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:DET/det>(eine) <4:NOUN/obj>(Fischfarm)\
    \ <5:ADP/case>(in) <6:DET/det>(der) <7:PROPN/nmod>(W\xFCste) <9:PROPN/flat>(Ach)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  sentence: <1:AUX/root>(Ist) <ROOT> <2:ADV/advmod>(Da) <3:VERB/root>(passiert) <4:ADV/advmod>(schon)
    <5:PRON/nsubj>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 2
    - obl
  sentence: "<1:NOUN/root>(War) <ROOT> <2:VERB/root>(War) <3:ADV/advmod>(jetzt) <4:DET/det>(ein)\
    \ <5:NOUN/obj>(Moment) <6:ADV/advmod>(wo) <7:PRON/nsubj>(ich) <8:ADV/advmod>(schon)\
    \ <9:ADP/case>(f\xFCr) <10:NUM/nummod>(10) <11:NOUN/obl>(Minuten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADJ/advmod>(total)
    <ROOT> <5:PRON/nsubj>(Du) <6:AUX/aux>(hast) <7:DET/det>(den) <8:NOUN/obj>(Arm)
    <9:VERB/root>(ausgekugelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/nsubj>(Typ) <3:ADV/advmod>(hier) <4:AUX/cop>(ist)
    <5:ADJ/root>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Voll) <2:ADV/advmod>(geil) <3:PRON/nsubj>(wir) <4:AUX/aux>(haben)
    <5:PRON/obj>(es) <6:ADV/advmod>(echt) <7:VERB/root>(gefunden) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:ADV/advmod>(ja) <3:ADP/case>(mit) <4:DET/det:poss>(meiner)
    <5:ADJ/amod>(besten) <6:NOUN/root>(Freundin)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/nsubj>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/advmod>(jetzt)
    <5:ADJ/root>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PROPN/root>(Total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADJ/root>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 4
    - ccomp
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  - !!python/tuple
    - 10
    - 18
    - cop
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 18
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - conj
  - !!python/tuple
    - 16
    - 18
    - advmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 4
    - conj
  sentence: "<1:ADV/advmod>(Auch) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:VERB/root>(wusste)\
    \ <5:PRON/obj>(was) <6:PRON/obj>(mich) <7:VERB/ccomp>(erwartet) <8:ADP/case>(F\xFC\
    r) <9:PRON/obl>(mich) <10:AUX/cop>(ist) <11:DET/det>(die) <12:NOUN/nsubj>(Tat)\
    \ <13:CCONJ/cc>(und) <14:DET/det>(das) <15:NOUN/conj>(Sprechen) <16:ADV/advmod>(dar\xFC\
    ber) <17:ADV/advmod>(ganz) <18:ADJ/conj>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 2
    - obl
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 2
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(ringe) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(so) <6:DET/det>(ein) <7:ADV/advmod>(bisschen) <8:ADP/case>(mit)\
    \ <9:PRON/obl>(mir) <10:ADP/case>(nach) <11:DET/det>(dem) <12:NOUN/obl>(Gespr\xE4\
    ch) <13:SCONJ/mark>(weil) <14:PRON/nsubj>(ich) <15:PRON/nsubj>(das) <16:ADV/advmod>(so)\
    \ <ROOT> <17:VERB/root>(fand)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/root>(War) <ROOT> <2:ADP/case>(f\xFCr) <3:DET/det>(einen) <4:NOUN/root>(Hoodie)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(einen) <2:ADJ/amod>(gro\xDFen) <3:NOUN/root>(Bruder) <4:PRON/appos>(der)\
    \ <ROOT> <5:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(sch\xE4m') <4:PRON/obj>(mich)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:ADP/case>(f\xFCr) <7:DET/det:poss>(mein)\
    \ <8:ADJ/amod>(sch\xE4biges) <9:NOUN/root>(Abwehrsystem)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(sch\xE4m') <4:PRON/obj>(mich)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:ADP/case>(f\xFCr) <7:DET/det:poss>(mein)\
    \ <8:ADJ/amod>(sch\xE4biges) <9:NOUN/root>(Abwehrsystem)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(sch\xE4m') <4:PRON/obj>(mich)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:ADP/case>(f\xFCr) <7:DET/det:poss>(mein)\
    \ <8:ADJ/amod>(sch\xE4biges) <9:NOUN/root>(Abwehrsystem)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:PRON/obj>(sie) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADP/case>(mit) <6:NOUN/obl>(Kokain) <7:VERB/root>(zugedr\xF6hnt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(wei\xDF) <4:PRON/obj>(du)\
    \ <5:VERB/xcomp>(willst) <ROOT> <6:VERB/root>(rappen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(warst) <3:ADV/advmod>(mal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:DET/det>(dieser) <4:NOUN/nsubj>(Kampf)\
    \ <5:ADV/advmod>(hier) <6:AUX/aux>(hat) <7:PRON/obj>(mich) <8:VERB/root>(abgeh\xE4\
    rtet)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(auseinandergelebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:ADP/mark>(um) <3:PRON/obj>(es) <4:PART/mark>(zu)
    <5:VERB/root>(lieben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:ADP/mark>(um) <3:PRON/obj>(es) <4:PART/mark>(zu)
    <5:VERB/root>(lieben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:ADP/mark>(um) <3:PRON/obj>(es) <4:PART/mark>(zu)
    <5:VERB/root>(lieben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(er) <2:VERB/root>(hat) <3:PRON/obj>(dich) <ROOT> <4:ADJ/root>(entt\xE4\
    uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 14
    - mark
  - !!python/tuple
    - 10
    - 14
    - aux
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - obj
  - !!python/tuple
    - 15
    - 7
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(w\xE4r) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(wir)\
    \ <5:PRON/obj>(einander) <6:ADV/advmod>(so) <7:VERB/root>(behandeln) <8:AUX/aux>(w\xFC\
    rden) <9:SCONJ/mark>(als) <10:AUX/aux>(k\xF6nnte) <11:PRON/nsubj>(es) <12:ADJ/advmod>(potenziell)\
    \ <13:ADV/advmod>(auch) <14:NOUN/obj>(Gott) <15:AUX/aux>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - nsubj
  sentence: "<1:ADV/advmod>(Selbst) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:NOUN/obj>(\xDC\
    bung) <5:VERB/root>(hat) <6:AUX/aux>(ist) <7:PRON/nsubj>(es) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obl
  sentence: <1:AUX/root>(ist) <2:ADP/case>(auf) <3:DET/det>(jeden) <4:NOUN/obl>(Fall)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(flow) <3:ADP/compound:prt>(zu) <ROOT>
    <4:ADV/root>(doch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(dich) <3:AUX/root>(ist) <4:PRON/nsubj>(das)\
    \ <5:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - fixed
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Egal) <2:SCONJ/fixed>(ob) <3:PRON/nsubj>(er) <ROOT> <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - fixed
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Egal) <2:SCONJ/fixed>(ob) <3:PRON/nsubj>(er) <ROOT> <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 15
    - mark
  - !!python/tuple
    - 10
    - 15
    - mark
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - cop
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:DET/det>(Den) <2:NOUN/obj>(Ausdruck) <3:VERB/root>(finden) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(ja) <6:ADV/advmod>(schon) <7:DET/det>(ein) <8:ADV/advmod>(bisschen)
    <ROOT> <9:SCONJ/mark>(weil) <10:SCONJ/mark>(weil) <11:NOUN/nsubj>(Burnout) <12:AUX/cop>(ist)
    <13:DET/det>(eine) <14:ADJ/amod>(ernstzunehmende) <15:NOUN/root>(Diagnose)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: <1:ADV/advmod>(Dann) <2:AUX/cop>(war) <3:PRON/nsubj>(er) <4:ADJ/root>(tot)
    <5:CCONJ/cc>(Und) <6:ADV/advmod>(ja) <7:PRON/nsubj>(das) <8:AUX/conj>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 4
    - obj
  - !!python/tuple
    - 12
    - 4
    - nsubj
  - !!python/tuple
    - 13
    - 4
    - aux
  sentence: <1:ADJ/advmod>(komplett) <2:ADJ/root>(verrostet) <ROOT> <3:ADV/advmod>(hier)
    <4:VERB/root>(sieht) <5:PRON/nsubj>(man) <6:ADV/advmod>(auch) <7:ADV/advmod>(noch)
    <8:ADV/advmod>(so) <9:ADV/advmod>(total) <10:ADJ/amod>(alte) <11:NOUN/obj>(fahrbahnmarkierungen)
    <12:PRON/nsubj>(man) <13:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(glaub) <3:PRON/obj>(das) <4:AUX/aux>(wird)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 6
    - advcl
  sentence: "<1:VERB/root>(Sieht) <ROOT> <2:ADP/mark>(aus) <3:CCONJ/cc>(aber) <4:AUX/aux>(w\xFC\
    rd) <5:PRON/obj>(mich) <6:VERB/root>(wundern) <7:SCONJ/mark>(wenn) <8:PRON/nsubj>(das)\
    \ <9:ADV/advmod>(noch) <10:NUM/obl>(2020) <11:VERB/advcl>(kommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT> <5:ADJ/root>(verkabelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 5
    - det
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - conj
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:ADP/case>(in) <2:DET/det>(einer) <3:ADV/advmod>(ziemlich) <4:ADJ/amod>(heilen)
    <5:NOUN/obl>(Welt) <6:VERB/root>(aufgewachsen) <7:ADV/advmod>(irgendwie) <9:CCONJ/cc>(und)
    <10:ADV/advmod>(da) <11:AUX/conj>(ist) <12:PRON/nsubj>(es) <13:ADV/advmod>(schon)
    <ROOT> <14:X/root>(am)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 14
    - mark
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 8
    - advcl
  sentence: "<1:ADV/advmod>(Also) <2:ADV/root>(so) <ROOT> <3:DET/det>(die) <4:NOUN/nsubj>(Unterschiede)\
    \ <5:AUX/cop>(sind) <6:AUX/cop>(w\xE4re) <7:ADV/advmod>(schon) <8:ADJ/root>(w\xFC\
    nschenswert) <9:SCONJ/mark>(wenn) <10:DET/det>(beide) <11:NOUN/nsubj>(Seiten)\
    \ <12:ADV/advmod>(weiterhin) <13:NOUN/obj>(Bestand) <14:VERB/advcl>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:NOUN/root>(Schei\xDF) <2:ADV/advmod>(egal) <3:ADP/dep>(wie) <ROOT>\
    \ <4:PRON/nsubj>(er) <5:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Wieder) <2:ADV/root>(so) <ROOT> <3:DET/det:poss>(mein)
    <4:NOUN/root>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/root>(alles) <ROOT> <2:ADP/case>(an) <3:DET/det>(dem) <4:NOUN/root>(Arsch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:NOUN/root>(Transzendenz) <3:CCONJ/cc>(und) <ROOT>
    <4:NOUN/root>(Gewicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - appos
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(sie) <ROOT> <3:AUX/cop>(sind) <6:NOUN/root>(Fick)
    <7:PRON/appos>(dich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - acl
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 19
    - cc
  - !!python/tuple
    - 13
    - 19
    - nsubj
  - !!python/tuple
    - 14
    - 19
    - cop
  - !!python/tuple
    - 15
    - 19
    - advmod
  - !!python/tuple
    - 16
    - 19
    - advmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 0
    - root
  - !!python/tuple
    - 20
    - 21
    - mark
  - !!python/tuple
    - 21
    - 19
    - parataxis
  sentence: "<1:ADV/advmod>(Jetzt) <2:VERB/root>(sehe) <3:PRON/nsubj>(ich) <4:ADV/advmod>(gerade)\
    \ <5:PRON/obj>(das) <6:PRON/obj>(die) <7:DET/det>(ein) <8:NOUN/obj>(Schwein) <9:ADV/advmod>(dabei)\
    \ <10:VERB/acl>(haben) <11:PROPN/obj>(Oh) <ROOT> <12:CCONJ/cc>(Und) <13:PRON/nsubj>(das)\
    \ <14:AUX/cop>(ist) <15:ADV/advmod>(jetzt) <16:ADV/advmod>(pl\xF6tzlich) <17:ADV/advmod>(nur)\
    \ <18:ADV/advmod>(noch) <19:ADJ/root>(lustig) <21:VERB/parataxis>(lachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(sagen) <ROOT> <3:ADV/advmod>(woran)
    <4:VERB/root>(liegt) <5:PRON/nsubj>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/nsubj>(Viele) <2:VERB/root>(sagen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - ccomp
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:PRON/obj>(das) <4:ADV/advmod>(gerade)
    <5:ADV/advmod>(einmal) <6:VERB/root>(gesehen) <7:CCONJ/cc>(und) <8:VERB/conj>(gedacht)
    <9:PRON/nsubj>(das) <10:AUX/ccomp>(ist) <11:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 12
    - mark
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 12
    - obl
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:AUX/root>(ist) <ROOT> <4:SCONJ/mark>(weil)\
    \ <5:PRON/nsubj>(die) <6:ADV/advmod>(da) <7:ADP/case>(in) <8:ADJ/amod>(gro\xDF\
    en) <9:NOUN/obl>(Schritten) <10:DET/det>(die) <11:NOUN/obj>(Preise) <12:VERB/root>(reduzieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:ADV/advmod>(so) <3:NOUN/root>(Okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 3
    - obl
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 10
    - nmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(die) <3:VERB/root>(wird) <4:ADP/case>(laut)\
    \ <5:NOUN/obl>(Experten) <6:CCONJ/cc>(und) <7:NOUN/conj>(Expertinnen) <8:ADP/case>(durch)\
    \ <9:DET/det>(den) <10:NOUN/obl>(Bau) <11:DET/det>(der) <12:ADJ/amod>(neuen) <13:NOUN/nmod>(Hauptstadt)\
    \ <ROOT> <14:VERB/root>(verst\xE4rkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 8
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(sehr)
    <5:ADV/advmod>(sehr) <ROOT> <6:ADV/advmod>(also) <7:PRON/nsubj>(ich) <8:VERB/root>(kenne)
    <9:PRON/obj>(es) <10:ADP/case>(von) <11:DET/det:poss>(meinem) <12:NOUN/obl>(Vater)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:ADV/advmod>(wo) <2:DET/nsubj>(andere) <3:VERB/root>(draufschauen) <4:CCONJ/cc>(und)
    <5:ADV/advmod>(einfach) <6:ADV/advmod>(nur) <7:VERB/conj>(denken) <8:ADV/advmod>(so)
    <ROOT> <9:PRON/obj>(was) <10:PRON/nsubj>(der) <11:VERB/root>(geleistet) <12:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 7
    - ccomp
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - mark
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <2:PROPN/nsubj>(wow) <3:ADV/advmod>(also) <4:PRON/nsubj>(ich) <5:AUX/aux>(muss)
    <6:ADV/advmod>(echt) <7:VERB/root>(sagen) <8:PRON/nsubj>(es) <9:AUX/cop>(ist)
    <10:ADJ/ccomp>(total) <ROOT> <11:ADV/advmod>(hier) <12:PART/mark>(zu) <13:VERB/root>(stehen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:ADV/advmod>(dann) <3:ADV/advmod>(so) <4:ADV/root>(Ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux:pass
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(auch) <3:DET/det>(die) <4:NOUN/nsubj>(Effekte)\
    \ <5:ADV/advmod>(davon) <6:AUX/root>(m\xFCssten) <7:ADV/advmod>(auch) <ROOT> <8:VERB/root>(ausbalanciert)\
    \ <9:AUX/aux:pass>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:ADV/advmod>(Also) <3:PRON/nsubj>(es) <4:VERB/root>(riecht)
    <5:PART/advmod>(nicht) <6:ADP/case>(nach) <7:PROPN/obl>(Orange)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:AUX/root>(waren) <3:ADV/advmod>(mindestens) <4:ADV/advmod>(genauso)
    <ROOT> <5:ADP/case>(wie) <6:DET/det>(die) <7:NOUN/root>(Mammutpanzer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - parataxis
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Genau) <2:ADV/advmod>(da) <3:VERB/root>(kommt) <4:PRON/nsubj>(sie)
    <5:ADV/advmod>(raus) <6:PRON/nsubj>(Das) <7:AUX/parataxis>(ist) <8:ADV/advmod>(ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 4
    - nmod
  sentence: <1:INTJ/advmod>(Ach) <2:VERB/root>(komm) <ROOT> <3:ADV/advmod>(Wie) <4:DET/root>(viel)
    <5:AUX/cop>(ist) <6:PRON/nsubj>(das) <7:ADP/case>(in) <8:ADV/advmod>(so) <9:DET/det>(einem)
    <10:NOUN/nmod>(Tank)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 9
    - advcl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Als) <2:PRON/nsubj>(ich) <3:DET/det>(die) <4:NOUN/obj>(Videos)
    <5:VERB/advcl>(gesehen) <6:AUX/aux>(habe) <7:AUX/aux>(hab) <8:PRON/nsubj>(ich)
    <9:VERB/root>(gesagt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 6
    - cop
  - !!python/tuple
    - 12
    - 6
    - advmod
  - !!python/tuple
    - 13
    - 17
    - cc
  - !!python/tuple
    - 14
    - 17
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - cop
  - !!python/tuple
    - 16
    - 17
    - det:poss
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/cop>(bist) <3:ADV/advmod>(grade) <4:DET/det>(der)
    <5:ADJ/amod>(erste) <6:NOUN/root>(Mann) <7:ADP/case>(auf) <8:DET/det>(dem) <9:NOUN/nmod>(Mond)
    <10:PRON/nsubj>(Das) <11:AUX/cop>(ist) <12:ADV/advmod>(ziemlich) <ROOT> <13:CCONJ/cc>(Und)
    <14:PRON/nsubj>(das) <15:AUX/cop>(sind) <16:DET/det:poss>(deine) <17:ADJ/root>(ersten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - dep
  sentence: <1:NOUN/root>(fick) <2:ADV/advmod>(immer) <3:ADV/advmod>(noch) <4:DET/det>(den)
    <5:NOUN/dep>(Beat) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:VERB/root>(Dachte) <2:PRON/nsubj>(ich) <3:ADV/advmod>(wirklich) <4:DET/det>(dieser)\
    \ <5:NOUN/obj>(Lifestyle) <6:VERB/conj>(macht) <7:PRON/obj>(mich) <ROOT> <8:ADJ/root>(gl\xFC\
    cklich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/obj>(Mir) <2:VERB/root>(tut) <3:ADV/advmod>(so) <ROOT> <4:DET/det:poss>(mein)
    <5:NOUN/nsubj>(Verhalten) <6:ADJ/root>(leid)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - aux
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kann) <3:PART/advmod>(nicht) <4:ADV/advmod>(anders)
    <6:PRON/nsubj>(das) <7:AUX/ccomp>(ist) <ROOT> <8:PRON/nsubj>(Ich) <9:AUX/aux>(muss)
    <10:PRON/obj>(es) <11:VERB/root>(tun)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 5
    - obj
  - !!python/tuple
    - 11
    - 5
    - compound:prt
  sentence: <1:PART/mark>(Zu) <2:VERB/root>(wissen) <3:PRON/nsubj>(man) <4:AUX/aux>(ist)
    <ROOT> <5:VERB/root>(bringt) <6:PRON/obj>(dir) <7:PART/advmod>(nicht) <8:ADV/advmod>(gleich)
    <9:DET/det>(ein) <10:NOUN/obj>(Platz) <11:ADV/compound:prt>(ein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(deine) <2:NOUN/nsubj>(Ladies) <3:AUX/root>(sind) <ROOT>
    <4:ADJ/root>(deppert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - nmod
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: "<1:DET/det:poss>(deine) <2:NOUN/nsubj>(fitnessarbeit) <3:ADV/advmod>(dann)\
    \ <4:PRON/nsubj>(ich) <5:AUX/aux>(woll) <6:ADV/advmod>(gerade) <7:VERB/root>(sagen)\
    \ <8:ADV/advmod>(schon) <ROOT> <9:ADP/case>(vor) <10:DET/det>(ein) <11:ADJ/nmod>(paar)\
    \ <12:NOUN/obl>(Monaten) <13:VERB/root>(sa\xDFen) <14:PRON/nsubj>(wir) <15:ADV/advmod>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - ccomp
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 6
    - advmod
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Ball) <3:ADV/advmod>(halt) <4:ADV/advmod>(gerade)
    <5:AUX/ccomp>(ist) <6:VERB/root>(spielt) <7:ADV/advmod>(auch) <8:ADP/case>(in)
    <9:DET/det>(dem) <10:NOUN/obl>(Dunkeln) <11:PRON/nsubj>(das) <12:AUX/cop>(war)
    <13:ADV/advmod>(dann) <14:ADJ/advmod>(ganz) <ROOT> <15:ADP/case>(in) <16:DET/det>(dem)
    <17:NOUN/root>(Wald)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(eher) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Gegenteil)\
    \ <5:AUX/root>(Sollte) <6:PRON/obj>(sich) <7:DET/det>(die) <8:NOUN/nsubj>(Augenfarbe)\
    \ <9:ADJ/advmod>(wirklich) <ROOT> <10:VERB/root>(\xE4ndern)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  sentence: <1:ADJ/root>(Klar) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(war) <3:ADV/advmod>(echt) <4:ADJ/root>(\xFC\
    berrascht) <5:ADP/case>(wie) <ROOT> <6:DET/det>(die) <7:NOUN/root>(\xC4hnlichkeiten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(wird) <3:ADP/case>(bei) <4:PROPN/nmod>(Elden)
    <5:NOUN/nmod>(Ring) <6:PART/advmod>(nicht) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - compound
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Allerdings) <ROOT> <2:ADJ/compound>(schwer) <4:ADV/advmod>(Extrem)
    <5:ADJ/root>(schwer)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - expl
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 1
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 11
    - advmod
  sentence: "<1:VERB/root>(Gibt) <2:PRON/expl>(es) <3:ADV/advmod>(dann) <4:ADV/advmod>(irgendwie)\
    \ <5:PRON/nsubj>(etwas) <6:ADV/advmod>(wo) <7:PRON/nsubj>(du) <8:VERB/acl>(sagen)\
    \ <9:AUX/aux>(w\xFCrdest) <10:PRON/nsubj>(das) <11:VERB/parataxis>(findest) <12:PRON/nsubj>(du)\
    \ <13:ADV/advmod>(dann) <14:ADV/advmod>(besonders) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 3
    - mark
  - !!python/tuple
    - 10
    - 3
    - dep
  - !!python/tuple
    - 11
    - 14
    - aux
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - advmod
  - !!python/tuple
    - 17
    - 18
    - nsubj
  - !!python/tuple
    - 18
    - 14
    - conj
  - !!python/tuple
    - 19
    - 20
    - nsubj
  - !!python/tuple
    - 20
    - 18
    - conj
  - !!python/tuple
    - 21
    - 20
    - obj
  - !!python/tuple
    - 22
    - 20
    - advmod
  - !!python/tuple
    - 23
    - 24
    - case
  - !!python/tuple
    - 24
    - 20
    - obl
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(da) <3:VERB/root>(habe) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(gleich) <6:ADV/advmod>(noch) <7:NUM/nummod>(tausend) <8:NOUN/obj>(Fragen)
    <9:SCONJ/mark>(weil) <10:SCONJ/dep>(wie) <ROOT> <11:AUX/aux>(muss) <12:DET/det>(eine)
    <13:NOUN/nsubj>(Liebesbeziehung) <14:VERB/root>(ablaufen) <15:ADV/advmod>(damit)
    <16:ADV/advmod>(nachher) <17:DET/nsubj>(einer) <18:VERB/conj>(sagt) <19:PRON/nsubj>(ich)
    <20:VERB/conj>(mache) <21:PRON/obj>(dich) <22:ADJ/advmod>(fertig) <23:ADP/case>(aus)
    <24:NOUN/obl>(Rache)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 14
    - advmod
  - !!python/tuple
    - 7
    - 14
    - nsubj
  - !!python/tuple
    - 8
    - 14
    - obj
  - !!python/tuple
    - 9
    - 13
    - det
  - !!python/tuple
    - 10
    - 13
    - nummod
  - !!python/tuple
    - 11
    - 13
    - compound
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 5
    - ccomp
  - !!python/tuple
    - 15
    - 14
    - aux
  - !!python/tuple
    - 16
    - 20
    - advmod
  - !!python/tuple
    - 17
    - 20
    - case
  - !!python/tuple
    - 18
    - 20
    - det
  - !!python/tuple
    - 19
    - 20
    - amod
  - !!python/tuple
    - 20
    - 5
    - obl
  - !!python/tuple
    - 21
    - 22
    - amod
  - !!python/tuple
    - 22
    - 20
    - nmod
  - !!python/tuple
    - 23
    - 24
    - amod
  - !!python/tuple
    - 24
    - 5
    - obj
  - !!python/tuple
    - 25
    - 36
    - cc
  - !!python/tuple
    - 26
    - 28
    - case
  - !!python/tuple
    - 27
    - 28
    - nummod
  - !!python/tuple
    - 28
    - 36
    - obl
  - !!python/tuple
    - 29
    - 30
    - det
  - !!python/tuple
    - 30
    - 28
    - nmod
  - !!python/tuple
    - 31
    - 36
    - aux
  - !!python/tuple
    - 32
    - 35
    - det
  - !!python/tuple
    - 33
    - 35
    - compound
  - !!python/tuple
    - 35
    - 36
    - obj
  - !!python/tuple
    - 36
    - 5
    - conj
  sentence: "<1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(aber) <4:ADV/advmod>(so)\
    \ <ROOT> <5:VERB/root>(fand) <6:ADV/advmod>(wo) <7:PRON/nsubj>(man) <8:PRON/obj>(sich)\
    \ <9:DET/det>(mehrere) <10:NUM/nummod>(hundert) <11:NOUN/compound>(Partner) <13:NOUN/obj>(Morde)\
    \ <14:VERB/ccomp>(angeguckt) <15:AUX/aux>(hat) <16:ADV/advmod>(also) <17:ADP/case>(in)\
    \ <18:DET/det>(dem) <19:ADJ/amod>(h\xE4uslichen) <20:NOUN/obl>(Umfeld) <21:ADJ/amod>(m\xE4\
    nnlicher) <22:NOUN/nmod>(T\xE4ter) <23:ADJ/amod>(weibliches) <24:NOUN/obj>(Opfer)\
    \ <25:CCONJ/cc>(und) <26:ADP/case>(in) <27:NUM/nummod>(94) <28:NOUN/obl>(Prozent)\
    \ <29:DET/det>(der) <30:NOUN/nmod>(F\xE4lle) <31:AUX/aux>(war) <32:DET/det>(diesen)\
    \ <33:NOUN/compound>(Morden) <35:NOUN/obj>(Stalking) <36:VERB/conj>(vorausgegangen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 8
    - appos
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - cop
  - !!python/tuple
    - 12
    - 5
    - advmod
  sentence: "<ROOT> <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:DET/nsubj>(alles) <4:ADV/advmod>(zusammen\u2026\
    ) <5:PROPN/root>(WOW) <6:CCONJ/cc>(Aber) <7:DET/det>(der) <8:PROPN/nsubj>(Disney+)\
    \ <9:NOUN/appos>(Tag) <10:ADV/advmod>(morgen) <11:AUX/cop>(ist) <12:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - compound
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obj
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(Das) <3:AUX/root>(ist) <4:ADV/advmod>(doch)
    <ROOT> <5:PRON/nsubj>(Ich) <6:ADP/case>(als) <7:NOUN/compound>(Pri-) <8:NOUN/nsubj>(vatperson)
    <9:VERB/root>(habe) <10:ADV/advmod>(endlich) <11:DET/det>(ein) <12:NOUN/obj>(Werkzeug)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 6
    - aux
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - advmod
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 13
    - compound:prt
  sentence: "<1:PROPN/nsubj>(markus) <2:AUX/root>(war) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(der)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADJ/root>(unversch\xE4mt) <7:AUX/cop>(sein) <8:AUX/aux>(konnte)\
    \ <9:ADV/advmod>(so) <10:ADV/advmod>(gnadenlos) <11:ADJ/advmod>(unversch\xE4mt)\
    \ <12:CCONJ/cc>(und) <13:VERB/conj>(haut) <14:ADV/compound:prt>(duuf)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advcl
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - cop
  - !!python/tuple
    - 16
    - 11
    - ccomp
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:VERB/advcl>(geh\xF6rt) <2:ADV/advmod>(da) <3:AUX/aux>(habe) <4:ADV/advmod>(ichimmer)\
    \ <5:ADV/advmod>(noch) <6:ADV/advmod>(so) <7:VERB/root>(gedacht) <8:ADV/advmod>(voll)\
    \ <9:ADJ/advmod>(naiv) <10:PRON/nsubj>(die) <11:VERB/parataxis>(nehmen) <12:ADV/advmod>(nur)\
    \ <13:DET/det>(die) <14:NOUN/nsubj>(Designer) <15:AUX/cop>(war) <16:ADJ/ccomp>(total)\
    \ <ROOT> <17:CCONJ/root>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux:pass
  sentence: <ROOT> <1:SCONJ/mark>(wie) <2:ADV/advmod>(hier) <3:VERB/root>(zusammengehalten)
    <4:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(wirkt) <3:PRON/nsubj>(das) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(mehr) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 7
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 11
    - nmod
  sentence: <1:ADJ/root>(Total) <ROOT> <2:ADP/case>(Unter) <3:PRON/obl>(uns) <4:ADP/case>(in)
    <5:DET/det>(der) <6:NOUN/nmod>(Erde) <7:VERB/root>(liegen) <8:ADV/advmod>(immer)
    <9:ADV/advmod>(noch) <10:NUM/nummod>(zehntausende) <11:NOUN/nsubj>(Bomben) <12:ADP/case>(aus)
    <13:DET/det>(dem) <14:ADJ/amod>(zweiten) <15:PROPN/nmod>(Weltkrieg)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/root>(wenn) <2:PRON/nsubj>(sie) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(auf)
    <5:DET/det>(der) <6:NOUN/obl>(Homepage) <7:ADV/advmod>(unterwegs) <8:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:X/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  sentence: "<1:NOUN/root>(Leute) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(so)\
    \ <ROOT> <5:PRON/nsubj>(Wir) <6:AUX/aux>(haben) <7:DET/det>(einen) <8:NOUN/obj>(Aluhut)\
    \ <9:VERB/root>(entdeckt) <10:PRON/nsubj>(der) <11:VERB/parataxis>(macht) <12:DET/obj>(jeden)\
    \ <13:ADP/case>(zu) <14:DET/det>(dem) <15:NOUN/obl>(Verschw\xF6rungstheoretiker)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 10
    - amod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(ergibt) <3:DET/det>(diese) <4:NOUN/nsubj>(Welt)
    <5:DET/det>(ein) <6:ADV/advmod>(so) <ROOT> <7:ADJ/amod>(homogenes) <8:CCONJ/cc>(und)
    <9:ADJ/conj>(abgefahrenes) <10:NOUN/root>(Gebilde)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - obj
  sentence: <1:ADP/case>(Nach) <2:DET/det>(der) <3:NOUN/obl>(Recherche) <4:AUX/aux>(habe)
    <5:PRON/nsubj>(ich) <6:VERB/root>(gedacht) <ROOT> <7:VERB/root>(trinken) <8:PRON/nsubj>(wir)
    <9:ADV/advmod>(zu) <10:DET/obj>(viel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - xcomp
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(\u2019s) <ROOT>\
    \ <4:CCONJ/cc>(aber) <5:PRON/nsubj>(ich) <6:VERB/root>(fand\u2019s) <7:ADJ/xcomp>(geil)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(fand) <4:PRON/obj>(das)
    <ROOT> <5:PRON/obj>(was) <6:PRON/nsubj>(du) <7:ADV/advmod>(gerade) <8:VERB/root>(gemacht)
    <9:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  sentence: <1:ADV/advmod>(Wirklich) <2:PRON/root>(das) <3:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT> <5:PRON/nsubj>(was) <6:ADV/advmod>(da) <7:VERB/root>(kommt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - xcomp
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(\u2019s) <ROOT>\
    \ <4:CCONJ/cc>(aber) <5:PRON/nsubj>(ich) <6:VERB/root>(fand\u2019s) <7:ADJ/xcomp>(geil)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(leben) <2:ADV/advmod>(lieber) <ROOT> <3:ADJ/root>(bequem)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advcl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:PRON/nsubj>(Es) <2:AUX/aux>(hat) <3:VERB/root>(gedauert) <4:SCONJ/mark>(bis)
    <5:PRON/nsubj>(ich) <6:VERB/advcl>(verstand) <7:SCONJ/advmod>(wie) <ROOT> <8:PRON/nsubj>(das)
    <9:ADJ/root>(stigmatisiert) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/root>(Jap) <2:PRON/nsubj>(ich) <3:AUX/cop>(bin) <ROOT> <4:ADJ/root>(witzig)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(die) <4:NOUN/nsubj>(Zeit)
    <5:VERB/root>(vergeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/dep>(Ah) <2:X/root>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 8
    - cc
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(Zu) <2:ADV/root>(oft) <3:ADP/case>(mit) <4:DET/det>(der)
    <5:NOUN/nmod>(Lupe) <6:ADP/case>(auf) <7:X/nmod>('s) <8:PROPN/nmod>(Aahahh) <9:CCONJ/cc>(und)
    <ROOT> <10:VERB/root>(gezoomt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(liebe) <3:PRON/obj>(es) <4:SCONJ/mark>(wenn)
    <5:DET/det>(der) <6:NOUN/obj>(Sex) <ROOT> <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:ADV/root>(So) <ROOT> <2:ADJ/root>(beliebt) <3:AUX/cop>(war) <4:PRON/nsubj>(ich)
    <5:ADP/case>(in) <6:DET/det:poss>(meiner) <7:NOUN/nmod>(Kindheit) <8:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:SCONJ/mark>(das) <2:PRON/nsubj>(ich) <3:PART/advmod>(nicht) <4:VERB/root>(bedauere)
    <5:AUX/aux>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT> <4:X/root>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: "<1:AUX/root>(war) <2:ADV/advmod>(so) <ROOT> <3:ADJ/root>(\xFCberladen)\
    \ <4:CCONJ/cc>(und) <5:ADJ/conj>(chaotisch)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - dep
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:ADV/root>(so)
    <ROOT> <5:PRON/root>(was) <6:DET/det>(diese) <7:NOUN/dep>(Giftstoffe) <8:ADP/case>(mit)
    <9:DET/det>(der) <10:NOUN/nmod>(Umwelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cc
  sentence: <2:PRON/nsubj>(Das) <3:VERB/root>(sieht) <4:ADV/advmod>(so) <ROOT> <5:ADP/case>(aus)
    <8:NOUN/root>(Geil) <9:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <2:ADV/root>(So) <ROOT> <5:PRON/nsubj>(Das) <6:AUX/cop>(war) <7:ADV/advmod>(sehr)
    <8:ADJ/root>(imposant)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/nsubj>(Manche) <2:VERB/root>(sehen) <3:ADV/advmod>(auch) <4:ADP/case>(von)
    <5:ADV/advmod>(innen) <6:ADJ/advmod>(richtig) <ROOT> <7:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 9
    - acl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 9
    - conj
  - !!python/tuple
    - 16
    - 15
    - advmod
  sentence: <1:VERB/root>(versuch) <2:DET/det:poss>(meine) <3:NOUN/obj>(Bilder) <4:PART/advmod>(nicht)
    <5:ADP/compound:prt>(zu) <ROOT> <6:PART/mark>(zu) <7:VERB/acl>(bearbeiten) <9:VERB/root>(find)
    <10:PRON/nsubj>(ich) <11:ADV/advmod>(sehr) <12:ADJ/advmod>(wichtig) <13:CCONJ/cc>(Und)
    <14:PRON/nsubj>(ich) <15:VERB/conj>(spreche) <16:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/nsubj>(Bagger) <3:VERB/root>(hat) <4:NUM/nummod>(14)
    <5:NOUN/obj>(Schon) <ROOT> <6:ADV/root>(Ja)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <2:NOUN/root>(Somgtext) <3:ADP/case>(zu) <5:PROPN/nmod>(Oha) <6:ADV/advmod>(auch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:DET/det>(Viele) <2:NOUN/root>(Downers) <4:ADV/advmod>(Auch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/root>(feeling) <3:AUX/cop>(ist) <ROOT> <4:AUX/aux>(h\xE4\
    tt') <5:PRON/nsubj>(ich) <6:ADV/advmod>(niemals) <7:VERB/root>(gedacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - obj
  sentence: <1:PROPN/nsubj>(Jaja) <2:ADV/advmod>(dreimal) <3:VERB/root>(glaube) <4:PRON/nsubj>(ich)
    <6:PROPN/obj>(Wow) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - appos
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/root>(Leid) <3:PROPN/appos>(san) <4:DET/det>(die)
    <5:ADJ/amod>(ganze) <6:NOUN/appos>(Woch) <7:ADV/advmod>(nur) <ROOT> <8:ADP/case>(an)
    <9:DET/det>(dem) <10:NOUN/root>(hackln)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  sentence: "<1:PRON/nsubj>(die) <2:VERB/root>(meinen) <3:PRON/nsubj>(sie) <4:VERB/xcomp>(w\xE4\
    r'n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:AUX/aux>(h\xE4\
    tte) <5:PRON/nsubj>(ich) <6:ADV/advmod>(nie) <7:VERB/root>(gedacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:ADV/advmod>(Also) <2:DET/det>(der) <3:NOUN/root>(Unterschied) <4:AUX/cop>(ist)
    <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:PRON/obj>(es) <8:ADV/advmod>(mal)
    <9:ADV/advmod>(so) <10:VERB/root>(sagen) <11:AUX/aux>(darf)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - aux:pass
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:AUX/aux:pass>(wird) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)
    <5:VERB/root>(geballert) <7:AUX/parataxis>(Ist) <8:ADV/advmod>(ja) <ROOT> <10:ADJ/amod>(Super)
    <11:NOUN/root>(Hund)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(beeindruckend)
    <5:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:DET/expl>(Ihr) <2:VERB/root>(seid) <3:DET/obj>(alle) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 8
    - obl
  - !!python/tuple
    - 13
    - 8
    - advmod
  - !!python/tuple
    - 14
    - 8
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - mark
  - !!python/tuple
    - 17
    - 15
    - aux
  sentence: "<1:PROPN/nsubj>(Oliver) <2:VERB/root>(machte) <3:ADJ/advmod>(m\xE4chtig)\
    \ <4:DET/obj>(einen) <5:ADP/case>(auf) <6:PROPN/obl>(Playboy) <7:CCONJ/cc>(und)\
    \ <8:VERB/conj>(gab) <9:ADV/advmod>(damit) <10:ADP/case>(an) <11:DET/det:poss>(seine)\
    \ <12:NOUN/obl>(Kobra) <13:ADV/advmod>(schonmal) <14:ADJ/advmod>(richtig) <ROOT>\
    \ <15:VERB/root>(gew\xFCrgt) <16:PART/mark>(zu) <17:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  sentence: <1:CCONJ/root>(Und) <ROOT> <2:AUX/cop>(ist) <3:ADV/advmod>(auch) <4:ADP/case>(wie)
    <5:ADJ/root>(hoch) <6:DET/det>(der) <7:NOUN/nsubj>(Schnee)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 8
    - cc
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - cop
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:ADV/advmod>(schon) <3:ADP/case>(seit) <4:NOUN/nmod>(Jahrzehnten)
    <5:ADP/case>(in) <6:DET/det>(der) <7:NOUN/nmod>(Szene) <8:ADJ/root>(aktiv) <9:AUX/cop>(sind)
    <10:CCONJ/cc>(Und) <ROOT> <11:ADV/advmod>(unterwegs) <12:AUX/cop>(sind) <13:ADJ/root>(einfach)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:NOUN/root>(Rechtsextremisten) <2:ADV/advmod>(schon) <3:ADV/advmod>(ziemlich)
    <ROOT> <4:VERB/root>(finde) <5:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - expl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 10
    - appos
  - !!python/tuple
    - 12
    - 11
    - appos
  - !!python/tuple
    - 13
    - 11
    - flat
  sentence: <1:X/root>(Ach) <ROOT> <2:ADJ/advmod>(okay) <3:PRON/expl>(Es) <4:VERB/root>(gibt)
    <5:ADV/advmod>(sogar) <6:DET/det>(ein) <7:NOUN/obj>(Pflegeset) <8:ADP/case>(mit)
    <9:NOUN/nmod>(Hautcreme) <10:NOUN/appos>(Alkoholtupfer) <11:PROPN/appos>(Vitamin)
    <12:PROPN/appos>(C) <13:NOUN/flat>(Pulver)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - mark
  - !!python/tuple
    - 12
    - 10
    - appos
  sentence: "<1:CCONJ/cc>(und) <2:NOUN/nsubj>(Kinder) <3:PART/advmod>(nicht) <4:VERB/root>(verletzen)\
    \ <5:PRON/nsubj>(Ich) <6:VERB/conj>(find) <7:PRON/obj>(\u2019s) <ROOT> <9:ADV/advmod>(also)\
    \ <10:DET/root>(beides) <11:SCONJ/mark>(dass) <12:PROPN/appos>(Michelle)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - aux
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <4:ADJ/advmod>(total)\
    \ <ROOT> <5:PRON/nsubj>(Ich) <6:AUX/aux>(kann) <7:PRON/obj>(das) <8:ADV/advmod>(gerade)\
    \ <9:ADV/advmod>(\xFCberhaupt) <10:PART/advmod>(nicht) <11:VERB/root>(glauben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - aux
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 16
    - det:poss
  - !!python/tuple
    - 16
    - 13
    - obj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(das) <4:ADV/advmod>(total)\
    \ <ROOT> <5:PRON/nsubj>(ich) <6:AUX/aux>(kann) <7:PRON/obj>(das) <8:ADV/advmod>(gerade)\
    \ <9:ADV/advmod>(\xFCberhaupt) <10:PART/advmod>(nicht) <11:VERB/root>(glauben)\
    \ <12:PRON/nsubj>(Ich) <13:VERB/conj>(nehme) <14:ADV/advmod>(mal) <15:DET/det:poss>(deine)\
    \ <16:NOUN/obj>(Hand)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 14
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 14
    - nmod
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - cop
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(was) <3:ADP/case>(mit) <4:ADJ/amod>(entsprechenden)\
    \ <5:NOUN/nmod>(Ger\xE4ten) <6:CCONJ/cc>(und) <7:DET/det>(dem) <8:NOUN/amod>(know)\
    \ <9:NOUN/conj>(how) <10:DET/det>(der) <11:NOUN/nmod>(Tier\xE4rzte) <12:ADV/advmod>(heute)\
    \ <13:ADJ/advmod>(medizinisch) <14:ADJ/root>(m\xF6glich) <15:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/nsubj>(der) <4:ADJ/root>(talentiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:NOUN/root>(Ausbeutung) <4:ADP/case>(auf)
    <5:DET/det:poss>(unseren) <6:NOUN/nmod>(Baustellen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:NOUN/obj>(s)
    <5:ADV/advmod>(halt) <ROOT> <6:SCONJ/mark>(wie) <7:ADJ/xcomp>(klar) <8:ADJ/xcomp>(eigentlich)
    <9:VERB/root>(geworden) <10:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Mucke) <3:ADP/case>(in) <4:DET/det:poss>(meinem)
    <5:NOUN/obl>(Walkman) <6:VERB/root>(war) <ROOT> <7:NOUN/root>(Pflicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:DET/det>(diese) <3:NOUN/nsubj>(Fronten) <4:AUX/root>(waren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(schie\xDF) <4:PRON/obj>(dich) <ROOT>\
    \ <5:ADP/root>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 8
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - advcl
  - !!python/tuple
    - 12
    - 4
    - advmod
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - obj
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(das) <4:NOUN/root>(Beste)
    <5:PRON/obj>(was) <6:PRON/nsubj>(sie) <7:ADV/advmod>(je) <8:VERB/acl>(gefakt)
    <9:AUX/aux>(haben) <10:PRON/nsubj>(Es) <11:AUX/advcl>(ist) <12:ADV/advmod>(so)
    <ROOT> <13:SCONJ/mark>(dass) <14:PRON/obj>(sich) <15:PRON/nsubj>(das) <16:VERB/root>(klickt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Server) <3:AUX/cop>(waren) <4:ADV/advmod>(weniger)\
    \ <5:VERB/root>(bev\xF6lkert) <6:ADV/advmod>(wobei) <7:PRON/nsubj>(es) <8:ADV/advmod>(auch)\
    \ <9:PART/advmod>(nicht) <ROOT> <10:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <4:ADV/advmod>(grade)\
    \ <ROOT> <5:VERB/root>(versch\xE4tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advcl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 5
    - obj
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(ich) <3:ADJ/advmod>(ganz) <ROOT> <4:AUX/advcl>(bin)
    <5:VERB/root>(sage) <6:PRON/nsubj>(ich) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(ich)
    <9:DET/det>(den) <10:NOUN/obj>(Atomausstieg)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(auf) <3:DET/det>(einem) <4:ADJ/amod>(falschen)
    <5:NOUN/obl>(Planeten) <6:PRON/appos>(Das) <7:VERB/root>(find) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/mark>(wenn) <3:PRON/root>(Du) <ROOT> <4:AUX/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:ADV/root>(Wie) <ROOT> <2:NOUN/root>(Papierflieger) <3:ADP/case>(mit)
    <4:NOUN/nmod>(Motor) <5:CCONJ/cc>(und) <6:NOUN/conj>(Fernsteuerung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Gesetze) <2:AUX/cop>(sind) <3:ADJ/root>(end) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(du) <ROOT> <3:NOUN/root>(Gangster)
    <4:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 2
    - obj
  - !!python/tuple
    - 10
    - 2
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(brichst) <3:ADP/case>(unter) <4:NOUN/obl>(Tr\xE4\
    nen) <5:ADV/advmod>(zusammen) <6:ADV/advmod>(da) <7:PRON/obj>(dir) <8:DET/det>(die)\
    \ <9:NOUN/obj>(Szene) <10:ADP/compound:prt>(zu) <ROOT> <11:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - ccomp
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(macht) <3:DET/det>(das) <4:NOUN/obj>(Leben)
    <5:ADP/compound:prt>(aus) <6:ADV/advmod>(wo) <7:PRON/nsubj>(man) <8:VERB/ccomp>(sagt)
    <9:PRON/nsubj>(Das) <10:AUX/ccomp>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/compound>(Wow) <2:NOUN/nsubj>(Alter) <3:DET/det>(die) <4:NOUN/root>(Story)
    <5:AUX/cop>(ist) <6:ADV/advmod>(ja) <ROOT> <7:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - nsubj:pass
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(viele) <4:NOUN/nsubj:pass>(Schuhe)
    <5:DET/det>(jeden) <6:NOUN/obl>(Tag) <7:VERB/root>(verbrannt) <8:AUX/aux:pass>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:AUX/root>(w\xE4re) <ROOT> <3:CCONJ/cc>(und) <4:DET/det:poss>(meine)\
    \ <5:NOUN/nsubj>(Stimme) <6:AUX/cop>(w\xE4r) <7:NOUN/root>(Kommerz)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:PRON/nsubj>(es) <3:PRON/obj>(mich) <4:VERB/root>(verwirrt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(eigentlich) <2:VERB/root>(m\xFCsstest) <3:PRON/nsubj>(du)\
    \ <4:ADV/advmod>(ja) <5:ADV/advmod>(heut) <6:ADJ/advmod>(richtig) <ROOT> <7:VERB/root>(abr\xE4\
    umen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <3:ADV/advmod>(einfach) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: "<1:PRON/root>(die) <2:PRON/nsubj>(ich) <3:ADV/advmod>(immer) <ROOT> <4:VERB/root>(bel\xE4\
    chelt) <5:AUX/aux>(hab)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  sentence: <1:PROPN/amod>(Deutscher) <2:PROPN/nsubj>(Rap) <3:VERB/root>(hat) <ROOT>
    <4:VERB/root>(verkackt) <5:CCONJ/cc>(und) <6:VERB/conj>(stirbt) <7:ADP/case>(an)
    <8:NOUN/obl>(Vogelgrippe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(dein) <2:NOUN/nsubj>(Album) <3:VERB/root>(floppt) <ROOT>
    <4:VERB/root>(blamiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:DET/det:poss>(dein) <3:NOUN/obj>(Maul) <4:ADP/compound:prt>(auf)
    <5:CCONJ/cc>(und) <6:VERB/conj>(beginn) <7:PRON/obj>(mich) <ROOT> <8:VERB/root>(anzuwidern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(jedes) <2:NOUN/nsubj>(Konzert) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: "<1:CCONJ/cc>(Entweder) <2:VERB/root>(seid) <3:PRON/obj>(ihr) <ROOT> <4:ADJ/root>(begeistert)\
    \ <5:CCONJ/cc>(oder) <6:ADV/advmod>(einfach) <7:ADV/advmod>(nur) <8:ADJ/conj>(entt\xE4\
    uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - expl
  - !!python/tuple
    - 3
    - 9
    - aux:pass
  - !!python/tuple
    - 4
    - 9
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/expl>(es) <3:AUX/aux:pass>(ist) <4:PROPN/obj>(YouTube)
    <5:ADP/case>(zu) <6:DET/det>(dem) <7:NOUN/obl>(Beruf) <8:PART/mark>(zu) <9:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADJ/root>(ultimativ)
    <ROOT> <5:DET/det>(viel) <6:NOUN/root>(Stress) <7:ADP/case>(von) <8:DET/det>(dem)
    <9:NOUN/nmod>(Event) <10:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/root>(wie) <ROOT> <2:AUX/aux>(musstest) <3:PRON/nsubj>(du) <4:ADV/advmod>(da)
    <5:ADP/case>(auf) <6:NOUN/obl>(Zahlen) <7:VERB/root>(gucken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(die) <2:NOUN/nsubj>(Tageslaune) <3:AUX/root>(kann) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(sehr) <ROOT> <6:ADV/advmod>(davon) <7:VERB/root>(abh\xE4ngen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:AUX/root>(ist) <2:ADP/case>(in) <3:DET/det>(den) <4:ADJ/amod>(letzten)
    <5:NOUN/obl>(Jahren) <ROOT> <6:VERB/root>(gestiegen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: <1:CCONJ/cc>(oder) <2:VERB/root>(dachtest) <3:PRON/nsubj>(du) <4:ADJ/advmod>(okay)
    <ROOT> <5:PRON/nsubj>(ich) <6:VERB/root>(denk) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(jetzt)
    <9:ADV/advmod>(einfach) <10:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADV/advmod>(sehr) <4:ADJ/root>(blutig)
    <5:CCONJ/cc>(und) <6:DET/det>(der) <7:NOUN/nsubj>(Sound) <8:AUX/conj>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 1
    - appos
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PROPN/root>(Ey) <2:PROPN/flat>(Sofia) <3:ADP/case>(ohne) <4:NOUN/nmod>(Schei\xDF\
    ) <5:PRON/appos>(Du) <6:AUX/cop>(bist) <7:ADV/advmod>(so) <ROOT> <8:X/root>(ey)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - appos
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(war) <ROOT> <4:ADJ/root>(verliebt) <6:ADJ/appos>(Verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 3
    - parataxis
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(wir) <3:VERB/root>(geh'n) <4:ADV/advmod>(dann)
    <5:ADP/case>(unter) <6:ADP/case>(von) <7:DET/det:poss>(unserm) <8:NOUN/obl>(Gewicht)
    <10:PRON/nsubj>(Ich) <11:AUX/parataxis>(war) <ROOT> <12:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PROPN/root>(boah) <ROOT> <2:PRON/nsubj>(die) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/obl>(Ende) <8:DET/det:poss>(ihres) <9:NOUN/nmod>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(haben) <2:PRON/nsubj>(wir) <ROOT> <3:DET/nsubj>(viel) <4:VERB/root>(erreicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 15
    - advcl
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 9
    - conj
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - obj
  - !!python/tuple
    - 18
    - 15
    - advmod
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(du) <3:DET/det>(ein) <4:ADJ/nmod>(paar)\
    \ <5:NOUN/obl>(Tage) <6:ADP/case>(auf) <7:DET/det>(der) <8:NOUN/obl>(Stra\xDF\
    e) <9:VERB/advcl>(lebst) <10:CCONJ/cc>(und) <11:ADP/case>(unter) <12:NOUN/obl>(Drogen)\
    \ <13:VERB/conj>(stehst) <14:ADV/advmod>(dann) <15:VERB/root>(ver\xE4nderst) <16:PRON/nsubj>(du)\
    \ <17:PRON/obj>(dich) <18:ADV/advmod>(ganz) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 14
    - aux
  - !!python/tuple
    - 11
    - 14
    - obl:arg
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(war) <3:ADV/advmod>(richtig) <4:ADJ/root>(anstrengend)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:AUX/cop>(war) <8:ADV/advmod>(so) <9:ADJ/conj>(Echt)
    <ROOT> <10:AUX/aux>(ist) <11:PRON/obl:arg>(mir) <12:ADV/advmod>(gar) <13:PART/advmod>(nicht)
    <14:VERB/root>(aufgefallen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - compound
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 1
    - dep
  sentence: <1:PROPN/root>(Hei) <2:X/compound>(ei) <3:X/dep>(ei) <4:X/dep>(boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 13
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - aux
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(nat\xFCrlich) <3:VERB/root>(denkt) <4:PRON/nsubj>(man)\
    \ <5:PRON/obj>(sich) <6:ADV/advmod>(dann) <7:ADV/advmod>(auch) <8:PROPN/obj>(Oh)\
    \ <ROOT> <9:PRON/nsubj>(ich) <10:AUX/aux>(habe) <11:DET/obj>(alles) <12:ADV/advmod>(richtig)\
    \ <13:VERB/root>(gemacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - cc
  - !!python/tuple
    - 2
    - 10
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 10
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 12
    - csubj
  - !!python/tuple
    - 11
    - 12
    - cop
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:ADP/case>(nach) <4:ADV/advmod>(so)
    <5:DET/det>(vielen) <6:NOUN/obl>(Jahren) <7:ADP/case>(auf) <8:ADV/advmod>(einmal)
    <9:ADV/advmod>(so) <10:VERB/csubj>(auszusprechen) <11:AUX/cop>(war) <12:ADJ/root>(unglaublich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(An) <2:DET/det>(keinem) <3:NOUN/obl>(Tag) <4:AUX/root>(waren)
    <5:DET/dep>(die) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(wie) <8:ADP/case>(an)
    <9:DET/det>(diesem) <10:NOUN/root>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:SCONJ/mark>(Dass) <2:PRON/nsubj>(das) <3:ADV/advmod>(da) <4:ADV/advmod>(sehr)
    <5:ADJ/advmod>(drastisch) <6:VERB/root>(klarmacht) <7:ADP/mark>(wie) <ROOT> <8:PRON/root>(das)
    <9:AUX/cop>(sein) <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(machst) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - appos
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <3:ADV/advmod>(voll) <ROOT> <4:VERB/root>(gefurzt)
    <6:ADV/advmod>(Richtig) <7:ADJ/appos>(salzig)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Shit) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(mach) <ROOT> <3:PROPN/root>(Cash)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - appos
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 2
    - advcl
  sentence: <2:PROPN/root>(Walla) <3:PROPN/flat>(Bila) <5:DET/det>(Keine) <6:PROPN/appos>(Palaber)
    <8:SCONJ/mark>(Denn) <9:DET/det>(der) <10:NOUN/nsubj>(Reimkiller) <11:VERB/advcl>(kommt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  sentence: "<1:SCONJ/mark>(dass) <2:DET/det:poss>(dein) <3:NOUN/root>(Schei\xDF)\
    \ <ROOT> <4:VERB/root>(geschrieben) <5:AUX/aux:pass>(sei)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - dep
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:PROPN/root>(Fitti)
    <6:ADP/dep>(Mit) <ROOT> <7:PRON/nsubj>(was) <8:ADP/case>(auf) <10:NOUN/root>(Kasten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(chill) <3:ADV/advmod>(noch) <4:ADV/advmod>(immer)
    <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(Park) <8:DET/det>(die) <9:NOUN/obj>(Sonne)
    <10:VERB/parataxis>(scheint) <11:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: <1:ADV/advmod>(wieder) <2:ADP/root>(zu) <ROOT> <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/root>(Rausch) <7:PROPN/appos>(Wouh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Macher) <3:AUX/aux>(hab'n) <4:DET/det>(den)
    <5:NOUN/obj>(Club) <6:ADV/advmod>(hier) <7:VERB/root>(umgebaut) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(wir) <2:VERB/root>(sind) <3:ADV/advmod>(viermal) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:VERB/root>(kommt) <2:PRON/nsubj>(er) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(Schmeckt) <2:ADV/advmod>(dann) <3:ADV/advmod>(zwar) <ROOT>
    <4:ADP/case>(nach) <5:NOUN/obl>(Kot) <6:CCONJ/cc>(aber) <7:NOUN/obj>(Hauptsache)
    <8:VERB/root>(ballert)
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<2:ADP/case>(F\xFCr) <3:DET/det>(eine) <4:NOUN/root>(Terrororganisation)\
    \ <5:AUX/cop>(ist) <6:DET/det>(die) <7:PROPN/nsubj>(GEMA) <ROOT> <8:ADJ/advmod>(lasch)\
    \ <9:VERB/root>(organisiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/cop>(war) <2:ADJ/root>(nat\xFCrlich) <ROOT> <3:AUX/aux>(kann)\
    \ <4:PRON/nsubj>(man) <5:ADV/advmod>(nur) <6:VERB/root>(sagen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PROPN/amod>(Social) <3:PROPN/nsubj>(Media) <4:DET/det:poss>(unsere)
    <5:NOUN/root>(Hirnleistung) <ROOT> <6:VERB/root>(verschlechtert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:DET/det>(Das) <3:NOUN/nsubj>(Ding) <4:AUX/cop>(ist)
    <5:ADJ/root>(runtergeklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 3
    - advcl
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(w\xE4r) <3:NOUN/root>(s) <4:SCONJ/mark>(wenn)\
    \ <5:PRON/nsubj>(sie) <6:PRON/obj>(das) <7:VERB/advcl>(schaffen) <8:AUX/aux>(w\xFC\
    rden)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  sentence: <1:ADV/advmod>(Da) <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:ADV/advmod>(wirklich)
    <5:ADV/advmod>(so) <6:ADJ/root>(ganz) <ROOT> <7:CCONJ/cc>(und) <8:VERB/root>(sag)
    <9:NOUN/nsubj>(Leute) <10:NOUN/obj>(Kofferpacken)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Schon) <2:DET/det>(der) <3:NOUN/root>(N\xE4chste) <4:ADV/advmod>(so)\
    \ <ROOT> <6:X/root>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - nsubj
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:DET/det>(eine) <4:NOUN/obj>(Batterie)
    <5:ADP/case>(in) <6:DET/det>(der) <7:NOUN/nmod>(Hand) <8:PRON/nsubj>(Das) <9:VERB/parataxis>(finde)
    <10:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - expl
  - !!python/tuple
    - 3
    - 7
    - aux:pass
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj:pass
  - !!python/tuple
    - 6
    - 7
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:PRON/expl>(es) <3:AUX/aux:pass>(ist) <4:ADV/advmod>(sogar)
    <5:PRON/nsubj:pass>(das) <6:ADP/compound:prt>(mit) <7:VERB/root>(abgebrochen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  sentence: <1:ADV/advmod>(So) <2:VERB/root>(sieht) <3:PRON/nsubj>(das) <4:ADV/advmod>(hier)
    <5:ADP/case>(aus) <6:PROPN/obl>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - ccomp
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 11
    - advcl
  sentence: <1:DET/nsubj>(einige) <2:AUX/aux>(haben) <3:ADV/advmod>(schon) <4:ADV/advmod>(hart)
    <5:VERB/root>(verkackt) <6:AUX/aux>(muss) <7:PRON/nsubj>(ich) <8:VERB/ccomp>(sagen)
    <9:ADV/advmod>(Wirklich) <ROOT> <10:PART/mark>(zu) <11:VERB/root>(sehen) <12:SCONJ/mark>(wenn)
    <13:ADV/advmod>(so) <14:DET/det>(ein) <15:NOUN/nsubj>(Kind) <16:VERB/advcl>(gewonnen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:PRON/obj>(sie) <ROOT> <4:VERB/root>(betrogen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(jetzt) <2:AUX/cop>(bist) <3:PRON/root>(du) <ROOT> <4:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(ist) <3:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADV/advmod>(dann)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 6
    - 3
    - parataxis
  sentence: <1:PROPN/nsubj>(Groupy) <2:PROPN/flat>(Bitches) <3:VERB/root>(sagen) <6:PROPN/parataxis>(Wow)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(fand) <3:PRON/obj>(es) <4:DET/advmod>(selber)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - amod
  sentence: "<1:VERB/root>(h\xE4ltst) <2:PRON/obj>(dich) <3:ADP/case>(f\xFCr) <4:ADJ/amod>(richtig)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADJ/root>(technisch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 9
    - nmod
  - !!python/tuple
    - 4
    - 9
    - cop
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Auf) <2:DET/det>(jeden) <3:NOUN/nmod>(Fall) <4:AUX/cop>(ist)\
    \ <5:PRON/nsubj>(das) <6:ADP/case>(f\xFCr) <7:DET/det>(ein) <8:NOUN/nmod>(CRPG)\
    \ <9:ADJ/root>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:DET/det>(eine) <3:NOUN/nsubj>(Welt) <4:VERB/root>(zusammengebrochen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(fand) <4:PRON/obj>(das)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:PRON/obj>(das) <8:VERB/root>(sagen)
    <9:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: "<1:PRON/nsubj>(Die) <2:AUX/cop>(sind) <3:ADV/advmod>(immer) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(mich) <6:ADV/advmod>(da) <7:PRON/root>(das) <8:AUX/cop>(ist)\
    \ <9:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:ADV/advmod>(auch) <4:ADJ/advmod>(ganz)
    <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(ich) <7:PRON/obj>(das) <8:VERB/root>(sagen)
    <9:AUX/aux>(darf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  sentence: <1:ADV/root>(Irgendwie) <ROOT> <2:CCONJ/cc>(und) <3:ADV/advmod>(ehrlich)
    <4:VERB/root>(gesagt) <5:ADV/advmod>(auch) <6:DET/det>(ein) <7:ADV/advmod>(bisschen)
    <8:ADJ/xcomp>(beunruhigend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - acl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(schw\xF6r) <4:PRON/obj>(dir) <5:PRON/nsubj>(es)\
    \ <6:VERB/acl>(wird) <ROOT> <7:VERB/root>(gesippt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(schw\xF6r) <3:PRON/obj>(dir) <4:PRON/obj>(es)\
    \ <5:VERB/acl>(wird) <ROOT> <6:VERB/root>(gesippt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - cop
  sentence: <ROOT> <1:ADJ/root>(bekannt) <2:PART/mark>(zu) <3:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - expl
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 14
    - mark
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(Schon) <2:ADP/case>(\xFCber) <3:NUM/nummod>(10) <4:NUM/nummod>(000)\
    \ <5:NOUN/nsubj>(Kommentare) <6:PRON/nsubj>(Ich) <7:VERB/root>(finde) <8:PRON/expl>(es)\
    \ <9:ADV/advmod>(gerade) <10:ADV/advmod>(so) <ROOT> <11:SCONJ/mark>(dass) <12:PRON/nsubj>(es)\
    \ <13:ADV/advmod>(wirklich) <14:VERB/root>(funktioniert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - dep
  sentence: <ROOT> <1:SCONJ/root>(weil) <2:DET/det>(solche) <3:NOUN/dep>(Texte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 15
    - mark
  - !!python/tuple
    - 3
    - 15
    - advmod
  - !!python/tuple
    - 4
    - 15
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - compound
  - !!python/tuple
    - 8
    - 15
    - obl
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 15
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 15
    - nsubj:pass
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - aux:pass
  sentence: <1:ADJ/root>(richtig) <ROOT> <2:SCONJ/mark>(dass) <3:ADV/advmod>(hier)
    <4:ADV/advmod>(sogar) <5:ADP/case>(auf) <6:DET/det>(diesem) <7:NOUN/compound>(Grindr)
    <8:NOUN/obl>(Profil) <9:ADJ/advmod>(einfach) <10:ADV/advmod>(mal) <11:DET/det>(das)
    <12:NOUN/nsubj:pass>(Klingelschild) <13:ADP/case>(von) <14:PROPN/nmod>(Lukas)
    <15:VERB/root>(abfotografiert) <16:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 11
    - xcomp
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - cc
  sentence: "<1:DET/det>(eine) <2:ADJ/amod>(neue) <3:NOUN/obj>(Wohnung) <4:VERB/root>(sucht)\
    \ <5:CCONJ/cc>(und) <6:ADV/advmod>(besonders) <ROOT> <7:ADV/advmod>(sogar) <8:DET/det:poss>(seinen)\
    \ <9:NOUN/obj>(Nachnamen) <10:VERB/xcomp>(\xE4ndern) <11:VERB/root>(l\xE4sst)\
    \ <12:CCONJ/cc>(Und)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/mark>(denn) <2:PRON/nsubj>(die) <3:VERB/root>(haben) <4:DET/obj>(eines)\
    \ <5:ADV/advmod>(gemeinsam) <6:PRON/obj>(sie) <7:AUX/ccomp>(sind) <ROOT> <8:ADJ/root>(religi\xF6\
    s)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - compound:prt
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(Das) <3:VERB/root>(gucken) <4:PRON/nsubj>(wir)
    <5:PRON/obj>(uns) <6:ADV/advmod>(direkt) <7:ADV/advmod>(mal) <8:ADP/compound:prt>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - obl
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - mark
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 7
    - advmod
  - !!python/tuple
    - 13
    - 7
    - compound:prt
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det:poss
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADP/case>(Vor) <2:DET/obl>(allem) <3:ADJ/amod>(nichtreligi\xF6se)\
    \ <4:NOUN/nsubj>(B\xFCrgerinnen) <5:CCONJ/cc>(und) <6:NOUN/conj>(B\xFCrger) <7:VERB/root>(finden)\
    \ <8:SCONJ/mark>(dass) <9:DET/det>(die) <10:NOUN/nsubj>(Ultraorthodoxen) <11:PRON/obj>(sich)\
    \ <12:ADV/advmod>(viel) <13:ADP/compound:prt>(zu) <ROOT> <14:ADP/case>(in) <15:DET/det:poss>(ihr)\
    \ <16:NOUN/root>(Leben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nur) <2:PART/advmod>(nicht) <3:ADP/case>(von) <4:DET/det>(dem)\
    \ <5:NOUN/root>(Regal) <ROOT> <6:VERB/root>(runterst\xFCrzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/nsubj>(Keiner) <2:VERB/root>(bekam) <3:ADP/case>(mit) <4:PRON/nsubj>(er)\
    \ <5:VERB/xcomp>(br\xFCtet) <ROOT> <6:PRON/nsubj>(was) <7:ADP/root>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(Weil) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(verdiene)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - appos
  sentence: "<1:DET/det:poss>(mein) <2:NOUN/nsubj>(Pimmel) <3:AUX/root>(ist) <ROOT>\
    \ <4:ADJ/root>(dick) <6:ADJ/appos>(b\xE4h)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(ich) <3:ADV/advmod>(hier) <4:NOUN/root>(spitte)
    <5:ADP/case>(mit) <6:PROPN/nmod>(Manuellsen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:INTJ/advmod>(Oh) <2:ADV/advmod>(ja) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 9
    - aux
  sentence: "<1:PRON/nsubj>(es) <2:ADV/advmod>(unten) <3:ADV/advmod>(immer) <4:ADV/advmod>(dann)\
    \ <5:PART/advmod>(nicht) <6:SCONJ/root>(wenn) <7:PRON/nsubj>(ich) <ROOT> <8:NOUN/obj>(Druck)\
    \ <9:VERB/root>(versp\xFCre) <10:CCONJ/cc>(oder) <11:ADV/advmod>(auch) <12:NOUN/obj>(Stress)\
    \ <13:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <ROOT> <1:ADJ/advmod>(belastend) <2:PROPN/nsubj>(Max) <3:DET/det>(ein)
    <4:NOUN/obj>(Freund) <5:ADP/case>(von) <6:PROPN/nmod>(Daniel) <7:VERB/root>(hatte)
    <8:ADJ/advmod>(jahrelang)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:PROPN/nsubj>(Nico) <2:PROPN/flat>(Fuck) <3:PROPN/flat>(me) <4:CCONJ/cc>(Und)
    <5:ADV/advmod>(dann) <6:PRON/nsubj>(das) <7:VERB/root>(finde) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(ja) <10:ADJ/advmod>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Ratten) <ROOT> <2:ADP/case>(in) <3:DET/det>(der) <4:NOUN/root>(Gruppe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - cop
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(aber) <4:ADV/advmod>(schon)
    <ROOT> <5:ADV/advmod>(wie) <6:ADJ/root>(ausgebucht) <7:DET/det>(die) <8:DET/nsubj>(meisten)
    <9:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/aux>(mag) <3:DET/det>(die) <4:NOUN/obj>(Figuren)
    <5:PRON/nsubj>(Das) <6:VERB/root>(sieht) <7:ADV/advmod>(grafisch) <8:ADJ/advmod>(extrem)
    <ROOT> <9:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  sentence: "<1:ADV/root>(mittlerweile) <ROOT> <2:VERB/root>(untersch\xE4tzt) <3:ADP/case>(von)\
    \ <4:DET/obl>(vielen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(denk) <4:ADV/advmod>(so)
    <5:X/advmod>(Ey) <ROOT> <6:ADV/advmod>(also) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)
    <9:ADV/advmod>(ja) <10:ADJ/root>(wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - aux
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:AUX/aux>(muss) <2:PRON/nsubj>(ich) <3:ADV/advmod>(mal) <4:ADV/advmod>(ehrlich)\
    \ <5:VERB/root>(sagen) <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(pr\xE4gen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:X/root>(Hallo)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 1
    - csubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 1
    - advmod
  - !!python/tuple
    - 10
    - 16
    - nsubj
  - !!python/tuple
    - 11
    - 16
    - advmod
  - !!python/tuple
    - 12
    - 16
    - obj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - obl
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADJ/root>(wichtig) <2:AUX/cop>(ist) <3:DET/det>(die) <4:NOUN/nsubj>(Meere)\
    \ <5:PART/mark>(zu) <6:VERB/csubj>(sch\xFCtzen) <7:PRON/nsubj>(Das) <8:AUX/cop>(ist)\
    \ <9:ADV/advmod>(so) <ROOT> <10:PRON/nsubj>(was) <11:ADV/advmod>(da) <12:DET/obj>(alles)\
    \ <13:ADP/case>(an) <14:DET/det>(dem) <15:NOUN/obl>(Meeresboden) <16:VERB/root>(rumliegt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:SCONJ/root>(Weil) <2:PRON/nsubj>(es) <3:PRON/obj>(mich) <4:DET/advmod>(viel)
    <5:ADP/compound:prt>(zu) <ROOT> <6:VERB/root>(reingezogen) <7:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:VERB/root>(riecht) <3:ADJ/advmod>(richtig) <ROOT>
    <4:ADP/case>(nach) <5:PROPN/root>(Gurke)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  sentence: "<1:INTJ/advmod>(Ah) <2:ADV/advmod>(ja) <3:ADV/root>(hier) <ROOT> <4:NUM/nummod>(530)\
    \ <5:NUM/nummod>(25) <6:NOUN/obj>(\u20AC) <7:VERB/root>(hat) <8:PRON/nsubj>(jemand)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 3
    - appos
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Alter) <3:NOUN/appos>(Krankheiten) <4:PRON/appos>(Wir)\
    \ <5:DET/appos>(alle) <6:VERB/root>(verdr\xE4ngen) <7:PRON/obj>(das) <8:ADV/advmod>(lieber)\
    \ <9:PRON/nsubj>(Ich) <10:ADV/advmod>(auch) <11:ADV/advmod>(Aber) <12:ADV/advmod>(mal)\
    \ <ROOT> <13:VERB/root>(formuliert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Karsten) <2:ADV/mark>(warum) <3:VERB/root>(verbrennen)
    <4:PRON/nsubj>(wir) <5:ADV/advmod>(denn) <6:ADV/advmod>(gar) <7:PART/advmod>(nicht)
    <8:ADV/advmod>(so) <ROOT> <9:DET/det>(viele) <10:NOUN/root>(Kalorien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 8
    - obl
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:NOUN/obl>(Hausdurchsuchung) <3:ADP/case>(bei) <4:DET/det>(den)
    <5:NOUN/nmod>(Eltern) <6:CCONJ/cc>(und) <7:PRON/nsubj>(die) <8:VERB/root>(rasten)
    <ROOT> <9:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 3
    - dep
  sentence: <1:DET/det>(Der) <2:ADJ/amod>(bitterste) <3:NOUN/root>(zweifel) <4:ADP/case>(an)
    <5:ADJ/nmod>(kool) <6:CCONJ/cc>(und) <7:ADP/dep>(an) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(lass') <4:PRON/obj>(dich)
    <5:ADV/advmod>(jetzt) <ROOT> <6:VERB/root>(sterben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:ADV/advmod>(hier) <4:ADV/advmod>(schon)
    <ROOT> <5:DET/det>(den) <6:NOUN/root>(Eingriff) <7:ADP/case>(in) <8:DET/det>(die)
    <9:NOUN/nmod>(Natur)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:AUX/cop>(sind) <3:ADV/advmod>(so) <4:DET/det:poss>(Ihre)
    <5:NOUN/nsubj>(Vorstellungen) <6:ADJ/root>(Ok) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - cop
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 3
    - parataxis
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - advmod
  sentence: <1:ADV/advmod>(Wie) <2:DET/obj>(viele) <3:VERB/root>(haben) <4:PRON/nsubj>(Sie)
    <5:ADV/advmod>(denn) <6:PRON/nsubj>(Was) <7:AUX/cop>(sind) <8:ADV/advmod>(so)
    <9:DET/det:poss>(Ihre) <10:NOUN/nsubj>(Vorstellungen) <11:ADJ/parataxis>(Ok) <ROOT>
    <12:VERB/root>(Haben) <13:PRON/nsubj>(Sie) <14:ADV/advmod>(dann) <15:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(steh) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(neben)
    <5:PRON/root>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Lage) <3:AUX/root>(ist) <ROOT> <4:ADP/mark>(um)
    <5:PART/advmod>(nicht) <6:PART/mark>(zu) <7:VERB/root>(sagen) <8:ADJ/advmod>(dramatisch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:AUX/cop>(sind) <3:ADP/root>(zu) <ROOT> <4:ADP/case>(in)
    <5:DET/det:poss>(ihrer) <6:NOUN/root>(Wirkung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(Das) <4:AUX/aux>(haben)
    <5:PRON/nsubj>(wir) <6:ADV/advmod>(kurz) <7:VERB/root>(angedeutet)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:PRON/obj>(das) <4:ADV/advmod>(heute)\
    \ <5:VERB/advcl>(durchbl\xE4ttere) <6:VERB/root>(denke) <7:PRON/nsubj>(ich) <ROOT>\
    \ <8:PRON/nsubj>(das) <9:AUX/cop>(bin) <10:PRON/root>(ich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - obj
  - !!python/tuple
    - 11
    - 6
    - aux
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(du) <4:NOUN/obj>(Amis)\
    \ <5:NOUN/obj>(kopierst) <6:VERB/root>(hei\xDFt) <7:ADV/advmod>(dat) <8:ADV/advmod>(lange)\
    \ <9:PART/advmod>(nicht) <10:PRON/obj>(du) <11:AUX/aux>(bist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ihr) <3:VERB/root>(k\xF6nnt) <4:PRON/obj>(euch)\
    \ <5:PART/advmod>(nicht) <6:ADP/xcomp>(f\xFCr) <ROOT> <7:VERB/root>(verkaufen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/det>(die) <3:NOUN/nsubj>(Muschi) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(find) <4:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obl:arg
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/obl:arg>(Keinem) <2:ADV/advmod>(sonst) <3:VERB/root>(hab) <5:PRON/nsubj>(ich)
    <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(vertraut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(finde) <3:PRON/nsubj>(es) <ROOT> <4:PRON/nsubj>(was)
    <5:PRON/nsubj>(die) <6:ADV/advmod>(schon) <7:DET/obj>(alles) <8:ADP/case>(auf)
    <9:DET/det>(dem) <10:NOUN/obl>(Feld) <11:VERB/root>(erleben) <12:AUX/aux>(mussten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  sentence: <1:INTJ/root>(Stehst) <2:PRON/appos>(du) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  sentence: "<1:VERB/root>(F\xFChlen) <2:DET/det:poss>(meine) <3:NOUN/obj>(Stimme)\
    \ <4:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(ich) <3:VERB/root>(rappe) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:DET/det>(einige)
    <5:NOUN/obj>(Leute) <6:ADV/advmod>(so) <7:VERB/root>(sieht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(man)\
    \ <5:ADV/advmod>(so) <6:DET/root>(wenig) <7:ADP/case>(mit) <8:DET/det>(dem) <9:ADJ/amod>(weiblichen)\
    \ <10:NOUN/nmod>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - aux
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: "<1:AUX/aux>(Hast) <2:PRON/nsubj>(du) <3:ADV/advmod>(noch) <4:PART/advmod>(nicht)\
    \ <5:VERB/root>(erz\xE4hlt) <6:CCONJ/punct>(Nein) <7:ADV/advmod>(Wirklich) <8:PART/advmod>(nicht)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 12
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:ADJ/advmod>(echt)
    <ROOT> <5:SCONJ/mark>(dass) <6:DET/det>(die) <7:NOUN/nsubj>(Bridge) <8:ADV/advmod>(so)
    <9:ADV/advmod>(gut) <10:DET/det>(den) <11:NOUN/obj>(Refrain) <12:VERB/root>(aufbaut)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADJ/root>(einfach)
    <ROOT> <5:DET/det>(der) <6:NOUN/root>(Verkehr)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT> <3:PRON/nsubj>(ich) <4:AUX/aux>(kann)
    <5:NOUN/obj>(s) <6:ADV/advmod>(noch) <7:PART/advmod>(nicht) <8:VERB/root>(glauben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(frage) <3:PRON/obj>(mich) <4:VERB/ccomp>(Ist)
    <5:PRON/nsubj>(das) <6:ADV/advmod>(wirklich) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(Es) <3:VERB/root>(wird) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(richtig) <6:VERB/xcomp>(wei\xDF) <7:ADV/advmod>(guck) <8:ADV/advmod>(mal)\
    \ <9:ADV/advmod>(rein)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(fertig) <4:CCONJ/cc>(oder)
    <5:AUX/cop>(Ist) <6:PRON/conj>(das) <7:PART/conj>(nicht) <ROOT> <8:INTJ/root>(Guckt)
    <9:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 1
    - obj
  sentence: <1:VERB/root>(Sah) <2:ADP/case>(aus) <3:ADP/case>(wie) <4:DET/det>(ein)
    <5:NOUN/obl>(Fisch) <6:DET/det>(dieses) <7:NOUN/compound>(Ding) <9:NOUN/obj>(Ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(Hab's) <2:ADV/advmod>(so) <ROOT> <3:VERB/root>(verschwendet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:ADJ/root>(beeindruckend)
    <5:ADP/case>(wie) <6:DET/det>(viele) <7:NOUN/nmod>(Standbeine)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(es) <4:DET/advmod>(selber)
    <5:ADV/advmod>(irgendwie) <6:ADJ/advmod>(voll) <ROOT> <7:SCONJ/mark>(dass) <8:ADV/advmod>(einfach)
    <9:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <3:PRON/obj>(es) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(als) <7:ADJ/amod>(ganzes) <8:NOUN/obl>(Ding)
    <9:VERB/root>(sehe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - obl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(die) <3:AUX/root>(sollen) <4:ADP/case>(bei)
    <5:NOUN/obl>(weitem) <6:PART/advmod>(nicht) <7:ADV/advmod>(so) <ROOT> <8:AUX/root>(gewesen)
    <9:AUX/cop>(sein) <10:ADP/case>(wie) <11:PRON/obl>(die) <12:ADP/case>(in) <13:PROPN/nmod>(Yangon)
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 13
    - mark
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 13
    - obj
  - !!python/tuple
    - 10
    - 13
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <2:PROPN/dep>(Simon) <4:PRON/nsubj>(Das) <5:AUX/root>(ist) <ROOT> <6:SCONJ/mark>(wenn)
    <7:PRON/nsubj>(man) <8:DET/det>(die) <9:NOUN/obj>(Bilder) <10:DET/obj>(alle) <11:ADP/case>(auf)
    <12:ADV/advmod>(einmal) <13:VERB/root>(sieht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(hat) <3:ADV/advmod>(hier) <4:ADV/advmod>(so)
    <5:NOUN/obj>(Stoffwindeln) <6:ADP/case>(an) <8:NOUN/obl>(Ach) <ROOT> <9:ADP/case>(zu)
    <10:DET/det>(dem) <11:NOUN/root>(Waschen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 5
    - conj
  - !!python/tuple
    - 13
    - 15
    - obl:arg
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - xcomp
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADV/advmod>(so) <2:ADV/advmod>(ja) <3:DET/det>(der) <4:NOUN/nsubj>(Vorhang)\
    \ <5:VERB/root>(f\xE4llt) <6:ADV/advmod>(so) <7:ADV/advmod>(Ach) <8:ADV/advmod>(so)\
    \ <9:ADJ/advmod>(okay) <10:CCONJ/cc>(Und) <11:ADV/advmod>(dann) <12:VERB/conj>(wurde)\
    \ <13:PRON/obl:arg>(mir) <14:ADV/advmod>(halt) <15:ADJ/xcomp>(klar) <ROOT> <16:PRON/nsubj>(Ich)\
    \ <17:AUX/root>(bin)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 9
    - nmod
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:ADV/advmod>(noch) <4:DET/det>(ein)
    <5:ADJ/nmod>(paar) <6:NOUN/nmod>(Monate) <7:NOUN/compound>(Zeit) <9:NOUN/obj>(Stimmt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/root>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - amod
  sentence: <1:NOUN/root>(Wetterleuchten) <2:ADJ/amod>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(es) <6:AUX/root>(ist) <7:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(sehr) <2:ADV/root>(sehr) <ROOT> <3:DET/det>(das) <4:NOUN/root>(Erlebnis)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:ADV/advmod>(links) <3:PRON/nsubj>(ich) <4:ADV/advmod>(rechts)
    <5:PRON/nsubj>(Das) <6:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/obj>(Beine) <3:VERB/root>(tun) <ROOT>
    <4:ADV/root>(weh)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(auch) <3:DET/det>(der) <4:ADJ/amod>(deutsche)\
    \ <5:NOUN/root>(M\xF6nch) <6:PROPN/appos>(Martin) <7:PROPN/flat>(Luther) <ROOT>\
    \ <8:VERB/root>(aufgeregt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 3
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 13
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - advmod
  - !!python/tuple
    - 19
    - 17
    - obj
  - !!python/tuple
    - 20
    - 17
    - obj
  sentence: "<1:DET/det>(ein) <2:ADV/advmod>(bisschen) <3:DET/root>(viel) <4:CCONJ/cc>(und)\
    \ <5:ADV/advmod>(dann) <6:ADV/advmod>(doch) <7:PART/conj>(nicht) <8:CCONJ/cc>(und)\
    \ <9:ADV/advmod>(ja) <10:PRON/nsubj>(das) <11:ADV/advmod>(ja) <12:PRON/nsubj>(es)\
    \ <13:VERB/conj>(hat) <14:PRON/obj>(sich) <15:ADV/advmod>(schon) <16:ADV/advmod>(sehr)\
    \ <ROOT> <17:VERB/root>(angef\xFChlt) <18:ADV/advmod>(irgendwie) <19:PROPN/obj>(Oh)\
    \ <20:NOUN/obj>(Gott)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/root>(Komme) <ROOT> <2:ADJ/root>(rein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - compound:prt
  sentence: <1:ADP/case>(In) <2:DET/det>(die) <3:NOUN/obl>(Fresse) <4:VERB/root>(kicke)
    <5:PRON/nsubj>(ich) <6:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:ADV/advmod>(Ne) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:PRON/obl:arg>(mir)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:VERB/root>(gedacht)
    <ROOT> <5:SCONJ/mark>(weil) <6:PRON/nsubj>(das) <7:VERB/root>(passt) <8:ADJ/advmod>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(das) <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(War) <2:PART/advmod>(nicht) <3:ADV/advmod>(so) <ROOT> <4:ADV/advmod>(wie)
    <5:PRON/nsubj>(du) <6:PRON/flat>(Deine) <7:AUX/cop>(sind) <8:ADV/advmod>(schon)
    <9:ADJ/root>(heftig)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - appos
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <2:PROPN/root>(AAA) <4:NOUN/flat>(Titel) <5:ADP/case>(wie) <6:DET/det>(The)
    <7:PROPN/nmod>(Witcher) <8:PRON/nsubj>(die) <9:ADJ/appos>(unglaublich) <ROOT>
    <10:VERB/root>(umsetzen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 11
    - case
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:DET/det>(manche) <4:NOUN/nsubj>(Sounds)\
    \ <5:PRON/nsubj>(die) <6:VERB/parataxis>(w\xFCrden) <7:ADP/case>(in) <8:ADV/advmod>(echt)\
    \ <9:ADV/advmod>(gar) <10:PART/advmod>(nicht) <11:ADV/advmod>(so) <ROOT> <12:VERB/root>(klingen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advcl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 11
    - advmod
  sentence: "<1:X/root>(Ey) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(die) <4:NOUN/nsubj>(V\xF6\
    gel) <5:ADV/advmod>(hier) <6:VERB/advcl>(zwitschern) <7:VERB/root>(H\xF6rt) <8:PRON/obj>(ihr)\
    \ <9:DET/det>(das) <10:PRON/nsubj>(Wir) <11:VERB/parataxis>(sind) <12:ADV/advmod>(jetzt)\
    \ <13:ADV/advmod>(hier) <14:ADV/advmod>(auch) <15:ADV/advmod>(mitten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - compound
  - !!python/tuple
    - 11
    - 7
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Also) <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/obl>(Tag) <7:VERB/root>(bestimmt) <8:NUM/nummod>(150)
    <9:NOUN/nsubj>(Anrufe) <10:NOUN/compound>(Minimum) <11:NOUN/obj>(Minimum)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(den) <3:NOUN/obl>(Videos) <4:VERB/root>(sah)
    <5:PRON/nsubj>(das) <6:ADV/advmod>(immer) <ROOT> <7:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(sieht) <4:ADV/advmod>(wirklich)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(einfach) <4:ADV/advmod>(nur)
    <ROOT> <5:ADJ/advmod>(Mind) <6:X/root>(blown)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PROPN/nsubj>(wow) <2:ADJ/root>(okay) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)
    <5:DET/det>(das) <6:NOUN/obj>(Medium) <7:ADV/advmod>(schon) <8:ADV/advmod>(so)
    <9:VERB/root>(durchdrungen) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 7
    - cop
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 7
    - nsubj
  sentence: <1:PRON/obj>(Was) <2:PRON/nsubj>(ich) <3:VERB/root>(sagen) <4:AUX/aux>(muss)
    <5:PRON/nsubj>(was) <6:PRON/obj>(mich) <ROOT> <7:VERB/root>(geflasht) <8:AUX/aux>(hat)
    <9:AUX/cop>(war) <10:PROPN/amod>(Deep) <11:PROPN/nsubj>(Learning)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Vorhaben) <3:AUX/root>(war) <4:ADJ/advmod>(einfach)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:ADP/case>(f\xFCr) <7:DET/det>(die) <8:NOUN/root>(90er)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  sentence: <1:INTJ/advmod>(Ach) <2:VERB/root>(komm) <ROOT> <3:ADV/advmod>(Wie) <4:VERB/root>(holen)
    <5:PRON/nsubj>(wir) <6:PRON/obj>(das) <7:ADV/compound:prt>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADJ/root>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 4
    - xcomp
  - !!python/tuple
    - 11
    - 10
    - cop
  - !!python/tuple
    - 12
    - 4
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:DET/det>(Diese) <2:DET/det>(beiden) <3:NOUN/nsubj>(Inselgruppen) <4:VERB/root>(liegen)
    <5:ADV/advmod>(nur) <6:ADV/advmod>(etwa) <7:NUM/nummod>(zwei) <8:NOUN/nmod>(Kilometer)
    <9:ADV/advmod>(voneinander) <10:ADJ/xcomp>(entfernt) <11:AUX/cop>(sind) <12:ADV/advmod>(aber)
    <ROOT> <13:ADJ/root>(verschieden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:X/root>(Ah) <ROOT> <2:SCONJ/root>(solange) <3:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:AUX/root>(ist) <3:ADV/advmod>(auch) <ROOT> <4:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cop
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/cop>(bin) <2:PRON/nsubj>(ich) <3:ADV/advmod>(erstmal) <4:ADV/advmod>(so)
    <6:PROPN/root>(Woah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - mark
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 14
    - advcl
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 14
    - cop
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(ich) <3:ADP/case>(zu) <4:DET/det>(dem)
    <5:NOUN/obl>(Beispiel) <6:DET/det>(die) <7:NOUN/obj>(Abtreibungszahlen) <8:VERB/advcl>(lese)
    <9:ADV/advmod>(dann) <10:AUX/cop>(bin) <11:PRON/nsubj>(ich) <12:ADV/advmod>(erstmal)
    <13:ADV/advmod>(so) <14:PROPN/root>(Woah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 11
    - ccomp
  sentence: "<1:PRON/nsubj>(die) <2:PRON/nsubj>(es) <3:ADV/advmod>(nur) <4:ADJ/advmod>(digital)\
    \ <5:VERB/root>(gibt) <6:PRON/nsubj>(die) <7:PRON/obj>(sich) <8:ADV/advmod>(aber)\
    \ <9:ADV/advmod>(trotzdem) <ROOT> <10:ADV/advmod>(echt) <11:VERB/root>(anf\xFC\
    hlt) <12:ADV/advmod>(Wie) <13:PRON/nsubj>(das) <14:VERB/ccomp>(geht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:INTJ/root>(Oh) <2:ADP/advmod>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 3
    - ccomp
  sentence: <1:ADV/advmod>(Okay) <2:PRON/nsubj>(ich) <3:AUX/root>(bin) <4:ADV/advmod>(irgendwie)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(oben) <7:ADP/case>(auf) <8:DET/det>(einem)
    <9:NOUN/obl>(Hochhaus) <10:PRON/nsubj>(Das) <11:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - conj
  - !!python/tuple
    - 12
    - 17
    - cop
  - !!python/tuple
    - 13
    - 17
    - cop
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADV/advmod>(dann) <2:AUX/aux>(muss) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(oft) <6:ADJ/advmod>(n\xE4her) <7:VERB/root>(hingehen) <8:CCONJ/cc>(oder)\
    \ <9:PRON/nsubj>(was) <10:ADV/advmod>(da) <11:ADJ/conj>(ganz) <ROOT> <12:AUX/cop>(ist)\
    \ <13:AUX/cop>(ist) <14:ADV/advmod>(halt) <15:ADV/advmod>(eben) <16:DET/det>(dieser)\
    \ <17:ADJ/root>(wei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:NOUN/root>(Wahnsinn) <2:ADV/advmod>(hier) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:DET/det>(Das) <3:NOUN/root>(Problem) <4:ADP/case>(an)
    <5:DET/det>(der) <6:NOUN/nmod>(Sache) <7:AUX/cop>(ist) <8:ADV/advmod>(nur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(schnipse) <3:PRON/nsubj>(ich) <4:ADV/advmod>(da)
    <5:ADV/advmod>(vorne) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:ADV/advmod>(Also)\
    \ <5:PRON/nsubj>(ich) <6:VERB/root>(h\xE4tte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj:pass
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:ADV/advmod>(auch) <4:ADV/advmod>(hier)\
    \ <5:ADP/mark>(wie) <ROOT> <6:DET/det>(der) <7:NOUN/nsubj:pass>(Schnabel) <8:VERB/root>(verst\xFC\
    mmelt) <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(must) <3:ADV/advmod>(halt) <4:PRON/obj>(dir)
    <5:VERB/xcomp>(aussuchen) <6:ADJ/xcomp>(OK) <ROOT> <7:DET/det>(welche) <8:NOUN/nsubj>(Waffe)
    <9:AUX/cop>(ist) <10:PRON/nsubj>(es) <11:ADJ/root>(wert)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 7
    - csubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/mark>(um) <2:PRON/obj>(sich) <3:ADJ/advmod>(gegenseitig) <4:VERB/csubj>(auszuspionieren)
    <5:AUX/cop>(Ist) <6:ADV/advmod>(doch) <7:ADJ/root>(echt) <ROOT> <8:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(stimmt) <3:DET/obj>(alles) <4:ADV/advmod>(komplett)
    <5:ADJ/obj>(Echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/root>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - conj
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(noch) <3:ADV/advmod>(dazu) <4:AUX/cop>(ist)\
    \ <5:PRON/nsubj>(es) <6:ADJ/root>(k\xF6rperlich) <ROOT> <7:ADJ/root>(anstrengend)\
    \ <8:CCONJ/cc>(und) <9:ADV/advmod>(manchmal) <10:ADV/advmod>(sogar) <11:ADJ/conj>(gef\xE4\
    hrlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(absolut) <ROOT> <4:PRON/nsubj>(was)\
    \ <5:PRON/obj>(sich) <6:ADV/advmod>(da) <7:VERB/root>(ver\xE4ndert) <8:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 15
    - cc
  - !!python/tuple
    - 7
    - 15
    - obj
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 15
    - obl
  - !!python/tuple
    - 15
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:DET/det>(den) <4:PROPN/obj>(Kongo)
    <ROOT> <5:VERB/root>(ausgebeutet) <6:CCONJ/cc>(und) <7:PRON/obj>(sich) <8:CCONJ/cc>(und)
    <9:DET/det:poss>(seinen) <10:NOUN/conj>(Freundeskreis) <11:ADP/case>(an) <12:DET/det>(den)
    <13:ADJ/amod>(ganzen) <14:NOUN/obl>(Rohstoffen) <15:VERB/conj>(bereichert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <ROOT> <4:ADV/advmod>(komfortabel)\
    \ <5:ADV/root>(so) <6:ADP/case>(f\xFCr) <7:ADV/advmod>(unterwegs)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 8
    - nmod
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 8
    - compound:prt
  sentence: <1:ADP/case>(Als) <2:NOUN/nmod>(Kind) <3:AUX/cop>(war) <4:PRON/nmod>(mir)
    <5:PRON/nsubj>(das) <6:ADV/advmod>(hier) <7:DET/det>(der) <8:PROPN/root>(Break)
    <9:PROPN/flat>(Dancer) <10:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obl:arg
  - !!python/tuple
    - 7
    - 5
    - compound:prt
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(diese) <3:NOUN/nsubj>(Ger\xE4uschkulisse)\
    \ <4:PRON/appos>(das) <5:AUX/root>(w\xE4re) <6:PRON/obl:arg>(mir) <7:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:PRON/obj>(was) <4:ADJ/root>(besseres)
    <5:ADP/case>(als) <6:PRON/nmod>(du) <7:CCONJ/cc>(und) <8:ADV/advmod>(auch) <9:ADV/conj>(so)
    <ROOT> <10:SCONJ/mark>(wie) <11:DET/nsubj>(alle) <12:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nmod
  sentence: "<1:CCONJ/root>(Und) <ROOT> <2:NOUN/root>(abl\xE4stern) <3:ADP/case>(\xFC\
    ber) <4:PROPN/nmod>(G\xF6ppels) <5:ADP/case>(aus) <6:DET/det>(der) <7:PROPN/nmod>(Mukkeszene)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 5
    - acl
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(findest) <3:PRON/obj>(das) <ROOT> <4:ADV/advmod>(Dann)
    <5:VERB/root>(warte) <6:PRON/nsubj>(was) <7:ADV/advmod>(noch) <8:DET/obj>(alles)
    <9:VERB/acl>(kommt)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - nsubj
  - !!python/tuple
    - 2
    - 9
    - aux
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - cop
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - parataxis
  - !!python/tuple
    - 14
    - 17
    - obj
  - !!python/tuple
    - 15
    - 17
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - obl:arg
  - !!python/tuple
    - 17
    - 13
    - acl
  - !!python/tuple
    - 18
    - 17
    - aux
  - !!python/tuple
    - 19
    - 27
    - cc
  - !!python/tuple
    - 20
    - 27
    - mark
  - !!python/tuple
    - 21
    - 27
    - nsubj
  - !!python/tuple
    - 22
    - 27
    - advmod
  - !!python/tuple
    - 23
    - 26
    - obj
  - !!python/tuple
    - 24
    - 25
    - case
  - !!python/tuple
    - 25
    - 26
    - obl
  - !!python/tuple
    - 26
    - 27
    - advcl
  - !!python/tuple
    - 27
    - 17
    - advcl
  - !!python/tuple
    - 28
    - 29
    - nsubj
  - !!python/tuple
    - 29
    - 9
    - conj
  - !!python/tuple
    - 30
    - 29
    - nsubj
  - !!python/tuple
    - 31
    - 29
    - advmod
  - !!python/tuple
    - 32
    - 29
    - advmod
  - !!python/tuple
    - 33
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(durfte) <3:ADV/advmod>(dann) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(noch) <6:DET/det>(die) <7:NOUN/obj>(Toten) <8:VERB/xcomp>(identifizieren)\
    \ <9:VERB/root>(durchf\xFChren) <10:PRON/nsubj>(das) <11:AUX/cop>(war) <12:DET/det>(kein)\
    \ <13:NOUN/parataxis>(Job) <14:PRON/obj>(den) <15:PRON/nsubj>(ich) <16:PRON/obl:arg>(mir)\
    \ <17:VERB/acl>(ausgesucht) <18:AUX/aux>(habe) <19:CCONJ/cc>(und) <20:SCONJ/mark>(wenn)\
    \ <21:PRON/nsubj>(sie) <22:ADV/advmod>(dann) <23:PRON/obj>(jemand) <24:ADP/case>(vor)\
    \ <25:PRON/obl>(sich) <26:VERB/advcl>(liegen) <27:VERB/advcl>(sehen) <28:PRON/nsubj>(das)\
    \ <29:VERB/conj>(muss) <30:PRON/nsubj>(man) <31:ADV/advmod>(einfach) <32:ADV/advmod>(so)\
    \ <ROOT> <33:VERB/root>(sagen)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 4
    - ccomp
  - !!python/tuple
    - 13
    - 17
    - mark
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - obj
  - !!python/tuple
    - 16
    - 17
    - mark
  - !!python/tuple
    - 17
    - 12
    - advcl
  - !!python/tuple
    - 18
    - 21
    - cc
  - !!python/tuple
    - 19
    - 21
    - obj
  - !!python/tuple
    - 20
    - 21
    - mark
  - !!python/tuple
    - 21
    - 17
    - conj
  - !!python/tuple
    - 22
    - 30
    - cc
  - !!python/tuple
    - 23
    - 30
    - mark
  - !!python/tuple
    - 24
    - 30
    - nsubj
  - !!python/tuple
    - 25
    - 26
    - det
  - !!python/tuple
    - 26
    - 30
    - obj
  - !!python/tuple
    - 27
    - 28
    - case
  - !!python/tuple
    - 28
    - 26
    - nmod
  - !!python/tuple
    - 29
    - 30
    - aux
  - !!python/tuple
    - 30
    - 4
    - conj
  - !!python/tuple
    - 31
    - 30
    - nsubj
  - !!python/tuple
    - 32
    - 30
    - advmod
  - !!python/tuple
    - 33
    - 0
    - root
  sentence: "<2:ADP/case>(Als) <3:ADJ/amod>(erstes) <4:VERB/root>(dachte) <5:PRON/nsubj>(man)\
    \ <6:ADV/advmod>(ja) <7:SCONJ/mark>(dass) <8:DET/det>(die) <9:NOUN/nsubj>(Bundeswehr)\
    \ <10:ADP/case>(nach) <11:PROPN/obl>(Afghanistan) <12:VERB/ccomp>(geht) <13:ADP/mark>(um)\
    \ <14:ADV/advmod>(dort) <15:NOUN/obj>(M\xE4dchenschulen) <16:PART/mark>(zu) <17:VERB/advcl>(bauen)\
    \ <18:CCONJ/cc>(und) <19:NOUN/obj>(Brunnen) <20:PART/mark>(zu) <21:VERB/conj>(bohren)\
    \ <22:CCONJ/cc>(und) <23:SCONJ/mark>(dass) <24:PRON/nsubj>(das) <25:DET/det>(die)\
    \ <26:NOUN/obj>(Entwicklungshelfer) <27:ADP/case>(in) <28:NOUN/nmod>(Uniform)\
    \ <29:AUX/aux>(sind) <30:VERB/conj>(Fand) <31:PRON/nsubj>(ich) <32:ADV/advmod>(schon)\
    \ <ROOT> <33:X/root>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(jetzt)
    <5:DET/root>(eines) <6:DET/det:poss>(deiner) <7:NOUN/nmod>(Pakete)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(ist) <3:DET/det>(das) <4:NOUN/nsubj>(Feeling)
    <6:PRON/nsubj>(Es) <7:AUX/cop>(ist) <8:ADV/advmod>(sehr) <9:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(ersten) <3:NOUN/nsubj>(Male) <4:AUX/root>(waren)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <3:PRON/obl:arg>(mir) <4:DET/det:poss>(deinen)\
    \ <5:NOUN/obj>(Pulli) <6:VERB/root>(gew\xFCnscht) <8:NOUN/obj>(Ah) <ROOT> <9:ADV/advmod>(ja)\
    \ <10:ADJ/root>(geil)"
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - advmod
  - !!python/tuple
    - 2
    - 10
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 10
    - obl
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - amod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 4
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - obj
  sentence: <1:ADV/advmod>(auch) <2:ADV/advmod>(noch) <3:ADP/case>(in) <4:NOUN/obl>(Kombination)
    <5:ADP/case>(mit) <6:DET/det>(dem) <7:ADJ/amod>(modernen) <8:ADJ/amod>(cleanen)
    <9:NOUN/nmod>(Design) <10:VERB/root>(kommen) <ROOT> <11:PRON/nsubj>(ich) <12:VERB/root>(sags)
    <13:PRON/obj>(euch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 2
    - xcomp
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(denkt) <3:DET/det>(die) <4:NOUN/obj>(Nummer)
    <5:ADP/case>(mit) <6:DET/det>(dem) <7:NOUN/obl>(Pass) <8:VERB/xcomp>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Der) <2:VERB/root>(l\xE4sst) <3:PRON/obj>(sich) <4:CCONJ/cc>(entweder)\
    \ <5:VERB/xcomp>(steigern) <6:SCONJ/mark>(indem) <7:PRON/obj>(ihr) <ROOT> <8:ADJ/advmod>(gut)\
    \ <9:VERB/root>(k\xE4mpft)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - ccomp
  sentence: "<1:NOUN/root>(Alter) <ROOT> <2:ADV/advmod>(Ja) <3:ADV/advmod>(gut) <4:VERB/root>(wei\xDF\
    ) <5:PART/advmod>(nicht) <6:SCONJ/mark>(ob) <7:PRON/nsubj>(ich) <8:PRON/nsubj>(das)\
    \ <9:VERB/ccomp>(hinkriege)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:ADV/advmod>(knapp) <4:ADV/advmod>(So)
    <5:DET/nsubj>(viel) <6:AUX/aux>(hat) <7:VERB/root>(gefehlt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Druck) <3:AUX/root>(war) <4:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 2
    - advcl
  sentence: <1:AUX/root>(Ist) <ROOT> <2:AUX/root>(gewesen) <3:SCONJ/mark>(wie) <4:PRON/nsubj>(man)
    <5:DET/det>(das) <6:DET/obj>(alles) <7:VERB/advcl>(stemmt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADP/case>(vor) <3:DET/det>(ein) <4:ADJ/nmod>(paar)
    <5:NOUN/obl>(Monaten) <6:ADV/advmod>(dann) <7:DET/det>(die) <8:NOUN/nsubj>(Nachricht)
    <9:AUX/root>(ist) <10:ADV/advmod>(schon) <ROOT> <11:AUX/root>(gewesen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/cop>(war) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 15
    - mark
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - nsubj
  sentence: "<1:NOUN/dep>(Imperium) <2:DET/det>(alle) <3:NOUN/obj>(Vertr\xE4ge) <4:VERB/root>(gek\xFC\
    ndigt) <5:AUX/aux>(hat) <6:CCONJ/cc>(Und) <7:PRON/nsubj>(das) <8:AUX/conj>(ist)\
    \ <ROOT> <9:PRON/nsubj>(Wir) <10:VERB/root>(wussten) <11:ADV/advmod>(ja) <12:SCONJ/mark>(dass)\
    \ <13:ADV/advmod>(relativ) <14:ADV/advmod>(schnell) <15:PRON/nsubj>(die)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(w\xE4re) <3:ADV/advmod>(nat\xFCrlich)\
    \ <4:ADJ/root>(richtig) <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(er) <7:ADV/advmod>(einfach)\
    \ <8:ADV/advmod>(gar) <9:PART/advmod>(nicht) <10:VERB/root>(kommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 3
    - cop
  sentence: <1:ADJ/advmod>(voll) <2:DET/det>(die) <3:NOUN/root>(Community) <4:CCONJ/cc>(und)
    <5:DET/det>(die) <6:NOUN/conj>(Energie) <7:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - det
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 12
    - nmod
  - !!python/tuple
    - 12
    - 7
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(total)\
    \ <ROOT> <5:ADP/case>(vor) <6:DET/obl>(allem) <7:AUX/root>(Ist) <8:DET/det>(das)\
    \ <9:ADJ/advmod>(ne) <10:ADJ/amod>(halbe) <11:NOUN/nmod>(Stunde) <12:ADJ/advmod>(sp\xE4\
    ter)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:ADV/advmod>(wie) <4:DET/det>(viel)
    <5:ADJ/root>(kleiner)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Wahnsinn) <ROOT> <3:X/root>(Ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/root>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: "<1:AUX/aux>(hat) <2:DET/det>(eine) <3:ADJ/amod>(tolle) <4:NOUN/nsubj>(Atmosph\xE4\
    re) <5:DET/det>(die) <6:NOUN/root>(R\xE4tsel) <7:AUX/cop>(sind) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 10
    - nsubj:pass
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux:pass
  sentence: "<1:ADP/mark>(um) <2:PART/mark>(zu) <3:VERB/root>(schauen) <4:SCONJ/mark>(ob)\
    \ <5:DET/det>(die) <6:NOUN/nsubj>(Plakate) <7:VERB/ccomp>(nochh\xE4ngen) <8:PRON/nsubj:pass>(die)\
    \ <9:ADV/advmod>(gestern) <10:VERB/acl>(aufgeh\xE4ngt) <11:AUX/aux:pass>(wurden)\
    \ <12:X/punct>(Ah) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:AUX/cop>(war) <3:ADV/advmod>(denn) <4:PRON/nsubj>(das)\
    \ <5:NOUN/root>(bitte) <6:PRON/nsubj>(Das) <7:VERB/parataxis>(f\xFChlte) <8:PRON/obj>(sich)\
    \ <9:ADV/advmod>(ja) <ROOT> <10:ADJ/advmod>(gut) <11:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux:pass
  sentence: "<1:ADP/case>(in) <2:PRON/nmod>(dem) <3:DET/det>(die) <4:ADJ/amod>(weibliche)\
    \ <5:NOUN/root>(Sexualit\xE4t) <ROOT> <6:VERB/root>(dezimiert) <7:AUX/aux:pass>(wurde)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - expl
  - !!python/tuple
    - 8
    - 6
    - advcl
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - ccomp
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:NOUN/compound>(Management) <5:NOUN/obj>(F\xE4\
    higkeiten) <6:VERB/root>(gesagt) <7:PRON/expl>(es) <8:AUX/advcl>(ist) <9:ADV/advmod>(aber)\
    \ <10:PART/advmod>(nicht) <11:ADV/ccomp>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:ADV/advmod>(Allerdings) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(es) <4:PRON/obl:arg>(mir)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: "<1:CCONJ/cc>(und) <2:AUX/aux>(musst) <3:ADV/advmod>(nachts) <4:NOUN/obj>(Monster)\
    \ <5:VERB/root>(bek\xE4mpfen) <6:ADV/advmod>(so) <ROOT> <7:AUX/root>(ist) <8:PRON/nsubj>(das)\
    \ <9:ADV/advmod>(gar) <10:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(ich) <2:ADV/advmod>(ziemlich) <ROOT> <3:VERB/root>(perform)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - mark
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(Den) <2:PRON/nsubj>(du) <3:VERB/root>(feierst) <4:SCONJ/mark>(weil)
    <5:PRON/nsubj>(du) <ROOT> <6:ADP/case>(auf) <7:DET/det:poss>(seine) <8:NOUN/obl>(Sachen)
    <9:VERB/root>(stehst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Fatal) <2:CCONJ/cc>(und) <3:DET/det>(der) <4:NOUN/conj>(Track)
    <5:VERB/root>(kommt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(kann) <3:ADV/advmod>(auch) <ROOT> <4:NOUN/root>(abflowen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:PRON/root>(die) <2:ADV/advmod>(so) <ROOT> <3:ADJ/root>(unterirdisch)
    <4:AUX/cop>(waren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PROPN/amod>(Deutscher) <2:PROPN/nsubj>(Rap) <3:AUX/cop>(war) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(nie) <6:ADV/root>(so) <ROOT> <7:ADP/case>(in) <8:DET/det>(dem)
    <9:NOUN/root>(Trend)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: <1:INTJ/root>(Machst) <2:ADP/compound:prt>(auf) <ROOT> <3:CCONJ/cc>(und)
    <4:VERB/root>(kaufst) <5:ADV/advmod>(nur) <6:PROPN/obj>(Tenner)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(hassen) <3:DET/obj>(alles) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:ADV/root>(Bzw) <2:ADV/advmod>(nur) <3:ADP/case>(mit) <4:DET/det>(einem)
    <5:ADJ/advmod>(wirklich) <ROOT> <6:ADJ/amod>(operativen) <7:NOUN/root>(Eingriff)
    <8:ADP/case>(unter) <9:NOUN/nmod>(Vollnarkose)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 3
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:VERB/root>(gibt) <4:ADV/advmod>(ja)
    <5:NOUN/nsubj>(Leute) <6:PRON/obj>(die) <7:VERB/xcomp>(haben) <ROOT> <8:NOUN/root>(Angst)
    <9:ADP/case>(vor) <10:NOUN/nmod>(Operationen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 7
    - xcomp
  sentence: "<1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:AUX/root>(w\xFCrde) <4:PRON/nsubj>(ich)\
    \ <ROOT> <5:VERB/root>(finden) <6:PRON/nsubj>(Ich) <7:VERB/conj>(lasse) <8:PRON/obj>(mich)\
    \ <9:VERB/xcomp>(\xFCberraschen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/mark>(Weil) <2:ADV/advmod>(ganz) <3:ADV/advmod>(ehrlich) <4:DET/det>(eine)
    <5:NOUN/root>(Abtreibung) <6:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(so) <3:CCONJ/cc>(und) <4:PRON/nsubj>(das)
    <5:AUX/root>(ist) <6:ADV/advmod>(psychisch) <7:ADV/advmod>(halt) <8:ADV/advmod>(auch)
    <9:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 8
    - obl
  sentence: "<1:CCONJ/cc>(aber) <2:ADV/advmod>(auch) <3:ADP/case>(f\xFCr) <4:DET/det>(die)\
    \ <5:NOUN/nmod>(Psyche) <6:ADV/advmod>(halt) <7:ADJ/root>(v\xF6llig) <ROOT> <8:AUX/root>(ist)\
    \ <9:ADP/case>(f\xFCr) <10:DET/det>(die) <11:ADJ/amod>(betroffene) <12:NOUN/obl>(Person)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:AUX/cop>(war) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(erst) <6:ADV/advmod>(mal) <7:ADJ/root>(richtig) <ROOT> <8:ADJ/root>(schockiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - advmod
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - cop
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cc
  sentence: "<1:ADJ/advmod>(Vorget\xE4uscht) <2:ADJ/root>(richtig) <ROOT> <3:ADV/advmod>(so)\
    \ <4:CCONJ/cc>(und) <5:PRON/nsubj>(das) <6:AUX/cop>(war) <7:ADV/advmod>(dann)\
    \ <8:ADV/advmod>(halt) <9:ADV/advmod>(einfach) <10:VERB/root>(zur\xFCckzukriegen)\
    \ <11:CCONJ/cc>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(eine) <2:NOUN/root>(Schwangerschaft) <3:ADP/case>(durch)\
    \ <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/nmod>(Zweifel) <7:PRON/nsubj>(was)\
    \ <8:ADV/advmod>(halt) <ROOT> <9:ADP/case>(f\xFCr) <10:DET/det:poss>(meinen) <11:NOUN/obl>(K\xF6\
    rper) <12:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:AUX/cop>(sind) <3:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 4
    - parataxis
  - !!python/tuple
    - 9
    - 4
    - compound:prt
  sentence: "<1:DET/nsubj>(Jeder) <2:ADP/case>(aus) <3:PROPN/nmod>(Marzahn) <4:VERB/root>(wei\xDF\
    ) <6:PROPN/nsubj>(RB) <7:AUX/cop>(ist) <8:DET/parataxis>(viel) <9:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - appos
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(alles) <4:NOUN/root>(Wimperntusche)
    <5:ADV/advmod>(ja) <7:NOUN/appos>(Ach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 13
    - nsubj
  - !!python/tuple
    - 5
    - 13
    - aux
  - !!python/tuple
    - 6
    - 13
    - nsubj
  - !!python/tuple
    - 7
    - 13
    - aux
  - !!python/tuple
    - 8
    - 13
    - obj
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:DET/det>(Keine) <2:NOUN/root>(Ahnung) <3:ADP/case>(wie) <ROOT> <4:NOUN/nsubj>(Bondage)
    <5:AUX/aux>(ist) <6:PRON/nsubj>(ich) <7:AUX/aux>(werde) <8:PRON/obj>(es) <9:ADV/advmod>(jetzt)
    <10:ADP/case>(in) <11:DET/det:poss>(ihrer) <12:NOUN/obl>(Wohnung) <13:VERB/root>(erleben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - acl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - mark
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - obj
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - nmod
  sentence: "<1:ADV/advmod>(Ehrlich) <2:VERB/acl>(gesagt) <3:VERB/root>(sieht) <4:PRON/nsubj>(es)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(mich) <7:ADV/advmod>(manchmal) <8:ADV/advmod>(auch)\
    \ <9:ADV/advmod>(schon) <ROOT> <10:ADP/root>(aus) <11:SCONJ/mark>(wenn) <12:PRON/nsubj>(ich)\
    \ <13:PRON/obj>(das) <14:ADP/case>(bei) <15:DET/nmod>(anderen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:VERB/root>(auff\xE4llt) <3:PRON/nsubj>(sie) <4:AUX/cop>(sind)\
    \ <5:ADV/advmod>(sehr) <6:ADJ/xcomp>(jung) <7:CCONJ/cc>(und) <8:ADJ/conj>(offenbar)\
    \ <ROOT> <9:ADJ/root>(gewaltbereit)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Mittlerweile) <2:AUX/cop>(ist) <3:PRON/nsubj>(es) <4:ADV/advmod>(nimmer)
    <5:ADV/advmod>(ganz) <6:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: "<1:CCONJ/cc>(Aber) <2:ADJ/advmod>(fr\xFCher) <3:AUX/root>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(schon) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  sentence: "<1:AUX/root>(w\xE4ren) <2:DET/det>(die) <3:NOUN/nsubj>(Texte) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - ccomp
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(wer) <3:AUX/cop>(ist) <4:PROPN/nsubj>(Wu)
    <6:NOUN/flat>(Tang) <7:DET/det>(der) <8:NOUN/ccomp>(Spast) <10:PROPN/nsubj>(Jewlz)
    <11:VERB/root>(rappt) <12:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(ich) <3:PART/advmod>(nicht) <4:VERB/root>(glauben)
    <5:AUX/aux>(kann) <6:SCONJ/mark>(wie) <ROOT> <7:PRON/nsubj>(es) <8:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - nsubj
  sentence: <1:ADV/advmod>(Selbst) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:ADV/advmod>(stotter)
    <6:VERB/root>(komm) <8:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - dep
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/dep>(Projekt) <2:ADP/case>(aus) <3:PROPN/nmod>(R\xF6delheim)\
    \ <4:VERB/root>(kommt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:VERB/root>(kommen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:VERB/root>(Kommt) <2:PRON/nsubj>(er) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:VERB/root>(hab'n) <3:PRON/obj>(uns) <4:ADP/compound:prt>(zu)
    <ROOT> <5:VERB/root>(verstanden)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <2:ADV/advmod>(Gestern) <3:NOUN/nmod>(Nacht) <4:AUX/cop>(war) <5:ADJ/root>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - mark
  - !!python/tuple
    - 10
    - 17
    - cop
  - !!python/tuple
    - 11
    - 17
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 17
    - nmod
  - !!python/tuple
    - 14
    - 17
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - cop
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 22
    - case
  - !!python/tuple
    - 19
    - 22
    - det:poss
  - !!python/tuple
    - 20
    - 22
    - compound
  - !!python/tuple
    - 22
    - 17
    - nmod
  sentence: "<1:ADV/advmod>(ganz) <2:ADV/advmod>(unten) <3:ADV/advmod>(damit) <4:DET/det>(der)\
    \ <5:NOUN/nsubj>(n\xE4chste) <6:PRON/obj>(sich) <7:VERB/root>(denkt) <8:NOUN/obj>(Alter)\
    \ <9:ADP/mark>(wie) <ROOT> <10:AUX/cop>(war) <11:PRON/nsubj>(der) <12:ADP/case>(vor)\
    \ <13:PRON/nmod>(dir) <14:PRON/nsubj>(das) <15:AUX/cop>(ist) <16:ADV/advmod>(super)\
    \ <17:ADJ/root>(wichtig) <18:ADP/case>(f\xFCr) <19:DET/det:poss>(dein) <20:NOUN/compound>(Ego)\
    \ <22:NOUN/nmod>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 8
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - cop
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(es)
    <5:ADV/advmod>(einfach) <6:ADV/advmod>(nur) <ROOT> <7:ADV/advmod>(wie) <8:ADJ/root>(durchgetaktet)
    <9:DET/det:poss>(ihr) <10:NOUN/nsubj>(Leben) <11:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADP/case>(f\xFC\
    r) <5:PRON/obl>(mich) <ROOT> <6:CCONJ/cc>(aber) <7:ADV/advmod>(halt) <8:PART/advmod>(nicht)\
    \ <9:ADV/root>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Doch) <3:PRON/nsubj>(Das) <4:AUX/root>(ist) <ROOT> <5:ADJ/root>(pr\xE4\
    zise)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/root>(als) <2:SCONJ/mark>(ob) <3:PRON/nsubj>(das) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(mich) <ROOT> <6:DET/root>(viel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - obj
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(es) <4:VERB/root>(macht)
    <5:DET/obj>(einem) <6:ADV/advmod>(irgendwie) <7:NOUN/obj>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  sentence: <1:AUX/root>(Ist) <ROOT> <2:VERB/root>(macht) <3:DET/obj>(einem) <4:ADV/advmod>(irgendwie)
    <5:NOUN/obj>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 5
    - ccomp
  - !!python/tuple
    - 13
    - 12
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(\xFCberfordert)\
    \ <4:CCONJ/cc>(und) <5:VERB/conj>(wei\xDF) <6:ADV/advmod>(auch) <7:ADV/advmod>(gar)\
    \ <8:PART/advmod>(nicht) <9:PRON/obj>(was) <10:PRON/nsubj>(wir) <11:ADV/advmod>(irgendwie)\
    \ <12:VERB/ccomp>(machen) <13:AUX/aux>(sollen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wenn's) <2:PART/advmod>(nicht) <3:VERB/root>(klappt) <4:CCONJ/cc>(und)
    <5:PRON/conj>(ich) <ROOT> <6:ADP/case>(an) <7:DET/det>(dem) <8:NOUN/obl>(Arsch)
    <9:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:DET/det:poss>(dein) <3:NOUN/nsubj>(Lauf) <4:ADV/advmod>(auch)
    <5:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 7
    - expl
  - !!python/tuple
    - 7
    - 11
    - aux:pass
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Er) <2:AUX/aux>(hat) <3:PRON/obj>(uns) <4:VERB/root>(erz\xE4\
    hlt) <5:ADP/mark>(wie) <ROOT> <6:PRON/expl>(es) <7:AUX/aux:pass>(ist) <8:ADV/advmod>(da)\
    \ <9:ADV/advmod>(oben) <10:PART/mark>(zu) <11:VERB/root>(k\xE4mpfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - parataxis
  - !!python/tuple
    - 8
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(versuche) <3:PRON/obj>(das) <4:ADV/advmod>(gerade)
    <5:ADV/advmod>(mal) <6:PRON/nsubj>(das) <7:AUX/parataxis>(ist) <8:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(auch) <4:ADV/advmod>(schon)
    <ROOT> <5:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - det
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <ROOT> <3:SCONJ/root>(dass) <4:DET/det>(die)
    <5:ADP/case>(mit) <6:DET/det>(einem) <7:ADJ/amod>(riesigen) <8:NOUN/obl>(Wagen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - flat
  - !!python/tuple
    - 12
    - 14
    - aux
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(Damit) <2:AUX/cop>(w\xE4re) <3:PROPN/nsubj>(Omega) <4:ADV/advmod>(sogar)\
    \ <5:ADJ/root>(\xE4lter) <6:ADP/case>(als) <7:PROPN/nmod>(Hunter) <8:PROPN/flat>(Tech)\
    \ <9:CCONJ/cc>(und) <10:PROPN/conj>(Wrecker) <11:PROPN/flat>(Was) <ROOT> <12:AUX/aux>(w\xE4\
    re) <13:PRON/nsubj>(Was) <14:VERB/root>(meint)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 4
    - advmod
  - !!python/tuple
    - 14
    - 16
    - mark
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 4
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(Bisher) <4:VERB/root>(gingen)
    <5:ADV/advmod>(ja) <6:DET/det>(viele) <7:NOUN/nsubj>(Spekulationen) <8:ADP/case>(zu)
    <9:DET/det>(der) <10:NOUN/nmod>(Zukunft) <11:DET/det>(der) <12:NOUN/nmod>(Serie)
    <13:ADV/advmod>(darum) <14:SCONJ/mark>(dass) <15:DET/det>(das) <16:NOUN/nsubj>(Bad)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - compound:prt
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 15
    - mark
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - ccomp
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(wirklich) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(nur) <6:DET/advmod>(viel) <7:ADP/compound:prt>(zu) <ROOT> <8:ADV/advmod>(Also)
    <9:PRON/nsubj>(ich) <10:VERB/root>(dachte) <11:ADV/advmod>(wirklich) <12:SCONJ/mark>(dass)
    <13:AUX/cop>(ist) <14:ADV/advmod>(nur) <15:NOUN/ccomp>(Fake)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - det
  - !!python/tuple
    - 10
    - 12
    - amod
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 4
    - ccomp
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 12
    - nmod
  - !!python/tuple
    - 16
    - 12
    - cop
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/root>(so) <ROOT> <3:PRON/nsubj>(das) <4:VERB/root>(klingt)\
    \ <5:PRON/nsubj>(was) <6:PRON/nsubj>(f\xC3\xBCr) <7:PROPN/nsubj>(Tschetschenien)\
    \ <8:ADV/advmod>(schon) <9:DET/det>(der) <10:ADJ/amod>(zweite) <11:ADJ/amod>(furchtbare)\
    \ <12:NOUN/ccomp>(Krieg) <13:ADP/case>(in) <14:ADJ/amod>(k\xC3\xBCrzester) <15:NOUN/nmod>(Zeit)\
    \ <16:AUX/cop>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADP/case>(nach) <4:PROPN/obl>(Corona)\
    \ <ROOT> <5:DET/det>(die) <6:ADJ/amod>(ersten) <7:NOUN/root>(Eins\xE4tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:AUX/root>(ist) <3:PRON/nsubj>(das) <4:PART/advmod>(nicht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 2
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Daran) <2:VERB/root>(festzuhalten) <3:ADP/case>(an) <4:PRON/obl>(sich)
    <5:DET/advmod>(selber) <6:PART/mark>(zu) <7:VERB/xcomp>(glauben) <8:PRON/nsubj>(das)
    <9:AUX/parataxis>(ist) <10:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - det
  - !!python/tuple
    - 2
    - 6
    - compound
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:DET/det>(Den) <2:PROPN/compound>(Schalke) <4:NOUN/compound>(Fu\xDF\
    baller) <6:NOUN/obj>(Traum) <7:VERB/root>(hat) <8:DET/det>(der) <9:NOUN/nsubj>(Fucker)\
    \ <10:PRON/obj>(sich) <ROOT> <11:VERB/root>(verbaut)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Jahrelang) <2:VERB/root>(hat) <3:PRON/nsubj>(er) <4:PRON/obj>(sich)
    <ROOT> <5:VERB/root>(gestaut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(war) <ROOT> <3:ADJ/root>(disappointed)
    <5:PROPN/appos>(Wack)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <4:PRON/obj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/root>(Weil) <2:PRON/nsubj>(ich) <3:ADP/compound:prt>(zu) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(diese) <6:NOUN/obl>(Welt) <7:AUX/root>(bin)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - appos
  sentence: <1:INTJ/advmod>(ick) <2:INTJ/root>(rooche) <3:ADP/case>(bei) <4:DET/det>(dem)
    <5:NOUN/nmod>(Tanken) <7:PRON/nsubj>(Ich) <8:AUX/cop>(bin) <9:ADJ/appos>(voll)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(Das) <3:VERB/root>(bricht) <4:NOUN/obj>(Welten)
    <5:ADP/case>(auf) <6:ADV/advmod>(so) <ROOT> <7:AUX/cop>(ist) <8:DET/det>(dieses)
    <9:NOUN/root>(Spiel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 3
    - obl
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:PRON/nsubj>(die) <3:VERB/root>(halten)\
    \ <4:ADV/advmod>(einfach) <5:DET/det>(ein) <6:NOUN/obj>(Fahrzeug) <7:ADP/case>(an)\
    \ <8:NUM/nummod>(drei) <9:NOUN/obl>(T\xE4ter)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  sentence: <1:PRON/nsubj>(Dir) <2:AUX/cop>(ist) <3:DET/det>(der) <4:NOUN/root>(Beat)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 12
    - 10
    - appos
  sentence: "<1:DET/det>(Die) <2:PROPN/nsubj>(Day) <4:NOUN/flat>(Date) <5:VERB/root>(f\xFC\
    hlt) <6:PRON/obj>(sich) <7:ADP/case>(auf) <8:DET/det>(jeden) <9:NOUN/obl>(Fall)\
    \ <ROOT> <10:ADP/root>(an) <12:PROPN/appos>(Ohh)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Sie) <2:VERB/root>(sagen) <3:PRON/nsubj>(ich) <4:VERB/conj>(w\xE4\
    r') <5:ADV/advmod>(ja) <6:ADV/advmod>(so) <ROOT> <7:ADJ/root>(arrogant)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Erst) <2:VERB/root>(bist) <3:PRON/nsubj>(du) <4:ADV/advmod>(ganz)
    <5:ADV/advmod>(oben) <6:CCONJ/cc>(und) <7:ADV/advmod>(danach) <8:ADV/advmod>(dann)
    <ROOT> <9:ADP/case>(an) <10:DET/det>(dem) <11:NOUN/root>(Arsch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(wollt) <3:PRON/obj>(es) <4:ADV/advmod>(so)
    <ROOT> <6:X/root>(Eh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(wollt) <3:PRON/obj>(es) <4:ADV/advmod>(so)
    <ROOT> <6:X/root>(Eh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(das) <2:PROPN/nsubj>(Ot) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(das) <2:PROPN/nsubj>(Ot) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 9
    - dep
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(interessiert) <3:ADV/advmod>(hier) <4:DET/det>(keine)
    <5:NOUN/obj>(Sau) <6:ADV/advmod>(mehr) <7:ADP/advmod>(wie) <ROOT> <8:PRON/nsubj>(du)
    <9:AUX/root>(warst) <11:X/dep>(puto)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:ADV/advmod>(auch) <3:ADJ/root>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(deshalb) <2:VERB/root>(trifft) <3:PRON/nsubj>(es) <4:PRON/obj>(mich)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(fand) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(offiziell) <7:DET/det>(keine) <8:NOUN/obj>(Tasche)
    <9:VERB/ccomp>(kauft) <10:CCONJ/cc>(sondern) <11:NOUN/conj>(Ohrringe)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - acl
  - !!python/tuple
    - 11
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(mal)
    <5:DET/det>(ein) <6:NOUN/root>(Moment) <7:ADV/advmod>(wo) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(so) <10:VERB/acl>(dachte) <11:ADV/advmod>(Ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  sentence: <1:PROPN/nsubj>(Ooohh) <2:ADV/advmod>(sogar) <3:ADV/advmod>(innen) <4:ADV/advmod>(drinnen)
    <5:AUX/root>(ist) <6:PRON/nsubj>(es) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 8
    - xcomp
  sentence: <1:PRON/nsubj>(Die) <2:AUX/cop>(sind) <3:ADV/advmod>(echt) <4:ADV/root>(so)
    <ROOT> <5:ADV/advmod>(nah) <6:ADV/advmod>(hier) <7:PRON/nsubj>(Ich) <8:VERB/root>(finde)
    <9:PRON/nsubj>(es) <10:ADV/advmod>(einfach) <11:ADV/advmod>(nur) <12:ADV/advmod>(mega)
    <13:ADJ/xcomp>(gruselig)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <2:X/root>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Man) <3:VERB/root>(sp\xFCrt) <4:PRON/obj>(das) <5:ADJ/advmod>(total)\
    \ <ROOT> <6:ADP/case>(in) <7:DET/det>(der) <8:NOUN/root>(Hand)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT> <4:SCONJ/root>(dass)
    <5:ADV/advmod>(schon) <6:ADP/case>(nach) <7:NUM/nummod>(5-) <8:NOUN/nmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 7
    - parataxis
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - obl
  - !!python/tuple
    - 15
    - 12
    - compound:prt
  sentence: <ROOT> <1:ADV/advmod>(wow) <2:ADV/advmod>(so) <3:DET/det>(ein) <4:NOUN/nsubj>(index)
    <5:AUX/aux>(muss) <6:ADV/advmod>(ja) <7:ADJ/root>(riesig) <8:AUX/cop>(sein) <9:ADV/advmod>(ja)
    <10:DET/det>(ein) <11:NOUN/nsubj>(index) <12:VERB/parataxis>(besteht) <13:ADP/case>(aus)
    <14:NOUN/obl>(milliarden) <15:ADP/compound:prt>(von)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 1
    - xcomp
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:VERB/root>(unterziehen) <2:ADP/case>(um) <3:DET/det>(die) <4:NOUN/obl>(Erreger)\
    \ <5:VERB/xcomp>(abzut\xF6ten) <6:ADV/advmod>(Ganz) <7:ADJ/xcomp>(sch\xF6n) <ROOT>\
    \ <8:CCONJ/cc>(und) <9:ADV/advmod>(auch) <10:ADV/advmod>(irgendwie) <11:ADJ/root>(paradox)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADV/advmod>(ja) <ROOT> <4:ADP/advmod>(aus)\
    \ <6:NOUN/nsubj>(Danke) <7:ADJ/root>(sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - mark
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - obj
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - conj
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(wir)
    <4:NOUN/obj>(Menschen) <5:ADV/advmod>(dazu) <6:ADP/case>(in) <7:DET/det>(der)
    <8:NOUN/obl>(Lage) <9:VERB/root>(sind) <10:CCONJ/cc>(Aber) <11:ADV/advmod>(wozu)
    <12:DET/det>(das) <13:NOUN/conj>(Ganze)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - mark
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 9
    - advcl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 9
    - appos
  - !!python/tuple
    - 16
    - 15
    - nsubj
  sentence: "<1:AUX/cop>(Ist) <2:ADV/advmod>(einfach) <3:ADJ/amod>(guter) <4:NOUN/root>(Gespr\xE4\
    chspartner) <5:PRON/nsubj>(wir) <6:VERB/parataxis>(reden) <7:PART/advmod>(nicht)\
    \ <8:ADV/advmod>(so) <ROOT> <9:DET/root>(viel) <10:CCONJ/cc>(aber) <11:SCONJ/mark>(wenn)\
    \ <12:PRON/nsubj>(wir) <13:VERB/advcl>(reden) <14:ADV/advmod>(dann) <15:VERB/appos>(reden)\
    \ <16:PRON/nsubj>(wir)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:PROPN/nsubj>(Johnny) <2:VERB/root>(macht) <3:DET/det>(den) <4:NOUN/obj>(Beat)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(damals) <2:VERB/root>(fing) <3:DET/det:poss>(mein) <4:NOUN/nsubj>(Alter)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - xcomp
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 3
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: <1:ADV/advmod>(Wow) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <4:ADV/advmod>(auch)
    <5:DET/advmod>(selber) <6:ADV/advmod>(noch) <7:DET/det>(kein) <8:NOUN/obj>(Kind)
    <9:VERB/xcomp>(bekommen) <10:PRON/nsubj>(ich) <11:VERB/conj>(finds) <12:ADV/advmod>(total)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:AUX/aux>(Lass) <2:PRON/obj>(dich) <3:ADP/case>(gegen) <4:DET/det>(die)
    <5:NOUN/obl>(Wand) <6:VERB/root>(rennen) <7:SCONJ/mark>(wenn) <8:PRON/nsubj>(du)
    <9:ADP/compound:prt>(auf) <ROOT> <10:VERB/root>(machst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: <1:ADV/advmod>(Also) <2:NOUN/obj>(Blech) <3:VERB/root>(geraucht) <5:PROPN/obj>(Wow)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux
  sentence: <2:PROPN/dep>(Berit) <4:PRON/nsubj>(Ich) <5:VERB/root>(finde) <6:PRON/obj>(es)
    <ROOT> <7:SCONJ/mark>(dass) <8:PRON/nsubj>(das) <9:ADV/advmod>(jetzt) <10:ADV/advmod>(so)
    <11:ADV/advmod>(schnell) <12:VERB/root>(funktioniert) <13:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 2
    - obl
  - !!python/tuple
    - 11
    - 12
    - acl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:VERB/root>(k\xF6nnten) <3:PRON/nsubj>(wir) <4:ADV/advmod>(so)\
    \ <5:PRON/obj>(was) <6:ADP/case>(in) <7:NOUN/obl>(Zukunft) <8:ADP/case>(in) <9:DET/det>(dem)\
    \ <10:NOUN/obl>(Vorhinein) <ROOT> <11:VERB/acl>(wegfiltern) <12:VERB/root>(lassen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - mark
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 13
    - mark
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 7
    - ccomp
  - !!python/tuple
    - 14
    - 15
    - cc
  - !!python/tuple
    - 15
    - 13
    - advmod
  sentence: <1:ADJ/root>(vehement) <2:AUX/cop>(bin) <3:CCONJ/cc>(und) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(so) <ROOT> <7:AUX/root>(bin) <8:CCONJ/cc>(und)
    <9:SCONJ/mark>(das) <10:PRON/nsubj>(es) <11:ADV/advmod>(irgendwie) <12:PART/advmod>(nicht)
    <13:VERB/ccomp>(geht) <14:CCONJ/cc>(und) <15:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 3
    - conj
  - !!python/tuple
    - 13
    - 12
    - obj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:PRON/nsubj>(er) <3:VERB/root>(trifft) <4:DET/det>(den)\
    \ <5:NOUN/obj>(Punkt) <6:PRON/obj>(den) <7:PRON/nsubj>(du) <8:VERB/acl>(treffen)\
    \ <9:AUX/aux>(willst) <10:CCONJ/cc>(und) <11:PRON/nsubj>(das) <12:VERB/conj>(f\xFC\
    hlt) <13:PRON/obj>(sich) <14:ADV/advmod>(sau) <ROOT> <15:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  - !!python/tuple
    - 9
    - 13
    - cc
  - !!python/tuple
    - 10
    - 13
    - nsubj
  - !!python/tuple
    - 11
    - 13
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 4
    - conj
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:CCONJ/cc>(oder) <2:ADV/advmod>(so) <3:ADV/advmod>(dann) <4:VERB/root>(kriegst)
    <5:PRON/nsubj>(du) <6:PRON/obj>(es) <7:ADV/advmod>(halt) <8:VERB/xcomp>(gespiegelt)
    <9:CCONJ/cc>(und) <10:PRON/nsubj>(das) <11:AUX/cop>(ist) <12:ADV/advmod>(halt)
    <13:PRON/conj>(das) <14:PRON/nsubj>(was) <ROOT> <15:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(Find) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(nannte) <3:PRON/nsubj>(es) <4:ADV/advmod>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - dep
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <2:NOUN/dep>(Mann) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - ccomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/expl>(Es) <2:VERB/root>(sieht) <3:ADP/compound:prt>(aus) <4:SCONJ/mark>(als)\
    \ <5:AUX/ccomp>(w\xFCrde) <6:PRON/nsubj>(jemand) <7:PRON/nsubj>(jemanden) <8:ADJ/ccomp>(grad)\
    \ <ROOT> <9:VERB/root>(angreifen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(total)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:AUX/aux>(Hab) <2:PRON/nsubj>(ich) <3:ADV/advmod>(schon) <4:VERB/root>(gesagt)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(ich) <7:NOUN/obj>(s) <ROOT> <8:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/root>(dass)
    <5:ADV/advmod>(genau) <6:DET/det>(dieser) <7:NOUN/nmod>(Moment) <8:ADV/advmod>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADV/advmod>(wie)
    <5:ADV/advmod>(schnell) <6:SCONJ/mark>(das) <7:DET/nsubj>(alles) <8:VERB/root>(geht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PART/advmod>(Nicht) <2:ADV/advmod>(mehr) <3:ADV/advmod>(ganz) <4:ADV/root>(so)
    <ROOT> <5:SCONJ/mark>(wie) <6:PRON/nsubj>(das) <7:ADV/advmod>(vorher) <8:VERB/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - compound
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(also) <2:PRON/root>(was) <ROOT> <3:NOUN/nsubj>(Luxuri\xF6\
    ses) <4:ADP/case>(f\xFCr) <5:PROPN/compound>(Kaiser) <6:NOUN/nmod>(K\xF6niginnen)\
    \ <7:NOUN/root>(F\xFCrsten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: <1:ADJ/amod>(Okay) <2:PRON/nsubj>(wir) <3:AUX/cop>(sind) <4:DET/det>(ein)
    <5:ADV/advmod>(bisschen) <6:ADJ/root>(abgeschweift) <7:NOUN/nsubj>(Diamanten)
    <8:AUX/cop>(sind) <9:ADJ/conj>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 2
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:DET/det>(Das) <2:NOUN/root>(Ziel) <3:DET/det>(dieser) <4:NOUN/nmod>(Strategien)
    <5:AUX/cop>(war) <6:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(ja)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:ADV/advmod>(denn)
    <5:ADV/root>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(w\xE4r) <3:ADV/advmod>(schon) <4:ADJ/root>(richtig)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 7
    - det:poss
  sentence: "<1:PRON/nsubj>(Ich) <2:ADV/advmod>(pers\xF6nlich) <3:VERB/root>(fand\u2019\
    s) <4:ADJ/advmod>(richtig) <ROOT> <5:ADP/case>(wie) <6:DET/det>(viel) <7:NOUN/root>(Zeit)\
    \ <8:CCONJ/cc>(und) <9:NOUN/conj>(Arbeit) <10:ADP/case>(in) <11:DET/det:poss>(seine)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 9
    - obl
  - !!python/tuple
    - 3
    - 9
    - aux:pass
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(mich) <3:AUX/aux:pass>(war) <4:DET/det>(das)\
    \ <5:NOUN/nsubj>(Krasseste) <6:ADV/advmod>(da) <7:ADV/advmod>(dran) <8:PART/mark>(zu)\
    \ <9:VERB/root>(sehen) <10:SCONJ/punct>(wie) <ROOT> <11:DET/det>(die) <12:NOUN/root>(Menschen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(stinkt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - ccomp
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - acl
  sentence: "<1:ADV/advmod>(Dann) <2:ADJ/root>(ganz) <ROOT> <3:ADV/advmod>(extrem)\
    \ <4:NOUN/root>(\xC4ngste) <5:SCONJ/mark>(dass) <6:NOUN/nsubj>(Leute) <7:VERB/ccomp>(wissen)\
    \ <8:PRON/obj>(was) <9:PRON/nsubj>(ich) <10:VERB/acl>(denke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(dass)\
    \ <5:PRON/nsubj>(ich) <6:ADP/case>(von) <7:PROPN/obl>(Rabea) <8:VERB/root>(geh\xF6\
    rt) <9:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(es) <4:ADV/advmod>(sehr)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(du) <7:PRON/obj>(ihn) <8:ADV/advmod>(wirklich)
    <9:VERB/root>(gefragt) <10:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nein) <2:PRON/nsubj>(das) <3:AUX/cop>(w\xE4re) <4:ADP/root>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/root>(Was) <ROOT> <2:AUX/root>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(Sieht) <2:PRON/nsubj>(das) <ROOT> <3:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - flat
  sentence: <1:ADP/case>(in) <2:DET/det>(der) <3:NOUN/root>(Zubereitung) <5:PROPN/flat>(Ach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:AUX/root>(war) <4:ADV/advmod>(wirklich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - conj
  sentence: <1:X/root>(Ach) <ROOT> <2:PRON/nsubj>(der) <3:AUX/cop>(ist) <4:ADJ/root>(schwanger)
    <5:PRON/nsubj>(der) <6:ADP/case>(bei) <7:PRON/obl>(dem) <8:AUX/aux>(hat) <9:NOUN/obj>(s)
    <10:ADV/advmod>(gleich) <11:VERB/conj>(geklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj:pass
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux:pass
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:DET/det>(die)
    <5:NOUN/nsubj:pass>(Umwelt) <6:VERB/root>(belastet) <7:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - mark
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT> <4:NOUN/nsubj>(ne)
    <5:DET/det>(Die) <6:NOUN/nsubj>(Leute) <7:VERB/root>(haben) <8:NOUN/obj>(Megabock)
    <9:ADV/mark>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - obl:arg
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - conj
  - !!python/tuple
    - 13
    - 14
    - cc
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:AUX/aux>(W\xFCrde) <2:PRON/obl:arg>(ihm) <3:ADP/case>(in) <4:DET/det>(die)\
    \ <5:NOUN/obl>(Arme) <6:VERB/root>(fallen) <7:SCONJ/mark>(weil) <8:PRON/nsubj>(es)\
    \ <9:AUX/cop>(ist) <10:ADV/advmod>(halt) <11:ADJ/advmod>(einfacher) <12:ADJ/conj>(total)\
    \ <ROOT> <13:CCONJ/cc>(Und) <14:ADJ/root>(wahrscheinlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - xcomp
  sentence: "<1:PRON/nsubj>(das) <2:AUX/root>(w\xE4r) <ROOT> <3:PRON/nsubj>(Das) <4:AUX/aux>(w\xFC\
    rde) <5:PRON/nsubj>(ich) <6:VERB/root>(glaube) <7:PRON/nsubj>(ich) <8:ADV/advmod>(gerade)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <11:ADV/advmod>(richtig) <12:AUX/xcomp>(wollen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Frauen) <3:VERB/root>(dachten) <4:PRON/obj>(sich)
    <5:ADV/advmod>(wohl) <ROOT> <6:ADP/case>(wie) <7:ADJ/root>(praktisch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(Mir) <2:AUX/cop>(ist) <3:ADV/advmod>(mal) <4:VERB/root>(aufgefallen)
    <5:ADV/advmod>(so) <6:NOUN/nsubj>(Busfahrer) <7:VERB/parataxis>(haben) <8:ADV/advmod>(irgendwie)
    <9:ADV/advmod>(immer) <10:ADV/advmod>(so) <11:ADV/advmod>(richtig) <12:PRON/obj>(die)
    <ROOT> <13:ADJ/root>(schlechte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - cc
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - aux
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 6
    - conj
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - aux
  sentence: "<1:VERB/root>(bekommen) <2:PRON/nsubj>(ich) <3:VERB/conj>(fande) <4:PRON/obj>(es)\
    \ <5:ADV/advmod>(wirklich) <ROOT> <6:ADJ/root>(ekelhaft) <7:CCONJ/cc>(und) <8:ADV/advmod>(dann)\
    \ <9:AUX/aux>(habe) <10:PRON/nsubj>(ich) <11:PRON/obj>(es) <12:VERB/conj>(\xFC\
    berlegt) <13:PRON/nsubj>(Was) <14:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  sentence: <ROOT> <1:VERB/root>(wahrgenommen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - xcomp
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - amod
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 3
    - advmod
  sentence: "<1:VERB/root>(Lasst) <2:ADV/advmod>(mal) <3:VERB/xcomp>(anfangen) <4:ADP/case>(von)\
    \ <5:ADJ/amod>(unspektakul\xE4r) <6:ADP/case>(bis) <7:ADP/case>(an) <8:DET/det>(dem)\
    \ <9:NOUN/obl>(Ende) <10:ADV/advmod>(ziemlich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <4:ADV/advmod>(noch) <5:ADV/advmod>(nie)
    <6:ADV/advmod>(so) <ROOT> <7:VERB/root>(geliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(War) <2:ADV/advmod>(noch) <3:ADV/advmod>(nie) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - dep
  sentence: <1:NOUN/obj>(Nachschub) <2:PART/mark>(zu) <3:VERB/root>(bekommen) <5:X/dep>(Ah)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 5
    - nummod
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:ADP/case>(In) <2:NUM/nummod>(zwei) <3:NOUN/compound>(Krankenhaus) <5:NOUN/root>(Apotheken)
    <6:ADV/advmod>(Schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(er) <2:AUX/cop>(w\xE4re) <3:ADV/root>(anders) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - conj
  sentence: <1:SCONJ/mark>(dass) <2:PRON/root>(du) <ROOT> <3:AUX/root>(bist) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(ich) <6:PRON/obj>('s) <7:PART/advmod>(nicht) <8:AUX/conj>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Hass) <3:VERB/root>(kommt) <4:ADV/advmod>(so)
    <ROOT> <5:ADP/case>(wie) <6:DET/det>(der) <7:NOUN/root>(Hass) <8:ADP/case>(in)
    <9:PROPN/nmod>(Somalia)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:ADV/advmod>(Manchmal) <2:VERB/root>(laber) <4:PRON/nsubj>(ich) <5:ADJ/advmod>(einfach)
    <6:CCONJ/cc>(und) <7:VERB/conj>(komme) <8:ADV/advmod>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(in)
    <5:NOUN/root>(eile)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj:pass
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux:pass
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(weil) <4:PRON/nsubj:pass>(man)
    <5:VERB/root>(ausgeliefert) <6:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(bleibst) <ROOT> <3:CCONJ/cc>(und) <4:ADJ/root>(fertig)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(bleibst) <ROOT> <3:CCONJ/cc>(und) <4:ADJ/root>(fertig)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Von) <2:PRON/nmod>(euch) <3:AUX/cop>(ist) <4:DET/root>(jeder)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(will) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <ROOT> <5:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 1
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 1
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - xcomp
  sentence: "<1:INTJ/root>(Antwortest) <2:ADP/case>(mit) <3:NUM/nummod>(drei) <4:NOUN/nmod>(Versen)\
    \ <5:ADP/case>(auf) <6:NUM/nummod>(zwei) <7:NOUN/nmod>(Zeilen) <8:CCONJ/cc>(und)\
    \ <9:VERB/conj>(h\xE4ltst) <10:PRON/obj>(Dich) <11:ADP/xcomp>(f\xFCr) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(der) <2:ADV/advmod>(so) <ROOT> <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Doch) <ROOT> <2:AUX/cop>(sind) <3:ADV/advmod>(nur) <4:DET/det>(die)
    <5:DET/root>(andern)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(zu) <ROOT> <3:PROPN/root>(Ay)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Heute) <2:VERB/root>(rap) <3:PRON/nsubj>(ich) <ROOT> <4:ADP/case>(auf)
    <5:PROPN/root>(Beats)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Nike) <2:PROPN/flat>(Air) <3:PROPN/flat>(Max) <4:AUX/cop>(sind)
    <5:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:PRON/root>(das) <4:SCONJ/mark>(denn)\
    \ <5:PROPN/nsubj>(Bj\xF6rn) <6:DET/det>(vielen) <7:NOUN/nmod>(Dank)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADP/case>(in) <4:NOUN/root>(Form)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:ADV/root>(So) <ROOT> <2:AUX/root>(ist) <3:PRON/nsubj>(es) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Zweifelsfall) <7:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - nsubj
  - !!python/tuple
    - 9
    - 3
    - mark
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 3
    - advmod
  - !!python/tuple
    - 16
    - 18
    - cc
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/obl:arg>(mir) <3:VERB/root>(kommen) <4:ADV/advmod>(halt)\
    \ <5:ADV/advmod>(auch) <6:ADV/advmod>(schon) <7:DET/det>(die) <8:NOUN/nsubj>(Tr\xE4\
    nen) <9:SCONJ/mark>(weil) <10:PRON/nsubj>(ich) <11:PRON/nsubj>(es) <12:ADV/advmod>(\xE4\
    hnlich) <13:PART/advmod>(nicht) <14:ADV/advmod>(so) <15:ADJ/advmod>(ganz) <ROOT>\
    \ <16:CCONJ/cc>(aber) <17:ADJ/advmod>(\xE4hnlich) <18:VERB/root>(kenne)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(man) <3:VERB/root>(merkt) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(auch) <6:ADP/mark>(wie) <ROOT> <7:PRON/nsubj>(ihr) <8:ADV/advmod>(da)
    <9:VERB/root>(getroffen) <10:AUX/cop>(seid)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(bin) <2:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(blass) <2:PROPN/appos>(mceet) <3:ADP/compound:prt>(um) <ROOT>
    <4:PART/mark>(zu) <5:VERB/root>(verdienen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(deine) <3:NOUN/nsubj>(Freunde) <4:ADV/advmod>(da)
    <5:AUX/root>(sind) <6:ADV/advmod>(auch) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:ADV/root>(schei\xDF) <ROOT> <3:ADV/root>(drauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(gehe) <3:ADV/advmod>(raus) <4:ADP/case>(zu)\
    \ <5:DET/det>(dem) <6:NOUN/obl>(klau'n) <7:SCONJ/mark>(denn) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(schei\xDF) <ROOT> <10:PRON/nsubj>(was) <11:ADV/root>(drauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(f\xE4hrst) <3:ADV/advmod>(hier) <4:DET/det>(den)\
    \ <5:ADJ/amod>(dicksten) <6:NOUN/obj>(Sieb'ner) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(schei\xDF) <ROOT> <10:ADV/root>(drauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(komm) <3:ADV/advmod>(wieder) <4:ADP/case>(auf)\
    \ <5:DET/det>(den) <6:NOUN/obl>(Index) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich) <9:ADV/advmod>(schei\xDF\
    ) <ROOT> <10:ADV/root>(drauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(du) <3:VERB/root>(riechst) <4:ADV/advmod>(so)
    <ROOT> <5:ADP/case>(aus) <6:DET/det>(dem) <7:NOUN/root>(Maul)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:DET/det:poss>(dein) <3:ADJ/amod>(unbeschwertes)
    <4:NOUN/root>(Leben) <ROOT> <5:ADP/case>(nach) <6:NOUN/obl>(Bonzenvater) <7:VERB/root>(riecht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/nsubj>(Optik) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/nsubj>(Optik) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: "<1:ADP/case>(ohne) <2:VERB/root>(w\xE4re) <3:ADV/advmod>(wohl) <4:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/obj>(uns) <3:PRON/root>(irgendetwas) <ROOT>
    <4:VERB/root>(verbindet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 3
    - obj
  sentence: "<1:PRON/root>(Dich) <2:ADV/advmod>(so) <ROOT> <3:VERB/root>(verehrt)\
    \ <4:AUX/aux>(hab) <5:SCONJ/mark>(als) <6:AUX/cop>(w\xE4rst) <7:PRON/nsubj>(du)\
    \ <8:DET/det:poss>(meine) <9:NOUN/obj>(K\xF6nigin)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/aux>(haben) <4:PRON/nsubj>(sie)
    <5:ADP/case>(als) <6:NOUN/obl>(Strafakt) <7:VERB/root>(empfunden) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 1
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 1
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:VERB/root>(H\xE4ttest) <2:PRON/nsubj>(du) <3:PRON/obj>(dich) <4:ADP/case>(bei)\
    \ <5:DET/det:poss>(deinem) <6:ADJ/amod>(ersten) <7:NOUN/obl>(Mal) <8:ADV/advmod>(doch)\
    \ <9:ADJ/advmod>(tierisch) <ROOT> <10:VERB/root>(blamiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:ADP/case>(An) <2:DET/det>(dem) <3:NOUN/obl>(Anfang) <4:VERB/root>(dacht)
    <5:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Rapper) <2:AUX/aux>(wollen) <3:PART/advmod>(nicht) <4:VERB/root>(glauben)
    <5:SCONJ/mark>(das) <6:PRON/nsubj>(ich) <ROOT> <7:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 1
    - ccomp
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advcl
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - conj
  sentence: "<1:VERB/root>(F\xFChlt) <2:PRON/obj>(den) <3:PRON/nsubj>(der) <4:NOUN/obj>(bastard)\
    \ <5:VERB/ccomp>(f\xFChlt) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(er) <8:VERB/advcl>(sagt)\
    \ <9:PRON/nsubj>(ich) <10:VERB/conj>(komm) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/cop>(sind) <3:ADV/advmod>(sowas) <4:ADP/root>(von)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <2:NOUN/root>(Songtext) <3:ADP/case>(zu) <5:ADV/advmod>(Schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:SCONJ/mark>(wie) <4:PRON/nsubj>(das)
    <5:DET/obj>(alles) <6:VERB/root>(verschiebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/mark>(wie)
    <5:PRON/obj>(sich) <6:DET/obj>(alles) <7:VERB/root>(verschiebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:PRON/obj>(sich) <4:DET/obj>(alles)
    <5:VERB/root>(verschiebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT> <3:SCONJ/mark>(wie) <4:PRON/nsubj>(das)
    <5:DET/obj>(alles) <6:VERB/root>(verschiebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 11
    - 9
    - obj
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(jetzt) <3:VERB/root>(sitz) <5:PRON/nsubj>(ich)
    <6:ADV/advmod>(da) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich) <9:VERB/conj>(vermiss)
    <11:PRON/obj>(dich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(spitt) <3:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PART/advmod>(nicht) <2:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - fixed
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obl:arg
  sentence: <1:ADP/advmod>(Ab) <2:CCONJ/cc>(und) <3:ADV/fixed>(zu) <4:VERB/root>(denk')
    <5:PRON/nsubj>(ich) <6:PRON/obl:arg>(mir) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Mal) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Ernst)
    <5:PRON/nsubj>(ich) <6:VERB/root>(finde) <7:DET/det>(diese) <8:NOUN/obj>(Aussage)
    <9:DET/det>(ein) <10:ADV/advmod>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(geh) <ROOT> <4:ADP/case>(ab) <5:ADP/advmod>(wie)
    <6:NUM/nummod>(100) <7:NOUN/root>(Russen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(letzten) <3:NOUN/nsubj>(Jams) <4:ADJ/root>(zuhause)
    <5:AUX/cop>(waren) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADP/compound:prt>(zu) <ROOT>
    <4:DET/det>(die) <5:NOUN/root>(jahre)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(flow) <3:ADP/compound:prt>(zu) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:NOUN/root>(Jungs) <7:ADP/case>(in)\
    \ <8:DET/det>(dem) <9:NOUN/nmod>(Knast)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:PROPN/nsubj>(Alder) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(echt)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Nach) <2:ADV/advmod>(dazu) <3:SCONJ/root>(weil) <4:DET/det>(der)\
    \ <5:NOUN/nsubj>(Ablauf) <6:ADV/advmod>(auch) <7:ADV/advmod>(hier) <ROOT> <8:ADJ/xcomp>(gleichf\xF6\
    rmig) <9:VERB/root>(blieb)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 4
    - obl
  sentence: "<1:X/root>(Oh) <ROOT> <3:ADV/advmod>(So) <4:VERB/root>(hing) <5:PRON/nsubj>(das)\
    \ <6:ADV/advmod>(dann) <7:ADV/advmod>(auch) <8:ADP/case>(in) <9:DET/det>(dem)\
    \ <10:NOUN/obl>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:NOUN/root>(Angst) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(danach) <7:VERB/ccomp>(aufwache) <8:SCONJ/mark>(dass)
    <9:DET/det:poss>(mein) <10:NOUN/nsubj>(Kreislauf) <11:ADV/advmod>(so) <ROOT> <12:VERB/root>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/cop>(war) <4:ADV/advmod>(einfach)
    <5:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - obl
  sentence: "<1:X/root>(Oh) <ROOT> <3:ADV/advmod>(So) <4:VERB/root>(hing) <5:PRON/nsubj>(es)\
    \ <6:ADV/advmod>(dann) <7:ADP/case>(in) <8:DET/det>(dem) <9:NOUN/obl>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 13
    - aux
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Oder) <2:VERB/root>(gab) <3:PRON/nsubj>(es) <4:ADP/case>(in)
    <5:DET/det>(den) <6:ADJ/amod>(letzten) <7:NOUN/obl>(Monaten) <8:PRON/obj>(etwas)
    <ROOT> <9:ADV/advmod>(damit) <10:AUX/aux>(habe) <11:PRON/nsubj>(ich) <12:PART/advmod>(nicht)
    <13:VERB/root>(gerechnet)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - mark
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:SCONJ/mark>(weil)
    <5:DET/det>(die) <6:DET/det>(meisten) <7:NOUN/nsubj>(Frauen) <8:AUX/cop>(sind)
    <9:ADV/advmod>(schon) <10:ADV/advmod>(jahrelang) <11:ADJ/root>(krank)
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - amod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 11
    - cop
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - nmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux:pass
  sentence: <1:ADJ/amod>(Besser) <2:ADP/case>(Bei) <3:PRON/nmod>(mir) <4:AUX/cop>(war)
    <5:ADP/case>(auf) <6:DET/det>(jeden) <7:NOUN/nmod>(Fall) <8:ADV/advmod>(erstmal)
    <9:DET/det>(die) <10:NOUN/nsubj>(Atmung) <11:PRON/root>(die) <ROOT> <12:VERB/root>(verbessert)
    <13:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 12
    - xcomp
  - !!python/tuple
    - 11
    - 12
    - mark
  - !!python/tuple
    - 12
    - 6
    - xcomp
  sentence: <1:ADV/advmod>(Doch) <2:ADV/advmod>(nur) <3:AUX/root>(ist) <ROOT> <4:PRON/nsubj>(wer)
    <5:PRON/nsubj>(es) <6:VERB/root>(schafft) <7:DET/obj>(alles) <8:VERB/xcomp>(stehen)
    <9:CCONJ/cc>(und) <10:VERB/xcomp>(liegen) <11:PART/mark>(zu) <12:VERB/xcomp>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - conj
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 8
    - parataxis
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 13
    - advmod
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 13
    - advmod
  sentence: <ROOT> <1:VERB/root>(finde) <2:PRON/nsubj>(ich) <3:ADV/advmod>(sehr) <4:ADJ/advmod>(mutig)
    <6:CCONJ/cc>(Aber) <7:ADV/advmod>(dann) <8:VERB/conj>(frag) <9:PRON/nsubj>(ich)
    <10:PRON/obj>(mich) <11:VERB/conj>(ist) <12:PRON/nsubj>(es) <13:VERB/parataxis>(ist)
    <14:PART/advmod>(nicht) <15:ADV/advmod>(irgendwann) <16:ADV/advmod>(auch) <17:ADV/advmod>(einfach)
    <18:ADV/advmod>(nur)
- dependencies:
  - !!python/tuple
    - 1
    - 12
    - cc
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 12
    - obl
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 12
    - obj
  - !!python/tuple
    - 8
    - 7
    - mark
  - !!python/tuple
    - 9
    - 12
    - aux
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  sentence: <1:CCONJ/cc>(Und) <2:ADP/case>(unter) <3:PRON/obl>(euch) <4:ADV/advmod>(eh)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(mehr) <7:DET/obj>(dein) <8:PART/mark>(zu)
    <9:AUX/aux>(sein) <10:PRON/nsubj>(man) <11:PRON/nsubj>(das) <12:VERB/root>(bereut)
    <13:PRON/nsubj>(er) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(zu) <ROOT> <3:PRON/root>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/root>(sondern) <ROOT> <2:ADJ/root>(selbstverliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(\xFCbertreibe)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(sie) <3:DET/root>(alle) <ROOT> <4:VERB/root>(verkacken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 12
    - obl
  - !!python/tuple
    - 6
    - 12
    - mark
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:X/advmod>('N) <2:ADV/root>(bisschen) <ROOT> <3:ADP/case>(f\xFCr) <4:DET/det>(den)\
    \ <5:NOUN/obl>(Tag) <6:SCONJ/mark>(is') <7:PRON/nsubj>(man) <8:PRON/obj>(ihn)\
    \ <9:ADJ/advmod>(besser) <10:ADP/case>(bei) <11:NOUN/obl>(Nacht) <12:VERB/root>(spielt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 8
    - 6
    - flat
  sentence: "<1:PROPN/nsubj>(Is') <2:ADV/advmod>(einfach) <3:PROPN/root>(Bissi) <ROOT>\
    \ <4:ADP/case>(f\xFCr) <5:PRON/root>(dich) <6:PROPN/appos>(Techno) <8:PROPN/flat>(Hoe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - aux
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(ziemlich) <2:ADJ/root>(schlimm) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:ADV/advmod>(so) <ROOT> <6:ADV/advmod>(wo) <7:AUX/aux>(hast) <8:PRON/nsubj>(du)
    <9:PRON/obj>(das) <10:ADV/advmod>(denn) <11:VERB/root>(gefunden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 7
    - obl
  sentence: <1:VERB/root>(anzutun) <2:ADP/case>(in) <3:DET/det>(irgendeiner) <4:NOUN/obl>(form)
    <ROOT> <5:CCONJ/cc>(aber) <6:PRON/obj>(was) <7:VERB/root>(tust) <8:PRON/nsubj>(du)
    <9:ADV/advmod>(selbst) <10:ADP/case>(gegen) <11:NOUN/obl>(hasskommentare)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:X/root>(yo) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det:poss>(dein) <2:NOUN/nsubj>(K\xF6rper) <3:ADV/advmod>(viel)\
    \ <4:ADP/root>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(willst) <ROOT> <3:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(bringe) <4:PRON/obj>(dich)
    <ROOT> <5:ADP/root>(um)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - cop
  sentence: <1:ADV/advmod>(Oh) <2:PRON/nsubj>(man) <3:ADV/advmod>(gestern) <4:DET/det>(die)
    <5:NOUN/root>(show) <6:PRON/nsubj>(die) <7:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <2:PRON/nsubj>(Du) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(waren) <3:ADV/root>(irgendwie) <ROOT>
    <4:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(warum) <3:AUX/cop>(bin) <4:PRON/nsubj>(ich)
    <5:NOUN/root>(Vollidiot) <6:ADP/case>(in) <7:PRON/nmod>(sie) <8:ADV/advmod>(so)
    <ROOT> <9:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  sentence: <1:AUX/root>(ist) <2:PRON/nsubj>(sie) <3:ADV/advmod>(bisschen) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  sentence: <1:VERB/root>(Langweilt) <2:PRON/obj>(mich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/nsubj>(Boss) <3:AUX/cop>(ist) <4:ADJ/root>(technisch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(ich) <ROOT> <3:SCONJ/mark>(wie) <4:DET/det>(das)
    <5:NOUN/nsubj>(Gegenteil) <6:ADP/case>(von) <7:PROPN/nmod>(Casper) <8:VERB/root>(ausseh)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - xcomp
  sentence: "<1:INTJ/advmod>(Hm) <2:SCONJ/mark>(wie) <3:VERB/root>(gesagt) <4:PRON/nsubj>(es)\
    \ <5:AUX/cop>(ist) <ROOT> <6:SCONJ/mark>(da\xDF) <7:PRON/nsubj>(ich) <8:VERB/root>(dachte)\
    \ <9:PRON/nsubj>(ich) <10:VERB/xcomp>(verpass)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obj>(mich) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(gesteigert)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADJ/advmod>(fr\xFCher) <2:AUX/cop>(war) <3:PRON/nsubj>('s) <4:ADJ/root>(derbe)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - dep
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/dep>(K\xF6nig) <2:PROPN/appos>(Boris) <3:ADP/case>(an) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Mikrophon) <7:VERB/root>(kommt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - dep
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/dep>(K\xF6nig) <2:PROPN/appos>(Boris) <3:ADP/case>(an) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Mikrophon) <7:VERB/root>(kommt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - xcomp
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:VERB/root>(wird) <2:NOUN/xcomp>(s) <3:ADV/advmod>(aber) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:PRON/root>(der) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - mark
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - obj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 2
    - ccomp
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 14
    - aux
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 2
    - ccomp
  - !!python/tuple
    - 15
    - 14
    - xcomp
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADV/advmod>(ehrlich) <2:VERB/root>(sagen) <3:SCONJ/mark>(als) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(das) <6:ADP/case>(zu) <7:DET/det>(dem) <8:ADJ/amod>(ersten) <9:NOUN/obl>(Mal)\
    \ <10:VERB/ccomp>(geh\xF6rt) <11:AUX/aux>(hab) <12:AUX/aux>(hab) <13:PRON/nsubj>(ich)\
    \ <14:VERB/ccomp>(gedacht) <15:ADJ/xcomp>(okay) <ROOT> <16:PRON/root>(du)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(seine) <2:NOUN/nsubj>(Stimme) <3:AUX/root>(is) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:ADP/case>(wie) <2:DET/det>(der) <3:NOUN/root>(flowt) <4:AUX/cop>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:CCONJ/cc>(oder) <3:PRON/root>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux
  sentence: "<ROOT> <1:VERB/root>(\xFCberrascht) <2:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(war) <3:ADJ/root>(wirklich) <ROOT> <4:NOUN/root>(Check)
    <5:ADV/dep>(ein)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - advmod
  - !!python/tuple
    - 2
    - 8
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - det:poss
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  sentence: <1:ADV/advmod>(Nur) <2:AUX/cop>(ist) <3:DET/det>(der) <4:NOUN/nsubj>(Presse)
    <5:DET/det:poss>(mein) <6:NOUN/compound>(Schlachter) <8:NOUN/root>(Image) <9:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - dep
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(speichert) <3:DET/det:poss>(unser)
    <4:NOUN/nsubj>(Gehirn) <5:DET/obj>(diese) <ROOT> <6:ADJ/amod>(emotionale) <7:NOUN/root>(Erinnerung)
    <8:ADV/advmod>(so) <9:ADP/dep>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(dich) <3:PRON/root>(irgendjemand)
    <ROOT> <4:VERB/root>(findet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 4
    - obl
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:VERB/root>(finde) <5:AUX/cop>(ist) <6:SCONJ/mark>(dass) <7:ADP/case>(auf) <8:DET/det>(der)
    <9:ADJ/amod>(linken) <10:NOUN/obl>(Seite)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - ccomp
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:AUX/root>(ist) <4:ADV/advmod>(da)
    <5:ADV/advmod>(noch) <6:NOUN/nsubj>(Warmode) <7:PRON/nsubj>(der) <8:AUX/ccomp>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(ich) <3:VERB/root>(verknallt)
    <4:AUX/aux>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - mark
  - !!python/tuple
    - 3
    - 9
    - obj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 1
    - advcl
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:NOUN/root>(sauerstoffflaschen) <2:ADP/mark>(um) <3:PRON/obj>(uns)\
    \ <4:ADP/case>(vor) <5:DET/det>(dem) <6:ADJ/amod>(giftigen) <7:NOUN/obl>(rauch)\
    \ <8:PART/mark>(zu) <9:VERB/advcl>(sch\xFCtzen) <ROOT> <10:PRON/nsubj>(ich) <11:VERB/root>(seh)\
    \ <12:ADV/advmod>(gar)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(war) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(in)
    <5:PRON/nmod>(sie) <6:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  sentence: "<1:ADP/case>(mit) <2:DET/det:poss>(ihrer) <3:NOUN/obl>(Scharlachf\xE4\
    ule) <4:VERB/root>(infiziert) <5:ADJ/obj>(Echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:ADJ/root>(unfassbar) <ROOT> <3:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/root>(ach) <ROOT> <2:PRON/nsubj>(das) <3:AUX/aux>(hat) <4:ADV/advmod>(schon)
    <5:PRON/obj>(jemand) <6:ADP/case>(aus) <7:DET/det:poss>(meiner) <8:NOUN/obl>(Community)
    <9:VERB/root>(gesehen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 6
    - parataxis
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 15
    - mark
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - nsubj
  sentence: "<1:AUX/aux>(wirst) <2:PRON/nsubj>(du) <3:ADP/case>(in) <4:NOUN/obl>(zone)\
    \ <5:NUM/appos>(2) <6:VERB/root>(gehen) <7:PRON/nsubj>(es) <8:AUX/cop>(ist) <9:ADJ/parataxis>(echt)\
    \ <ROOT> <10:PRON/nsubj>(was) <11:PRON/nsubj>(es) <12:VERB/root>(ausmacht) <13:SCONJ/mark>(wenn)\
    \ <14:DET/det>(der) <15:NOUN/nsubj>(st\xFCrmer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 2
    - xcomp
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 13
    - obl
  sentence: <1:ADV/advmod>(stattdessen) <2:VERB/root>(schieben) <3:PRON/nsubj>(wir)
    <4:ADV/advmod>(raus) <5:ADV/advmod>(erst) <6:DET/det>(einen) <7:ADJ/amod>(aktiven)
    <8:NOUN/obj>(schritt) <9:VERB/xcomp>(runtergehen) <10:CCONJ/cc>(und) <11:VERB/conj>(raussschieben)
    <ROOT> <12:PRON/nsubj>(du) <13:AUX/root>(bist) <14:ADV/advmod>(voll) <15:ADP/case>(an)
    <16:DET/det>(dem) <17:NOUN/obl>(pfosten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <ROOT> <1:SCONJ/mark>(dass) <2:PRON/nsubj>(man) <3:VERB/root>(glaubt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADJ/advmod>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(du) <4:PRON/obj>(mich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Freunde) <3:VERB/root>(meinen)\
    \ <4:PRON/nsubj>(ich) <5:VERB/ccomp>(w\xE4r) <6:ADP/compound:prt>(zu) <ROOT> <7:ADP/case>(an)\
    \ <8:DET/det>(dem) <9:NOUN/root>(Randalieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - compound
  - !!python/tuple
    - 6
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - cop
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/cop>(waren) <4:PROPN/compound>(Multiple)\
    \ <6:PROPN/compound>(Choice) <7:NOUN/root>(Fragen) <8:PRON/nsubj>(Das) <9:AUX/cop>(war)\
    \ <ROOT> <10:ADV/advmod>(Also) <11:ADV/advmod>(ja) <12:ADJ/advmod>(Theoretisch)\
    \ <13:VERB/root>(h\xE4tte) <14:PRON/nsubj>(man)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 9
    - obl
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 9
    - aux
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(man) <3:ADP/case>(in) <4:PROPN/obl>(Deutschland)\
    \ <5:PRON/obj>(sich) <6:ADV/advmod>(vergleichsweise) <7:ADV/advmod>(so) <8:ADV/advmod>(g\xFC\
    nstig) <9:VERB/root>(weiterbilden) <10:AUX/aux>(kann) <11:AUX/aux>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(deshalb) <2:VERB/root>(stinkt) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(spitte) <ROOT> <3:CCONJ/cc>(und) <4:VERB/root>(zerrei\xDF\
    ) <5:DET/det>(das) <6:NOUN/obj>(Bizz)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Hater) <2:NOUN/root>(nerven) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:PRON/obj>(was) <2:PRON/nsubj>(ich) <3:PRON/obl:arg>(mir) <4:VERB/root>(vorstelle)
    <5:AUX/aux>(ist) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 3
    - ccomp
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:VERB/ccomp>(dachte) <3:VERB/root>(\x84k\xF6nnen)\
    \ <4:DET/det>(die) <5:NOUN/obj>(Gegens\xE4tze) <6:ADV/advmod>(so) <ROOT> <7:DET/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(obwohl) <2:PRON/nsubj>(es) <ROOT> <3:ADP/case>(in) <5:NOUN/obl>(R\xFC\
    cken) <6:VERB/root>(geht)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <2:NOUN/root>(Alter) <ROOT> <3:PRON/root>(man)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(direkt) <4:ADP/case>(von)\
    \ <5:DET/obl>(allem) <6:ADV/advmod>(\xFCbelst) <ROOT> <7:VERB/root>(fasziniert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - parataxis
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:VERB/root>(F\xFChlt) <2:PRON/obj>(sich) <3:ADV/advmod>(mehr) <4:ADP/compound:prt>(an)\
    \ <6:PRON/nsubj>(Es) <7:AUX/parataxis>(ist) <ROOT> <8:NOUN/root>(Leute)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Welt) <3:AUX/root>(ist) <ROOT> <4:NOUN/nsubj>(Leute)
    <5:PRON/nsubj>(Das) <6:AUX/cop>(ist) <7:ADV/advmod>(ja) <8:DET/det>(das) <9:NOUN/root>(Hauptding)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:AUX/root>(hab) <2:PRON/nsubj>(ich) <3:PRON/obj>(mich) <ROOT> <4:VERB/root>(versch\xE4\
    tzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/nsubj>(ZGL) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:ADJ/advmod>(idiotisch) <3:ADP/mark>(zu) <4:VERB/root>(kling)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 9
    - 6
    - appos
  sentence: "<1:SCONJ/root>(wenn) <2:PRON/nsubj>(du) <3:DET/det>(die) <4:NOUN/obj>(Eltern)\
    \ <5:ADV/advmod>(daf\xFCr) <ROOT> <6:VERB/root>(entt\xE4uschst) <9:PRON/appos>(Was)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(macht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(einen) <2:ADP/dep>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT> <3:PROPN/root>(nice)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(denkst) <3:PRON/nsubj>(das) <4:VERB/xcomp>(geht)
    <ROOT> <5:ADP/case>(nach) <6:ADV/advmod>(hinten) <7:ADV/root>(los)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Innern)
    <5:VERB/root>(bist) <6:PRON/nsubj>(du) <7:ADV/advmod>(eigentlich) <8:ADP/compound:prt>(zu)
    <ROOT> <9:VERB/root>(gefickt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(yeah) <2:PRON/nsubj>(du) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(mehr) <2:ADP/case>(als) <3:DET/det>(eine) <4:NOUN/nmod>(Tukke)
    <5:ADP/case>(in) <6:NOUN/nmod>(Toiletten) <ROOT> <7:VERB/root>(gebatscht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 10
    - advmod
  sentence: <1:AUX/root>(war) <2:PRON/nsubj>(man) <ROOT> <3:VERB/root>(geschockt)
    <4:CCONJ/cc>(und) <5:DET/nsubj>(viele) <6:VERB/conj>(sagten) <7:PRON/obl:arg>(ihnen)
    <9:PRON/nsubj>(Ihr) <10:VERB/parataxis>(schafft) <11:PRON/obj>(es) <12:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(wei\xDF) <3:ADV/advmod>(doch) <4:PRON/obj>(du)\
    \ <5:AUX/ccomp>(bist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(war) <3:ADV/advmod>(gerade) <4:VERB/root>(joggen)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:VERB/conj>(schwitz) <ROOT> <8:ADJ/root>(extrem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(merkt) <ROOT> <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)
    <5:DET/det>(eine) <6:NOUN/obj>(Fahrt) <7:PART/advmod>(nicht) <8:ADP/mark>(mit)
    <9:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - aux:pass
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 17
    - cc
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det:poss
  - !!python/tuple
    - 17
    - 12
    - conj
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 17
    - nmod
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Mensch) <3:AUX/cop>(ist) <4:ADJ/root>(verzweifelt)
    <5:AUX/aux:pass>(Wurde) <6:ADV/advmod>(gestern) <7:VERB/conj>(abgeholt) <8:ADV/advmod>(Schon)
    <ROOT> <9:SCONJ/root>(dass) <10:ADV/advmod>(so) <11:ADV/advmod>(schnell) <12:ADV/advmod>(dann)
    <13:CCONJ/cc>(und) <14:ADV/advmod>(auch) <15:ADP/case>(ohne) <16:DET/det:poss>(sein)
    <17:NOUN/conj>(Wissen) <18:DET/det>(dieses) <19:NOUN/nmod>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:PART/advmod>(nicht) <ROOT> <4:ADJ/root>(gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/root>(ihr) <ROOT> <3:INTJ/root>(seid)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:ADV/root>(so) <ROOT> <4:ADV/root>(unterwegs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:ADV/root>(so) <ROOT> <4:ADV/root>(unterwegs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - appos
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(damals) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(so) <ROOT> <6:PROPN/root>(broke) <8:PROPN/appos>(Ouh)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(damals) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(so) <ROOT> <6:PROPN/root>(broke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(ohnehin) <2:ADV/root>(schon) <ROOT> <3:VERB/root>(diskriminierte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(sie) <2:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - conj
  sentence: <1:PRON/obj>(den) <2:PRON/nsubj>(du) <3:VERB/root>(liebst) <4:CCONJ/cc>(und)
    <5:DET/det>(die) <6:NOUN/nsubj>(Kohle) <7:AUX/conj>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wer) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  sentence: "<1:ADJ/root>(fr\xFCher) <2:AUX/cop>(war) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(wann) <2:VERB/root>(wurd) <3:PRON/nsubj>(ich) <4:ADV/advmod>(denn)
    <5:ADV/advmod>(nur) <6:ADV/advmod>(so) <ROOT> <7:ADJ/root>(verbittert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(h\xE4lst) <3:PRON/obj>(dich) <4:ADP/xcomp>(f\xFC\
    r) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:INTJ/nsubj>(Glaubst) <2:PRON/nsubj>(du) <3:ADP/case>(mit) <4:NOUN/nmod>(Papa)
    <5:X/flat>('s) <6:NOUN/obl>(Check) <7:ADP/case>(in) <8:DET/det>(der) <9:NOUN/nmod>(Hand)
    <10:AUX/cop>(bist) <11:PRON/root>(du) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Bin) <2:ADV/advmod>(nur) <3:DET/obj>(ein) <ROOT> <4:ADJ/root>(verbohrter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(fickst) <3:DET/det>(mein'n) <4:NOUN/obj>(Kopf)
    <5:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(fickt) <4:DET/det>(dein'n)
    <5:NOUN/obj>(Kopf) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/root>(die) <ROOT> <2:AUX/aux>(waren) <3:CCONJ/cc>(und) <4:ADV/advmod>(jetzt)\
    \ <5:PRON/obj>(was) <6:VERB/root>(rei\xDFen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Bring) <2:DET/det>(eine) <3:NOUN/root>(Zeile) <4:ADP/case>(um)\
    \ <5:PRON/nmod>(dir) <ROOT> <6:DET/det>(die) <7:NOUN/obj>(Bl\xF6\xDFe) <8:PART/mark>(zu)\
    \ <9:VERB/root>(geben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux:pass
  sentence: <1:PRON/root>(die) <2:ADV/advmod>(so) <ROOT> <3:VERB/root>(eingebildet)
    <4:AUX/aux:pass>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - compound:prt
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Dope) <3:AUX/cop>(ist) <4:DET/advmod>(viel)
    <5:ADP/root>(zu) <ROOT> <7:ADV/advmod>(Wo) <8:VERB/root>(kommt) <9:PRON/nsubj>(es)
    <10:ADV/compound:prt>(her)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(Oh) <2:NOUN/nsubj>(Gott) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(wesentlich) <6:ADJ/root>(k\xE4lter) <7:ADP/case>(als) <8:ADV/advmod>(eben)\
    \ <9:ADV/advmod>(noch) <10:ADV/advmod>(da) <11:ADV/advmod>(dr\xFCben) <12:X/punct>(woah)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obl:arg
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(Denke) <2:PRON/nsubj>(ich) <3:PRON/obl:arg>(mir) <ROOT>
    <4:AUX/cop>(ist) <5:PRON/nsubj>(das) <6:ADJ/root>(gruselig)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - nmod:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nmod:poss>(deren) <3:NOUN/nsubj>(Anf\xFChrer)\
    \ <4:AUX/root>(ist) <5:ADV/advmod>(auch) <ROOT> <6:ADJ/root>(behindert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(einfach) <2:ADV/root>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:PROPN/nsubj>(Pussy) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(bin) <2:ADV/advmod>(so) <ROOT> <3:VERB/root>(verknallt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(hat) <3:NOUN/obj>(Energieeffizienz)
    <4:PROPN/appos>(A) <5:CCONJ/cc>(und) <6:PRON/obj>(was) <7:PRON/nsubj>(ich) <8:ADV/advmod>(ziemlich)
    <ROOT> <9:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:VERB/root>(sieht) <4:ADV/advmod>(ja)
    <5:ADJ/advmod>(richtig) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 6
    - nmod
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - nmod
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:PRON/obj>(das) <ROOT> <4:ADJ/amod>(asoziale)
    <6:PROPN/root>(System) <7:PROPN/flat>(Putin) <9:ADV/advmod>(bereits) <10:ADP/case>(in)
    <11:DET/det>(dem) <12:ADJ/amod>(vorletzten) <13:NOUN/nmod>(Video) <14:ADP/case>(anhand)
    <15:DET/nmod>(seiner)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 14
    - mark
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 8
    - ccomp
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obj>(mich) <4:ADV/advmod>(noch)\
    \ <5:ADV/advmod>(nie) <6:ADV/advmod>(so) <ROOT> <7:ADV/advmod>(dar\xFCber) <8:VERB/root>(ge\xE4\
    rgert) <9:SCONJ/mark>(wie) <10:ADV/advmod>(bl\xF6d) <11:PRON/nsubj>(wir) <12:NOUN/nsubj>(Menschen)\
    \ <13:ADV/advmod>(manchmal) <14:AUX/ccomp>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(genie\xDFe) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(gerade) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - dep
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obl
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/root>(wenn) <4:PRON/dep>(du)\
    \ <5:ADP/case>(auf) <6:ADV/advmod>(einmal) <7:ADP/case>(in) <8:DET/det>(einem)\
    \ <9:NOUN/obl>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - acl
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/obj>(Was) <2:PRON/nsubj>(wir) <3:VERB/root>(machen) <4:ADV/advmod>(mittlerweile)
    <5:PRON/nsubj>(das) <6:VERB/acl>(tut) <ROOT> <7:ADV/advmod>(gut) <8:PRON/obj>(uns)
    <9:PART/mark>(zu) <10:VERB/root>(umarmen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - cc
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:X/root>(Ach) <ROOT> <2:CCONJ/cc>(Und) <3:ADV/advmod>(seitdem) <4:AUX/aux>(ist)
    <5:PRON/nsubj>(er) <6:ADV/advmod>(aber) <7:ADV/advmod>(wirklich) <8:ADV/advmod>(stark)
    <9:VERB/root>(angestiegen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:AUX/root>(Ist) <ROOT> <2:PRON/nsubj>(die) <3:VERB/root>(riecht) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(komplett) <6:ADV/advmod>(anders)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 5
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADJ/root>(Vermutlich) <ROOT> <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Wert)
    <5:VERB/root>(gesunken) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(ich) <8:PRON/obj>(sie)
    <9:VERB/advcl>(ausgepackt) <10:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - obj
  - !!python/tuple
    - 10
    - 4
    - obj
  sentence: <1:X/root>(Ach) <ROOT> <3:PRON/nsubj>(Du) <4:VERB/root>(warst) <5:ADV/advmod>(da)
    <6:ADV/advmod>(noch) <7:ADV/advmod>(nie) <8:PROPN/obj>(ne) <10:NOUN/obj>(Nee)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det:poss
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Genau) <2:PRON/nsubj>(das) <3:AUX/cop>(sind) <4:ADV/advmod>(so)\
    \ <5:NOUN/root>(Sachen) <6:DET/det>(die) <7:DET/nsubj>(einem) <8:ADP/case>(in)\
    \ <9:DET/det:poss>(seinem) <10:NOUN/nmod>(Konsum) <ROOT> <11:VERB/root>(best\xE4\
    rken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - cop
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:ADV/advmod>(wie)
    <5:VERB/root>(reflektiert) <6:PROPN/nsubj>(Fritte) <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - cop
  sentence: <1:AUX/cop>(Ist) <2:ADV/advmod>(immer) <3:ADJ/root>(ganz) <ROOT> <4:ADV/advmod>(wie)
    <5:VERB/root>(reflektiert) <6:PRON/nsubj>(er) <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(Denkst) <2:PRON/nsubj>(du) <3:ADV/advmod>(oft) <4:ADV/advmod>(daran)
    <5:ADP/advmod>(wie) <ROOT> <6:PRON/nsubj>(das) <7:ADJ/advmod>(eigentlich) <8:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(die) <ROOT> <3:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(das) <4:ADV/advmod>(gerade)
    <5:ADV/advmod>(wirklich) <6:ADV/advmod>(so) <ROOT> <7:SCONJ/mark>(wie) <8:PRON/nsubj>(du)
    <9:PRON/nsubj>(das) <10:VERB/root>(durchgezogen) <11:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 5
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - nmod
  sentence: <1:ADV/advmod>(Auch) <2:ADP/case>(bei) <3:DET/det>(der) <4:PROPN/obl>(Syphylis)
    <5:VERB/root>(steigen) <6:DET/det>(die) <7:NOUN/nsubj>(Zahlen) <8:ADV/advmod>(Zwar)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(mehr) <11:ADV/advmod>(ganz) <12:ADV/advmod>(so)
    <ROOT> <13:ADP/root>(wie) <14:ADP/case>(in) <15:DET/nmod>(den)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:ADV/advmod>(Dennoch) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/obj>(es)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kenne) <3:ADV/advmod>(auch) <4:DET/det>(keinen)
    <5:PRON/obj>(der) <6:PRON/obj>(das) <7:ADV/advmod>(so) <ROOT> <8:CCONJ/cc>(und)
    <9:ADJ/advmod>(hart) <10:VERB/root>(vertritt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:NUM/nummod>(Drei) <2:NOUN/root>(St\xFCck) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(frustriert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Sau) <2:ADJ/root>(gut) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich)
    <4:PRON/obl:arg>(mir) <5:PRON/obj>(das) <6:VERB/root>(vorstelle)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADP/root>(wie) <ROOT> <2:DET/det>(manche) <3:NOUN/nsubj>(Leute) <4:ADP/case>(f\xFC\
    r) <5:DET/det:poss>(ihr) <6:NOUN/obl>(Geld) <7:VERB/root>(arbeiten) <8:AUX/aux>(m\xFC\
    ssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 10
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:VERB/root>(hab) <2:PRON/nsubj>(ich) <3:PRON/obj>(das) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADV/advmod>(noch) <6:ADV/advmod>(nie) <7:ADP/case>(vor) <8:NOUN/obl>(Augen)\
    \ <9:VERB/xcomp>(gef\xFChrt) <10:VERB/root>(bekommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 12
    - mark
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(h\xF6rt) <3:PRON/nsubj>(sich) <4:ADP/case>(als)\
    \ <5:NOUN/obl>(Au\xDFenstehende) <ROOT> <6:ADP/mark>(an) <7:SCONJ/mark>(wenn)\
    \ <8:PRON/nsubj>(man) <9:DET/det>(solche) <10:NOUN/obj>(Gedanken) <11:ADV/advmod>(quasi)\
    \ <12:VERB/root>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 2
    - obj
  sentence: <ROOT> <1:PRON/nsubj>(ich) <2:VERB/root>(like) <3:ADV/advmod>(doch) <4:DET/det>(kein)
    <5:NOUN/compound>(Ghostwriting) <7:NOUN/obj>(Unternehmen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 3
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <ROOT> <3:VERB/root>(verwundert)
    <4:SCONJ/mark>(weil) <5:PRON/nsubj>(das) <6:AUX/cop>(ist) <7:ADV/advmod>(schon)
    <8:ADV/advmod>(so) <9:DET/det>(ein) <10:NOUN/conj>(Graubereich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: "<1:DET/det>(aller) <2:NOUN/root>(Beteiligten) <3:ADV/advmod>(derart)\
    \ <ROOT> <4:VERB/root>(einschr\xE4nken) <5:SCONJ/mark>(dass) <6:DET/det>(die)\
    \ <7:ADJ/amod>(bisherigen) <8:NOUN/nsubj>(Wege) <9:DET/det>(der) <11:ADJ/nmod>(klassischen)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 6
    - conj
  - !!python/tuple
    - 14
    - 11
    - appos
  sentence: <1:PRON/nsubj>(ich) <2:AUX/aux>(hab) <3:PRON/obl:arg>(ihm) <4:DET/det>(den)
    <5:NOUN/obj>(Penis) <6:VERB/root>(entfernt) <7:CCONJ/cc>(und) <8:ADV/advmod>(noch)
    <9:DET/amod>(n') <10:NOUN/obj>(Fickloch) <11:VERB/conj>(reingebohrt) <14:PROPN/appos>(Boah)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(findet) <3:PROPN/det>(dein') <4:NOUN/obj>(Style)
    <5:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(findest) <3:PRON/obj>(dich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 2
    - ccomp
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(guggsch) <3:ADV/advmod>(halt) <4:ADV/advmod>(mal)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(dich) <7:DET/obj>(viel) <8:NOUN/ccomp>(bewegsch)
    <9:CCONJ/cc>(und) <10:DET/det>(des) <11:ADJ/conj>(richtig) <ROOT> <12:X/root>(isch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:VERB/root>(erz\xE4hl) <3:PRON/obl:arg>(mir) <4:PART/advmod>(nicht)\
    \ <5:ADP/mark>(wie) <ROOT> <6:PRON/nsubj>(du) <7:AUX/root>(bist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(Willst) <2:PRON/obj>(dich) <ROOT> <3:NOUN/root>(anturnen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(allen) <2:DET/root>(anderen) <ROOT> <3:ADV/root>(davon)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(Will) <2:PRON/obj>(sich) <ROOT> <3:NOUN/root>(anturnen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:ADV/advmod>(schon) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <ROOT> <4:ADV/advmod>(wie)
    <5:ADV/advmod>(schnell) <6:PRON/nsubj>(das) <7:VERB/root>(gehen) <8:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Uhr) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT> <5:CCONJ/cc>(und) <6:VERB/root>(funkelt) <7:ADV/advmod>(mitternachts)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:DET/det>(die) <3:NOUN/nsubj>(Bundestagswahl) <4:ADJ/root>(wahnsinnig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - nsubj
  - !!python/tuple
    - 16
    - 14
    - obj
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:DET/det>(eine) <4:ADJ/amod>(ganze)
    <5:NOUN/root>(Mannschaft) <6:ADP/case>(an) <7:NOUN/nmod>(Frauen) <8:PRON/nsubj>(die)
    <9:VERB/parataxis>(haben) <10:DET/obj>(alle) <11:DET/det>(einen) <12:NOUN/obj>(Zyklus)
    <ROOT> <13:ADV/advmod>(wie) <14:VERB/root>(versuchen) <15:PRON/nsubj>(sie) <16:PRON/obj>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:ADV/advmod>(sogar)
    <5:VERB/root>(abgebrochen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(zertrammpel) <3:NOUN/obj>(Felsen) <ROOT>
    <4:ADP/case>(wie) <5:ADJ/amod>(weichgeformtes) <6:NOUN/root>(Styropor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(aber) <2:PROPN/nsubj>(Rothschild) <3:AUX/root>(ist) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/root>(Gesch\xE4ft)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - aux
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 5
    - appos
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:ADV/root>(so)\
    \ <ROOT> <5:ADJ/root>(hei\xDF) <6:NOUN/nsubj>(Leute) <7:PRON/nsubj>(Ihr) <8:AUX/aux>(k\xF6\
    nnt) <9:PRON/obj>(es) <10:PRON/obj>(euch) <11:PART/advmod>(nicht) <12:VERB/appos>(vorstellen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(nat\xFCrlich) <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:PROPN/root>(King)\
    \ <5:CCONJ/cc>(und) <ROOT> <6:ADJ/root>(beliebt) <8:NOUN/flat>(Moment) <9:ADV/advmod>(mal)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(ficke) <3:DET/det:poss>(Eure) <4:NOUN/obj>(M\xFC\
    tter) <ROOT> <5:PRON/nsubj>(Ich) <6:VERB/root>(check) <7:PRON/obj>(das) <8:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(ficke) <3:DET/det:poss>(Eure) <4:NOUN/obj>(M\xFC\
    tter) <ROOT> <5:DET/det>(Keinen) <6:NOUN/root>(Schimmer)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(Nat\xFCrlich) <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:PROPN/root>(King)\
    \ <5:CCONJ/cc>(und) <ROOT> <6:ADJ/root>(beliebt) <8:NOUN/flat>(Moment) <9:ADV/advmod>(mal)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(denkst) <3:PRON/nsubj>(du) <4:PROPN/obj>(Okay)
    <ROOT> <5:CCONJ/cc>(aber) <6:PRON/nsubj>(es) <7:AUX/cop>(ist) <8:ADJ/root>(einfach)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - flat
  - !!python/tuple
    - 13
    - 11
    - flat
  - !!python/tuple
    - 14
    - 11
    - flat
  sentence: <1:DET/det>(Der) <2:NOUN/compound>(Wow) <4:NOUN/nsubj>(Faktor) <5:AUX/root>(war)
    <6:PART/advmod>(nicht) <7:ADV/advmod>(mehr) <8:ADV/advmod>(so) <ROOT> <9:ADP/case>(wie)
    <10:ADP/case>(bei) <11:PROPN/root>(Breath) <12:PROPN/flat>(of) <13:DET/flat>(the)
    <14:PROPN/flat>(Wild)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Oder) <2:VERB/root>(ist) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(doch)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:PRON/nsubj>(ich) <7:AUX/aux>(m\xF6chte) <8:PRON/obj>(das)\
    \ <9:ADJ/advmod>(dezenter) <10:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  sentence: "<1:ADV/advmod>(Wiedermal) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:DET/det>(die) <7:NOUN/root>(Tracklist) <9:X/appos>(yeah)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  sentence: "<1:ADV/advmod>(wiedermal) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <4:ADP/compound:prt>(zu)\
    \ <ROOT> <5:ADP/case>(f\xFCr) <6:DET/det>(die) <7:NOUN/root>(Tracklist) <9:X/appos>(wooh)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(hat) <3:NOUN/obj>(Energieeffizienz)
    <4:PROPN/appos>(A) <5:CCONJ/cc>(und) <6:PRON/obj>(was) <7:PRON/nsubj>(ich) <8:ADV/advmod>(ziemlich)
    <ROOT> <9:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:VERB/root>(sieht) <4:ADV/advmod>(ja)
    <5:ADJ/advmod>(richtig) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/root>(richtig) <ROOT> <4:ADP/case>(an)
    <5:DET/det>(dem) <6:NOUN/root>(Arsch)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <2:PROPN/root>(Ingo) <4:ADV/advmod>(Ja) <5:PRON/nsubj>(der) <6:AUX/cop>(ist)
    <7:ADJ/advmod>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Scheinbar) <2:DET/det>(alle) <3:NOUN/root>(Weiber) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:PROPN/nsubj>(R8) <3:AUX/cop>(ist) <4:ADV/root>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - dep
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:NOUN/obj>(Wahnvorstellungen)\
    \ <4:VERB/root>(hat) <5:AUX/aux>(ist) <6:PRON/nsubj>(man) <7:ADV/advmod>(so) <ROOT>\
    \ <8:ADP/dep>(von) <9:ADV/advmod>(etwas) <10:VERB/root>(\xFCberzeugt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:CCONJ/root>(oder) <ROOT> <2:ADJ/amod>(stressige) <3:NOUN/root>(Ereignisse)
    <4:ADP/case>(wie) <5:DET/det>(der) <6:NOUN/nmod>(Tod) <7:DET/det>(eines) <8:NOUN/nmod>(Elternteils)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(irgendwie) <ROOT> <6:PRON/nsubj>(wer) <7:VERB/root>(dahintersteckt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - xcomp
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:ADV/root>(so)
    <ROOT> <5:ADJ/xcomp>(gut) <6:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - case
  - !!python/tuple
    - 3
    - 6
    - amod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADJ/root>(Echt) <ROOT> <2:ADP/case>(wie) <3:ADJ/amod>(ordentlich)\
    \ <4:DET/det>(diese) <5:ADJ/amod>(kleinen) <6:NOUN/root>(K\xE4ferchen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <ROOT> <1:PRON/nsubj>(das) <2:AUX/cop>(waren) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(wirklich)
    <5:ADJ/root>(gute)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(hat) <3:ADV/advmod>(einfach) <4:ADV/advmod>(sehr)\
    \ <ROOT> <5:VERB/root>(gepr\xE4gt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - xcomp
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<ROOT> <1:ADJ/amod>(widerspr\xFCchlichen) <2:NOUN/xcomp>(Mentalit\xE4\
    t) <3:VERB/root>(geworden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 17
    - cc
  - !!python/tuple
    - 11
    - 17
    - mark
  - !!python/tuple
    - 12
    - 17
    - nsubj
  - !!python/tuple
    - 13
    - 17
    - advmod
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 17
    - obl
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 9
    - advcl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADV/advmod>(wie)\
    \ <5:ADV/advmod>(oft) <6:PRON/nsubj>(er) <7:ADP/case>(in) <8:DET/det>(dem) <9:NOUN/root>(Gespr\xE4\
    ch) <10:CCONJ/cc>(oder) <11:SCONJ/mark>(wenn) <12:PRON/nsubj>(man) <13:ADV/advmod>(irgendwie)\
    \ <14:ADP/case>(mit) <15:PRON/obl>(ihm) <16:ADV/advmod>(irgendwo) <17:AUX/advcl>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 3
    - ccomp
  sentence: <1:CCONJ/root>(oder) <ROOT> <2:DET/advmod>(viel) <3:ADV/root>(los) <4:AUX/cop>(ist)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(du) <7:NOUN/obj>(Fehler) <8:VERB/ccomp>(machst)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:PRON/obj>(ihn)
    <5:ADV/advmod>(morgens) <6:VERB/root>(angeguckt) <7:CCONJ/cc>(und) <8:VERB/conj>(dachte)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 8
    - appos
  sentence: <1:ADV/advmod>(vorbei) <2:CCONJ/cc>(aber) <3:PRON/nsubj>(es) <4:AUX/root>(war)
    <ROOT> <5:SCONJ/mark>(weil) <6:ADV/advmod>(da) <7:AUX/root>(war) <8:PROPN/nsubj>(dr)
    <9:PROPN/flat>(watson) <11:ADV/advmod>(ganz) <12:ADJ/appos>(leise)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - aux
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 12
    - obl
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 12
    - obl
  sentence: "<1:DET/det>(das) <2:NOUN/obj>(Geld) <3:PRON/nsubj>(Ich) <4:VERB/root>(find)\
    \ <5:PRON/obj>(\xB4s) <ROOT> <6:PRON/nsubj>(Sie) <7:AUX/aux>(muss) <8:ADP/case>(mit)\
    \ <9:NUM/obl>(17) <10:DET/det:poss>(ihre) <11:NOUN/obj>(Familie) <12:VERB/root>(ern\xE4\
    hren) <13:CCONJ/cc>(Aber) <14:ADP/case>(in) <15:PROPN/obl>(Kambodscha)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(auschecken) <3:AUX/aux>(kann) <4:PRON/nsubj>(Ich)\
    \ <5:VERB/ccomp>(find\xB4s) <ROOT> <6:ADP/case>(wie) <7:ADJ/root>(normal)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 4
    - obj
  sentence: <1:X/root>(Ach) <ROOT> <3:PRON/nsubj>(Ich) <4:VERB/root>(glaub) <5:PRON/nsubj>(ich)
    <6:PRON/obj>(ess) <7:ADV/advmod>(nie) <8:ADV/advmod>(wieder) <9:ADV/advmod>(ne)
    <10:PROPN/obj>(Bowl)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(so) <4:X/root>(ne)
    <ROOT> <5:ADJ/amod>(bewegende) <6:NOUN/root>(Rede)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:ADP/case>(an) <2:DET/root>(diesem) <ROOT> <3:ADJ/amod>(bewegenden)
    <4:NOUN/root>(Tag) <5:CCONJ/cc>(und) <6:ADJ/amod>(wichtigen) <7:NOUN/conj>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADJ/amod>(passiver)
    <5:NOUN/root>(Druck) <6:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(ist) <ROOT> <4:X/root>(woo)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 7
    - obl
  - !!python/tuple
    - 13
    - 14
    - cc
  - !!python/tuple
    - 14
    - 7
    - conj
  - !!python/tuple
    - 15
    - 18
    - case
  - !!python/tuple
    - 16
    - 18
    - case
  - !!python/tuple
    - 17
    - 18
    - det
  - !!python/tuple
    - 18
    - 14
    - obl
  - !!python/tuple
    - 19
    - 22
    - det
  - !!python/tuple
    - 20
    - 21
    - advmod
  - !!python/tuple
    - 21
    - 22
    - amod
  - !!python/tuple
    - 22
    - 14
    - obj
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:PRON/nsubj>(du) <4:AUX/aux>(bist)
    <5:ADV/advmod>(mies) <6:PRON/nsubj>(du) <7:VERB/root>(warst) <8:ADP/case>(in)
    <9:DET/det>(dem) <10:NOUN/obl>(Knast) <11:ADP/case>(wegen) <12:NOUN/obl>(Weed)
    <13:CCONJ/cc>(und) <14:VERB/conj>(gehst) <15:ADP/case>(ab) <16:ADP/case>(wie)
    <17:DET/det>(ein) <18:NOUN/obl>(G) <19:DET/det>(alles) <20:ADV/advmod>(nur) <21:ADJ/amod>(Top)
    <22:NOUN/obj>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Geschichten) <3:AUX/root>(sind)
    <4:ADV/advmod>(schon) <ROOT> <5:ADV/advmod>(doch) <6:ADV/advmod>(leider) <7:ADV/advmod>(nur)
    <8:ADJ/amod>(Top) <9:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Album) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADJ/root>(Voll) <ROOT> <2:PRON/nsubj>(ich) <3:AUX/aux>(sollte) <4:ADV/advmod>(l\xE4\
    ngst) <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(B\xFCro) <8:AUX/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:VERB/root>(gelogen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(war) <2:DET/det:poss>(seiner) <3:NOUN/root>(Zeit) <ROOT> <4:ADV/root>(voraus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(hab'n) <3:PART/advmod>(nicht) <ROOT>
    <4:VERB/root>(verkauft)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:NOUN/nsubj>(Lappen) <3:VERB/root>(hast) <4:PRON/obj>(mich)
    <ROOT> <5:VERB/root>(gedisst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:ADJ/amod>(unver\xF6ffentlichte) <3:NOUN/nsubj>(Material)\
    \ <4:ADV/advmod>(davor) <5:AUX/root>(war) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  sentence: <1:DET/det:poss>(Ihr) <2:DET/det>(anderen) <3:NOUN/nsubj>(Rapper) <4:VERB/root>(seid)
    <ROOT> <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/root>(Arsch) <9:PROPN/appos>(ha-ha)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(hei\xDFt) <3:ADV/advmod>(meistens)\
    \ <4:PRON/nsubj>(das) <5:DET/det>(die) <6:NOUN/obj>(Party) <7:ADV/advmod>(ziemlich)\
    \ <ROOT> <8:AUX/root>(war)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - parataxis
  sentence: <1:ADV/advmod>(Heute) <2:VERB/root>(sagt) <3:DET/nsubj>(jeder) <6:DET/det:poss>(Dein)
    <7:NOUN/nsubj>(Style) <8:AUX/cop>(ist) <9:ADJ/parataxis>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:AUX/root>(war) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - advmod
  - !!python/tuple
    - 2
    - 9
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(da) <2:AUX/cop>(war) <3:DET/det>(die) <4:NOUN/nsubj>(Schlange)
    <5:ADV/advmod>(gerade) <6:ADV/advmod>(noch) <7:ADV/advmod>(richtig) <8:ADV/advmod>(lang)
    <9:ADJ/root>(super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Kurzfazit) <3:ADV/advmod>(vorweg) <4:PROPN/nmod>(Dreams)
    <5:AUX/root>(ist) <6:ADV/advmod>(einfach) <7:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - aux:pass
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:ADJ/root>(richtig) <ROOT> <3:AUX/aux:pass>(werden)
    <4:AUX/root>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - appos
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:DET/det>(das)\
    \ <5:NOUN/root>(Ding) <6:ADV/advmod>(wof\xFCr) <7:PRON/appos>(uns) <8:DET/det:poss>(unsere)\
    \ <9:NOUN/nsubj>(Fans) <10:ADV/advmod>(so) <ROOT> <11:VERB/root>(lieben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - ccomp
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(wir) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/nsubj>(Tabulos) <6:AUX/cop>(sind) <7:ADV/advmod>(so) <8:VERB/root>(wei\xDF\
    te) <9:PRON/obj>(was) <10:PRON/nsubj>(ich) <11:VERB/ccomp>(meine\u2026)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:ADJ/root>(sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - cc
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 6
    - advmod
  - !!python/tuple
    - 15
    - 17
    - cc
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 6
    - conj
  - !!python/tuple
    - 18
    - 20
    - case
  - !!python/tuple
    - 19
    - 20
    - det
  - !!python/tuple
    - 20
    - 17
    - obl
  sentence: "<1:ADV/root>(So) <ROOT> <2:CCONJ/cc>(und) <3:ADP/case>(vor) <4:DET/det>(allem)\
    \ <5:ADV/advmod>(so) <6:ADJ/root>(eindeutig) <7:AUX/cop>(ist) <8:DET/det>(die)\
    \ <9:NOUN/nsubj>(Situation) <10:ADP/case>(in) <11:DET/det>(der) <12:PROPN/nmod>(Antarktis)\
    \ <13:ADV/advmod>(noch) <14:PART/advmod>(nicht) <15:CCONJ/cc>(Und) <16:PRON/nsubj>(das)\
    \ <17:VERB/conj>(liegt) <18:ADP/case>(an) <19:DET/det>(einem) <20:NOUN/obl>(Gl\xFC\
    cksfall)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:PROPN/nsubj>(Ey) <2:PRON/nsubj>(das) <3:AUX/root>(war) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(einfach) <4:ADV/advmod>(nur)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(das) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <ROOT> <3:ADV/root>(damals)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 2
    - obl
  sentence: <1:ADJ/root>(richtig) <ROOT> <2:VERB/root>(beeindruckt) <3:AUX/aux>(hat)
    <4:ADP/case>(in) <5:DET/det:poss>(ihrer) <6:NOUN/obl>(Cineastik)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - xcomp
  sentence: <1:PROPN/root>(Boah) <ROOT> <2:PRON/nsubj>(Das) <3:VERB/root>(klingt)
    <4:ADV/advmod>(so) <5:ADJ/xcomp>(anstrengend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADJ/root>(schockierend)
    <5:PRON/nsubj>(Das) <6:VERB/parataxis>(finde) <7:PRON/nsubj>(ich) <8:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - mark
  - !!python/tuple
    - 10
    - 8
    - cop
  sentence: "<1:ADV/advmod>(Dabei) <2:VERB/root>(sieht) <3:PRON/nsubj>(es) <4:PRON/obl:arg>(mir)\
    \ <5:PART/advmod>(nicht) <6:ADV/advmod>(\xE4hnlich) <7:ADV/advmod>(so) <ROOT>\
    \ <8:ADJ/root>(hasserf\xFCllt) <9:PART/mark>(zu) <10:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(vermisse) <3:PRON/obj>(dich) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 6
    - compound:prt
  sentence: "<1:ADV/advmod>(Vielleicht) <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:ADJ/root>(verr\xFC\
    ckt) <5:CCONJ/cc>(und) <6:VERB/conj>(lieb) <8:PRON/obj>(dich) <9:ADV/advmod>(einfach)\
    \ <10:DET/advmod>(viel) <11:ADP/compound:prt>(zu) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 6
    - obl
  - !!python/tuple
    - 14
    - 6
    - compound:prt
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(euch) <3:PRON/nsubj>(das) <4:ADP/compound:prt>(zu)
    <ROOT> <5:AUX/advcl>(ist) <6:VERB/root>(schaut) <7:ADV/advmod>(doch) <8:ADV/advmod>(gerne)
    <9:DET/det>(ein) <10:DET/det>(anderes) <11:NOUN/obl>(Mal) <12:ADP/case>(bei) <13:PRON/obl>(uns)
    <14:ADV/compound:prt>(vorbei)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 4
    - aux
  sentence: <1:ADV/advmod>(gar) <2:PART/advmod>(nicht) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(betroffen)
    <5:AUX/cop>(sein) <6:AUX/aux>(sollte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADJ/amod>(Jahrzehntelange) <2:NOUN/root>(Migration) <3:NOUN/appos>(Chancenlosigkeit)
    <4:CCONJ/cc>(und) <5:DET/conj>(ein) <ROOT> <6:ADJ/amod>(korrupter) <7:NOUN/root>(Staat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(dass) <4:DET/nsubj>(viele)
    <5:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 11
    - mark
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 11
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:VERB/root>(Finde) <2:PRON/nsubj>(ich) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(man)
    <5:ADP/case>(mit) <6:NUM/obl>(16) <7:ADV/advmod>(schon) <8:ADV/advmod>(so) <9:DET/det>(ne)
    <10:NOUN/obj>(Gedanken) <11:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - obl:arg
  - !!python/tuple
    - 12
    - 6
    - parataxis
  - !!python/tuple
    - 13
    - 12
    - obj
  - !!python/tuple
    - 14
    - 17
    - advmod
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 12
    - parataxis
  - !!python/tuple
    - 18
    - 17
    - obj
  - !!python/tuple
    - 19
    - 17
    - advmod
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/aux>(bist) <3:ADV/advmod>(richtig) <4:ADV/advmod>(gut)\
    \ <5:ADV/advmod>(drauf) <6:VERB/root>(Geht) <7:PRON/nsubj>(\u2019s) <8:PRON/obj>(dir)\
    \ <9:ADV/advmod>(gut) <10:ADV/advmod>(Ja) <11:PRON/obl:arg>(mir) <12:VERB/parataxis>(geht)\
    \ <13:NOUN/obj>(s) <14:ADV/advmod>(gut) <15:ADV/advmod>(Also) <16:PRON/nsubj>(ich)\
    \ <17:VERB/parataxis>(fand) <18:PRON/obj>(\u2019s) <19:ADV/advmod>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 6
    - ccomp
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 12
    - obj
  sentence: <1:AUX/aux>(habe) <2:PRON/nsubj>(es) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/obl>(Wahlkampf) <6:VERB/root>(gemerkt) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)
    <9:ADJ/ccomp>(einfach) <ROOT> <10:CCONJ/cc>(Und) <11:ADV/advmod>(trotzdem) <12:VERB/root>(kann)
    <13:PRON/nsubj>(man) <14:ADV/advmod>(ja) <15:DET/det>(die) <16:NOUN/obj>(Politik)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(echt)
    <5:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:AUX/root>(ist) <ROOT> <2:ADP/case>(f\xFCr) <3:DET/det:poss>(mein)\
    \ <4:NOUN/root>(Karma)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(deinen) <2:NOUN/obj>(Kollegen) <3:VERB/root>(messen)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(ziemlich) <ROOT> <7:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 13
    - obl
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Land) <3:VERB/root>(hatte) <4:ADV/advmod>(aber)\
    \ <5:ADV/advmod>(generell) <6:ADV/advmod>(einfach) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)\
    \ <ROOT> <9:ADP/case>(in) <10:NOUN/obl>(Ma\xDFnahmen) <11:ADP/case>(gegen) <12:NOUN/nmod>(Drogenkriminalit\xE4\
    t) <13:VERB/root>(investiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux:pass
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(was) <3:AUX/aux>(ist) <4:ADV/advmod>(damals)
    <5:VERB/root>(passiert) <6:SCONJ/mark>(dass) <7:DET/det>(dieses) <8:NOUN/nsubj>(Gleichgewicht)
    <9:ADV/advmod>(so) <ROOT> <10:VERB/root>(gekippt) <11:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:AUX/cop>(war) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(Tada) <ROOT> <2:X/root>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - nsubj
  sentence: "<1:PRON/root>(Wir) <ROOT> <2:AUX/root>(w\xE4re) <3:PRON/expl>(es) <4:ADV/advmod>(denn)\
    \ <5:ADV/advmod>(bitte) <6:SCONJ/mark>(wenn) <7:DET/det>(die) <8:NOUN/nsubj>(Hotelzimmerkarte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:X/root>(\xE4h) <ROOT> <3:PROPN/root>(Robert)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 11
    - cop
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obl
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(wie) <3:AUX/aux>(kann) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(sein) <6:ADV/advmod>(Selbst) <7:ADP/case>(f\xFCr) <8:DET/det>(die)\
    \ <9:PROPN/obl>(USA) <10:AUX/cop>(ist) <11:PRON/root>(das) <12:ADV/advmod>(doch)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:ADV/advmod>(wieso) <3:PART/advmod>(nicht) <5:PRON/nsubj>(Das)
    <6:AUX/root>(ist) <7:ADV/advmod>(ja) <8:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:SCONJ/root>(dass)
    <5:DET/det>(die) <6:NOUN/nsubj>(Leute) <7:PRON/obj>(das) <8:ADV/advmod>(dann)
    <9:ADJ/advmod>(wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 4
    - cop
  sentence: "<1:ADV/advmod>(Schon) <2:ADV/root>(auch) <ROOT> <3:SCONJ/mark>(wie) <4:ADJ/root>(normal)\
    \ <5:DET/det>(solche) <6:NOUN/nsubj>(Einbr\xFCche) <7:ADP/case>(in) <8:PROPN/nmod>(Berlin)\
    \ <9:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Oh) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:X/root>(Oh) <ROOT> <2:X/root>(Ah)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - case
  sentence: <1:NOUN/root>(Alter) <2:ADP/case>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:ADJ/root>(total)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:PRON/obj>(was) <3:PRON/nsubj>(die) <4:VERB/root>(draufhaben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux:pass
  sentence: "<1:ADV/advmod>(also) <2:ADP/case>(zu) <3:DET/det>(dem) <4:NOUN/root>(Schutz)\
    \ <5:DET/det>(der) <6:NOUN/nmod>(Nutzerinnen) <7:CCONJ/cc>(und) <8:NOUN/conj>(Nutzer)\
    \ <ROOT> <9:VERB/root>(eingeschr\xE4nkt) <10:AUX/aux:pass>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADP/case>(Vor) <2:DET/obl>(allem) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <ROOT> <5:SCONJ/mark>(dass) <6:DET/det>(der) <7:NOUN/nsubj>(Mod) <8:ADP/case>(von)
    <9:PROPN/nmod>(Knossi) <10:PROPN/appos>(12) <11:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 2
    - advmod
  - !!python/tuple
    - 11
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(die) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:ADV/advmod>(jetzt)
    <5:ADP/case>(bei) <6:DET/det>(einer) <7:NOUN/obl>(Verhaltenssucht) <8:ADV/advmod>(wahrscheinlich)
    <9:ADV/advmod>(jetzt) <10:PART/advmod>(nicht) <11:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:ADJ/compound>(Hallo) <2:NOUN/nsubj>(Finanzamt) <3:PRON/nsubj>(ich)
    <4:VERB/root>(lieb) <5:PRON/obj>(euch) <6:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - nmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 4
    - appos
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - appos
  - !!python/tuple
    - 16
    - 18
    - case
  - !!python/tuple
    - 17
    - 18
    - amod
  - !!python/tuple
    - 18
    - 15
    - nmod
  sentence: "<1:ADV/advmod>(also) <2:DET/det>(einen) <3:ADJ/amod>(chinesischen) <4:NOUN/root>(Riesen)\
    \ <5:PROPN/appos>(Salamander) <6:ADP/case>(zu) <7:DET/det>(dem) <8:NOUN/nmod>(Beispiel)\
    \ <9:DET/det>(ein) <10:NOUN/appos>(Axolotl) <11:CCONJ/cc>(oder) <12:DET/conj>(diese)\
    \ <ROOT> <13:ADJ/amod>(seltene) <14:PROPN/root>(Albino) <15:NOUN/appos>(Schildkr\xF6\
    te) <16:ADP/case>(mit) <17:ADJ/amod>(roten) <18:NOUN/nmod>(Ohren)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/nmod>(Gewichtheben)\
    \ <5:ADJ/root>(ganz) <ROOT> <6:ADV/advmod>(also) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(mehr) <11:ADJ/root>(sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:DET/det>(das)\
    \ <5:NOUN/root>(Ger\xE4usch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:ADJ/advmod>(Gleichzeitig) <2:VERB/root>(geschieht) <3:ADP/case>(in)
    <4:DET/det:poss>(eurem) <5:NOUN/obl>(Kopf) <6:ADV/advmod>(so) <ROOT> <7:DET/root>(viel)
    <8:ADP/case>(auf) <9:ADV/advmod>(einmal)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  - !!python/tuple
    - 8
    - 3
    - cc
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADJ/nsubj>(OK) <2:PRON/nsubj>(ich) <3:VERB/root>(stelle) <4:PRON/obj>(mich)
    <5:ADV/advmod>(echt) <6:ADV/advmod>(dumm) <7:ADP/compound:prt>(an) <8:CCONJ/cc>(aber)
    <9:ADV/advmod>(trotzdem) <ROOT> <10:NOUN/root>(Respekt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - mark
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/root>(So) <ROOT> <2:SCONJ/mark>(dass) <3:SCONJ/mark>(da) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Schloss) <7:ADV/advmod>(mal) <8:PRON/nsubj>(jemand)
    <9:VERB/root>(gewohnt) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:ADV/root>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(interessieren) <2:PRON/obj>(mich) <3:PART/advmod>(nicht)
    <4:PRON/obj>(Etwas) <ROOT> <5:VERB/root>(gesagt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - expl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 4
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - cop
  sentence: <1:ADV/advmod>(Wie) <2:AUX/aux>(kann) <3:PRON/expl>(es) <4:AUX/root>(sein)
    <5:SCONJ/mark>(dass) <6:PROPN/nsubj>(Haiti) <7:CCONJ/cc>(und) <8:DET/det>(die)
    <9:PROPN/conj>(Dom) <10:PROPN/flat>(Rep) <11:ADV/advmod>(so) <ROOT> <12:ADJ/root>(unterschiedlich)
    <13:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Irgendwann) <2:AUX/cop>(war) <3:PRON/nsubj>(es) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(auch) <6:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:NOUN/nsubj>(Leute) <2:PRON/nsubj>(es) <3:VERB/root>(wird) <4:ADV/advmod>(anders)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - appos
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(die) <4:NOUN/root>(Zeit)\
    \ <5:ADV/advmod>(wo) <6:DET/det>(die) <7:NOUN/nsubj>(Musik) <8:DET/appos>(einen)\
    \ <ROOT> <9:VERB/root>(pr\xE4gt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(so)
    <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(du) <7:PRON/nsubj>(das) <8:ADV/advmod>(immer)
    <9:ADV/advmod>(so) <10:VERB/root>(sagst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(rap) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(fand)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(man) <4:ADJ/amod>(hypnotisierte)
    <5:NOUN/root>(Leute)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/root>(Alles) <2:ADP/case>(von) <3:DET/det>(einem) <4:NOUN/nmod>(Punkt)
    <ROOT> <5:AUX/aux>(hab) <6:PRON/nsubj>(ich) <7:PART/advmod>(nicht) <8:VERB/root>(erwartet)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:DET/det>(andere) <3:NOUN/nsubj>(Menschen) <4:PRON/obj>(das)\
    \ <5:ADV/advmod>(toll) <6:VERB/root>(finden) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(so) <ROOT> <10:ADJ/advmod>(d\xFCnn) <11:VERB/root>(aussehe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:PRON/nsubj>(sich) <4:ADJ/advmod>(richtig)
    <ROOT> <5:VERB/root>(entwickelt) <6:ADP/case>(auf) <7:ADV/advmod>(einmal)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/advmod>(d\xFCnn) <6:VERB/root>(aussehe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - cop
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - appos
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(wie) <4:ADJ/root>(aufgeregt)\
    \ <5:PRON/nsubj>(er) <6:AUX/cop>(ist) <7:PRON/nsubj>(er) <8:VERB/appos>(l\xE4\
    uft) <9:ADV/compound:prt>(hin) <10:CCONJ/cc>(und) <11:ADV/conj>(her)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advcl
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - ccomp
  sentence: "<1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/advcl>(finde) <4:PRON/nsubj>(er)\
    \ <5:AUX/aux>(hat) <6:VERB/root>(gesagt) <7:PRON/nsubj>(er) <8:AUX/aux>(hat) <9:NOUN/obj>(Artikel)\
    \ <10:ADV/advmod>(dar\xFCber) <11:VERB/ccomp>(gelesen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - ccomp
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(sag) <4:ADV/advmod>(mal)
    <5:DET/det>(die) <6:NOUN/obj>(Zahl) <7:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:ADV/advmod>(einfach) <3:PRON/nsubj>(irgendwas)
    <4:ADV/advmod>(positiv) <5:VERB/root>(bewerten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 10
    - mark
  - !!python/tuple
    - 3
    - 10
    - advmod
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(wie) <3:ADV/advmod>(einfach)
    <4:PRON/nsubj>(das) <5:ADP/case>(mit) <6:DET/det>(den) <7:NOUN/compound>(Fake)
    <9:NOUN/obl>(Bewertungen) <10:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Ich) <3:VERB/root>(habe) <4:PART/advmod>(nicht) <5:ADV/advmod>(so)\
    \ <ROOT> <6:ADJ/amod>(geheime) <7:NOUN/root>(Tr\xE4ume)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <4:ADV/advmod>(so) <ROOT> <5:VERB/root>(geweint)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:X/compound>(En) <2:NOUN/nsubj>(masse) <3:AUX/cop>(ist) <4:DET/det:poss>(mein)\
    \ <5:NOUN/nsubj>(Rrepertoire) <6:PRON/root>(das) <7:ADP/case>(f\xFCr) <8:NOUN/nmod>(Whacks)\
    \ <9:ADP/compound:prt>(zu) <ROOT> <10:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nmod
  sentence: <1:NOUN/root>(Rocken) <2:DET/det>(jeden) <3:NOUN/nmod>(Ort) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PROPN/nsubj>(MC) <2:PROPN/flat>(RENE) <3:CCONJ/cc>(und) <4:PROPN/conj>(Carl)
    <5:PROPN/flat>(Crinx) <6:VERB/root>(chillen) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:PRON/nsubj>(ich) <3:PRON/obj>('s) <4:VERB/root>(probier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(Sieht) <2:ADJ/advmod>(echt) <ROOT> <3:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(wird) <3:ADJ/root>(sau) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(der) <2:PROPN/nsubj>(John) <3:PROPN/flat>(Known) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(sind) <3:ADV/advmod>(einfach) <4:DET/advmod>(viel)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - cop
  sentence: <1:SCONJ/root>(wenn) <2:PRON/nsubj>(es) <ROOT> <3:AUX/cop>(ist) <5:PRON/nsubj>(Ich)
    <6:AUX/cop>(bin) <7:NOUN/root>(Soldat) <8:ADV/advmod>(also) <9:PRON/nsubj>(was)
    <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - obl:arg
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/obl:arg>(mir) <2:PRON/nsubj>(nix) <3:ADP/case>(zu) <4:NUM/nmod>(1)
    <5:PRON/nsubj>(das) <6:AUX/cop>(ist) <7:ADJ/root>(echt) <ROOT> <8:PRON/nsubj>(es)
    <9:AUX/cop>(ist) <10:ADV/advmod>(immer) <11:PRON/root>(der)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PRON/nsubj>(es)
    <5:AUX/cop>(ist) <6:ADV/advmod>(immer) <7:PRON/root>(der)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - expl
  - !!python/tuple
    - 5
    - 11
    - aux
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - xcomp
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:PRON/expl>(es)\
    \ <5:AUX/aux>(ist) <6:ADV/advmod>(immer) <7:DET/det>(der) <8:NOUN/nsubj>(politiker)\
    \ <9:ADV/advmod>(darum) <10:ADJ/xcomp>(j\xE4hrigen) <11:VERB/root>(geschlichen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:NOUN/obj>(s) <ROOT> <4:PRON/nsubj>(Die)\
    \ <5:VERB/root>(geben) <6:NOUN/obj>(Geld) <7:ADV/advmod>(daf\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 4
    - advmod
  sentence: <1:ADV/root>(Wie) <ROOT> <2:ADV/advmod>(schnell) <3:PRON/nsubj>(das) <4:VERB/root>(ging)
    <5:PRON/nsubj>(Es) <6:AUX/aux>(ist) <7:DET/nsubj>(alles) <8:ADV/advmod>(weg) <9:ADV/advmod>(hier)
    <10:ADV/advmod>(oben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:NOUN/obj>(s) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Ey) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:X/advmod>(Ah) <3:ADV/root>(ja) <ROOT> <4:VERB/root>(abgefahren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - dep
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(nur) <ROOT> <4:SCONJ/root>(dass)
    <5:DET/det>(diese) <6:ADJ/amod>(unfassbare) <7:NOUN/dep>(Menge) <8:ADP/case>(an)
    <9:NOUN/nmod>(Strom)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - amod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:X/root>(Ach) <ROOT> <2:DET/det>(ein) <3:NOUN/root>(Wasserfall) <4:ADJ/amod>(direkt)\
    \ <5:ADP/case>(vor) <6:DET/det>(der) <7:NOUN/nmod>(H\xFCtte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(reime) <3:ADV/advmod>(so) <ROOT> <4:SCONJ/mark>(denn)
    <5:ADV/advmod>(sonst) <6:VERB/root>(ist) <7:ADV/advmod>(hier) <8:ADP/case>(auf)
    <9:DET/det>(keinen) <10:NOUN/obl>(Verlass)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(riecht) <3:ADJ/advmod>(total) <ROOT>\
    \ <4:ADP/case>(nach) <5:NOUN/root>(R\xE4ucherlachs)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(aber) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/compound>(Oh) <2:NOUN/nsubj>(Mann) <3:X/advmod>(ey) <4:VERB/root>(sieht)
    <5:PRON/obj>(das) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - cc
  - !!python/tuple
    - 4
    - 10
    - advmod
  - !!python/tuple
    - 5
    - 10
    - obj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<2:ADJ/root>(Echt) <ROOT> <3:CCONJ/cc>(Aber) <4:ADV/advmod>(warum) <5:PRON/obj>(Was)\
    \ <6:AUX/aux>(hat) <7:PRON/nsubj>(ich) <8:ADV/advmod>(dann) <9:ADV/advmod>(da)\
    \ <10:VERB/root>(zur\xFCckgezogen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - mark
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Warum) <2:PRON/nsubj>(es) <3:VERB/root>(funktioniert) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(wir) <6:ADV/advmod>(da) <7:ADV/advmod>(so) <ROOT> <8:ADV/advmod>(drauf)
    <9:VERB/root>(anspringen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 4
    - xcomp
  sentence: <1:ADV/root>(Schon) <ROOT> <2:DET/det>(Andere) <3:NOUN/nsubj>(Eltern)
    <4:VERB/root>(gehen) <5:ADJ/amod>(neue) <6:NOUN/obj>(Klamotten) <7:VERB/xcomp>(kaufen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advcl
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/obj>(mich) <3:NOUN/obj>(Leute) <4:VERB/root>(fragen)
    <5:SCONJ/mark>(weil) <6:PRON/nsubj>(ich) <7:ADV/advmod>(so) <8:VERB/advcl>(dachte)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:X/amod>(off) <4:NOUN/root>(Okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 14
    - det
  - !!python/tuple
    - 11
    - 14
    - compound
  - !!python/tuple
    - 12
    - 14
    - compound
  - !!python/tuple
    - 14
    - 8
    - nmod
  sentence: "<1:PROPN/amod>(Dat) <2:NOUN/dep>(Jahr) <3:VERB/root>(ging) <4:ADV/advmod>(schon)\
    \ <ROOT> <5:ADV/advmod>(los) <6:PROPN/nsubj>(Hammer) <7:NOUN/nsubj>(Trag\xF6die)\
    \ <8:ADJ/root>(schlimmer) <9:ADP/case>(als) <10:DET/det>(diese) <11:PROPN/compound>(ISIS)\
    \ <12:PROPN/compound>(Turban) <14:NOUN/nmod>(Terroristen)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - acl
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(die) <3:ADJ/amod>(neuen) <4:NOUN/root>(Tiere)
    <5:PRON/nsubj>(die) <6:ADV/advmod>(dabei) <7:VERB/acl>(herauskamen) <8:AUX/aux>(waren)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 3
    - obl
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 3
    - parataxis
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:VERB/root>(riecht) <4:ADV/advmod>(jetzt)
    <5:ADP/case>(auf) <6:DET/det>(jeden) <7:NOUN/obl>(Fall) <8:ADV/advmod>(hier) <9:ADV/advmod>(deutlich)
    <10:ADP/case>(nach) <11:NOUN/obl>(Sex) <13:X/advmod>(Oh) <14:ADV/advmod>(ja) <15:ADJ/parataxis>(richtig)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 5
    - nmod
  sentence: "<1:PROPN/nsubj>(Ey) <2:AUX/cop>(ist) <3:PRON/root>(das) <4:PART/advmod>(nicht)\
    \ <ROOT> <5:NOUN/root>(Danke) <6:ADP/case>(f\xFCr) <7:DET/det>(die) <8:ADJ/amod>(ganze)\
    \ <9:NOUN/nmod>(Arbeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:SCONJ/mark>(Als) <2:PRON/nsubj>(es) <3:ADJ/root>(richtig) <ROOT> <4:VERB/root>(gebombt)
    <5:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Ersch\xFCtterung) <3:AUX/cop>(war) <4:ADV/root>(so)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(geht) <ROOT> <3:ADP/case>(auf) <4:DET/det>(die)
    <5:NOUN/root>(Psyche)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:VERB/root>(aufgeregt)
    <5:PRON/nsubj>(Das) <6:VERB/parataxis>(schaffst) <7:PRON/nsubj>(du) <8:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:X/root>(Ey) <2:ADP/advmod>(wie) <ROOT> <3:AUX/cop>(Ist) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(toll) <6:ADV/advmod>(hier) <7:ADV/root>(oben)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 9
    - advcl
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 9
    - advmod
  - !!python/tuple
    - 15
    - 9
    - compound:prt
  - !!python/tuple
    - 16
    - 17
    - amod
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 21
    - case
  - !!python/tuple
    - 19
    - 21
    - det
  - !!python/tuple
    - 20
    - 21
    - amod
  - !!python/tuple
    - 21
    - 17
    - nmod
  sentence: "<1:ADV/advmod>(Vielleicht) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(ihr) <4:PRON/obj>(euch)\
    \ <5:VERB/advcl>(denkt) <6:ADV/advmod>(Naja) <7:PRON/nsubj>(ich) <8:ADV/advmod>(pers\xF6\
    nlich) <9:VERB/root>(hab) <10:ADV/advmod>(ja) <11:ADV/advmod>(vielleicht) <12:ADV/advmod>(gar)\
    \ <13:PART/advmod>(nicht) <14:ADV/advmod>(so) <15:ADV/compound:prt>(ein) <ROOT>\
    \ <16:ADJ/amod>(hohes) <17:NOUN/root>(Risiko) <18:ADP/case>(f\xFCr) <19:DET/det>(einen)\
    \ <20:ADJ/amod>(schlimmen) <21:NOUN/nmod>(Verlauf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - conj
  - !!python/tuple
    - 12
    - 11
    - obl:arg
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 11
    - advmod
  - !!python/tuple
    - 16
    - 21
    - mark
  - !!python/tuple
    - 17
    - 21
    - nsubj
  - !!python/tuple
    - 18
    - 21
    - advmod
  - !!python/tuple
    - 19
    - 21
    - nsubj
  - !!python/tuple
    - 20
    - 21
    - advmod
  - !!python/tuple
    - 21
    - 11
    - ccomp
  - !!python/tuple
    - 22
    - 21
    - cop
  - !!python/tuple
    - 23
    - 27
    - cc
  - !!python/tuple
    - 24
    - 27
    - obj
  - !!python/tuple
    - 25
    - 27
    - nsubj
  - !!python/tuple
    - 26
    - 27
    - mark
  - !!python/tuple
    - 27
    - 21
    - cop
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:SCONJ/mark>(wie)\
    \ <5:PRON/nsubj>(ich) <6:PRON/obj>(das) <7:VERB/root>(vermisst) <8:AUX/aux>(habe)\
    \ <9:CCONJ/cc>(und) <10:PRON/nsubj>(ich) <11:VERB/conj>(w\xFCnsche) <12:PRON/obl:arg>(mir)\
    \ <13:ADV/advmod>(einfach) <14:ADV/advmod>(so) <15:ADV/advmod>(sehr) <16:SCONJ/mark>(dass)\
    \ <17:PRON/nsubj>(es) <18:ADV/advmod>(bald) <19:DET/nsubj>(alles) <20:ADV/advmod>(wieder)\
    \ <21:ADJ/ccomp>(normal) <22:AUX/cop>(ist) <23:CCONJ/cc>(und) <24:DET/obj>(all)\
    \ <25:PRON/nsubj>(das) <26:ADV/mark>(vorbei) <27:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(zittere) <3:ADV/advmod>(gerade) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NUM/nummod>(15) <2:NUM/nummod>(000) <3:NOUN/nsubj>(Liter) <4:NOUN/obj>(Wasser)
    <5:VERB/root>(klingt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(immer) <ROOT> <6:SCONJ/root>(wenn) <7:PRON/nsubj>(man) <8:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Weil) <2:PRON/nsubj>(das) <3:VERB/root>(fand) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(damals) <6:ADV/advmod>(schon) <ROOT> <7:ADJ/root>(\xFCbergriffig)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:X/root>(Ach) <ROOT> <2:ADJ/root>(Trocken) <3:AUX/aux>(Darf) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ey) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - xcomp
  sentence: "<1:PRON/obj>(den) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/xcomp>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - advmod
  sentence: "<1:VERB/root>(Fand) <2:PRON/nsubj>(ich) <3:DET/det>(die) <4:NOUN/obj>(Ank\xFC\
    ndigung) <5:DET/det>(der) <6:NOUN/nmod>(Preise) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - compound
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - cop
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADJ/amod>(neues) <2:NOUN/compound>(Final) <3:PROPN/root>(Fantasy) <4:CCONJ/cc>(und)
    <5:ADV/advmod>(so) <6:NOUN/conj>(Sachen) <7:PRON/nsubj>(Das) <8:AUX/cop>(war)
    <9:ADV/advmod>(schon) <ROOT> <10:ADP/case>(auf) <11:DET/det>(jeden) <12:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:ADV/advmod>(auch) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(mal) <ROOT> <6:VERB/root>(geflasht) <7:CCONJ/cc>(aber) <8:PRON/nsubj>(es)
    <9:VERB/conj>(wurde) <10:ADV/advmod>(immer) <11:ADV/advmod>(weniger)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(find) <3:PRON/nsubj>(ich) <4:VERB/conj>(kommt)
    <5:ADV/advmod>(dazu) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <ROOT> <8:ADP/case>(auf)
    <9:NOUN/obl>(Grafik) <10:VERB/root>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 11
    - nmod
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 3
    - parataxis
  sentence: <1:SCONJ/mark>(weil) <2:X/root>(s) <ROOT> <3:VERB/root>(abgeruckelt) <4:AUX/cop>(ist)
    <5:ADV/advmod>(Selbst) <6:ADP/case>(auf) <7:DET/det>(der) <8:PROPN/nmod>(Pro)
    <9:AUX/cop>(war) <10:NOUN/nsubj>(s) <11:ADJ/parataxis>(ruckelig)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:X/root>(Oh) <ROOT> <2:PRON/nsubj>(die) <3:AUX/aux>(wollen) <4:ADV/advmod>(jetzt)
    <5:ADV/advmod>(da) <6:DET/det>(ein) <7:ADV/obj>(bisschen) <8:VERB/root>(gleichziehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - cc
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - conj
  sentence: <1:AUX/root>(Ist) <2:PRON/nsubj>(das) <3:ADP/compound:prt>(zu) <ROOT>
    <4:PRON/nsubj>(was) <5:ADV/advmod>(da) <6:VERB/root>(abgeht) <7:CCONJ/cc>(oder)
    <8:PRON/nsubj>(was) <9:ADV/advmod>(da) <10:VERB/conj>(kommt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - cop
  sentence: <1:ADP/root>(wie) <ROOT> <2:DET/det>(diese) <3:NOUN/nsubj>(Spiele) <4:ADV/advmod>(mittlerweile)
    <5:ADV/advmod>(grade) <6:PROPN/root>(AAA) <8:NOUN/flat>(Produktionen) <9:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(find) <4:X/mark>(s)
    <5:PRON/nsubj>(Es) <6:AUX/ccomp>(ist) <7:ADV/advmod>(schon) <ROOT> <8:DET/root>(viel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 2
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADV/advmod>(so)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <7:PROPN/obj>(Microsoft) <8:DET/det>(ein)
    <9:ADV/advmod>(bisschen) <10:ADP/compound:prt>(zu) <ROOT> <11:VERB/root>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(find) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(eigentlich) <6:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/root>(wenn) <2:PRON/obj>(sich) <3:DET/det>(der) <4:NOUN/nsubj>(Vorteil)\
    \ <5:ADV/advmod>(erst) <6:ADV/advmod>(mal) <7:ADV/advmod>(noch) <8:ADV/advmod>(so)\
    \ <ROOT> <9:ADP/case>(in) <10:NOUN/obl>(Grenzen) <11:VERB/root>(h\xE4lt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 5
    - ccomp
  - !!python/tuple
    - 11
    - 10
    - obj
  sentence: "<1:AUX/cop>(ist) <2:DET/det>(das) <3:NOUN/root>(Lager) <4:ADV/advmod>(so)\
    \ <ROOT> <5:VERB/root>(unterteilt) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ich) <8:DET/det>(das)\
    \ <9:NOUN/obj>(Gef\xFChl) <10:VERB/ccomp>(hab) <11:X/obj>(ey)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:AUX/cop>(Ist) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - obl
  - !!python/tuple
    - 12
    - 5
    - obj
  - !!python/tuple
    - 13
    - 5
    - advmod
  - !!python/tuple
    - 14
    - 5
    - obj
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 14
    - nmod
  - !!python/tuple
    - 18
    - 5
    - compound:prt
  sentence: "<1:ADJ/root>(Total) <ROOT> <2:ADP/case>(bei) <3:DET/det>(manchen) <4:NOUN/obl>(Menschen)\
    \ <5:VERB/root>(l\xF6st) <6:ADJ/amod>(gro\xDFer) <7:ADJ/amod>(emotionaler) <8:NOUN/nsubj>(Stress)\
    \ <9:ADP/case>(zu) <10:DET/det>(dem) <11:NOUN/obl>(Beispiel) <12:NOUN/obj>(Liebeskummer)\
    \ <13:ADJ/advmod>(tats\xE4chlich) <14:NOUN/obj>(Sch\xE4digungen) <15:ADP/case>(an)\
    \ <16:DET/det>(dem) <17:NOUN/nmod>(Herz) <18:ADP/compound:prt>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: <1:ADP/case>(mit) <2:ADJ/amod>(braunen) <3:CCONJ/cc>(und) <4:ADJ/conj>(grauen)
    <5:NOUN/root>(Ruinen) <6:CCONJ/cc>(und) <7:NOUN/conj>(Felsen) <9:ADV/advmod>(Wie)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:ADV/advmod>(Sehr) <2:ADJ/root>(geeignet) <3:ADP/case>(f\xFCr) <4:NOUN/nmod>(Neueinsteiger)\
    \ <5:PRON/nsubj>(die) <6:PRON/nsubj>(sich) <7:ADJ/advmod>(schnell) <ROOT> <8:VERB/root>(f\xFC\
    hlen) <9:AUX/aux>(wollen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:PART/advmod>(nicht) <3:ADV/root>(so) <ROOT> <4:DET/det>(der)
    <5:PROPN/root>(Markus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Oder) <2:VERB/root>(musstest) <3:PRON/nsubj>(du) <4:PRON/obj>(dich)\
    \ <5:ADV/advmod>(erst) <ROOT> <6:ADV/advmod>(dran) <7:VERB/root>(gew\xF6hnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:X/cc>(Mhm) <2:X/advmod>(Oh) <3:ADV/advmod>(ja) <4:PRON/nsubj>(die)
    <5:VERB/root>(hat) <6:ADV/advmod>(schon) <7:ADV/advmod>(boah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 10
    - parataxis
  - !!python/tuple
    - 15
    - 14
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 14
    - xcomp
  - !!python/tuple
    - 18
    - 20
    - case
  - !!python/tuple
    - 19
    - 20
    - det:poss
  - !!python/tuple
    - 20
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(findet) <3:PRON/obj>(das) <4:ADV/advmod>(immer)
    <5:ADV/advmod>(erst) <6:ADV/advmod>(noch) <7:INTJ/advmod>(hot) <8:ADV/advmod>(hier)
    <9:PRON/nsubj>(Ich) <10:VERB/parataxis>(finde) <11:PRON/nsubj>(das) <12:ADV/advmod>(gut)
    <13:PRON/nsubj>(Ich) <14:VERB/parataxis>(merke) <15:PRON/nsubj>(das) <16:ADV/advmod>(auch)
    <17:ADJ/xcomp>(richtig) <ROOT> <18:ADP/case>(bei) <19:DET/det:poss>(meinen) <20:NOUN/root>(Bruder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 12
    - 10
    - flat
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADP/case>(von) <4:DET/det>(der)\
    \ <5:NOUN/obl>(Detailf\xFClle) <6:PART/advmod>(nicht) <7:ADV/advmod>(so) <ROOT>\
    \ <8:ADP/case>(wie) <9:DET/det>(andere) <10:PROPN/root>(AAA) <12:NOUN/flat>(Spiele)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:AUX/root>(Ist) <ROOT> <2:PRON/nsubj>(Man) <3:AUX/aux>(wird) <4:ADV/advmod>(zusammen)
    <5:ADV/advmod>(noch) <6:ADV/advmod>(mal) <7:VERB/root>(wachsen) <8:ADV/advmod>(dadurch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(Dein) <2:NOUN/nsubj>(Schwiegerpapa) <3:VERB/root>(macht)
    <4:ADV/advmod>(jetzt) <5:ADP/compound:prt>(auf) <ROOT> <6:CCONJ/cc>(und) <7:ADJ/root>(schlau)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:ADP/case>(Bei) <2:DET/det>(der) <3:NOUN/obl>(Hitze) <4:AUX/root>(ist)
    <5:PRON/nsubj>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - advmod
  - !!python/tuple
    - 5
    - 11
    - aux
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - obl:arg
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADV/advmod>(da)
    <5:AUX/aux>(muss) <6:PRON/nsubj>(ich) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(gleich)
    <9:DET/det>(eine) <10:NOUN/obj>(Halbe) <11:VERB/root>(aufmachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 4
    - ccomp
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(w\xFCrd) <3:NOUN/obj>(s) <4:VERB/root>(anklicken)\
    \ <5:PRON/nsubj>(es) <6:AUX/cop>(ist) <7:ADJ/ccomp>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 15
    - advmod
  - !!python/tuple
    - 9
    - 15
    - aux
  - !!python/tuple
    - 10
    - 15
    - obl:arg
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 3
    - conj
  - !!python/tuple
    - 16
    - 15
    - cc
  sentence: <ROOT> <1:ADV/advmod>(also) <2:PRON/nsubj>(ich) <3:VERB/root>(achte) <4:ADV/advmod>(sehr)
    <5:ADP/case>(auf) <6:DET/det>(das) <7:NOUN/obl>(Gesicht) <8:ADV/advmod>(deswegen)
    <9:AUX/aux>(ist) <10:PRON/obl:arg>(mir) <11:PRON/nsubj>(das) <12:ADV/advmod>(auch)
    <13:ADV/advmod>(relativ) <14:ADV/advmod>(schnell) <15:VERB/conj>(aufgefallen)
    <16:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - xcomp
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/xcomp>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 14
    - obj
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 7
    - acl
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det:poss
  - !!python/tuple
    - 17
    - 18
    - obl
  - !!python/tuple
    - 18
    - 14
    - conj
  sentence: <1:ADV/root>(Aber) <ROOT> <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(wir) <6:NOUN/compound>(Influencer) <7:NOUN/root>(*innen) <8:PRON/obj>(die)
    <9:PRON/nsubj>(wir) <10:ADV/advmod>(nur) <11:ADP/case>(aus) <12:DET/det>(dem)
    <13:NOUN/obl>(Netz) <14:VERB/acl>(kennen) <15:CCONJ/case>(als) <16:DET/det:poss>(unsere)
    <17:NOUN/obl>(Peers) <18:VERB/conj>(wahrnehmen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 2
    - obl
  - !!python/tuple
    - 12
    - 2
    - advmod
  - !!python/tuple
    - 13
    - 2
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(haben) <3:PRON/obj>(sich) <4:CCONJ/cc>(sowohl)
    <5:NOUN/nsubj>(YouTube) <6:CCONJ/cc>(als) <7:ADV/advmod>(auch) <8:PROPN/conj>(Instagram)
    <9:ADV/advmod>(so) <10:ADP/case>(als) <11:NOUN/obl>(Plattformen) <12:ADV/advmod>(nochmal)
    <13:ADJ/advmod>(ganz) <ROOT> <14:VERB/root>(politisiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:AUX/root>(ist) <ROOT> <3:DET/det>(eine) <4:NOUN/nsubj>(Welt)
    <5:VERB/root>(zusammengebrochen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:AUX/root>(ist) <3:DET/det>(der) <4:PROPN/nsubj>(Tesla)
    <5:NOUN/flat>(Bot) <6:ADV/advmod>(wirklich) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advcl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 9
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:AUX/root>(ist) <3:ADV/advmod>(auch) <ROOT> <4:SCONJ/mark>(weil)
    <5:PRON/nsubj>(du) <6:VERB/advcl>(denkst) <7:DET/det>(der) <8:NOUN/nsubj>(Richter)
    <9:VERB/root>(checkt) <10:X/advmod>(s) <11:ADV/advmod>(ja) <12:ADV/advmod>(auch)
    <13:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(der) <2:PRON/obj>(sich) <ROOT> <3:VERB/root>(reingenerdet)
    <4:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(zieht) <3:PRON/obj>(sich) <4:ADV/advmod>(halt)
    <5:ADV/advmod>(einfach) <6:DET/obj>(alles) <7:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(mir) <ROOT> <3:ADP/case>(nach) <4:NOUN/obl>(Schreien)
    <5:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(wird) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advcl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/obj>(Was) <2:ADJ/advmod>(fr\xFCher) <3:ADV/advmod>(mal) <4:AUX/advcl>(war)\
    \ <5:VERB/root>(sehe) <6:PRON/nsubj>(ich) <7:ADV/advmod>(mittlerweile) <8:ADV/advmod>(so)\
    \ <ROOT> <9:ADJ/root>(verschwommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  sentence: "<1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Lebensweise) <3:AUX/cop>(ist)\
    \ <4:ADP/root>(zu) <ROOT> <5:ADP/case>(f\xFCr) <6:NOUN/root>(K\xF6rper) <7:CCONJ/cc>(und)\
    \ <8:NOUN/conj>(Geist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: <ROOT> <1:ADJ/amod>(harter) <2:NOUN/root>(Schwanz) <3:CCONJ/cc>(und) <4:ADJ/conj>(unanfassbarer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(vermisst) <3:PRON/obj>(mich) <4:ADV/advmod>(grade)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(wir) <ROOT> <3:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(kann) <3:PRON/nsubj>(man) <4:PRON/obj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(vermissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(grade) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(zerrissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(kann) <3:PRON/nsubj>(man) <4:PRON/obj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(vermissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(kann) <3:PRON/nsubj>(man) <4:PRON/obj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(vermissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(grade) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(zerrissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/root>(kann) <3:PRON/nsubj>(man) <4:PRON/obj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(vermissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(verwirrt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 3
    - conj
  sentence: <1:ADP/root>(um) <ROOT> <2:PART/mark>(zu) <3:VERB/root>(wirken) <4:CCONJ/cc>(oder)
    <5:ADV/advmod>(hart) <6:PART/mark>(zu) <7:VERB/conj>(klingen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Kram) <3:AUX/cop>(ist) <4:ADP/root>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - csubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:PRON/obj>(was) <2:PRON/nsubj>(du) <3:VERB/csubj>(bist) <4:VERB/root>(ist)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(fast) <7:ADV/advmod>(wieder) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: <1:NUM/dep>(18) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:DET/det>(ein) <6:ADV/obj>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PROPN/root>(Gabi) <4:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <2:NOUN/root>(Telefon) <4:ADV/advmod>(Nein) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 10
    - det
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 6
    - nmod
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Fast) <2:DET/det>(die) <3:NOUN/root>(H\xE4lfte) <4:ADP/case>(von)\
    \ <5:DET/det>(dem) <6:NOUN/nmod>(Preis) <7:DET/det>(des) <8:NOUN/compound>(Pools)\
    \ <10:PROPN/nmod>(Ist) <ROOT> <11:CCONJ/cc>(oder) <12:ADJ/root>(Stimmt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Boah) <2:PRON/nsubj>(das) <3:VERB/root>(sieht) <4:ADV/advmod>(ja)\
    \ <ROOT> <5:ADP/case>(aus) <6:PRON/nsubj>(Das) <7:AUX/cop>(ist) <8:ADV/advmod>(schon)\
    \ <9:ADJ/root>(monstr\xF6s)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(da) <3:AUX/root>(war) <4:PRON/expl>(es)
    <5:ADV/advmod>(einfach) <6:ADV/advmod>(so) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(du)
    <9:VERB/ccomp>(denkst) <10:X/advmod>(Oh) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 2
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - obl
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - cop
  - !!python/tuple
    - 16
    - 9
    - advmod
  sentence: <1:ADV/advmod>(hinterher) <2:VERB/root>(gekommen) <3:DET/det>(die) <4:ADJ/amod>(ganzen)
    <5:NOUN/nsubj>(Nachrichten) <6:PART/mark>(zu) <7:VERB/xcomp>(lesen) <8:PRON/nsubj>(Das)
    <9:AUX/parataxis>(war) <10:ADV/advmod>(echt) <11:ADP/case>(wie) <12:DET/det>(ein)
    <13:NOUN/obl>(Film) <14:PRON/nsubj>(Das) <15:AUX/cop>(war) <16:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  sentence: "<1:ADP/root>(wie) <ROOT> <2:ADJ/root>(sch\xF6n) <3:PRON/nsubj>(du) <4:AUX/cop>(warst)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 6
    - conj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:AUX/cop>(bin) <4:ADV/advmod>(voll)
    <5:DET/det>(der) <6:NOUN/root>(Follower) <7:ADP/case>(von) <8:PRON/nmod>(Ihr)
    <10:ADJ/conj>(voll) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:INTJ/advmod>(Jetz) <3:VERB/root>(geht's) <4:ADJ/advmod>(ganz) <ROOT>
    <5:ADP/root>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - flat
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(ganz) <3:ADV/advmod>(nebenbei) <4:VERB/root>(spitt)
    <5:PRON/nsubj>(ich) <ROOT> <6:ADP/case>(ab) <7:ADV/advmod>(so) <8:ADP/case>(wie)
    <9:PROPN/root>(Busta) <10:PROPN/flat>(Rhymes)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:VERB/root>(find)
    <5:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - cop
  - !!python/tuple
    - 9
    - 5
    - appos
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 9
    - flat
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(sind) <3:ADP/compound:prt>(zu) <ROOT>
    <4:ADP/mark>(um) <5:ADJ/root>(wahr) <6:PART/mark>(zu) <7:AUX/cop>(sein) <9:PROPN/appos>(viva)
    <10:PROPN/flat>(los) <11:PROPN/flat>(Tioz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(kennen) <3:PRON/obj>(sich) <4:ADV/advmod>(bestimmt)
    <5:ADJ/advmod>(super) <6:ADP/case>(mit) <7:DET/det>(dem) <8:NOUN/obl>(Thema) <9:ADP/case>(aus)
    <10:PROPN/nmod>(Ups) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:DET/det>(welche) <4:NOUN/obj>(Auswirkungen)
    <5:PRON/nsubj>(das) <6:VERB/root>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(sieht) <3:ADJ/advmod>(pl\xF6tzlich) <ROOT>\
    \ <4:CCONJ/cc>(und) <5:ADJ/root>(m\xE4chtig) <6:ADP/compound:prt>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(gerade) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(man) <4:ADV/advmod>(so)
    <5:NUM/nummod>(12) <6:NUM/nummod>(13) <7:NUM/root>(14) <8:AUX/cop>(ist) <ROOT>
    <9:ADV/advmod>(auch) <10:ADP/case>(in) <11:DET/det>(dem) <12:NOUN/obl>(Kopf) <13:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/det>(ein) <4:ADV/root>(bisschen)
    <ROOT> <5:CCONJ/cc>(aber) <6:DET/det>(die) <7:NOUN/nsubj>(Eltern) <8:AUX/cop>(sind)
    <9:ADV/advmod>(total) <10:ADJ/root>(locker)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - ccomp
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(hat) <3:PRON/nsubj>(sie) <4:PRON/obj>(das)
    <5:VERB/root>(gesehen) <6:AUX/aux>(hat) <7:VERB/xcomp>(gesagt) <8:PRON/nsubj>(das)
    <9:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADJ/nsubj>(Okay) <2:DET/det>(die) <3:NOUN/nsubj>(Kiste) <4:VERB/root>(ist)\
    \ <5:ADV/advmod>(vielleicht) <6:ADV/advmod>(noch) <7:PRON/obj>(etwas) <8:ADP/compound:prt>(zu)\
    \ <ROOT> <9:ADP/case>(f\xFCr) <10:PRON/root>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(da) <3:VERB/root>(war) <4:ADP/case>(bei)
    <5:PRON/obl>(mir) <6:ADV/advmod>(auch) <7:ADV/advmod>(so) <8:PROPN/nsubj>(Boah)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:PRON/obj>(mich) <4:DET/obj>(einer)
    <5:VERB/root>(fragt) <8:ADV/advmod>(Wie) <9:VERB/parataxis>(kannst) <10:PRON/nsubj>(du)
    <11:ADV/advmod>(nur) <12:ADV/advmod>(so) <ROOT> <13:DET/det:poss>(sein) <14:NOUN/root>(Punch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:DET/det>(der)
    <5:NOUN/nsubj>(Raum) <6:AUX/cop>(ist) <7:ADJ/case>(voller) <8:NOUN/root>(Magie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(brauchst) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/cop>(waren) <3:DET/det>(alle) <4:ADV/root>(so)\
    \ <ROOT> <5:ADJ/root>(durchn\xE4sst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Bekanntheitsgrad) <3:ADP/case>(in)
    <4:PROPN/nmod>(Deutschland) <5:AUX/cop>(ist) <6:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(leben) <ROOT> <3:ADP/case>(zwischen)
    <4:NOUN/root>(Knast) <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/nmod>(Existenzminimum)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:DET/advmod>(viel) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - flat
  sentence: <1:PRON/expl>(es) <2:AUX/cop>(ist) <3:ADP/case>(Vor) <4:PROPN/root>(-Ba-Ba-Ba-Ba)
    <6:PROPN/flat>(Bye) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 12
    - 10
    - flat
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(dr\xFCck) <3:ADP/case>(auf) <4:PRON/obl>('s)\
    \ <5:NOUN/nsubj>(Gas) <6:VERB/conj>(zieh) <7:ADP/case>(an) <8:PRON/obl>(euch)\
    \ <9:ADP/case>(Vor) <10:PROPN/obl>(-Ba-Ba-Ba-Ba) <12:PROPN/flat>(Bye) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:NOUN/root>(Mensch) <2:PRON/appos>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PART/advmod>(nicht) <2:ADV/root>(so) <ROOT> <3:VERB/root>(mitgerissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(auch) <ROOT> <4:PRON/nsubj>(das)
    <5:AUX/root>(war) <6:ADV/advmod>(oben) <7:ADP/case>(in) <8:DET/det>(dem) <9:NOUN/obl>(Wohnzimmer)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 10
    - nmod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 13
    - nmod
  sentence: "<1:NOUN/nsubj>(Leute) <2:ADP/case>(in) <3:ADV/advmod>(kaum) <4:DET/det>(einem)\
    \ <5:NOUN/nmod>(Land) <6:VERB/root>(lernen) <7:ADJ/amod>(junge) <8:NOUN/nsubj>(Menschen)\
    \ <9:ADV/advmod>(so) <ROOT> <10:DET/root>(viel) <11:ADP/case>(f\xFCr) <12:DET/det:poss>(ihr)\
    \ <13:NOUN/nmod>(Abi) <14:ADP/case>(wie) <15:ADP/case>(in) <16:PROPN/nmod>(S\xFC\
    dkorea)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 9
    - obl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 9
    - advmod
  - !!python/tuple
    - 16
    - 19
    - nsubj
  - !!python/tuple
    - 17
    - 19
    - cop
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 9
    - parataxis
  - !!python/tuple
    - 20
    - 22
    - advmod
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 25
    - advmod
  - !!python/tuple
    - 23
    - 24
    - advmod
  - !!python/tuple
    - 24
    - 25
    - advmod
  - !!python/tuple
    - 25
    - 3
    - parataxis
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:PRON/nsubj>(Ich) <3:VERB/root>(krieg) <4:PRON/obj>(sie)\
    \ <5:ADV/advmod>(wirklich) <6:PART/advmod>(nicht) <7:ADP/case>(auf) <8:PRON/obl>(Das)\
    \ <9:VERB/conj>(schafft) <10:PRON/nsubj>(man) <11:ADV/advmod>(jetzt) <12:ADP/case>(von)\
    \ <13:NOUN/obl>(Hand) <14:PART/advmod>(nicht) <15:ADV/advmod>(mehr) <16:PRON/nsubj>(Das)\
    \ <17:AUX/cop>(ist) <18:ADV/advmod>(zu) <19:DET/parataxis>(viel) <20:ADV/advmod>(Schon)\
    \ <21:ADV/advmod>(zu) <22:ADV/advmod>(sp\xE4t) <23:ADV/advmod>(Schon) <24:ADV/advmod>(zu)\
    \ <25:ADJ/parataxis>(sp\xE4t)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 4
    - obl
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 4
    - parataxis
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 12
    - obj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 12
    - advmod
  - !!python/tuple
    - 17
    - 18
    - case
  - !!python/tuple
    - 18
    - 12
    - obl
  - !!python/tuple
    - 19
    - 20
    - nsubj
  - !!python/tuple
    - 20
    - 12
    - xcomp
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 0
    - root
  - !!python/tuple
    - 23
    - 24
    - advmod
  - !!python/tuple
    - 24
    - 22
    - advmod
  - !!python/tuple
    - 25
    - 26
    - det
  - !!python/tuple
    - 26
    - 22
    - nsubj
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(das) <3:NOUN/nsubj>(Wasser) <4:VERB/root>(dr\xFC\
    ckt) <5:ADV/mark>(weiter) <6:ADV/advmod>(zu) <7:ADJ/advmod>(stark) <8:ADP/case>(in)\
    \ <9:DET/det>(den) <10:NOUN/obl>(Keller) <11:PRON/nsubj>(Ich) <12:VERB/parataxis>(kriege)\
    \ <13:DET/det>(das) <14:NOUN/obj>(Fenster) <15:PART/advmod>(nicht) <16:ADV/advmod>(mehr)\
    \ <17:ADP/case>(zu) <18:NOUN/obl>(Vergiss) <19:PRON/nsubj>(es) <20:NOUN/xcomp>(Okay)\
    \ <ROOT> <21:ADV/advmod>(Vielleicht) <22:VERB/root>(hilft) <23:ADV/advmod>(nur)\
    \ <24:ADV/advmod>(noch) <25:DET/det>(die) <26:NOUN/nsubj>(T\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - cc
  sentence: "<1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(was) <3:NOUN/obj>(Filme) <4:ADV/advmod>(so)\
    \ <5:VERB/root>(machen) <6:AUX/aux>(k\xF6nnen) <7:CCONJ/cc>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 16
    - mark
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 16
    - obl
  - !!python/tuple
    - 16
    - 8
    - advcl
  - !!python/tuple
    - 17
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(immer) <6:ADV/advmod>(wieder) <ROOT> <7:PRON/nsubj>(Das) <8:AUX/root>(ist)
    <9:ADV/advmod>(halt) <10:ADV/advmod>(wirklich) <11:ADP/mark>(wie) <12:SCONJ/mark>(wenn)
    <13:PRON/nsubj>(man) <14:ADP/case>(auf) <15:NOUN/obl>(Entzug) <16:AUX/advcl>(ist)
    <17:ADV/advmod>(teilweise)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nun) <2:AUX/root>(bin) <3:PRON/nsubj>(ich) <ROOT> <4:ADJ/root>(entt\xE4\
    uscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(er) <2:VERB/root>(macht) <3:ADV/advmod>(zwar) <ROOT> <4:NOUN/root>(Vergleiche)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 8
    - obj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT> <4:PRON/nsubj>(ich)\
    \ <5:VERB/root>(steh) <6:ADP/case>(in) <7:PRON/obl>(dem) <8:VERB/conj>(\u201A\
    intressiert) <9:PRON/obj>(mich) <10:PART/advmod>(nicht) <12:NOUN/obj>(Fadenkreuz)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(denn) <2:ADP/case>(in) <3:DET/det:poss>(deinem) <4:NOUN/obl>(Label)\
    \ <5:VERB/root>(gibt) <6:PRON/nsubj>(es) <7:ADV/advmod>(nur) <8:ADV/advmod>(so)\
    \ <9:ADJ/xcomp>(\xFCbertrieben) <ROOT> <10:ADJ/root>(behinderte)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <4:ADV/advmod>(schon)
    <5:DET/advmod>(viel) <6:ADV/advmod>(zu) <7:DET/det>(viele) <8:NOUN/obj>(Menschen)
    <ROOT> <9:VERB/root>(belogen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/det>(der) <3:NOUN/nsubj>(Doubletime) <4:PART/advmod>(nicht)
    <ROOT> <5:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/root>(aber) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:PRON/obj>(das)
    <5:VERB/root>(kennst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Eine) <2:NOUN/root>(Lederjacke) <3:CCONJ/cc>(und) <5:NOUN/conj>(ne)
    <ROOT> <6:ADJ/amod>(designte) <7:NOUN/root>(Brille)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Plus) <2:PROPN/nsubj>(Kevin) <3:DET/det:poss>(dein) <4:NOUN/obj>(Atem)\
    \ <5:VERB/root>(stinkt) <ROOT> <6:ADP/case>(nach) <7:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 3
    - advcl
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux
  sentence: <1:NOUN/root>(Pass) <2:ADV/advmod>(mal) <3:ADJ/advmod>(besser) <4:ADP/case>(auf)
    <5:DET/det:poss>(dein) <6:NOUN/nmod>(Girl) <7:ADP/case>(auf) <8:SCONJ/mark>(weil)
    <9:PRON/nsubj>(ich) <10:PRON/obj>(sie) <11:ADV/advcl>(grad) <ROOT> <12:VERB/root>(gebangt)
    <13:AUX/aux>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 11
    - obl:arg
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fand) <3:PRON/obj>(es) <ROOT> <4:ADV/advmod>(also)
    <5:PRON/nsubj>(ich) <6:AUX/aux>(hab) <7:PRON/obj>(es) <8:VERB/root>(gelesen) <9:CCONJ/cc>(und)
    <10:PRON/nsubj>(ich) <11:VERB/conj>(dachte) <12:PRON/obl:arg>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 7
    - csubj
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - compound:prt
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:DET/obj>(viel) <4:VERB/csubj>(lesen)
    <5:AUX/aux>(muss) <6:AUX/cop>(ist) <7:DET/root>(viel) <8:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:PRON/root>(das) <2:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - dep
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:NOUN/obl>(Wahnvorstellungen) <3:AUX/root>(ist) <4:PRON/nsubj>(man)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/dep>(von) <7:ADV/advmod>(etwas) <8:VERB/root>(\xFC\
    berzeugt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - expl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  sentence: "<1:CCONJ/cc>(Aber) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/obl>(Ma\xDF\
    e) <5:AUX/root>(ist) <6:PRON/expl>(es) <7:ADV/advmod>(einfach) <8:ADV/advmod>(ziemlich)\
    \ <ROOT> <9:VERB/root>(find) <10:PRON/nsubj>(ich)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 6
    - nmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Gerade) <2:ADP/case>(in) <3:PROPN/nmod>(Stuttgart) <4:AUX/cop>(ist)
    <5:PRON/nsubj>(das) <6:ADJ/root>(echt) <ROOT> <7:ADP/case>(mit) <8:DET/det>(den)
    <9:NOUN/root>(Kontrollen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:DET/det>(die) <2:NOUN/root>(Story) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(wohl)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(wirklich) <ROOT> <7:VERB/root>(voranbringen)
    <8:AUX/aux:pass>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(die) <3:ADV/advmod>(so) <4:ADJ/root>(richtig)
    <ROOT> <5:AUX/root>(sind)
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <2:PROPN/dep>(Susanne) <4:ADV/advmod>(Da) <5:AUX/cop>(ist) <6:DET/det>(die)
    <7:NOUN/root>(Haut) <8:PRON/nsubj>(das) <9:AUX/cop>(ist) <10:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT> <4:CCONJ/cc>(und)
    <5:ADV/advmod>(echt) <6:ADJ/root>(cool) <7:AUX/cop>(gewesen) <8:ADP/case>(von)
    <9:PRON/nmod>(ihr)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADJ/root>(total)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(denke) <3:PRON/nsubj>(ich) <4:ADV/advmod>(manchmal)
    <5:ADV/advmod>(so) <6:ADV/advmod>(ey) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(Dass) <2:AUX/cop>(war) <3:ADJ/root>(bestimmt) <ROOT> <4:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Genau) <3:X/root>(Ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 15
    - mark
  - !!python/tuple
    - 10
    - 15
    - nsubj
  - !!python/tuple
    - 11
    - 15
    - advmod
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - nmod
  - !!python/tuple
    - 15
    - 2
    - advcl
  - !!python/tuple
    - 16
    - 15
    - cop
  - !!python/tuple
    - 17
    - 15
    - cop
  - !!python/tuple
    - 18
    - 17
    - nsubj
  - !!python/tuple
    - 19
    - 20
    - advmod
  - !!python/tuple
    - 20
    - 2
    - appos
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 0
    - root
  - !!python/tuple
    - 23
    - 22
    - advmod
  - !!python/tuple
    - 24
    - 22
    - nsubj
  sentence: <1:ADV/advmod>(sonst) <2:VERB/root>(lag) <3:PRON/nsubj>(ich) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(nur) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/obl>(Bett) <9:SCONJ/mark>(wenn)
    <10:PRON/nsubj>(du) <11:ADV/advmod>(dann) <12:ADP/case>(aus) <13:DET/det>(dem)
    <14:NOUN/nmod>(Bett) <15:INTJ/advcl>(raus) <16:AUX/cop>(bist) <17:INTJ/cop>(merkst)
    <18:PRON/nsubj>(du) <19:ADV/advmod>(ja) <20:X/appos>(boah) <ROOT> <21:ADV/advmod>(da)
    <22:VERB/root>(geht) <23:ADV/advmod>(ja) <24:PRON/nsubj>(nix)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 13
    - cc
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 13
    - obj
  - !!python/tuple
    - 11
    - 13
    - aux
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 6
    - conj
  - !!python/tuple
    - 14
    - 17
    - mark
  - !!python/tuple
    - 15
    - 17
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 13
    - ccomp
  sentence: <1:ADP/case>(von) <2:NOUN/root>(Natur) <3:ADV/advmod>(so) <ROOT> <4:NOUN/nsubj>(Energie)
    <5:NOUN/appos>(Level) <6:VERB/root>(hat) <7:CCONJ/cc>(und) <8:ADV/advmod>(so)
    <9:DET/det>(eine) <10:NOUN/obj>(Lebensfreude) <11:AUX/aux>(hat) <12:PRON/nsubj>(ich)
    <13:VERB/conj>(glaube) <14:SCONJ/mark>(wie) <15:PRON/nsubj>(er) <16:ADV/advmod>(schon)
    <17:VERB/ccomp>(gesagt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: "<1:SCONJ/root>(Wenn) <2:PRON/nsubj>(man) <3:PRON/obj>(es) <4:ADJ/advmod>(ganz)\
    \ <ROOT> <5:VERB/root>(ausdr\xFCcken) <6:AUX/aux>(will)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(wie)\
    \ <5:PRON/nsubj>(man) <6:PRON/obj>(sich) <7:ADP/case>(an) <8:PROPN/obl>(Corona)\
    \ <9:VERB/root>(gew\xF6hnt) <10:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: "<1:PRON/nsubj>(Was) <2:PROPN/nsubj>(Erbaqyt) <3:ADV/advmod>(da) <4:VERB/root>(erz\xE4\
    hlt) <5:AUX/aux>(ist) <6:ADV/advmod>(ziemlich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - aux
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Von) <2:ADP/case>(wie) <3:DET/det>(vielen) <4:NOUN/obl>(Leuten)\
    \ <5:VERB/root>(h\xF6rst) <6:PRON/nsubj>(du) <ROOT> <7:PRON/nsubj>(der) <8:AUX/aux>(hat)\
    \ <9:VERB/root>(studiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - amod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 12
    - csubj
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADV/advmod>(hier) <3:ADP/case>(in) <4:DET/det>(den)\
    \ <5:ADJ/amod>(letzten) <6:NUM/nummod>(zweieinhalb) <7:NOUN/obl>(Jahren) <8:VERB/csubj>(entstanden)\
    \ <9:AUX/aux>(ist) <10:AUX/cop>(ist) <11:ADV/advmod>(ganz) <12:ADJ/root>(sch\xF6\
    n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 4
    - conj
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(das) <3:AUX/root>(war) <ROOT> <4:VERB/root>(anzusehen)
    <5:CCONJ/cc>(und) <6:ADV/advmod>(auch) <7:DET/det>(ein) <8:ADJ/amod>(solides)
    <9:NOUN/conj>(Spiel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 7
    - compound:prt
  sentence: "<1:ADJ/root>(hoch) <2:PRON/nsubj>(was) <3:ADP/case>(f\xFCr) <4:NOUN/nmod>(Animations)\
    \ <5:ADV/advmod>(eigentlich) <6:ADV/advmod>(ziemlich) <ROOT> <7:AUX/root>(ist)\
    \ <8:CCONJ/cc>(und) <9:ADV/advmod>(auch) <10:NOUN/conj>(danke) <11:ADP/compound:prt>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:ADV/advmod>(pers\xF6nlich)\
    \ <4:VERB/root>(finde) <5:PRON/obj>(das) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boom) <2:PRON/nsubj>(Es) <3:AUX/cop>(ist) <4:ADJ/root>(echt)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:DET/det>(der) <3:NOUN/nsubj>(Fluchtweg) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(ganz) <6:ADV/advmod>(so) <ROOT> <7:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 4
    - appos
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADV/advmod>(so) <4:ADJ/root>(dankbar)\
    \ <5:PRON/obj>(dir) <6:ADV/advmod>(daf\xFCr) <7:PRON/nsubj>(Du) <8:AUX/cop>(bist)\
    \ <9:DET/appos>(ein) <ROOT> <10:ADJ/amod>(cooler) <11:NOUN/root>(Mensch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 10
    - mark
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(wie)
    <5:PRON/nsubj>(man) <6:ADP/case>(in) <7:DET/det>(den) <8:ADJ/amod>(letzten) <9:NOUN/obl>(Jahren)
    <10:VERB/root>(gesehen) <11:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 12
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 12
    - obl
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - xcomp
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:AUX/root>(ist) <4:PRON/nsubj>(es)\
    \ <5:ADV/advmod>(halt) <6:ADV/advmod>(wirklich) <ROOT> <7:ADJ/advmod>(eng) <8:ADP/case>(wie)\
    \ <9:PRON/obl>(das) <10:DET/obj>(einem) <11:VERB/xcomp>(umklammert) <12:VERB/root>(h\xE4\
    lt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT> <4:PRON/nsubj>(Ich)
    <5:VERB/root>(liebe) <6:PRON/obj>(es)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(man) <3:VERB/root>(hat) <4:ADV/advmod>(noch)\
    \ <5:NOUN/obj>(Superf\xE4higkeiten) <6:PRON/obj>(die) <7:PRON/obj>(sich) <8:ADV/advmod>(auch)\
    \ <ROOT> <9:VERB/root>(anf\xFChlen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT> <4:ADV/root>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 4
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/root>(dass)
    <5:ADV/advmod>(so) <6:DET/det>(viele) <7:NOUN/nsubj>(Leute) <8:ADP/case>(wegen)
    <9:PRON/obl>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Man) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADJ/root>(voll)
    <ROOT> <5:ADV/advmod>(wo) <6:PRON/nsubj>(man) <7:PRON/obj>(sich) <8:ADV/advmod>(voll)
    <9:VERB/root>(konzentrieren) <10:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 11
    - aux
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/root>(W\xE4hrend) <2:PRON/nsubj>(es) <3:ADP/case>(f\xFCr) <4:PRON/obl>(dich)\
    \ <5:ADV/advmod>(evtl) <ROOT> <6:AUX/aux>(ist) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(es)\
    \ <9:ADV/advmod>(sowas) <10:ADV/advmod>(noch) <11:VERB/root>(gibt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cc
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - conj
  - !!python/tuple
    - 14
    - 16
    - cc
  - !!python/tuple
    - 15
    - 16
    - det:poss
  - !!python/tuple
    - 16
    - 13
    - conj
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 13
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADV/advmod>(sowieso) <4:ADV/advmod>(schon)
    <5:ADJ/root>(intensiv) <6:CCONJ/cc>(und) <ROOT> <7:CCONJ/cc>(und) <8:ADV/root>(dann)
    <10:CCONJ/cc>(und) <11:ADP/case>(mit) <12:DET/det>(der) <13:NOUN/conj>(Meldung)
    <14:CCONJ/cc>(bzw) <15:DET/det:poss>(sein) <16:NOUN/conj>(Kind) <17:ADV/advmod>(dann)
    <18:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Glock) <2:PROPN/appos>(21) <3:AUX/root>(ist) <4:ADP/case>(mit)
    <5:DET/det:poss>(seinem) <6:NOUN/obl>(Rap) <ROOT> <7:NOUN/dep>(viral) <8:VERB/root>(gegangen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:DET/nsubj>(alles) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 9
    - obl
  - !!python/tuple
    - 5
    - 9
    - aux
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - conj
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 12
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 12
    - advmod
  - !!python/tuple
    - 17
    - 18
    - xcomp
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: "<1:ADP/case>(Wie) <2:ADP/case>(zu) <3:DET/det>(der) <4:NOUN/obl>(H\xF6\
    lle) <5:AUX/aux>(konnte) <6:PRON/nsubj>(es) <7:ADV/advmod>(so) <8:ADJ/advmod>(weit)\
    \ <9:VERB/root>(kommen) <10:CCONJ/cc>(Und) <11:ADV/advmod>(wie) <12:VERB/conj>(konnte)\
    \ <13:DET/det>(die) <14:NOUN/nsubj>(Mafia) <15:ADV/advmod>(\xFCberhaupt) <16:ADV/advmod>(so)\
    \ <ROOT> <17:ADJ/xcomp>(m\xE4chtig) <18:VERB/root>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - xcomp
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 1
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:VERB/root>(deponiert) <2:ADV/advmod>(einfach) <3:VERB/xcomp>(zubuddelt)
    <4:CCONJ/cc>(und) <5:DET/det>(die) <6:NOUN/nsubj>(Menschen) <7:ADP/case>(vor)
    <8:NOUN/obl>(Ort) <9:VERB/conj>(leiden) <ROOT> <10:ADV/root>(darunter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - acl
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:VERB/root>(geht) <4:PRON/obl:arg>(mir)
    <ROOT> <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/root>(Arsch) <8:ADV/advmod>(vorbei)
    <9:PRON/obj>(was) <10:DET/nsubj>(alle) <11:VERB/acl>(denken)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:X/compound>(A) <2:PROPN/amod>(Serbian) <3:X/obj>(Film) <4:VERB/root>(fandest)
    <5:PRON/nsubj>(du) <6:ADV/advmod>(so) <ROOT> <8:PRON/nsubj>(was) <9:PROPN/root>(niggah)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:VERB/root>(w\xE4r') <3:DET/det>(eine) <4:NOUN/nsubj>(Platte)\
    \ <5:ADV/advmod>(zu) <6:ADJ/obj>(zweit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(Weil) <2:PRON/nsubj>(ich) <ROOT> <3:NOUN/root>(spitte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/root>(Ey) <2:DET/det>(der) <3:NOUN/nsubj>(Topf) <4:AUX/cop>(ist)
    <ROOT> <5:ADV/root>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:PRON/nsubj>(es) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(aber) <2:DET/root>(alle) <3:ADV/advmod>(davon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(wir) <3:ADV/advmod>(so) <ROOT> <4:NOUN/root>(divided)
    <5:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  sentence: <1:VERB/root>(mach) <2:DET/det>(den) <3:NOUN/obj>(Asphalt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(spucke) <3:DET/obj>(viel) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - ccomp
  sentence: "<1:ADV/advmod>(Vielleicht) <2:AUX/aux>(haben) <3:PRON/nsubj>(wir) <4:PRON/obj>(uns)\
    \ <5:VERB/root>(getroffen) <7:PRON/nsubj>(Das) <8:AUX/ccomp>(w\xE4re) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PROPN/compound>(Hey) <2:NOUN/nsubj>(Leute) <3:VERB/root>(Guckt) <4:ADV/advmod>(mal)
    <5:ADP/mark>(wie) <ROOT> <6:ADV/advmod>(hoch) <7:PRON/nsubj>(ich) <8:VERB/root>(springen)
    <9:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det:poss>(ihre) <3:NOUN/nmod>(K\xF6rpergr\xF6\
    \xDFe) <4:AUX/cop>(ist) <5:PRON/root>(das) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 14
    - aux
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 14
    - aux
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 14
    - obl
  - !!python/tuple
    - 10
    - 14
    - aux
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/root>(warum) <ROOT> <2:AUX/aux>(ist) <3:SCONJ/mark>(dass) <4:DET/nsubj>(alle)\
    \ <5:ADV/advmod>(da) <6:AUX/aux>(sind) <7:ADP/case>(An) <8:DET/det>(dem) <9:NOUN/obl>(Anfang)\
    \ <10:AUX/aux>(hab) <11:PRON/nsubj>(ich) <12:ADV/advmod>(ja) <13:ADV/advmod>(schon)\
    \ <14:VERB/root>(erz\xE4hlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 12
    - advcl
  - !!python/tuple
    - 10
    - 12
    - aux
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - obj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 18
    - det
  - !!python/tuple
    - 17
    - 18
    - det:poss
  - !!python/tuple
    - 18
    - 15
    - nsubj
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:PRON/nsubj>(das) <4:ADV/advmod>(jetzt)\
    \ <5:ADP/case>(von) <6:DET/det>(der) <7:ADJ/amod>(europ\xE4ischen) <8:NOUN/obl>(Sicht)\
    \ <9:VERB/advcl>(sieht) <10:AUX/aux>(w\xFCrde) <11:PRON/nsubj>(man) <12:VERB/root>(denken)\
    \ <13:PROPN/obj>(Woah) <ROOT> <14:ADV/advmod>(Wie) <15:AUX/root>(k\xF6nnen) <16:DET/det>(die)\
    \ <17:DET/det:poss>(ihre) <18:NOUN/nsubj>(Kinder)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 16
    - cc
  - !!python/tuple
    - 12
    - 16
    - aux
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - obl
  - !!python/tuple
    - 16
    - 4
    - conj
  - !!python/tuple
    - 17
    - 16
    - obj
  - !!python/tuple
    - 18
    - 22
    - advmod
  - !!python/tuple
    - 19
    - 22
    - nsubj
  - !!python/tuple
    - 20
    - 22
    - cop
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 0
    - root
  sentence: "<1:PRON/nsubj>(der) <2:AUX/cop>(war) <3:ADV/advmod>(dann) <4:ADJ/root>(positiv)\
    \ <5:CCONJ/cc>(und) <6:ADV/advmod>(dann) <7:VERB/conj>(sa\xDF) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(erstmal) <10:ADV/advmod>(da) <11:CCONJ/cc>(und) <12:AUX/aux>(habe)\
    \ <13:ADP/case>(auf) <14:DET/det>(den) <15:NOUN/obl>(Test) <16:VERB/conj>(gestarrt)\
    \ <17:PROPN/obj>(Wow) <ROOT> <18:ADV/advmod>(okay) <19:PRON/nsubj>(Du) <20:AUX/cop>(bist)\
    \ <21:ADV/advmod>(jetzt) <22:ADJ/root>(schwanger)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/root>(Ja) <ROOT> <2:ADV/advmod>(Also) <3:PRON/nsubj>(er) <4:AUX/aux>(hat)
    <5:DET/det>(diesen) <6:NOUN/obj>(Selbstversuch) <7:ADV/advmod>(jetzt) <8:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: "<1:ADP/case>(Von) <2:NOUN/nmod>(Leuten) <3:PRON/root>(die) <ROOT> <4:ADV/advmod>(daf\xFC\
    r) <5:AUX/root>(sind) <6:SCONJ/mark>(dass) <7:DET/det>(die) <8:NOUN/nsubj>(Quellcodes)\
    \ <9:ADP/case>(von) <10:NOUN/nmod>(Apps)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/nsubj>(alles) <2:AUX/cop>(war) <3:ADV/root>(so) <ROOT> <4:ADJ/root>(verschmiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(das) <2:NOUN/nsubj>(Leben) <3:AUX/cop>(war) <4:ADV/root>(so)
    <ROOT> <5:ADP/case>(zu) <6:PRON/root>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(denn) <2:ADP/advmod>(wie) <ROOT> <3:PRON/nsubj>(es) <4:ADV/advmod>(auch)
    <5:VERB/root>(scheint)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - obl
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(w\xE4r) <3:ADP/root>(zu) <ROOT> <4:VERB/root>(bezogen)\
    \ <5:CCONJ/cc>(und) <6:ADP/case>(zu) <7:ADJ/amod>(harter) <8:NOUN/obl>(Stra\xDF\
    enrap)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(also) <2:ADV/advmod>(laber) <3:PART/advmod>(nicht) <4:ADP/root>(von)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/advmod>(dann) <2:AUX/root>(wird's) <3:ADJ/advmod>(automatisch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:ADP/mark>(mit) <4:VERB/root>(anzusehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - obj
  sentence: <1:PROPN/root>(Boah) <2:ADP/advmod>(wie) <ROOT> <3:PRON/nsubj>(du) <4:VERB/root>(isst)
    <5:ADP/case>(bei) <6:PROPN/obl>(Burger) <7:PROPN/flat>(King) <8:ADV/advmod>(nen)
    <9:PROPN/obj>(Whopper)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(bin) <4:ADV/advmod>(einfach)
    <5:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  sentence: "<1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Nutte) <3:VERB/root>(st\xF6hnt)\
    \ <4:ADV/advmod>(so) <ROOT> <5:CCONJ/cc>(und) <6:DET/det>(alle) <7:NOUN/nsubj>(Fotzen)\
    \ <8:VERB/root>(heben) <9:ADP/compound:prt>(ab)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADJ/root>(\xFCberheblich)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:AUX/root>(bin) <2:ADP/case>(auf) <3:NOUN/obl>(Alk) <4:CCONJ/cc>(und)\
    \ <ROOT> <5:VERB/root>(bet\xE4ubt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/nsubj>(Block) <3:VERB/root>(brennt) <ROOT>
    <4:SCONJ/mark>(wenn) <5:PRON/nsubj>(ich) <6:VERB/root>(rap)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Nichts) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:ADP/case>(wie)
    <5:DET/det>(der) <6:NOUN/root>(Drang)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/obj>(mich) <3:ADV/advmod>(net) <4:VERB/root>(juckt)
    <5:SCONJ/mark>(ob) <6:DET/det:poss>(deine) <7:NOUN/nsubj>(Stadt) <8:ADV/advmod>(so)
    <ROOT> <9:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:CCONJ/cc>(und) <4:VERB/root>(schnupf)
    <5:ADV/advmod>(mehr) <6:ADP/case>(als) <7:DET/det:poss>(deine) <8:NOUN/nmod>(Superstars)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - dep
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/root>(Was) <4:X/advmod>(Oh) <5:SCONJ/dep>(wie) <ROOT> <6:INTJ/advmod>(Oh)
    <7:DET/det:poss>(mein) <8:NOUN/root>(Gott)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADV/advmod>(davon)
    <5:VERB/root>(besessen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(liegen) <ROOT> <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/root>(Trend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - acl
  sentence: "<1:CCONJ/cc>(Und) <2:DET/root>(keine) <ROOT> <3:ADJ/amod>(bekannte) <4:NOUN/root>(Olle)\
    \ <5:PRON/nsubj>(die) <6:PRON/obj>(sich) <7:ADV/advmod>(t\xE4glich) <8:ADV/advmod>(schlecht)\
    \ <9:VERB/acl>(verkauft)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(wer) <2:AUX/root>(ist) <ROOT> <3:ADP/case>(ohne) <4:PROPN/root>(Butterfly)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:X/advmod>(Oh) <2:ADV/root>(ja) <ROOT> <3:DET/root>(Einige)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 5
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(sagen) <ROOT> <3:CCONJ/cc>(und) <4:ADJ/conj>(abgefahren)
    <5:ADJ/root>(mega) <6:CCONJ/cc>(und) <7:ADJ/conj>(extrem)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux:pass
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  sentence: "<1:PRON/root>(Das) <2:AUX/aux:pass>(wird) <ROOT> <3:NOUN/root>(Mann)\
    \ <4:PROPN/appos>(Tsch\xFCss)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - advmod
  sentence: <1:PROPN/nsubj>(Hey) <2:PROPN/flat>(Mann) <3:VERB/root>(sag) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(Wie) <ROOT> <6:CCONJ/cc>(und) <7:VERB/root>(abgefahren) <8:AUX/cop>(ist)
    <9:DET/det>(die) <10:NOUN/nsubj>(Action) <11:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - appos
  - !!python/tuple
    - 6
    - 1
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - flat
  sentence: <1:NOUN/root>(Pass) <2:ADP/case>(auf) <3:PROPN/nmod>(Brett) <4:DET/det>(Die)
    <5:PROPN/appos>(Grafik) <6:AUX/cop>(ist) <ROOT> <7:PROPN/root>(Last) <8:PROPN/flat>(Gen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - cop
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:ADV/advmod>(ja) <3:ADJ/root>(gut) <4:AUX/cop>(ist)
    <5:ADV/advmod>(ja) <6:ADJ/advmod>(gut) <7:PRON/nsubj>(Es) <8:AUX/cop>(war) <ROOT>
    <9:VERB/root>(abgefahren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT> <4:ADJ/root>(Abgefahren)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: "<1:ADV/advmod>(Immer) <2:ADV/advmod>(sch\xF6n) <3:ADJ/root>(reich) <4:CCONJ/cc>(und)\
    \ <ROOT> <5:VERB/root>(bleiben) <6:ADJ/amod>(liebe) <7:NOUN/obj>(Leute)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(fickt) <3:ADV/advmod>(so) <ROOT> <4:NOUN/root>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obl:arg
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(T\xFCrsteher) <4:VERB/root>(gab)\
    \ <5:PRON/obl:arg>(mir) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(auf) <8:DET/det>(das)\
    \ <9:NOUN/root>(Maul)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - case
  sentence: <1:PRON/root>(Man) <2:ADP/case>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 6
    - acl
  sentence: "<ROOT> <1:ADV/advmod>(da) <2:AUX/cop>(ist) <3:DET/det>(ein) <4:ADJ/amod>(richtiger)\
    \ <5:NOUN/nsubj>(Football) <6:NOUN/root>(Trainer) <7:PRON/nsubj>(der) <8:DET/det>(die)\
    \ <9:ADJ/amod>(franz\xF6sische) <10:NOUN/obj>(Nationalmannschaft) <11:VERB/acl>(trainiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/root>(Flow) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/det>(der) <2:NOUN/root>(Flow) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  sentence: "<1:DET/det>(Andere) <2:NOUN/nsubj>(Menschen) <3:VERB/root>(f\xFChlen)\
    \ <4:ADV/advmod>(da) <5:ADV/advmod>(anders) <6:CCONJ/cc>(und) <7:PRON/nsubj>(die)\
    \ <8:VERB/conj>(feiern) <9:PRON/obj>(euch) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: <1:ADV/root>(Wie) <ROOT> <2:AUX/cop>(ist) <3:ADV/advmod>(bitte) <4:DET/det>(der)
    <5:NOUN/compound>(Wasser) <7:NOUN/root>(verbrauch) <8:ADP/case>(bei) <9:NOUN/nmod>(Cashews)
    <10:CCONJ/cc>(und) <11:NOUN/conj>(Mandeln)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/root>(Ficke) <2:DET/det>(die) <3:NOUN/dep>(Szene) <4:ADP/dep>(zu)
    <ROOT> <6:X/root>(Wah)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <1:DET/nsubj>(Viele) <2:VERB/root>(finden's) <3:DET/obj>(viel) <4:ADP/compound:prt>(zu)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(willste) <2:ADV/advmod>(e\u2019n) <3:ADP/compound:prt>(auf)\
    \ <ROOT> <4:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Last) <3:ADP/case>(auf) <4:DET/det:poss>(meinen)
    <5:NOUN/nmod>(Schultern) <6:VERB/root>(hat) <7:PRON/obj>(mich) <8:DET/advmod>(viel)
    <9:ADP/compound:prt>(zu) <ROOT> <10:VERB/root>(belastet)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Sparring) <2:PROPN/appos>(3) <3:VERB/root>(hei\xDFt)\
    \ <4:ADJ/xcomp>(abnormal) <ROOT> <5:VERB/root>(geflowt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:INTJ/advmod>(Ja) <3:DET/det>(diese) <4:NOUN/nsubj>(Worte) <5:AUX/root>(sind)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(sind) <ROOT> <3:VERB/root>(beschissne)
    <4:NOUN/obj>(Zeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(Hab) <3:PRON/obj>(mich) <4:ADV/advmod>(noch) <5:PART/advmod>(nicht)
    <6:ADV/advmod>(mal) <ROOT> <7:VERB/root>(angestrengt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/root>(aber) <ROOT> <2:ADP/case>(in) <3:PRON/nmod>(dich) <4:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(V\xF6llig) <2:ADP/root>(zu) <ROOT> <3:NOUN/root>(Bomber)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(V\xF6llig) <2:ADP/root>(zu) <ROOT> <3:NOUN/root>(Bomber)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  sentence: "<1:PROPN/root>(is') <2:ADP/case>(f\xFCr) <3:DET/nmod>(viele) <4:ADP/compound:prt>(zu)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  sentence: <1:ADV/root>(Wie) <ROOT> <2:ADJ/root>(peinlich) <3:PRON/nsubj>(du) <4:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nsubj
  sentence: <1:ADV/root>(Wo) <2:AUX/cop>(ist) <3:DET/det:poss>(deine) <4:NOUN/nsubj>(Gang)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihr) <2:AUX/root>(seid) <3:ADV/advmod>(nur) <ROOT> <4:ADJ/root>(behindert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(steh) <3:ADV/advmod>(grade) <4:ADP/case>(hinter)
    <5:DET/det:poss>(mein) <7:NOUN/obl>(Jungs) <8:INTJ/obj>(komm) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(man) <4:AUX/aux>(darf)
    <5:ADV/advmod>(da) <6:PART/advmod>(nicht) <7:ADV/advmod>(zu) <8:DET/obj>(viel)
    <9:VERB/root>(verwenden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:ADV/root>(warum) <2:DET/det>(die) <3:NOUN/nsubj>(Nachfrage) <4:ADP/case>(nach)\
    \ <5:NOUN/nmod>(Pornos) <6:ADP/case>(w\xE4hrend) <7:PROPN/nmod>(Corona) <ROOT>\
    \ <8:VERB/root>(gestiegen) <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(finde) <4:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  sentence: <ROOT> <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(jetzt) <4:ADV/compound:prt>(vorbei)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:ADV/advmod>(Dann) <2:AUX/aux>(habe) <3:PRON/nsubj>(ich) <4:VERB/root>(gedacht)
    <ROOT> <5:PRON/obj>(was) <6:PRON/nsubj>(wir) <7:ADV/advmod>(hier) <8:VERB/root>(gemacht)
    <9:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - cop
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - appos
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(noch) <4:PRON/root>(niemand)
    <5:ADV/advmod>(da) <6:PRON/nsubj>(es) <7:AUX/cop>(ist) <8:ADV/advmod>(so) <ROOT>
    <9:ADJ/root>(leer) <10:NOUN/appos>(Alter)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(die) <3:NOUN/nsubj>(Intensit\xE4t) <4:ADV/advmod>(hier)\
    \ <5:AUX/root>(ist) <6:ADV/advmod>(schon) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - aux
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(wie) <3:PROPN/nsubj>(BYD) <4:DET/det>(den)
    <5:NOUN/obj>(Markt) <6:VERB/root>(beherrscht) <7:PRON/nsubj>(das) <8:AUX/aux>(ist)
    <9:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:DET/det>(den) <2:NOUN/nsubj>(Berg) <3:VERB/root>(runterrasen) <4:ADP/case>(Unter)
    <5:NOUN/obl>(Wasser) <6:ADV/advmod>(Schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ganz) <2:ADJ/root>(sch\xF6n) <ROOT> <3:ADV/advmod>(hier)\
    \ <4:ADP/case>(an) <5:NOUN/root>(Bord)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:ADP/root>(wie) <ROOT> <3:DET/det>(das) <4:NOUN/nsubj>(Ergebnis)\
    \ <5:ADV/advmod>(jetzt) <6:VERB/root>(ausf\xE4llt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 1
    - cop
  sentence: <1:PROPN/root>(Wa) <3:PRON/flat>(Das) <4:AUX/cop>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  sentence: <1:AUX/root>(Bist) <2:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:VERB/root>(will) <3:PRON/nsubj>(ich) <4:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADP/case>(mit) <2:PRON/nmod>(wem) <3:PRON/nsubj>(du) <4:INTJ/root>(chillst)
    <5:CCONJ/cc>(und) <6:SCONJ/conj>(wie) <ROOT> <7:ADV/advmod>(grad) <8:DET/det:poss>(dein)
    <9:NOUN/root>(Leben) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - cc
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 6
    - conj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(vertraut) <7:CCONJ/cc>(und) <8:DET/det:poss>(meine)
    <9:NOUN/obj>(Hand) <10:VERB/conj>(genomm'n)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(Will) <2:PRON/obj>(mich) <ROOT> <3:VERB/root>(benehm'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 10
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/compound>(Kio) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/root>(so)
    <ROOT> <5:PRON/nmod>(das) <6:NOUN/obl>(mal) <7:ADP/case>(von) <8:ADV/advmod>(oben)
    <9:PART/mark>(zu) <10:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<ROOT> <1:ADJ/amod>(t\xE4towierte) <2:NOUN/root>(Ghettogangs)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(Deutschrap) <2:AUX/cop>(ist) <ROOT> <3:ADP/case>(in) <4:PRON/nmod>(mich)
    <5:ADJ/root>(verliebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT> <3:ADV/root>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  - !!python/tuple
    - 10
    - 9
    - appos
  sentence: <1:DET/det>(Welcher) <2:NOUN/nsubj>(Rapper) <3:VERB/root>(macht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:DET/nsubj>(Alles) <6:ADJ/amod>(bellende) <7:NOUN/root>(Pissers) <9:PRON/appos>(Du)
    <10:NOUN/appos>(Hund)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 2
    - xcomp
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(wird) <3:ADV/advmod>(hier) <4:ADP/case>(in)
    <5:DET/det>(ein) <6:ADJ/nmod>(paar) <7:NOUN/nmod>(Wochen) <8:ADJ/xcomp>(richtig)
    <ROOT> <9:ADV/advmod>(anders) <10:VERB/root>(aussehen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 3
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:CCONJ/cc>(Oder) <2:ADV/advmod>(anders) <3:VERB/root>(gesagt) <4:DET/det>(Ein)
    <5:NOUN/nsubj>(Land) <6:PRON/nsubj>(das) <7:ADV/advmod>(fast) <8:PRON/obj>(nichts)
    <9:VERB/ccomp>(produziert) <10:AUX/aux>(kann) <11:DET/det>(die) <12:NOUN/obj>(Umwelt)
    <13:ADV/advmod>(auch) <14:PART/advmod>(nicht) <15:ADV/advmod>(so) <ROOT> <16:VERB/root>(verschmutzen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADP/case>(wie) <2:DET/det>(ne) <3:NOUN/obl>(Behinderung) <4:CCONJ/cc>(oder)\
    \ <5:NOUN/conj>(Einschr\xE4nkung) <6:VERB/root>(find) <7:PRON/nsubj>(ich) <8:VERB/conj>(h\xF6\
    rt) <9:PRON/obj>(sich) <10:ADV/advmod>(immer) <11:ADV/advmod>(so) <ROOT> <12:ADP/root>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - aux:pass
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(einfach) <3:ADV/advmod>(mal) <4:DET/det>(diese)
    <5:NOUN/obj>(Datenmengen) <6:PART/mark>(zu) <7:VERB/root>(begreifen) <8:PRON/nsubj>(das)
    <9:AUX/aux:pass>(ist) <10:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:NOUN/root>(Hut)
    <5:ADP/case>(ab) <7:X/nmod>(Na) <8:X/punct>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Nein) <2:INTJ/root>(nein) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist)
    <6:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - nsubj
  sentence: "<1:PROPN/root>(Puh) <ROOT> <2:ADV/advmod>(Dabei) <3:AUX/root>(sind) <4:ADV/advmod>(drau\xDF\
    en) <5:ADV/advmod>(schon) <6:ADV/advmod>(so) <7:NOUN/nsubj>(8\xB0C)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - aux
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 8
    - conj
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 13
    - appos
  sentence: "<1:AUX/aux>(hab'n) <2:PRON/nsubj>(wir) <3:ADV/advmod>(noch) <4:ADV/advmod>(voll)\
    \ <5:ADV/advmod>(oft) <6:ADP/case>(\xFCber) <7:PRON/obl>(dich) <8:VERB/root>(gesprochen)\
    \ <9:AUX/aux>(gehabt) <10:CCONJ/cc>(und) <11:ADV/advmod>(da) <12:ADV/advmod>(halt)\
    \ <13:VERB/conj>(meinte) <14:PRON/nsubj>(er) <16:ADJ/appos>(Voll) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:ADV/advmod>(grad)
    <5:ADV/advmod>(trotzdem) <6:ADP/case>(vor) <7:PRON/obl>(mir) <8:VERB/root>(stehst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/nsubj>(Alle) <2:AUX/root>(sind) <3:ADV/advmod>(jetzt) <ROOT> <4:ADP/case>(wegen)
    <5:PROPN/root>(Myspace)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(du) <3:ADJ/root>(voll) <ROOT> <4:ADV/advmod>(lange)
    <5:ADP/case>(an) <6:DET/det:poss>(deiner) <7:NOUN/obl>(Doktorarbeit) <8:VERB/root>(schreibst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 1
    - obl
  - !!python/tuple
    - 9
    - 1
    - cop
  - !!python/tuple
    - 10
    - 1
    - compound:prt
  sentence: <1:VERB/root>(Komm) <2:PRON/obl:arg>(mir) <3:ADV/advmod>(ma') <4:ADV/advmod>(nich')
    <5:ADP/advmod>(an) <6:ADP/case>(mit) <7:DET/det:poss>(meine) <8:NOUN/obl>(Texte)
    <9:AUX/cop>(sind) <10:ADP/compound:prt>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - acl
  sentence: "<1:PRON/root>(die) <2:PRON/nsubj>(sich) <3:ADV/advmod>(so) <ROOT> <4:ADV/advmod>(damit)\
    \ <5:ADJ/advmod>(schwer) <6:VERB/root>(tun) <7:ADP/case>(Von) <8:PRON/nsubj>(was)\
    \ <9:VERB/acl>(tr\xE4umen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:PRON/nsubj>(Was) <3:AUX/aux>(ist) <4:ADV/advmod>(denn)
    <5:ADV/advmod>(wirklich) <6:VERB/root>(passiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Ziemlich) <ROOT> <2:CCONJ/cc>(und) <3:DET/det>(kein) <4:NOUN/root>(Einzelfall)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj:pass
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux:pass
  sentence: <1:ADJ/root>(Echt) <ROOT> <2:SCONJ/mark>(wie) <3:DET/det>(jede) <4:NOUN/nsubj:pass>(Entscheidung)
    <5:VERB/root>(kommentiert) <6:AUX/aux:pass>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/root>(Und) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADV/advmod>(echt)
    <ROOT> <5:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  sentence: <1:VERB/root>(Schmeckt) <2:ADV/advmod>(jetzt) <3:PART/advmod>(nicht) <ROOT>
    <4:ADV/advmod>(vanillig) <5:VERB/root>(finde) <6:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: "<1:CCONJ/cc>(aber) <2:ADV/advmod>(auch) <3:PART/root>(nicht) <ROOT> <4:ADJ/root>(k\xFC\
    nstlich) <5:ADP/case>(wie) <6:PRON/nmod>(das) <7:ADV/advmod>(davor)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 11
    - obj
  - !!python/tuple
    - 14
    - 15
    - cc
  - !!python/tuple
    - 15
    - 11
    - advmod
  sentence: <1:ADV/advmod>(da) <2:AUX/root>(war) <3:PRON/nsubj>(das) <4:ADV/advmod>(dann)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(irgendwie) <ROOT> <7:ADV/advmod>(Also) <8:SCONJ/mark>(wenn)
    <9:PRON/nsubj>(man) <10:ADV/advmod>(da) <11:VERB/root>(guckt) <12:ADV/advmod>(so)
    <13:NOUN/obj>(Lebenserwartung) <14:CCONJ/cc>(und) <15:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(dass) <4:PRON/nsubj>(die)
    <5:PRON/nsubj>(das) <6:VERB/xcomp>(liegen) <7:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:VERB/root>(bedeuten) <3:AUX/aux>(w\xFCrde) <4:PRON/nsubj>(es)\
    \ <5:AUX/cop>(ist) <6:ADJ/advmod>(total) <ROOT> <7:ADP/case>(in) <8:DET/det>(dem)\
    \ <9:NOUN/nmod>(Netz) <10:ADJ/root>(verbreitet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(deine) <ROOT> <3:ADJ/amod>(bekackte) <4:PROPN/root>(Mucke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:DET/det>(das) <4:NOUN/obj>(Setting)
    <5:VERB/xcomp>(sieht) <ROOT> <6:ADP/root>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: "<1:ADV/advmod>(dann) <2:VERB/root>(blendet) <3:DET/det>(diese) <4:NOUN/nsubj>(Sonne)\
    \ <5:ADV/advmod>(wirklich) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(\xFCber) <8:DET/det>(das)\
    \ <9:NOUN/root>(Wasser) <10:CCONJ/cc>(und) <11:ADV/conj>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(der) <3:VERB/root>(levelt) <4:ADV/advmod>(auch)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(mehr) <7:ADV/advmod>(so) <ROOT> <8:ADP/root>(mit)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - dep
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: <1:ADP/case>(Vor) <2:DET/root>(allem) <3:PRON/dep>(was) <4:PRON/nsubj>(ich)
    <ROOT> <5:VERB/root>(finde) <6:AUX/cop>(ist) <7:ADV/advmod>(halt) <8:PROPN/nsubj>(Cyberpunk)
    <9:PROPN/flat>(ne)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 8
    - obl
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 7
    - 3
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - expl
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: "<1:ADV/advmod>(Also) <2:ADP/case>(f\xFCr) <3:PROPN/obl>(Open) <5:PROPN/flat>(World)\
    \ <7:NOUN/flat>(Spieler) <8:AUX/root>(ist) <9:PRON/expl>(es) <10:ADV/advmod>(schon)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 7
    - compound
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:ADV/advmod>(nah) <3:ADV/advmod>(dran) <4:NOUN/compound>(ne)
    <6:ADV/advmod>(Ja) <7:ADJ/root>(supernah) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advcl
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  - !!python/tuple
    - 13
    - 11
    - cc
  - !!python/tuple
    - 14
    - 11
    - mark
  sentence: "<1:VERB/advcl>(rede) <2:ADV/advmod>(so) <3:ADP/case>(als) <4:NOUN/obl>(Ratgeberin)\
    \ <5:ADV/advmod>(dann) <6:VERB/root>(w\xFCrde) <7:PRON/nsubj>(ich) <8:ADV/advmod>(n\xE4\
    mlich) <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <ROOT> <11:VERB/root>(kritisiert)\
    \ <12:AUX/aux:pass>(werden) <13:CCONJ/cc>(aber) <14:SCONJ/mark>(weil)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(muss) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)
    <5:VERB/root>(runterkommen) <6:PRON/nsubj>(das) <7:AUX/aux>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(R\xFCckschlag) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:AUX/cop>(war) <4:ADJ/root>(echt)
    <ROOT> <5:PRON/nsubj>(ich) <6:AUX/cop>(bin) <7:ADV/advmod>(noch) <8:ADV/advmod>(voll)
    <9:VERB/root>(aufgeregt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 4
    - ccomp
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(muss) <3:ADV/advmod>(erstmal) <4:VERB/root>(runterkommen)
    <5:PRON/nsubj>(das) <6:AUX/cop>(war) <7:ADJ/ccomp>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 14
    - mark
  - !!python/tuple
    - 5
    - 14
    - nsubj
  - !!python/tuple
    - 6
    - 14
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - det
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 14
    - nmod
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 9
    - conj
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - cop
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <ROOT> <4:SCONJ/mark>(dass)\
    \ <5:NOUN/nsubj>(Menschen) <6:NOUN/nsubj>(Geld) <7:DET/det>(welches) <8:ADP/case>(f\xFC\
    r) <9:NOUN/nmod>(Essen) <10:CCONJ/cc>(oder) <11:DET/det>(andere) <12:ADJ/amod>(lebenserhaltende)\
    \ <13:NOUN/conj>(Dinge) <14:ADJ/root>(notwendig) <15:AUX/cop>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <ROOT> <4:ADV/root>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - acl
  sentence: <1:ADV/advmod>(Nur) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)
    <ROOT> <5:AUX/cop>(wird) <6:ADP/case>(wie) <7:DET/det>(die) <8:NOUN/root>(Prognose)
    <9:PRON/obj>(die) <10:PRON/nsubj>(ich) <11:VERB/acl>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/nmod>(mich) <3:ADV/advmod>(Ja) <4:PROPN/root>(Ah)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/det>(das) <3:NOUN/nsubj>(Ganze) <4:ADV/advmod>(wirklich)
    <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(durch) <7:DET/det>(die) <8:NOUN/obl>(Decke)
    <9:VERB/root>(geht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(total) <ROOT> <4:CCONJ/cc>(und)
    <5:PRON/obj>(das) <6:AUX/aux>(haben) <7:PRON/nsubj>(wir) <8:ADV/advmod>(zusammen)
    <9:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Is) <2:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - aux
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Was) <2:PRON/obj>(sich) <3:ADV/advmod>(so) <4:DET/obj>(alles)
    <5:VERB/root>(angesammelt) <6:AUX/aux>(hat) <7:AUX/aux>(ist) <8:ADV/advmod>(schon)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 3
    - csubj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - obl
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 10
    - obl
  sentence: "<1:PRON/nsubj>(Was) <2:ADJ/root>(echt) <ROOT> <3:ADJ/root>(auff\xE4llig)\
    \ <4:AUX/cop>(ist) <5:ADP/case>(wie) <6:DET/det>(viele) <7:NOUN/nmod>(Leute) <8:PRON/obj>(mich)\
    \ <9:ADV/advmod>(b\xF6se) <10:VERB/csubj>(angucken) <11:ADP/case>(mit) <12:DET/det>(der)\
    \ <13:NOUN/obl>(Kamera) <14:ADP/case>(in) <15:DET/det>(der) <16:NOUN/obl>(Hand)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(dachte) <4:ADJ/amod>(alter)
    <5:NOUN/obj>(Schwede) <ROOT> <6:ADV/advmod>(wie) <7:ADV/advmod>(schnell) <8:PRON/nsubj>(er)
    <9:PRON/obj>(das) <10:VERB/root>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 9
    - advmod
  - !!python/tuple
    - 3
    - 9
    - nsubj:pass
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obl
  sentence: <1:ADV/advmod>(auch) <2:ADV/advmod>(hier) <3:PRON/nsubj:pass>(dich) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Rollstuhl) <7:ADV/advmod>(schon) <8:PART/mark>(zu)
    <9:VERB/root>(sehen) <10:ADP/case>(in) <11:DET/det>(dem) <12:NOUN/obl>(Video)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 1
    - advmod
  sentence: <1:VERB/root>(Schauen) <2:PRON/nsubj>(wir) <3:ADV/advmod>(mal) <4:CCONJ/cc>(aber)
    <5:PRON/nsubj>(es) <6:AUX/conj>(ist) <7:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/root>(Weil) <2:ADV/advmod>(einfach) <3:ADV/advmod>(so) <4:PRON/nsubj>(etwas)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADJ/advmod>(d\xFCnn) <7:PART/mark>(zu) <8:VERB/root>(bekommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 5
    - nmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 16
    - cc
  - !!python/tuple
    - 12
    - 16
    - advmod
  - !!python/tuple
    - 13
    - 16
    - aux
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 5
    - conj
  sentence: "<1:ADP/root>(zu) <ROOT> <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(zu)\
    \ <5:ADV/root>(nah) <6:ADP/case>(an) <7:DET/det:poss>(ihrer) <8:ADJ/amod>(eigenen)\
    \ <9:NOUN/nmod>(Welt) <10:ADV/advmod>(dran) <11:CCONJ/cc>(Und) <12:ADV/advmod>(dann)\
    \ <13:AUX/aux>(haben) <14:PRON/nsubj>(wir) <15:PRON/obj>(uns) <16:VERB/conj>(\xFC\
    berlegt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/obj>(mich) <2:VERB/root>(halt) <3:ADV/advmod>(auch) <ROOT> <4:ADV/advmod>(selbst)
    <5:VERB/root>(angelogen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(wo) <2:DET/det>(das) <3:ADJ/amod>(ganze) <4:NOUN/nsubj>(Land)\
    \ <5:VERB/root>(dachte) <ROOT> <6:PRON/nsubj>(was) <7:ADP/case>(f\xFCr) <8:DET/det>(ein)\
    \ <9:NOUN/root>(Mitgef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Oh) <2:NOUN/nsubj>(Gott) <3:PRON/nsubj>(das) <4:AUX/cop>(war)
    <5:ADJ/root>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 12
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - nmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - cop
  sentence: <1:PRON/obj>(Das) <2:VERB/root>(merkt) <3:PRON/nsubj>(man) <4:ADV/advmod>(gerade)
    <5:ADV/advmod>(so) <ROOT> <6:SCONJ/mark>(dass) <7:DET/det>(kein) <8:NOUN/nsubj>(Leben)
    <9:ADV/advmod>(mehr) <10:ADP/case>(in) <11:PRON/nmod>(ihr) <12:ADJ/root>(drin)
    <13:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:NOUN/obj>(Alter) <2:PRON/obj>(das) <3:VERB/root>(fand) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(aber) <6:ADV/advmod>(schon) <7:ADV/advmod>(irgendwie) <ROOT> <8:PART/mark>(zu)
    <9:VERB/root>(sehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - mark
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - obl:arg
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/root>(Schon) <ROOT> <2:SCONJ/mark>(dass) <3:DET/nsubj>(jeder)\
    \ <4:DET/det>(dieser) <5:NOUN/obl:arg>(Steine) <6:ADP/case>(f\xFCr) <7:DET/det>(ein)\
    \ <8:NOUN/obl>(Menschenleben) <9:VERB/root>(steht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:SCONJ/root>(Weil) <2:DET/det>(diese) <3:NOUN/nsubj>(Geschichte) <4:PRON/obj>(die)
    <5:PRON/nsubj>(ich) <6:NOUN/nmod>(Jahrzehnte) <7:ADV/advmod>(so) <ROOT> <8:VERB/root>(versucht)
    <9:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj:pass
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - acl
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:NOUN/root>(Personen) <2:PRON/nsubj:pass>(die) <3:ADV/advmod>(da) <4:VERB/acl>(behandelt)
    <5:AUX/aux:pass>(werden) <6:AUX/aux>(sind) <7:ADV/advmod>(immer) <8:ADV/advmod>(noch)
    <ROOT> <9:VERB/root>(stigmatisiert)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - cop
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:PROPN/root>(crazy)
    <6:PRON/nsubj>(Das) <7:AUX/cop>(ist) <8:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Ja) <2:CCONJ/cc>(und) <3:PRON/nsubj>(ich) <4:VERB/root>(fand)
    <5:PRON/nsubj>(es) <6:ADJ/advmod>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:PROPN/root>(Boah) <2:PRON/flat>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - cc
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - aux
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - conj
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 15
    - det:poss
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 22
    - cc
  - !!python/tuple
    - 18
    - 22
    - nsubj
  - !!python/tuple
    - 19
    - 22
    - aux
  - !!python/tuple
    - 20
    - 21
    - advmod
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 16
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(so)
    <5:DET/det>(eine) <6:NOUN/obj>(Abfahrt) <7:VERB/root>(genommen) <8:CCONJ/cc>(Und)
    <9:PRON/nsubj>(ich) <10:AUX/aux>(hab) <11:ADV/advmod>(so) <12:VERB/conj>(gemerkt)
    <13:X/mark>(oh) <ROOT> <14:DET/det:poss>(mein) <15:NOUN/obj>(Fahrrad) <16:VERB/root>(rollt)
    <17:CCONJ/cc>(und) <18:PRON/nsubj>(ich) <19:AUX/aux>(kann) <20:ADV/advmod>(gar)
    <21:PART/advmod>(nicht) <22:VERB/conj>(bremsen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/expl>(es) <2:VERB/root>(schaffen) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(so) <ROOT> <6:DET/det>(viel) <7:NOUN/obj>(Zeit) <8:ADP/case>(auf)
    <9:DET/det>(den) <10:NOUN/obl>(Plattformen) <11:VERB/root>(verbringen)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(der) <3:NOUN/nsubj>(Unterschied) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(halt) <6:ADV/advmod>(schon) <7:ADJ/root>(echt) <ROOT> <8:ADJ/root>(auff\xE4\
    llig)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADP/root>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/obj>(ihr) <3:PRON/nsubj>(das) <4:PART/advmod>(nicht)
    <5:VERB/root>(erlebt) <6:AUX/aux>(hat) <7:ADP/mark>(wie) <ROOT> <8:PRON/nsubj>(es)
    <9:AUX/root>(sein) <10:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 1
    - cop
  sentence: "<1:NOUN/root>(Geld) <2:ADP/case>(\xFCber) <3:NOUN/nmod>(Leben) <4:CCONJ/cc>(oder)\
    \ <5:PRON/conj>(Das) <6:AUX/cop>(ist) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:DET/nsubj>(Viele) <2:VERB/root>(denken) <3:ADP/case>(von) <4:PRON/obl>(mir)\
    \ <5:PRON/nsubj>(ich) <6:VERB/parataxis>(w\xFCrde) <7:ADP/compound:prt>(auf) <ROOT>\
    \ <8:ADJ/advmod>(breit) <9:ADJ/amod>(gebaute) <10:NOUN/nsubj>(M\xE4nner) <11:VERB/root>(stehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 14
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - appos
  - !!python/tuple
    - 15
    - 14
    - case
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:PRON/obj>(\u2019s) <4:ADV/advmod>(immer)\
    \ <5:ADV/advmod>(wieder) <ROOT> <6:PART/mark>(zu) <7:VERB/root>(sehen) <8:CCONJ/cc>(und)\
    \ <9:ADV/advmod>(super) <10:ADJ/conj>(faszinierend) <11:PRON/nsubj>(was) <12:PRON/nsubj>(es)\
    \ <13:ADV/advmod>(gerade) <14:DET/appos>(alles) <15:ADP/case>(f\xFCr)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Dass) <2:PRON/nsubj>(es) <3:DET/det>(diese) <4:NOUN/obj>(L\xFC\
    cke) <5:VERB/csubj>(gibt) <6:AUX/cop>(ist) <7:ADJ/root>(total) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - conj
  sentence: "<1:PART/root>(Nicht) <ROOT> <2:ADJ/root>(originell) <3:CCONJ/cc>(aber)\
    \ <4:ADV/advmod>(ganz) <5:ADJ/conj>(s\xFC\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:ADP/case>(auf)
    <5:DET/det>(jeden) <6:NOUN/obl>(Fall) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(merk) <2:ADJ/root>(richtig) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - acl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 7
    - nsubj
  sentence: "<1:VERB/acl>(gestiegen) <2:VERB/root>(H\xF6rt) <3:PRON/obj>(sich) <ROOT>\
    \ <4:ADP/case>(an) <5:DET/det>(Die) <6:ADJ/amod>(h\xE4ufigste) <7:NOUN/root>(Tatwaffe)\
    \ <8:AUX/cop>(war) <9:ADV/advmod>(aber) <10:NUM/nmod>(2019) <11:DET/det>(der)\
    \ <12:PROPN/nsubj>(Edding)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - mark
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obj
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: "<1:DET/det>(diese) <2:NUM/nummod>(40) <3:PRON/nsubj>(sich) <4:ADV/advmod>(ja)\
    \ <5:ADJ/root>(wirklich) <ROOT> <6:VERB/root>(anh\xF6ren) <7:ADV/advmod>(auch)\
    \ <8:SCONJ/mark>(wenn) <9:PRON/nsubj>(du) <10:DET/det>(ein) <11:NOUN/obj>(Verh\xE4\
    ltnis) <12:ADP/case>(zu) <13:ADJ/nmod>(rechtsextremen)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(einfach) <4:ADV/advmod>(nur)
    <5:ADJ/advmod>(top) <6:ADJ/root>(notch) <7:PRON/nsubj>(das) <8:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - case
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 9
    - csubj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: <1:ADP/case>(ohne) <2:ADV/advmod>(auch) <3:ADV/advmod>(nur) <4:DET/det>(ein)
    <5:NOUN/obj>(Wort) <6:PART/mark>(zu) <7:VERB/csubj>(verlieren) <8:PRON/nsubj>(Das)
    <9:VERB/root>(fand) <10:PRON/nsubj>(ich) <11:ADV/advmod>(einfach) <12:ADV/advmod>(nur)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 5
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:ADP/case>(nach) <3:NOUN/obl>(Fleisch) <4:VERB/xcomp>(schmecken)
    <5:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 7
    - cc
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:PRON/root>(der) <2:ADV/advmod>(halt) <3:ADV/advmod>(irgendwie) <ROOT>
    <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/obl>(Handstand) <7:VERB/root>(laufen)
    <8:AUX/aux>(konnte) <9:CCONJ/cc>(oder) <10:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:VERB/root>(manipuliert)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - csubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: "<1:CCONJ/cc>(Doch) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADV/advmod>(jetzt)\
    \ <5:PART/mark>(zu) <6:VERB/xcomp>(h\xF6ren) <7:VERB/csubj>(bekomme) <8:VERB/root>(find)\
    \ <9:PRON/nsubj>(ich) <10:ADV/advmod>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(alles) <4:NOUN/root>(Fake)
    <6:PRON/nsubj>(Das) <7:AUX/cop>(ist) <8:ADV/advmod>(wirklich) <9:ADV/conj>(sehr)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(Warum) <2:PRON/nsubj>(ich) <3:PRON/obj>(das) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 11
    - ccomp
  sentence: "<1:ADV/advmod>(immer) <2:ADV/advmod>(noch) <3:VERB/root>(kommen) <4:ADV/advmod>(Stell)\
    \ <5:PRON/nsubj>(ich) <6:PRON/obl:arg>(mir) <ROOT> <7:ADP/case>(vor) <8:ADV/advmod>(irgendwie)\
    \ <9:ADP/case>(Von) <10:DET/det>(dem) <11:NOUN/root>(Gef\xFChl) <12:ADV/mark>(her)\
    \ <13:SCONJ/mark>(dass) <14:PRON/nsubj>(ihr) <15:PART/advmod>(nicht) <16:VERB/ccomp>(wisst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - nsubj:pass
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - ccomp
  - !!python/tuple
    - 12
    - 11
    - aux:pass
  - !!python/tuple
    - 13
    - 11
    - aux
  sentence: "<1:ADV/advmod>(ganz) <2:ADJ/root>(sch\xF6n) <ROOT> <3:ADP/case>(Von)\
    \ <4:PROPN/obl>(RWE) <5:VERB/root>(erfahre) <6:PRON/nsubj>(ich) <7:SCONJ/mark>(dass)\
    \ <8:DET/det>(das) <9:NOUN/nsubj:pass>(Kraftwerk) <10:PART/advmod>(nicht) <11:VERB/ccomp>(heruntergefahren)\
    \ <12:AUX/aux:pass>(werden) <13:AUX/aux>(mussten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - cop
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 14
    - obj
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 9
    - acl
  - !!python/tuple
    - 15
    - 14
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:PRON/nsubj>(Das) <6:AUX/cop>(ist) <7:ADV/advmod>(jetzt) <8:DET/det>(ein)
    <9:NOUN/root>(Block) <10:DET/det>(des) <11:NOUN/nmod>(Klebstoffs) <12:PRON/obj>(den)
    <13:PRON/nsubj>(Du) <14:VERB/acl>(entwickelt) <15:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(das) <3:ADV/advmod>(hier) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 11
    - mark
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(sogar) <4:ADV/advmod>(so)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(sie) <7:PRON/obj>(das) <8:ADV/advmod>(selbst)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(mal) <11:VERB/root>(checken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(wei\xDF) <3:PRON/nsubj>(das) <4:VERB/ccomp>(klingt)\
    \ <5:ADJ/advmod>(echt) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - xcomp
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 1
    - obl
  - !!python/tuple
    - 8
    - 1
    - dep
  - !!python/tuple
    - 9
    - 13
    - mark
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - compound:prt
  sentence: "<1:VERB/root>(Seht) <2:PRON/obj>(ihr) <3:ADV/advmod>(echt) <4:ADJ/xcomp>(sch\xF6\
    n) <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(Diagramm) <8:ADP/dep>(wie) <ROOT>\
    \ <9:SCONJ/mark>(da) <10:DET/det>(die) <11:NOUN/nsubj>(Temperaturen) <12:PRON/obj>(sich)\
    \ <13:VERB/root>(unterscheiden) <14:ADP/compound:prt>(in)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - xcomp
  sentence: <1:PROPN/nsubj>(Boah) <2:ADV/advmod>(da) <3:AUX/aux>(kann) <4:PRON/nsubj>(man)
    <5:ADP/case>(bis) <6:ADP/case>(zu) <7:DET/det>(der) <8:NOUN/obl>(Felswand) <9:VERB/root>(hochschauen)
    <10:ADJ/xcomp>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - parataxis
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/nsubj>(das)
    <5:VERB/parataxis>(ist) <6:ADV/advmod>(gar) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)
    <ROOT> <9:ADV/advmod>(jetzt) <10:PRON/nsubj>(was) <11:ADV/advmod>(ganz) <12:NOUN/root>(Neues)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - nmod
  - !!python/tuple
    - 12
    - 1
    - advmod
  - !!python/tuple
    - 13
    - 14
    - xcomp
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(es) <3:ADP/case>(an) <4:DET/det>(dem)
    <5:NOUN/nmod>(Ende) <6:ADP/case>(von) <7:DET/det>(dem) <8:NOUN/nmod>(Monat) <9:ADP/case>(mit)
    <10:DET/det>(dem) <11:NOUN/nmod>(Geld) <12:ADV/advmod>(so) <ROOT> <13:ADJ/xcomp>(eng)
    <14:VERB/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Daran) <2:VERB/root>(habe) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <5:ADV/advmod>(schon) <ROOT> <6:VERB/root>(gemerkt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PART/advmod>(nicht) <2:VERB/root>(gerechnet) <3:DET/det>(dieses) <4:NOUN/obl>(Mal)
    <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <7:ADV/advmod>(so) <ROOT> <8:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:SCONJ/mark>(Weil) <2:DET/det>(das) <3:ADJ/amod>(letzte) <4:NOUN/obl>(Mal)
    <5:AUX/root>(war) <6:PRON/nsubj>(es) <7:ADV/advmod>(zwar) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(sie) <3:VERB/root>(fand) <4:DET/det:poss>(meinen)
    <5:NOUN/obj>(Part) <6:ADV/advmod>(ziemlich) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - acl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Zuschauer) <2:ADJ/root>(richtig) <ROOT> <3:VERB/acl>(erschrecken)
    <4:VERB/root>(tut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Teams) <3:ADP/case>(bei) <4:PROPN/nmod>(Marvel)\
    \ <5:AUX/cop>(sind) <6:ADJ/root>(einfach) <ROOT> <7:VERB/root>(\xFCberarbeitet)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/root>(Nein) <ROOT> <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <5:ADV/advmod>(unglaublich) <6:ADJ/root>(pervers)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(dachte) <4:ADV/advmod>(oh)
    <5:DET/det:poss>(mein) <6:NOUN/obj>(Gott) <7:SCONJ/compound:prt>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - det
  - !!python/tuple
    - 3
    - 7
    - compound
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 1
    - nsubj
  - !!python/tuple
    - 8
    - 1
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:SCONJ/root>(Dass) <2:DET/det>(diese) <3:NOUN/compound>(Falsch) <5:NOUN/compound>(Positiv)
    <7:NOUN/nsubj>(Rate) <8:ADV/advmod>(so) <ROOT> <9:ADJ/root>(hoch) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(so)
    <ROOT> <5:PRON/nsubj>(ich) <6:AUX/aux>(muss) <7:ADV/advmod>(jetzt) <8:PRON/obj>(etwas)
    <9:VERB/root>(tun)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(die) <3:AUX/cop>(sind) <4:ADV/advmod>(teilweise)
    <5:ADV/advmod>(schon) <6:ADJ/root>(echt) <ROOT> <7:PRON/nsubj>(Die) <8:AUX/cop>(sind)
    <9:ADV/advmod>(sehr) <10:ADJ/root>(hart)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <ROOT> <2:ADV/advmod>(Also) <3:PRON/nsubj>(das) <4:AUX/cop>(sind)
    <5:ADV/advmod>(so) <6:DET/det>(ein) <7:ADV/advmod>(bisschen) <8:PRON/root>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(f\xE4llt) <3:PRON/nsubj>(es) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADP/case>(ab) <7:X/root>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - appos
  - !!python/tuple
    - 7
    - 6
    - obj
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:ADJ/root>(sch\xF6n) <4:ADV/advmod>(wo)\
    \ <5:DET/det:poss>(ihr) <6:VERB/appos>(seid) <7:NOUN/obj>(Alter)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 7
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 14
    - cop
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - nmod
  - !!python/tuple
    - 14
    - 2
    - parataxis
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(zieht) <3:PRON/obj>(euch) <4:DET/det:poss>(sein)
    <5:NOUN/compound>(Lifestyle) <7:NOUN/obj>(Video) <8:ADV/advmod>(rein) <9:PRON/nsubj>(das)
    <10:AUX/cop>(ist) <11:ADP/case>(auf) <12:DET/det>(jeden) <13:NOUN/nmod>(Fall)
    <14:ADJ/parataxis>(brutal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - cc
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 12
    - cc
  - !!python/tuple
    - 9
    - 12
    - mark
  - !!python/tuple
    - 10
    - 12
    - det:poss
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 5
    - conj
  - !!python/tuple
    - 13
    - 5
    - advmod
  sentence: <1:ADV/advmod>(irgendwie) <2:PROPN/root>(Tesla) <3:ADV/advmod>(so) <ROOT>
    <4:ADJ/advmod>(toll) <5:VERB/root>(finden) <6:CCONJ/cc>(oder) <7:ADV/advmod>(so)
    <8:CCONJ/cc>(sondern) <9:SCONJ/mark>(weil) <10:DET/det:poss>(meine) <11:ADJ/amod>(beste)
    <12:NOUN/conj>(Freundin) <13:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(du) <4:ADV/advmod>(mal)
    <5:PRON/nsubj>(irgendwas) <6:ADJ/root>(richtig) <ROOT> <7:VERB/root>(verkackst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:ADV/root>(egal) <3:ADP/advmod>(wie) <ROOT> <4:PRON/nsubj>(du)
    <5:VERB/root>(verkackst) <6:DET/det>(die) <7:NOUN/nsubj>(Leute) <8:VERB/conj>(jubeln)
    <9:PRON/obj>(dir) <10:ADP/compound:prt>(zu)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 12
    - mark
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det:poss
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(hier) <7:ADV/advmod>(echt) <8:ADV/advmod>(nur)
    <9:DET/det:poss>(sein) <10:ADJ/amod>(eigenes) <11:NOUN/obj>(Handy) <12:VERB/root>(benutzt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <3:DET/det>(den) <4:NOUN/obj>(Unterschied)
    <5:ADP/case>(zwischen) <6:DET/det>(diesen) <7:DET/det>(beiden) <8:NOUN/nmod>(Pflanzen)
    <ROOT> <9:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - expl
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 11
    - nsubj
  sentence: <1:AUX/aux>(hab) <2:PRON/nsubj>(ich) <3:NOUN/obj>(s) <4:ADJ/advmod>(schwer)
    <5:PRON/nsubj>(Es) <6:VERB/root>(wird) <7:ADV/advmod>(dann) <8:ADJ/xcomp>(ganz)
    <ROOT> <9:VERB/root>(aufgezeigt) <10:PRON/expl>(es) <11:VERB/conj>(gibt) <12:ADV/advmod>(immer)
    <13:ADV/advmod>(noch) <14:NOUN/nsubj>(Steigerungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 12
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Eingriff) <3:ADP/case>(mit) <4:NOUN/compound>(Hyaluron)\
    \ <6:NOUN/nmod>(S\xE4ure) <7:CCONJ/cc>(und) <8:DET/det>(diesen) <9:NOUN/conj>(Spritzen)\
    \ <10:AUX/cop>(ist) <11:PART/advmod>(nicht) <12:ADV/root>(so) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(hei\xDFt) <3:PRON/nsubj>(er) <4:VERB/conj>(denkt)\
    \ <5:ADV/advmod>(sehr) <6:ADV/advmod>(sehr) <ROOT> <7:ADP/case>(in) <8:NOUN/root>(Bildern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(so) <2:ADJ/amod>(einzelne) <3:NOUN/root>(Bestandteile)
    <ROOT> <4:VERB/root>(rausschmecken)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - xcomp
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 4
    - xcomp
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:VERB/root>(finde) <5:DET/det>(das) <6:NOUN/nsubj>(Risiko) <7:ADV/advmod>(psychisch)
    <8:ADJ/xcomp>(krank) <9:PART/mark>(zu) <10:VERB/xcomp>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:ADJ/root>(mutig)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - xcomp
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)
    <5:PRON/obj>(es) <6:ADV/advmod>(halt) <7:ADJ/xcomp>(super) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/root>(ist) <4:ADV/advmod>(ziemlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADJ/amod>(Amerikanische) <2:NOUN/nsubj>(Universit\xE4ten) <3:AUX/root>(sind)\
    \ <ROOT> <4:ADJ/root>(elit\xE4r)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT> <3:PRON/nsubj>(Ich) <4:VERB/root>(raste)
    <5:ADP/case>(aus) <6:PROPN/obl>(Guck) <7:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:NOUN/root>(Nee) <2:ADP/advmod>(wie) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - expl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 6
    - obl
  - !!python/tuple
    - 14
    - 6
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <ROOT> <4:SCONJ/mark>(weil)
    <5:PRON/expl>(es) <6:VERB/root>(kommt) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(gar)
    <9:PART/advmod>(nicht) <10:ADP/case>(wie) <11:ADV/advmod>(so) <12:DET/det>(eine)
    <13:NOUN/obl>(Todesdroge) <14:ADP/compound:prt>(vor)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:AUX/root>(Ist) <2:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(waren) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/obl>(Urlaub) <6:ADV/root>(zusammen) <7:CCONJ/cc>(und) <8:PRON/nsubj>(das)
    <9:AUX/conj>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADP/case>(In) <2:DET/det:poss>(meiner) <3:NOUN/obl>(Stadt) <4:VERB/root>(geht)
    <5:PRON/nsubj>(es) <ROOT> <6:ADP/root>(ab) <7:ADP/case>(wie) <8:ADP/case>(in)
    <9:PROPN/nmod>(Bagdad)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 5
    - det
  - !!python/tuple
    - 3
    - 5
    - amod
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(die) <3:ADJ/amod>(ersten) <4:NUM/nummod>(zwei)
    <5:NOUN/nsubj>(Teile) <6:AUX/root>(waren) <7:ADV/advmod>(ja) <8:ADV/advmod>(auch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(regt) <3:PRON/obj>(mich) <ROOT> <4:ADP/root>(auf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Wisst) <2:PRON/obj>(ihr) <3:PRON/nsubj>(was) <4:ADJ/advmod>(richtig)
    <ROOT> <5:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nat\xFCrlich) <2:VERB/root>(stresst) <3:PRON/obj>(mich)\
    \ <4:PRON/nsubj>(das) <ROOT> <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(es) <7:ADV/advmod>(so)\
    \ <8:VERB/root>(aussieht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:AUX/root>(ist) <ROOT> <3:ADJ/root>(liebevoll)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(Was) <ROOT> <2:NOUN/nsubj>(desperate) <3:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Schmerzen) <3:AUX/cop>(sind) <4:ADV/root>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - obl
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <ROOT> <3:VERB/root>(geheult)
    <4:ADP/case>(bei) <5:DET/det>(der) <6:ADJ/amod>(zweiten) <7:NOUN/obl>(Geburt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADJ/amod>(ganzem) <2:NOUN/nsubj>(Herzblut) <3:PRON/nsubj>(das) <4:AUX/root>(ist)\
    \ <ROOT> <5:ADJ/root>(sch\xF6n)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(jede) <3:NOUN/nsubj>(Frau) <4:AUX/root>(ist)
    <ROOT> <5:ADP/case>(an) <6:DET/det:poss>(ihre) <7:NOUN/obl>(Grenzen) <8:VERB/root>(gekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:ADV/advmod>(s) <4:ADV/advmod>(bisschen)
    <5:ADP/compound:prt>(zu) <ROOT> <6:ADV/root>(lustigerweise)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obj
  sentence: "<1:INTJ/root>(Danke) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(du) <4:PRON/obj>(dich)\
    \ <5:ADV/advmod>(so) <ROOT> <6:ADV/advmod>(drum) <7:VERB/root>(gek\xFCmmert) <8:AUX/aux>(hast)\
    \ <9:DET/det>(Kein) <10:NOUN/obj>(Ding)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  sentence: "<1:ADP/case>(Bei) <2:PRON/obl>(denen) <3:AUX/root>(ist) <4:PRON/nsubj>(es)\
    \ <ROOT> <5:ADV/advmod>(anders) <6:ADV/advmod>(Oder) <7:AUX/cop>(ist) <8:PRON/nsubj>(das)\
    \ <9:ADV/advmod>(sehr) <10:ADJ/root>(\xE4hnlich) <11:ADP/case>(zu) <12:PRON/nmod>(euch)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 6
    - obj
  sentence: <1:PROPN/nsubj>(Nina) <2:AUX/cop>(ist) <3:NOUN/root>(Moderatorin) <5:PRON/nsubj>(ich)
    <6:VERB/parataxis>(finde) <7:DET/det:poss>(ihre) <8:NOUN/obj>(Geschichte) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(Hast) <2:PRON/obj>(sich) <3:PRON/nsubj>(das) <ROOT> <4:VERB/root>(ver\xE4\
    ndert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(wirklich) <ROOT> <4:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - obl
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT> <4:SCONJ/root>(dass)
    <5:PRON/nsubj>(man) <6:ADP/case>(innerhalb) <7:ADP/case>(von) <8:NOUN/obl>(Sekunden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: "<1:PRON/root>(die) <2:PRON/dep>(das) <3:ADV/advmod>(so) <ROOT> <4:VERB/root>(\xFC\
    berstrahlen) <5:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 17
    - mark
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kriege) <3:PRON/obj>(es) <4:ADV/advmod>(schon)
    <5:ADV/compound:prt>(hin) <6:CCONJ/cc>(aber) <7:PRON/nsubj>(ich) <8:VERB/conj>(finde)
    <9:PRON/obj>(es) <10:DET/det>(ein) <11:ADV/advmod>(bisschen) <ROOT> <12:SCONJ/mark>(dass)
    <13:PRON/nsubj>(man) <14:ADV/advmod>(hier) <15:ADV/advmod>(echt) <16:DET/det>(die)
    <17:NOUN/root>(Tonnen)
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advcl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <2:SCONJ/mark>(Als) <3:PRON/obj>(uns) <4:DET/det>(das) <5:NOUN/nsubj>(Material)
    <6:VERB/advcl>(vorlag) <7:VERB/root>(fand) <8:PRON/nsubj>(ich) <9:PRON/obj>(das)
    <10:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 15
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 15
    - obj
  - !!python/tuple
    - 14
    - 15
    - mark
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hol) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(mal)\
    \ <5:DET/det:poss>(unseren) <6:NOUN/obj>(Einkauf) <7:ADV/advmod>(rein) <8:PRON/nsubj>(Ich)\
    \ <9:VERB/parataxis>(finds) <10:ADV/advmod>(total) <ROOT> <11:ADV/advmod>(irgendwie)\
    \ <12:DET/det>(die) <13:NOUN/obj>(T\xFCr) <14:PART/mark>(zu) <15:VERB/root>(\xF6\
    ffnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - aux
  - !!python/tuple
    - 4
    - 10
    - aux
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - nsubj:pass
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux:pass
  - !!python/tuple
    - 12
    - 10
    - aux
  - !!python/tuple
    - 13
    - 14
    - mark
  - !!python/tuple
    - 14
    - 10
    - nsubj:pass
  sentence: "<1:DET/det>(ein) <2:ADV/root>(bisschen) <ROOT> <3:AUX/aux>(ist) <4:AUX/aux>(ist)\
    \ <5:SCONJ/mark>(dass) <6:ADV/advmod>(lange) <7:DET/det>(keine) <8:PROPN/amod>(Corona)\
    \ <9:NOUN/nsubj:pass>(F\xE4lle) <10:VERB/root>(getestet) <11:AUX/aux:pass>(worden)\
    \ <12:AUX/aux>(sind) <13:SCONJ/mark>(weil) <14:PRON/nsubj:pass>(es)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:PRON/nsubj>(man) <4:VERB/root>(sitzt)
    <5:ADV/advmod>(total) <6:ADP/case>(nach) <7:ADV/advmod>(hinten) <8:VERB/xcomp>(gebeugt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:ADJ/root>(okay) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - ccomp
  sentence: <1:SCONJ/root>(weil) <2:NOUN/nsubj>(s) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)
    <ROOT> <5:VERB/root>(wehgetan) <6:AUX/aux>(hat) <7:ADV/advmod>(Wie) <8:AUX/aux>(kann)
    <9:PRON/nsubj>(das) <10:AUX/ccomp>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 3
    - cop
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:ADV/advmod>(Echt) <2:ADV/advmod>(so) <3:ADJ/root>(breit) <4:ADP/case>(wie)
    <5:DET/det>(der) <6:NOUN/nmod>(Raum) <7:AUX/cop>(Ist) <8:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wollte) <3:ADV/advmod>(voll) <ROOT>
    <4:VERB/root>(recherchieren) <5:SCONJ/mark>(wie) <6:DET/det>(der) <7:NOUN/nsubj>(Beitrag)
    <8:ADV/advmod>(auch) <9:VERB/ccomp>(gesagt) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(War) <2:ADV/advmod>(schon) <ROOT> <3:ADP/case>(auf) <4:DET/det>(jeden)
    <5:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obj
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 11
    - obj
  sentence: <2:X/root>(Oh) <ROOT> <3:PRON/nsubj>(man) <4:VERB/root>(braucht) <5:ADV/advmod>(wirklich)
    <6:ADV/advmod>(nur) <7:DET/det>(die) <8:NOUN/obj>(Uniform) <9:CCONJ/cc>(und) <10:DET/nsubj>(alle)
    <11:VERB/conj>(glauben) <12:DET/obj>(einem)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 3
    - advcl
  sentence: <1:X/root>(Oh) <ROOT> <2:PRON/nsubj>(man) <3:VERB/root>(merkt) <4:SCONJ/mark>(wenn)
    <5:PRON/nsubj>(es) <6:DET/det>(ein) <7:NOUN/obj>(Profi) <8:VERB/advcl>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT> <5:ADJ/root>(nah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(er) <2:AUX/root>(ist) <ROOT> <4:X/root>(ey)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(Dass) <2:PRON/nsubj>(ihr) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADV/advmod>(untereinander) <6:VERB/root>(h\xE4ngt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(es) <4:ADV/advmod>(dann)
    <5:ADV/advmod>(so) <6:ADV/advmod>(derart) <ROOT> <7:VERB/root>(endet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - cc
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:PRON/nsubj>(Das) <6:VERB/root>(schaff) <7:PRON/nsubj>(ich) <8:ADV/advmod>(ja)
    <9:PART/advmod>(nicht) <10:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 6
    - 3
    - flat
  - !!python/tuple
    - 7
    - 3
    - flat
  sentence: <1:PROPN/root>(Wow) <2:ADJ/advmod>(Voll) <ROOT> <3:PROPN/root>(Hi) <4:PROPN/flat>(Carla)
    <6:PROPN/flat>(Danke) <7:PROPN/flat>(Hi)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - obj
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 16
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 16
    - aux
  - !!python/tuple
    - 12
    - 16
    - nsubj
  - !!python/tuple
    - 13
    - 16
    - obl:arg
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADV/root>(Wie) <ROOT> <2:PRON/obj>(sich) <3:PROPN/nsubj>(Jasmin) <4:ADV/advmod>(\xE4\
    u\xDFerlich) <5:ADP/case>(in) <6:DET/det>(den) <7:ADJ/amod>(letzten) <8:NOUN/obl>(Monaten)\
    \ <9:VERB/advcl>(ver\xE4ndert) <10:AUX/aux>(hat) <11:AUX/aux>(wird) <12:PRON/nsubj>(sie)\
    \ <13:PRON/obl:arg>(mir) <14:ADV/advmod>(sp\xE4ter) <15:ADV/advmod>(noch) <16:VERB/root>(zeigen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 15
    - mark
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 3
    - ccomp
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/root>(genauso) <ROOT> <3:VERB/root>(gibt) <4:PRON/expl>(es)\
    \ <5:ADV/advmod>(dann) <6:ADV/advmod>(auch) <7:DET/det>(eine) <8:NOUN/nsubj>(Anweisung)\
    \ <9:ADP/case>(f\xFCr) <10:DET/det>(die) <11:NOUN/nmod>(M\xE4nner) <12:SCONJ/mark>(dass)\
    \ <13:DET/det>(die) <14:NOUN/nsubj>(M\xE4nner) <15:PRON/ccomp>(die)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 10
    - advmod
  - !!python/tuple
    - 3
    - 10
    - advmod
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 13
    - advmod
  - !!python/tuple
    - 16
    - 13
    - advmod
  - !!python/tuple
    - 17
    - 18
    - cc
  - !!python/tuple
    - 18
    - 13
    - conj
  - !!python/tuple
    - 19
    - 18
    - obl:arg
  sentence: <1:INTJ/advmod>(Nee) <2:INTJ/advmod>(nee) <3:ADV/advmod>(Also) <4:PRON/nsubj>(ich)
    <5:AUX/aux>(habe) <6:DET/det:poss>(mein) <7:NOUN/obj>(Leben) <8:ADV/advmod>(da)
    <9:ADV/advmod>(so) <10:VERB/root>(gelebt) <11:CCONJ/cc>(und) <12:PRON/nsubj>(ich)
    <13:VERB/conj>(sehe) <14:PRON/obj>(das) <15:ADV/advmod>(jetzt) <16:ADV/advmod>(so)
    <17:CCONJ/cc>(und) <18:VERB/conj>(denke) <19:PRON/obl:arg>(mir) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(war) <3:ADJ/root>(richtig) <ROOT> <4:ADP/case>(in)
    <5:DET/det>(der) <6:ADJ/amod>(feministischen) <7:NOUN/root>(Richtung) <8:ADV/advmod>(unterwegs)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 5
    - obl
  sentence: <1:VERB/root>(finde) <2:PRON/nsubj>(ich) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:PRON/nsubj>(Ich) <5:VERB/root>(bin) <6:ADV/advmod>(heutzutage) <7:ADP/case>(auf)
    <8:ADV/advmod>(gar) <9:DET/det>(keinen) <10:NOUN/obl>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:PART/advmod>(nicht) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(es) <4:PRON/root>(etwas)
    <ROOT> <5:NOUN/dep>(Besonderes) <6:VERB/root>(gemacht) <7:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(hie\xDF) <ROOT> <3:PROPN/root>(3D)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det>(Diese) <2:PROPN/nsubj>(OpenWorld) <3:AUX/cop>(war) <4:ADJ/root>(\xFC\
    bel) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 2
    - nmod
  sentence: "<1:ADV/root>(So) <ROOT> <2:ADJ/root>(ber\xFChmt) <3:SCONJ/mark>(dass)\
    \ <4:DET/det>(die) <5:NOUN/nsubj>(Teenies) <6:ADV/advmod>(irgendwie) <7:ADP/case>(vor)\
    \ <8:DET/det:poss>(deinem) <9:NOUN/nmod>(Elternhaus)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Schon) <ROOT> <2:CCONJ/root>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/expl>(es) <4:ADV/advmod>(nur)\
    \ <ROOT> <5:ADV/advmod>(wie) <6:PRON/obj>(sich) <7:DET/det:poss>(meine) <8:NOUN/root>(Realit\xE4\
    t)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  sentence: <1:ADV/root>(Besonders) <ROOT> <2:AUX/root>(ist) <3:PRON/nsubj>(es) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/obl>(Osten)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(man) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:ADJ/amod>(richtigen) <6:NOUN/obl>(Flow) <7:VERB/root>(war) <8:CCONJ/cc>(und)
    <9:ADJ/conj>(einfach) <ROOT> <10:VERB/root>(tanzen) <11:AUX/aux>(konnte)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Grafik) <3:AUX/root>(war) <ROOT> <4:DET/det>(die)
    <5:NOUN/nsubj>(Story) <6:ADJ/root>(episch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:X/root>(Ey) <ROOT> <2:CCONJ/cc>(oder) <3:ADV/advmod>(Worum) <4:NOUN/xcomp>(s)
    <5:VERB/root>(geht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 7
    - conj
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(trotzdem) <3:PROPN/obj>(free2play)\
    \ <5:NOUN/flat>(Games) <6:VERB/root>(machen) <ROOT> <7:ADJ/root>(abh\xE4ngig)\
    \ <8:CCONJ/cc>(und) <9:ADJ/amod>(ordentlich) <10:NOUN/conj>(Kohle)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/expl>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(halt)
    <5:ADV/root>(so) <ROOT> <6:SCONJ/mark>(wenn) <7:ADV/advmod>(da) <8:ADV/advmod>(so)
    <9:NOUN/nsubj>(Konflikte) <10:VERB/root>(aufkommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/mark>(als) <2:VERB/root>(w\xFCrde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(gerade)\
    \ <5:DET/det>(die) <6:NOUN/obj>(Polizei) <ROOT> <7:ADP/case>(in) <8:NOUN/obl>(Schutz)\
    \ <9:VERB/root>(nehmen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/nsubj>(ich)
    <5:VERB/ccomp>(habe) <6:DET/obj>(den) <7:ADV/advmod>(auch) <8:ADV/advmod>(gar)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(so) <ROOT> <11:VERB/root>(eingearbeitet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(denke) <2:PRON/nsubj>(ich) <ROOT> <3:ADV/advmod>(dann) <4:AUX/aux>(hast)
    <5:PRON/nsubj>(du) <6:PRON/obj>(es) <7:VERB/root>(geschafft)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/root>(Was) <ROOT> <2:AUX/aux>(ist) <3:ADP/case>(bei) <4:DET/det>(The)
    <5:PROPN/obl>(Initiative) <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Sonst) <2:PRON/nsubj>(ich) <3:VERB/root>(fand) <4:DET/det>(die)
    <5:NOUN/obj>(Trailer) <6:ADV/advmod>(auch) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)
    <ROOT> <9:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:ADV/advmod>(quasi) <3:DET/det>(die) <4:NOUN/nsubj>(Performance)
    <5:ADJ/root>(richtig) <ROOT> <6:VERB/root>(beeinflussen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(find) <3:NOUN/obj>(s) <4:ADP/case>(vor)
    <5:DET/obl>(allem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advcl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(ja) <3:VERB/advcl>(komm) <4:VERB/root>(m\xFC\
    ssen) <5:PRON/nsubj>(wir) <6:ADV/advmod>(jetzt) <7:ADV/advmod>(auch) <8:PART/advmod>(nicht)\
    \ <ROOT> <9:ADV/advmod>(dr\xFCber) <10:VERB/root>(reden)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:AUX/aux>(hab) <4:VERB/root>(gelesen)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 7
    - xcomp
  - !!python/tuple
    - 14
    - 13
    - mark
  - !!python/tuple
    - 15
    - 13
    - cop
  sentence: "<1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:ADV/advmod>(so) <ROOT> <4:ADJ/root>(m\xFC\
    de) <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:VERB/conj>(bin) <8:ADV/advmod>(ganz)\
    \ <9:ADV/advmod>(weit) <10:ADV/advmod>(weg) <11:ADV/advmod>(davon) <12:ADV/advmod>(hier)\
    \ <13:ADJ/xcomp>(perfekt) <14:PART/mark>(zu) <15:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 11
    - conj
  - !!python/tuple
    - 18
    - 17
    - obj
  - !!python/tuple
    - 19
    - 17
    - advmod
  - !!python/tuple
    - 20
    - 17
    - advmod
  - !!python/tuple
    - 21
    - 17
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <4:ADV/advmod>(manchmal)
    <5:ADV/advmod>(so) <ROOT> <6:ADV/advmod>(wie) <7:ADV/advmod>(so) <8:NOUN/nsubj>(Kleinigkeiten)
    <9:ADP/case>(wie) <10:PRON/nmod>(Ich) <11:VERB/root>(achte) <12:ADV/advmod>(mal)
    <13:ADP/case>(auf) <14:DET/det>(die) <15:NOUN/obl>(Atmung) <16:PRON/nsubj>(ich)
    <17:VERB/conj>(lege) <18:PRON/obj>(mich) <19:ADV/advmod>(mal) <20:ADV/advmod>(einfach)
    <21:ADV/compound:prt>(hin)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj:pass
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  sentence: <1:ADV/advmod>(Da) <2:AUX/cop>(ist) <3:DET/det>(das) <4:NOUN/nsubj:pass>(Licht)
    <5:VERB/root>(angegangen) <6:PRON/nsubj>(Das) <7:VERB/parataxis>(funktioniert)
    <8:ADV/advmod>(echt) <9:ADJ/obj>(Total) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:PART/advmod>(nicht) <2:ADV/advmod>(mal) <3:ADV/root>(so) <ROOT> <4:VERB/root>(erfahren)
    <5:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(dachte) <2:ADV/advmod>(so) <ROOT> <3:PRON/nsubj>(irgendjemand)
    <4:VERB/root>(sitzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: "<1:DET/det>(Den) <2:NOUN/obj>(Fall) <3:PROPN/appos>(Seidel) <4:VERB/root>(h\xE4\
    lt) <5:PROPN/obj>(Joachim) <6:PROPN/flat>(Dorner) <7:ADP/case>(f\xFCr) <8:ADV/advmod>(besonders)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Hier) <2:AUX/aux>(kann) <3:PRON/nsubj>(man) <4:ADJ/root>(echt)
    <ROOT> <5:DET/nsubj>(viel) <6:VERB/root>(lernen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Alle) <2:NOUN/nsubj>(Leute) <3:VERB/root>(feiern) <4:ADV/advmod>(heute)
    <5:NOUN/obj>(Abend) <ROOT> <6:ADP/case>(mit) <7:PROPN/root>(Bacardi)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/obj>(ihr) <ROOT> <3:PRON/nsubj>(was) <4:VERB/root>(verpasst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:ADJ/root>(windig) <4:ADV/advmod>(da)
    <5:ADV/advmod>(oben) <6:ADV/advmod>(noch) <7:ADV/advmod>(mal) <8:ADV/advmod>(mehr)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - cop
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:PRON/obj>(es) <ROOT> <4:ADV/advmod>(wie)\
    \ <5:ADJ/root>(gro\xDF) <6:DET/det>(dieses) <7:NOUN/nsubj>(Zentrum) <8:ADV/advmod>(hier)\
    \ <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/aux>(kannst) <3:PART/advmod>(nicht) <4:ADV/advmod>(mehr)
    <5:X/obj>(up) <6:PRON/det>(to) <7:NOUN/obj>(date) <8:ADV/advmod>(damit) <9:AUX/root>(sein)
    <10:SCONJ/mark>(weil) <11:PRON/nsubj>(es) <12:ADV/advmod>(so) <ROOT> <13:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - nmod
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Mitten) <2:ADP/case>(in) <3:DET/det>(der) <4:NOUN/nmod>(Stadt)
    <5:PRON/appos>(Das) <6:AUX/cop>(ist) <7:ADP/root>(zu) <ROOT> <8:ADV/advmod>(wieder)
    <9:ADV/advmod>(gerade) <11:PROPN/root>(Mhm)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADP/case>(In) <2:DET/det>(der) <3:NOUN/root>(Wohnung) <4:ADV/advmod>(da)
    <5:ADV/advmod>(unten) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(du) <3:AUX/aux>(kannst) <4:VERB/root>(sagen)
    <ROOT> <5:DET/det>(der) <6:NOUN/root>(Comedian) <7:ADP/case>(mit) <8:DET/det>(den)
    <9:NOUN/nmod>(Spaghetti) <10:ADP/case>(aus) <11:NOUN/nmod>(Haaren)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:X/root>(Oh) <ROOT> <2:PRON/nsubj>(Was) <3:AUX/aux>(habt) <4:PRON/obj>(ihr)
    <5:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/root>(dass)
    <5:PRON/nsubj>(wir) <6:ADP/case>(von) <7:NOUN/obl>(Generation) <8:ADP/case>(zu)
    <9:NOUN/nmod>(Generation)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(glaube) <3:PRON/nsubj>(es) <4:VERB/ccomp>(ist)\
    \ <5:ADV/advmod>(so) <ROOT> <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(wir) <8:PRON/obj>(uns)\
    \ <9:ADP/case>(vor) <10:NOUN/obl>(Augen) <11:VERB/root>(f\xFChren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(wie) <2:NOUN/root>(Leute) <3:PRON/obj>(sich) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:ADJ/amod>(scharfes) <6:NOUN/obj>(Zeug) <7:VERB/root>(reinziehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: "<1:PROPN/root>(Wow) <2:ADV/advmod>(schon) <ROOT> <3:PRON/obj>(was) <4:DET/det>(die)\
    \ <5:NOUN/nsubj>(Jungs) <6:VERB/root>(durchmachen) <7:AUX/aux>(m\xFCssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:ADJ/amod>(letze) <3:NOUN/nsubj>(mal) <4:AUX/cop>(w\xE4\
    r) <5:DET/det:poss>(mein) <6:ADJ/amod>(letzter) <7:NOUN/root>(track) <ROOT> <8:ADJ/root>(echt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - csubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Egal) <2:PRON/obj>(was) <3:PRON/nsubj>(du) <4:VERB/csubj>(denkst)\
    \ <5:PRON/nsubj>(du) <6:VERB/root>(hast) <7:PRON/obj>(es) <ROOT> <8:VERB/root>(untersch\xE4\
    tzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(bleibe) <3:ADV/advmod>(trotzdem) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/root>(so) <ROOT> <4:NOUN/root>(grade)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(hatte) <4:DET/det>(diese)
    <5:NOUN/obj>(Rapmucke) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(in) <8:DET/det:poss>(meinem)
    <9:NOUN/root>(Herz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Sowas) <2:ADP/root>(von) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(h\xE4tt) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/root>(Erfolg)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 2
    - ccomp
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(macht) <3:PRON/nsubj>(man) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(schon) <6:NUM/nummod>(10) <7:NOUN/obl>(Jahre) <8:SCONJ/mark>(dass)
    <9:AUX/ccomp>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - fixed
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Gedanke) <3:VERB/root>(h\xE4lt) <ROOT>\
    \ <4:ADP/case>(an) <5:DET/det>(der) <6:NOUN/root>(Scheinwelt) <7:ADV/fixed>(fest)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - aux
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 13
    - cop
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 13
    - nmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 3
    - conj
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADJ/root>(verheiratet) <4:CCONJ/cc>(und)\
    \ <5:AUX/aux>(kann) <6:VERB/conj>(sagen) <7:NOUN/nsubj>(Heiraten) <8:AUX/cop>(war)\
    \ <9:ADP/case>(f\xFCr) <10:PRON/nmod>(mich) <11:ADV/advmod>(emotional) <12:VERB/advmod>(gesehen)\
    \ <13:ADJ/conj>(richtig) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - ccomp
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(merken) <3:SCONJ/mark>(dass) <4:DET/det>(die)
    <5:NOUN/nsubj>(Stimmung) <6:ADJ/ccomp>(richtig) <ROOT> <7:VERB/root>(aufgeheizt)
    <8:AUX/aux:pass>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - parataxis
  sentence: <1:PROPN/nsubj>(Nee) <2:AUX/aux>(wollen) <3:ADV/advmod>(auch) <4:PRON/obj>(nichts)
    <5:ADV/advmod>(dazu) <6:VERB/root>(sagen) <7:PRON/nsubj>(Das) <8:AUX/cop>(ist)
    <9:ADV/advmod>(echt) <10:ADJ/parataxis>(total) <ROOT>
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 10
    - csubj
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - appos
  - !!python/tuple
    - 14
    - 16
    - cc
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - advmod
  sentence: <2:PRON/nsubj>(Was) <3:SCONJ/mark>(denn) <4:ADV/advmod>(da) <5:VERB/csubj>(passiert)
    <6:PROPN/nsubj>(Joa) <7:AUX/cop>(ist) <8:ADV/advmod>(halt) <9:DET/det>(ein) <10:NOUN/root>(Hirntumor)
    <11:AUX/cop>(gewesen) <12:X/advmod>(Ah) <13:ADJ/appos>(ok) <ROOT> <14:CCONJ/cc>(und)
    <15:PRON/nsubj>(du) <16:VERB/root>(lebst) <17:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(er) <3:VERB/root>(sieht) <4:PRON/obj>(sich)
    <5:ADV/advmod>(jetzt) <6:ADV/advmod>(da) <7:PART/advmod>(nicht) <ROOT> <8:ADP/case>(in)
    <9:DET/det>(dem) <10:NOUN/root>(Nachteil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Warum) <2:VERB/root>(werden) <3:DET/det>(die) <4:NOUN/nsubj>(Methanemissionen)\
    \ <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(untersch\xE4tzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Wer) <2:VERB/root>(trinkt) <3:PRON/obj>(das) <4:DET/obj>(alles)
    <5:PRON/nsubj>(Das) <6:AUX/parataxis>(ist) <7:ADV/advmod>(ja) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  sentence: "<1:PRON/nsubj>(Man) <2:AUX/root>(kann) <3:PRON/obj>(sich) <4:DET/advmod>(selber)\
    \ <ROOT> <5:VERB/root>(l\xE4hmen) <6:ADP/case>(mit) <7:NOUN/obl>(Zukunftspl\xE4\
    nen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(war) <3:ADJ/root>(voll) <ROOT> <4:PART/advmod>(nicht)
    <5:ADV/advmod>(mehr) <6:ADJ/root>(fokussiert)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <3:PRON/obl:arg>(mir) <ROOT> <4:ADV/advmod>(nen)
    <5:NOUN/root>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: <1:ADV/advmod>(Doch) <2:DET/root>(meine) <ROOT> <3:ADJ/amod>(prollige)
    <4:NOUN/nsubj>(Art) <5:AUX/cop>(ist) <6:ADV/advmod>(zwar) <7:NOUN/root>(Badboy)
    <9:ADJ/appos>(haft) <10:CCONJ/cc>(und) <11:ADJ/conj>(cool)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/root>(Werdegang) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PROPN/root>(Hey) <2:ADP/advmod>(wie) <ROOT> <3:AUX/cop>(ist) <4:PRON/root>(das)
    <5:ADV/advmod>(denn)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 11
    - nummod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 11
    - nmod
  - !!python/tuple
    - 6
    - 11
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 15
    - cc
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 11
    - conj
  sentence: <1:ADV/advmod>(nur) <2:ADV/advmod>(noch) <3:NUM/nummod>(15) <4:ADP/case>(aus)
    <5:PRON/nmod>(Das) <6:AUX/cop>(ist) <7:ADV/advmod>(immer) <8:ADV/advmod>(noch)
    <9:DET/det>(ein) <10:ADJ/amod>(hoher) <11:NOUN/root>(Prozentsatz) <12:CCONJ/cc>(aber)
    <13:PART/advmod>(nicht) <14:ADV/advmod>(mehr) <15:ADV/conj>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/nsubj>(Leute) <3:PRON/nsubj>(das) <4:VERB/root>(finde)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(echt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  sentence: "<1:ADV/advmod>(jetzt) <2:PART/advmod>(nicht) <3:ADV/root>(wirklich) <ROOT>\
    \ <4:VERB/root>(ver\xE4ndern) <5:AUX/aux:pass>(wird)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 6
    - cop
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(scheint) <3:ADV/advmod>(ja) <4:DET/xcomp>(kein)\
    \ <ROOT> <5:ADJ/amod>(verbreitetes) <6:NOUN/root>(Ph\xE4nomen) <7:PART/mark>(zu)\
    \ <8:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: "<1:CCONJ/cc>(Aber) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(das) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/advmod>(h\xE4ufig) <6:VERB/root>(vorkommen) <7:AUX/aux>(w\xFC\
    rde)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <3:ADV/advmod>(phasenabh\xE4\
    ngig) <4:AUX/aux>(w\xFCrde) <5:PRON/nsubj>(ich) <6:VERB/root>(sagen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - xcomp
  - !!python/tuple
    - 9
    - 8
    - mark
  - !!python/tuple
    - 10
    - 8
    - cop
  sentence: "<1:PRON/root>(Was) <2:PRON/nmod>(mir) <ROOT> <3:VERB/root>(hilft) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(wirklich) <6:ADV/advmod>(k\xF6rperlich) <7:ADV/advmod>(sehr)\
    \ <8:ADJ/xcomp>(m\xFCde) <9:PART/mark>(zu) <10:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:PRON/nsubj>(das) <3:ADP/case>(an) <4:DET/det:poss>(meinem)\
    \ <5:NOUN/nmod>(R\xFCcken) <6:ADV/advmod>(so) <ROOT> <7:ADP/case>(nach) <8:ADV/advmod>(unten)\
    \ <9:VERB/root>(ziehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(wenn) <2:DET/det>(die) <3:NOUN/nsubj>(Klimabedingungen)\
    \ <4:PRON/obj>(sich) <5:ADV/advmod>(so) <ROOT> <6:VERB/root>(ver\xE4ndern)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADJ/root>(nat\xFCrlich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 8
    - csubj
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - case
  - !!python/tuple
    - 12
    - 10
    - mark
  - !!python/tuple
    - 13
    - 10
    - nsubj
  - !!python/tuple
    - 14
    - 18
    - det:poss
  - !!python/tuple
    - 15
    - 18
    - amod
  - !!python/tuple
    - 16
    - 18
    - compound
  - !!python/tuple
    - 18
    - 10
    - obj
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(auch) <3:ADJ/csubj>(typisch) <4:PROPN/nsubj>(Gabber)
    <5:AUX/cop>(ist) <6:DET/det>(Der) <7:NOUN/nsubj>(Sound) <8:VERB/root>(klingt)
    <9:ADV/advmod>(so) <ROOT> <10:ADJ/root>(verzerrt) <11:ADP/case>(wie) <12:SCONJ/mark>(wenn)
    <13:PRON/nsubj>(man) <14:DET/det:poss>(seine) <15:ADJ/amod>(alten) <16:NOUN/compound>(PC)
    <18:NOUN/obj>(Lautsprecher)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - cc
  - !!python/tuple
    - 6
    - 11
    - cop
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(nat\xFCrlich) <4:ADJ/root>(hart)\
    \ <5:ADV/cc>(aber) <6:AUX/cop>(war) <7:ADV/advmod>(deswegen) <8:ADV/advmod>(jetzt)\
    \ <9:DET/det>(die) <10:ADJ/amod>(ganze) <11:NOUN/conj>(Szene) <12:ADV/advmod>(so)\
    \ <ROOT> <13:ADV/root>(rechts)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Boah) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT> <4:PRON/nsubj>(das)
    <5:AUX/cop>(ist) <6:ADJ/root>(kacke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <ROOT> <3:SCONJ/mark>(wie) <4:DET/nsubj>(viel)
    <5:ADP/case>(hinter) <6:DET/det>(einem) <7:NOUN/obl>(Ski) <8:VERB/root>(steckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/root>(Ist) <ROOT> <2:ADJ/advmod>(digital) <3:AUX/cop>(ist) <5:ADV/advmod>(\xFC\
    berall) <6:ADJ/root>(vertreten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(wenn) <2:PRON/nsubj>(man) <3:PRON/obj>(sich) <ROOT> <4:ADP/case>(auf)
    <5:ADV/advmod>(etwas) <6:ADJ/root>(konzentriert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:NOUN/root>(Wahnsinn) <2:ADV/advmod>(hier) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:ADV/root>(So) <ROOT> <2:VERB/root>(brauchen) <3:PRON/nsubj>(wir) <4:PRON/obj>(das)
    <5:ADV/advmod>(jetzt) <6:ADV/advmod>(aber) <7:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 12
    - advcl
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - aux
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:AUX/root>(Ist) <ROOT> <2:ADV/advmod>(wie) <3:ADV/advmod>(schnell) <4:PRON/nsubj>(du)
    <5:ADV/advmod>(darauf) <6:VERB/advcl>(geantwortet) <7:AUX/aux>(hast) <8:PRON/nsubj>(Ich)
    <9:AUX/aux>(habe) <10:PRON/obj>(es) <11:ADV/advmod>(extra) <12:VERB/root>(ausgerechnet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(f\xFChl) <3:PRON/obj>(mich) <4:ADV/advmod>(so)\
    \ <ROOT> <5:ADJ/root>(sicher)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Dubai) <2:AUX/cop>(ist) <3:ADV/advmod>(einfach) <4:ADV/root>(so)
    <ROOT> <5:NOUN/root>(safe)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADJ/root>(unfassbar)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(hat) <3:PRON/nsubj>(man) <4:ADJ/advmod>(einfach)
    <ROOT> <5:NOUN/root>(Respekt) <6:ADP/case>(vor) <7:DET/det>(dem) <8:NOUN/nmod>(Gesetz)
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <2:X/advmod>(off) <4:ADV/advmod>(Ja) <5:PRON/nsubj>(das) <6:AUX/root>(ist)
    <7:ADV/advmod>(auch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - advcl
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:AUX/cop>(Ist) <2:PRON/root>(das) <ROOT> <3:CCONJ/cc>(Und) <4:ADV/advmod>(wie)\
    \ <5:PRON/nsubj>(das) <6:VERB/advcl>(schwankt) <7:PRON/nsubj>(Ich) <8:AUX/cop>(bin)\
    \ <9:DET/advmod>(selber) <10:VERB/root>(\xFCberrascht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <ROOT> <4:PROPN/nsubj>(Nice)
    <5:ADJ/root>(Unfassbar)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:ADV/advmod>(so) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:ADJ/root>(optisch) <3:PRON/obj>(sich) <ROOT> <4:VERB/root>(abheben)
    <5:CCONJ/cc>(oder) <6:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - obl
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADP/case>(von) <2:NOUN/obl>(Fans) <3:CCONJ/cc>(und) <4:NOUN/compound>(Hobby)
    <6:NOUN/conj>(Entwicklern) <7:VERB/root>(schlugen) <8:ADV/advmod>(dann) <9:ADV/advmod>(aber)
    <10:ADV/advmod>(so) <ROOT> <11:DET/root>(ein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:SCONJ/root>(dass)
    <5:DET/det>(diese) <6:NOUN/nsubj>(Bespannung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/root>(Also) <ROOT> <2:VERB/root>(gesagt) <3:ADV/advmod>(jetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  sentence: "<1:PRON/nsubj>(Wir) <2:VERB/root>(h\xE4ngen) <3:ADV/advmod>(da) <4:ADV/advmod>(zusammen)\
    \ <5:ADV/advmod>(drin) <7:X/obj>(Ja) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(kommen) <3:ADV/advmod>(schon) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(wurde) <2:PRON/nsubj>(der) <ROOT> <3:ADJ/amod>(coole) <4:NOUN/root>(Prachtbube)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <3:NUM/root>(x4)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det:poss>(ihr) <2:NOUN/compound>(Nullen) <4:NOUN/root>(Zu) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: <ROOT> <1:CCONJ/cc>(und) <2:NOUN/root>(Mittelfinger) <3:ADP/case>(in)
    <4:DET/det>(der) <5:NOUN/nmod>(Luft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(klingt) <3:ADV/advmod>(einfach) <4:ADV/advmod>(mal)
    <ROOT> <5:INTJ/advmod>(Bitte) <6:INTJ/advmod>(loop) <7:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - mark
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:PROPN/root>(Wow) <ROOT> <2:ADV/advmod>(Wie) <3:ADV/advmod>(so) <4:PRON/nsubj>(was)
    <5:VERB/ccomp>(geht) <6:ADV/advmod>(darum) <7:VERB/root>(geht) <8:X/mark>(s) <9:ADV/advmod>(heute)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obj
  sentence: <1:ADV/root>(Wie) <ROOT> <2:VERB/root>(Gib) <3:PRON/obl:arg>(mir) <4:DET/det:poss>(meine)
    <5:NOUN/obj>(Jacke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(sieht) <3:ADV/advmod>(so) <ROOT> <4:ADP/case>(aus)
    <5:DET/obl>(Alles) <6:ADV/advmod>(okay) <7:DET/obj>(Alles) <8:VERB/root>(geklappt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:X/root>(ey) <ROOT> <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:ADJ/root>(heftig)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:X/root>(ey) <ROOT> <2:AUX/cop>(bin) <3:PRON/nsubj>(ich) <4:ADJ/root>(gl\xFC\
    cklich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADJ/amod>(H\xFCbsche) <2:NOUN/nsubj>(Frauen) <3:AUX/aux>(k\xF6nnen)\
    \ <4:DET/obj>(einen) <5:ADV/advmod>(ganz) <6:ADJ/root>(sch\xF6n) <ROOT> <7:INTJ/root>(verwirr)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:DET/det>(die) <3:NOUN/nsubj>(Folgen) <4:ADP/case>(von)\
    \ <5:NOUN/nmod>(Mobbing) <6:AUX/aux>(k\xF6nnen) <7:ADJ/root>(echt) <ROOT> <8:AUX/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - ccomp
  sentence: <1:ADV/root>(Ja) <ROOT> <2:PRON/nsubj>(Ich) <3:AUX/aux>(kann) <4:VERB/root>(sagen)
    <5:PRON/nsubj>(es) <6:VERB/ccomp>(stimmt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(freuen) <3:PRON/nsubj>(sie) <4:PRON/obj>(sich)
    <5:ADJ/advmod>(einfach) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - ccomp
  sentence: <1:ADV/advmod>(So) <2:VERB/root>(geht) <3:PRON/expl>(es) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(oft) <6:DET/det>(Die) <7:NOUN/nsubj>(Geschichten) <8:AUX/ccomp>(sind)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Nie) <2:ADV/advmod>(wieder) <3:VERB/root>(wirst) <4:PRON/nsubj>(du)
    <5:DET/det>(ein) <6:NOUN/obj>(Album) <ROOT> <7:VERB/root>(verkaufen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  sentence: "<1:ADV/advmod>(Au\xDFerdem) <2:CCONJ/cc>(und) <3:PRON/nsubj>(das) <4:VERB/root>(find)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(wirklich) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Was) <2:ADJ/root>(ganz) <ROOT> <3:AUX/aux>(war) <4:AUX/root>(waren)
    <5:DET/det>(die) <6:NOUN/nsubj>(Reaktionen) <7:ADV/advmod>(daheim)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 12
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 12
    - nsubj
  - !!python/tuple
    - 5
    - 12
    - advmod
  - !!python/tuple
    - 6
    - 12
    - mark
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - compound:prt
  sentence: "<1:ADV/root>(schon) <ROOT> <2:SCONJ/mark>(dass) <3:DET/det>(der) <4:NOUN/nsubj>(Mann)\
    \ <5:ADV/advmod>(eben) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(er) <8:PART/advmod>(nicht)\
    \ <9:ADV/advmod>(so) <10:ADV/advmod>(gut) <11:NOUN/obj>(Deutsch) <12:VERB/root>(spricht)\
    \ <13:ADV/advmod>(\xFCberhaupt) <14:PART/advmod>(nicht) <15:ADP/compound:prt>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - ccomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - case
  - !!python/tuple
    - 11
    - 9
    - cop
  sentence: <1:AUX/aux>(Kannst) <2:PRON/nsubj>(du) <3:ADV/advmod>(vielleicht) <4:VERB/root>(verstehen)
    <5:SCONJ/mark>(dass) <6:ADV/advmod>(da) <7:DET/det>(manche) <8:NOUN/ccomp>(Leute)
    <ROOT> <9:ADJ/root>(genervt) <10:ADP/case>(von) <11:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <4:ADP/case>(wie)
    <5:ADJ/root>(lang) <6:CCONJ/cc>(und) <7:ADJ/conj>(aufwendig)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - advmod
  sentence: <1:NOUN/root>(Leute) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 10
    - nsubj
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:VERB/root>(lasst) <3:PRON/obj>(uns) <4:ADV/advmod>(mal)\
    \ <5:VERB/xcomp>(zur\xFCckkommen) <6:ADP/case>(zu) <7:DET/det:poss>(unserer) <8:NOUN/obl>(Frage)\
    \ <9:ADV/advmod>(Warum) <10:AUX/parataxis>(ist) <11:DET/det>(dieses) <12:ADJ/amod>(ganze)\
    \ <13:NOUN/nsubj>(Thema) <14:ADV/advmod>(so) <ROOT> <15:VERB/root>(aufgeladen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 2
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 17
    - mark
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 17
    - nsubj:pass
  - !!python/tuple
    - 16
    - 17
    - nsubj:pass
  - !!python/tuple
    - 17
    - 11
    - ccomp
  - !!python/tuple
    - 18
    - 17
    - aux:pass
  - !!python/tuple
    - 19
    - 17
    - aux
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/root>(dass) <3:ADP/case>(vor) <4:DET/obl>(allem)
    <5:ADJ/amod>(linke) <6:NOUN/nsubj>(Medien) <7:NOUN/obj>(Kinder) <8:CCONJ/cc>(und)
    <9:NOUN/conj>(Jugendliche) <10:ADV/advmod>(so) <ROOT> <11:VERB/root>(indoktrinieren)
    <12:SCONJ/mark>(dass) <13:ADV/advmod>(immer) <14:DET/det>(mehr) <15:NOUN/nsubj:pass>(Kids)
    <16:NOUN/nsubj:pass>(trans) <18:AUX/aux:pass>(werden) <19:AUX/aux>(wollen)
krasse:
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - nmod
  sentence: <1:PROPN/nsubj>(Boah) <2:ADV/advmod>(da) <3:AUX/root>(ist) <4:ADV/advmod>(aber)
    <ROOT> <5:PROPN/root>(Anfurt) <6:ADV/advmod>(hier) <7:ADP/case>(in) <8:DET/det>(dem)
    <9:NOUN/nmod>(Gange)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/root>(was) <3:X/dep>(ne) <ROOT> <4:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:NOUN/obl>(Club) <6:CCONJ/cc>(und) <7:VERB/conj>(sah) <8:ADP/case>(auf) <9:ADV/advmod>(einmal)
    <10:DET/obj>(diese) <ROOT> <11:PROPN/root>(Chaia)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(lieber) <3:DET/det>(ein) <4:ADV/advmod>(bisschen)
    <5:ADV/root>(weniger) <ROOT> <6:NOUN/obj>(Sachen) <7:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 8
    - 4
    - appos
  - !!python/tuple
    - 9
    - 8
    - xcomp
  sentence: <1:VERB/root>(kennste) <2:ADV/advmod>(auch) <3:ADJ/dep>(paar) <ROOT> <4:NOUN/root>(Leute)
    <8:VERB/appos>(Definiere) <9:ADJ/xcomp>(krass)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Der) <2:AUX/cop>(ist) <3:PRON/root>(das) <ROOT> <4:NOUN/root>(Gegenteil)
    <5:ADP/case>(von) <6:PRON/nmod>(mir)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - aux
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:AUX/aux>(Hast) <2:PRON/nsubj>(du) <3:PRON/obj>(dich) <4:ADV/advmod>(daran)\
    \ <5:VERB/root>(gew\xF6hnt) <6:PRON/nsubj>(Es) <7:AUX/aux>(sind) <8:ADV/advmod>(ja)\
    \ <9:ADV/advmod>(schon) <ROOT> <10:NOUN/root>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(frage) <3:PRON/obj>(mich) <4:ADV/advmod>(manchmal)
    <5:ADV/advmod>(Woher) <6:VERB/conj>(kommt) <7:DET/nsubj>(dieser) <ROOT> <8:NOUN/root>(Hass)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 11
    - case
  - !!python/tuple
    - 8
    - 11
    - det
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 5
    - obl
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 5
    - conj
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 13
    - obj
  - !!python/tuple
    - 16
    - 17
    - amod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADV/advmod>(Auch) <2:PROPN/nsubj>(Joko) <3:CCONJ/cc>(und) <4:PROPN/conj>(Klaas)\
    \ <5:VERB/root>(verabschieden) <6:PRON/obj>(sich) <7:ADP/case>(in) <8:DET/det>(einer)\
    \ <9:ADJ/advmod>(sorgf\xE4ltig) <10:ADJ/amod>(inszenierten) <11:NOUN/obl>(Selbsthommage)\
    \ <12:CCONJ/cc>(Und) <13:VERB/conj>(versprechen) <14:ADJ/advmod>(gleichzeitig)\
    \ <15:DET/obj>(eine) <ROOT> <16:ADJ/amod>(finale) <17:NOUN/root>(Staffel)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - nmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 3
    - compound:prt
  - !!python/tuple
    - 13
    - 14
    - dep
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(sowas) <2:ADV/advmod>(\xFCberhaupt) <3:ADJ/root>(m\xF6\
    glich) <4:AUX/cop>(ist) <5:ADP/case>(in) <6:DET/det>(einer) <7:ADJ/amod>(islamischen)\
    \ <8:NOUN/nmod>(Republik) <9:ADP/case>(in) <10:DET/det>(der) <11:NOUN/nmod>(Frauen)\
    \ <12:ADP/compound:prt>(auf) <ROOT> <13:NOUN/dep>(Weise) <14:VERB/root>(diskriminiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(war) <3:NUM/root>(1974) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(das) <6:AUX/cop>(war) <7:ADV/advmod>(schon) <8:DET/conj>(eine)
    <ROOT> <9:ADJ/amod>(homofeindliche) <10:NOUN/root>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(es) <ROOT> <3:NOUN/compound>(Unwetter)
    <5:NOUN/nsubj>(Ereignisse) <6:VERB/root>(gibt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PART/advmod>(Nicht) <2:ADV/advmod>(so) <3:ADJ/root>(langlebig) <4:AUX/cop>(ist)
    <5:DET/nsubj>(eine) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/root>(Aussage)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ne) <4:ADJ/root>(extrem)\
    \ <ROOT> <5:NOUN/root>(Sache) <6:ADP/case>(f\xFCr) <7:PRON/nmod>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:SCONJ/mark>(weil) <2:PRON/nsubj>(du) <3:VERB/root>(h\xF6rst) <4:ADV/advmod>(ne)\
    \ <ROOT> <5:NOUN/root>(Evolution)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:AUX/cop>(waren) <3:PRON/root>(das) <4:ADP/case>(f\xFC\
    r) <ROOT> <5:NOUN/root>(Br\xE4ute)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADV/advmod>(so) <4:ADV/advmod>(beil\xE4\
    ufig) <5:ADV/advmod>(aber) <6:AUX/cop>(ist) <7:ADV/advmod>(irgendwie) <8:DET/parataxis>(eine)\
    \ <ROOT> <9:NOUN/root>(Aussage)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 8
    - xcomp
  sentence: "<1:CCONJ/cc>(Aber) <2:ADJ/root>(klar) <3:PRON/nsubj>(die) <ROOT> <4:NOUN/nsubj>(Pr\xE4\
    senz) <5:ADP/case>(von) <6:NOUN/nmod>(Suchtkranken) <7:PRON/nsubj>(die) <8:VERB/root>(bleibt)\
    \ <9:ADP/case>(bei) <10:PRON/obl>(mir) <11:VERB/xcomp>(h\xE4ngen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:NOUN/nsubj>(Unterhaltung) <3:VERB/root>(bedeutet)\
    \ <4:ADP/case>(f\xFCr) <5:PRON/obl>(mich) <6:PRON/nsubj>(das) <ROOT> <7:ADP/case>(an)\
    \ <8:DET/det>(dem) <9:PROPN/root>(mceen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 10
    - 7
    - appos
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 2
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 13
    - xcomp
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:DET/nsubj>(Alle) <2:VERB/root>(h\xE4ngen) <3:ADV/advmod>(neuerdings)\
    \ <4:ADP/case>(mit) <5:DET/det>(den) <6:ADJ/amod>(harten) <7:NOUN/obl>(Kanaken)\
    \ <8:ADV/compound:prt>(rum) <10:PROPN/appos>(Allemann) <12:CCONJ/cc>(und) <13:VERB/conj>(halten)\
    \ <14:PRON/obj>(sich) <15:ADP/xcomp>(f\xFCr) <ROOT> <16:NOUN/root>(Jungs)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(das) <ROOT> <2:NOUN/obj>(Bilder) <3:VERB/root>(hervorruft)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(Wow) <ROOT> <2:NOUN/root>(Worte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/root>(aber) <ROOT> <2:NOUN/root>(Hose)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: "<1:PRON/nsubj>(was) <2:ADP/case>(f\xFCr) <3:DET/root>(eine) <ROOT> <4:NOUN/nsubj>(Unversch\xE4\
    mtheit) <5:DET/det>(ein) <6:NOUN/root>(Raffle) <7:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Netz) <4:VERB/root>(erzielt)
    <5:PRON/nsubj>(sie) <ROOT> <6:NOUN/root>(Reichweiten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: "<1:ADP/case>(F\xFCr) <2:PROPN/obl>(Lu) <3:VERB/root>(bedeutet) <4:DET/det>(die)\
    \ <5:NOUN/nsubj>(Erkrankung) <ROOT> <6:NOUN/root>(Einschr\xE4nkung) <7:ADP/case>(in)\
    \ <8:DET/det:poss>(ihrem) <9:NOUN/nmod>(Alltag)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Lunge)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 1
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 9
    - conj
  sentence: "<1:NOUN/root>(Danke) <2:ADP/case>(an) <3:PROPN/nmod>(Dung) <4:SYM/cc>(&)\
    \ <5:PROPN/conj>(Rob) <6:PROPN/flat>(Vegas) <7:ADP/case>(f\xFCr) <8:PRON/nmod>(die)\
    \ <ROOT> <9:NOUN/root>(Zeit) <10:CCONJ/cc>(und) <11:ADP/case>(f\xFCr) <12:DET/det:poss>(eure)\
    \ <13:NOUN/conj>(stabile)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 16
    - mark
  - !!python/tuple
    - 11
    - 16
    - advmod
  - !!python/tuple
    - 12
    - 16
    - obj
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 16
    - obj
  - !!python/tuple
    - 15
    - 16
    - mark
  - !!python/tuple
    - 16
    - 9
    - advcl
  - !!python/tuple
    - 17
    - 20
    - case
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 20
    - det
  - !!python/tuple
    - 20
    - 16
    - obl
  sentence: "<1:SCONJ/mark>(weil) <2:PRON/nsubj>(es) <3:ADV/advmod>(einfach) <4:ADV/advmod>(total)\
    \ <5:PRON/root>(das) <ROOT> <6:NOUN/nsubj>(Ding) <7:ADP/case>(f\xFCr) <8:PRON/nmod>(mich)\
    \ <9:VERB/root>(war) <10:SCONJ/mark>(weil) <11:ADV/advmod>(irgendwie) <12:PRON/obj>(sich)\
    \ <13:DET/det>(der) <14:NOUN/obj>(\xD6ffentlichkeit) <15:PART/mark>(zu) <16:VERB/advcl>(stellen)\
    \ <17:ADP/case>(mit) <18:ADV/advmod>(so) <19:DET/det>(einem) <20:NOUN/obl>(Bild)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(kommt) <3:ADV/advmod>(auch) <4:ADV/advmod>(noch)
    <5:PRON/nsubj>(der) <ROOT> <6:NOUN/root>(Geheimtipp)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Teilweise) <2:AUX/root>(soll) <3:PRON/nsubj>(es) <ROOT>\
    \ <4:NOUN/nsubj>(Halluzinationen) <5:VERB/root>(ausl\xF6sen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - mark
  - !!python/tuple
    - 5
    - 2
    - aux
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obl:arg
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(tut) <3:ADV/advmod>(so) <4:SCONJ/mark>(als)\
    \ <5:AUX/aux>(w\xFCrde) <6:PRON/nsubj>(man) <7:PRON/obl:arg>(ihnen) <8:DET/obj>(eine)\
    \ <ROOT> <9:NOUN/obj>(Chance) <10:VERB/root>(bieten)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:DET/det>(kein) <3:ADJ/amod>(gro\xDFer) <4:NOUN/root>(Skilltree)\
    \ <5:CCONJ/cc>(und) <6:DET/conj>(keine) <ROOT> <7:NOUN/root>(Individualisierung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - csubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:PRON/nsubj>(du) <3:VERB/csubj>(siehst) <4:AUX/cop>(sind)
    <5:NUM/root>(zwei) <ROOT> <6:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 3
    - appos
  sentence: "<1:PRON/root>(Das) <ROOT> <2:NOUN/root>(Gegenteil) <3:NOUN/appos>(Sch\xE4\
    ferhund) <4:PROPN/appos>(Gaucho)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:DET/root>(dieser) <ROOT> <4:PROPN/root>(Swagger)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - obl
  sentence: "<1:VERB/root>(Steht) <2:ADV/advmod>(da) <4:PRON/nsubj>(Was) <5:ADP/case>(f\xFC\
    r) <6:DET/obl>(eine) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - appos
  sentence: <ROOT> <1:ADJ/amod>(arabische) <2:NOUN/root>(Dieb) <4:X/appos>(ah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <ROOT> <3:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(weil) <2:PRON/nsubj>(es) <3:ADV/advmod>(einfach) <4:ADV/advmod>(so)\
    \ <5:DET/root>(eine) <ROOT> <6:NOUN/nsubj>(Lebensver\xE4nderung) <7:VERB/root>(darstellt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:VERB/root>(gibt) <2:X/advmod>(s) <ROOT> <3:NOUN/root>(\xDCberschwemmungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PART/advmod>(nicht) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Steigerung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - dep
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:AUX/cop>(w\xE4re) <2:DET/det>(das) <3:DET/root>(eine) <ROOT> <4:NOUN/dep>(Konfrontation)\
    \ <5:ADV/advmod>(pl\xF6tzlich) <6:PRON/obj>(nichts) <7:ADV/advmod>(mehr) <8:PART/mark>(zu)\
    \ <9:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - obj
  - !!python/tuple
    - 5
    - 11
    - aux
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:DET/det>(dem) <3:NOUN/root>(Stichwort) <ROOT> <4:PROPN/obj>(Skills)
    <5:AUX/aux>(muss) <6:PRON/nsubj>(ich) <7:PRON/obj>(dich) <8:ADV/advmod>(aber)
    <9:DET/det>(ein) <10:ADV/advmod>(bisschen) <11:VERB/root>(bremsen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/root>(h\xE4lt) <2:DET/det>(die) <3:NOUN/obj>(Freude) <4:ADP/case>(\xFC\
    ber) <5:NOUN/obl>(ne) <ROOT> <6:NOUN/nsubj>(Waffe) <7:ADV/advmod>(meist) <8:ADV/advmod>(nur)\
    \ <9:ADJ/root>(kurz)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(machen) <3:ADV/advmod>(einfach) <4:DET/det>(jedes)
    <5:NOUN/obl>(Jahr) <ROOT> <6:NOUN/root>(Verluste)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Deswegen) <2:VERB/root>(will) <3:PRON/nsubj>(sie) <ROOT>
    <4:NOUN/nsubj>(Farben) <5:VERB/root>(tragen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:PART/advmod>(nicht) <4:DET/obj>(viel)
    <5:VERB/ccomp>(hat) <6:ADV/advmod>(aber) <ROOT> <7:NOUN/root>(Auswirkungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Genau) <2:SCONJ/root>(Indem) <3:PRON/obj>(ihr) <ROOT> <4:NOUN/nsubj>(Karambolagen)
    <5:VERB/root>(verursacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  sentence: "<1:ADV/advmod>(Zu) <2:DET/root>(viel) <ROOT> <3:NOUN/root>(Info) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(euch) <6:PRON/nsubj>(was)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 17
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 17
    - aux
  - !!python/tuple
    - 9
    - 17
    - expl
  - !!python/tuple
    - 10
    - 17
    - advmod
  - !!python/tuple
    - 11
    - 17
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 17
    - obl
  - !!python/tuple
    - 16
    - 17
    - nsubj
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADV/root>(teils) <ROOT> <2:NOUN/obj>(Z\xFCge) <3:ADP/case>(an) <4:DET/det>(Diese)\
    \ <5:NOUN/nmod>(Art) <6:ADP/case>(von) <7:NOUN/nmod>(Politik) <8:AUX/aux>(war)\
    \ <9:PRON/expl>(es) <10:ADV/advmod>(aber) <11:PRON/nsubj>(die) <12:ADP/case>(aus)\
    \ <13:DET/det>(einer) <14:ADJ/amod>(verarmten) <15:NOUN/obl>(Insel) <16:PRON/nsubj>(das)\
    \ <17:VERB/root>(gemacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - aux
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - aux
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:AUX/aux>(wirst) <2:DET/obj>(eine) <3:DET/det>(dieser) <4:ADJ/amod>(ganzen)
    <5:NOUN/nmod>(Regeln) <6:PART/mark>(zu) <7:VERB/root>(brechen) <8:ADV/advmod>(dann)
    <9:AUX/aux>(kann) <10:PRON/nsubj>(das) <ROOT> <11:NOUN/obj>(Konsequenzen) <12:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 11
    - appos
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  sentence: <ROOT> <1:NOUN/obj>(Sachen) <2:ADP/case>(zu) <3:PROPN/nmod>(Boba) <4:VERB/root>(vorgestellt)
    <5:AUX/aux>(habe) <6:CCONJ/cc>(Und) <7:PRON/nsubj>(das) <8:AUX/cop>(war) <9:ADV/advmod>(auch)
    <10:ADV/advmod>(schon) <11:NOUN/conj>(Fakt) <12:NUM/appos>(50) <13:VERB/conj>(Habt)
    <14:PRON/obj>(ihr)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:ADJ/advmod>(grob) <3:VERB/root>(gesagt) <4:DET/obj>(eine)\
    \ <ROOT> <5:ADJ/amod>(rechte) <6:NOUN/root>(Verschw\xF6rungstheorie)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Predator) <2:ADJ/advmod>(nat\xFCrlich) <3:PRON/nsubj>(der)\
    \ <4:VERB/root>(hat) <ROOT> <5:PROPN/compound>(Alien) <7:NOUN/root>(Waffen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(kommt) <3:DET/det>(dieser) <4:ADJ/amod>(richtige)
    <5:NOUN/nsubj>(Druck) <6:CCONJ/cc>(und) <7:DET/obj>(diese) <ROOT> <8:NOUN/root>(Sehnsucht)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(das) <3:NOUN/nsubj>(Aussehen) <4:DET/advmod>(keine)
    <5:ADV/root>(so) <ROOT> <6:NOUN/obj>(Rolle) <7:VERB/root>(spielt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(haben) <3:ADV/advmod>(teilweise) <ROOT>
    <4:NOUN/root>(Schwierigkeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(jetzt) <2:ADV/advmod>(aber) <3:PART/advmod>(nicht) <4:ADV/root>(so)
    <ROOT> <5:NOUN/nsubj>(Schwierigkeiten) <6:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 13
    - ccomp
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - obj
  sentence: "<1:ADJ/root>(Unver\xE4ndert) <2:AUX/cop>(ist) <3:ADV/advmod>(aber) <4:PRON/nsubj>(das)\
    \ <ROOT> <5:NOUN/nsubj>(Gemeinschaftsgef\xFChl) <6:ADV/advmod>(hier) <7:ADP/case>(an)\
    \ <8:DET/det>(dem) <9:PROPN/obl>(K\xF6lnberg) <10:VERB/ccomp>(geblieben) <12:ADV/advmod>(hier)\
    \ <13:VERB/root>(kennt) <14:DET/nsubj>(jeder) <15:DET/obj>(jeden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - dep
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <4:X/advmod>(na)
    <5:ADV/advmod>(ja) <6:X/dep>(ne) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:DET/root>(dieser) <ROOT> <3:NOUN/nsubj>(Hormonsturz)
    <4:ADP/case>(mit) <5:DET/det>(den) <6:NOUN/nmod>(Gehirnen) <7:DET/det>(der) <8:NOUN/nmod>(Frauen)
    <9:VERB/root>(macht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Bekki) <2:VERB/root>(macht) <3:DET/obj>(eine) <4:ADV/advmod>(wirklich)
    <ROOT> <5:NOUN/root>(Entdeckung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:NOUN/nsubj>(Blogs) <3:ADV/advmod>(so)
    <4:ADV/advmod>(richtig) <5:ADV/advmod>(gut) <6:ADV/advmod>(jetzt) <7:VERB/root>(abonnieren)
    <8:PROPN/obj>(Adi) <9:PROPN/flat>(Online)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 1
    - obj
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  sentence: "<1:INTJ/root>(guck) <2:ADV/advmod>(mal) <3:ADV/advmod>(hier) <4:ADV/advmod>(mega)\
    \ <5:ADV/advmod>(mega) <6:ADJ/amod>(sch\xF6nes) <7:NOUN/obj>(Tier) <8:NOUN/appos>(mega)\
    \ <ROOT> <9:DET/det>(die) <10:ADJ/amod>(formierte) <11:NOUN/obj>(Pfoten) <12:VERB/root>(habe)\
    \ <13:PRON/nsubj>(ich) <14:ADV/advmod>(schon)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 13
    - cc
  - !!python/tuple
    - 6
    - 13
    - advmod
  - !!python/tuple
    - 7
    - 13
    - mark
  - !!python/tuple
    - 8
    - 13
    - nsubj
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 4
    - advcl
  sentence: "<1:ADV/root>(dazu) <ROOT> <2:NOUN/obj>(Augenentz\xFCndung) <3:PART/mark>(zu)\
    \ <4:VERB/root>(bekommen) <5:CCONJ/cc>(oder) <6:ADV/advmod>(eben) <7:SCONJ/mark>(dass)\
    \ <8:PRON/nsubj>(sie) <9:ADV/advmod>(auch) <10:DET/det>(die) <11:NOUN/obj>(Augen)\
    \ <12:PART/advmod>(nicht) <13:VERB/advcl>(verlieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 9
    - compound
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - parataxis
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 16
    - obj
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - mark
  - !!python/tuple
    - 16
    - 10
    - csubj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <3:ADP/case>(an) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Anfang) <6:NOUN/compound>(Okay) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)\
    \ <9:DET/parataxis>(eine) <ROOT> <10:NOUN/root>(Herausforderung) <11:ADV/advmod>(jetzt)\
    \ <12:DET/det>(dieses) <13:NOUN/obj>(Ding) <14:ADV/advmod>(\xFCberhaupt) <15:PART/mark>(zu)\
    \ <16:VERB/csubj>(halten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: <1:ADJ/amod>(Gute) <2:NOUN/nsubj>(Laune) <3:ADV/advmod>(Auch) <4:DET/det>(diese)
    <5:NOUN/nsubj>(Woche) <6:VERB/root>(gab) <7:X/advmod>(s) <ROOT> <8:PROPN/root>(News)
    <9:PROPN/flat>(yeah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:ADP/case>(von) <4:ADV/advmod>(dort)
    <5:ADJ/advmod>(echt) <ROOT> <6:NOUN/dep>(Aufnahmen) <7:VERB/root>(mitgebracht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Entweder) <2:PRON/expl>(es) <3:VERB/root>(gibt) <4:DET/det>(einen)
    <5:ADJ/amod>(guten) <6:NOUN/obj>(Lehrerrabatt) <7:CCONJ/cc>(oder) <8:PRON/nsubj>(sie)
    <9:VERB/conj>(hat) <ROOT> <10:ADJ/amod>(special) <11:NOUN/root>(Lehrerfunktionen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 7
    - flat
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:ADV/compound:prt>(ne) <ROOT>
    <4:NOUN/dep>(Strecke) <5:VERB/root>(aufgebaut) <6:ADP/case>(namens) <7:PROPN/obl>(Lakeshore)
    <8:PROPN/flat>(Grand)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:PRON/root>(denen) <3:PRON/appos>(ihr) <ROOT> <4:NOUN/nsubj>(Fahrzeuge)\
    \ <5:ADP/case>(f\xFCr) <6:DET/det>(den) <7:ADJ/amod>(sp\xE4teren) <8:NOUN/nmod>(Kauf)\
    \ <9:VERB/root>(freischaltet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/advmod>(ganz) <3:ADV/advmod>(recht) <4:PRON/nsubj>(er)\
    \ <5:VERB/root>(verkaufte) <6:DET/det>(keine) <7:NOUN/obj>(Supplemente) <8:CCONJ/cc>(oder)\
    \ <9:ADJ/conj>(total) <ROOT> <10:NOUN/root>(\xDCbungen) <11:ADP/case>(wie) <12:NOUN/nmod>(Liegest\xFC\
    tze) <13:ADP/case>(f\xFCr) <14:NUM/nmod>(129\u20AC)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obj
  sentence: "<1:CCONJ/cc>(Und) <2:DET/root>(eine) <ROOT> <3:NOUN/nsubj>(Single) <4:VERB/root>(\xF6\
    ffnet) <5:ADV/advmod>(mei'm) <6:NOUN/obj>(Album) <7:DET/det>(die) <8:NOUN/obj>(T\xFC\
    r)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:NOUN/root>(ne)\
    \ <ROOT> <5:NOUN/root>(Situation) <6:ADP/case>(f\xFCr) <7:PRON/nmod>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(gibt) <ROOT> <3:PROPN/root>(Bossfights)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - ccomp
  sentence: "<1:ADV/advmod>(Mal) <2:VERB/root>(sehen) <3:ADP/mark>(wie) <ROOT> <4:NOUN/nsubj>(Kurven)\
    \ <5:PRON/nsubj>(wir) <6:VERB/root>(fahren) <7:PART/advmod>(nicht) <8:SCONJ/mark>(dass)\
    \ <9:PRON/nsubj>(das) <10:VERB/ccomp>(runterf\xE4llt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 2
    - conj
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - nummod
  - !!python/tuple
    - 15
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 15
    - nmod
  - !!python/tuple
    - 18
    - 13
    - cc
  sentence: "<1:NUM/nummod>(40) <2:NOUN/root>(Prozent) <3:CCONJ/cc>(Und) <4:ADJ/conj>(umgekehrt)\
    \ <6:CCONJ/cc>(und) <7:PRON/nsubj>(das) <8:AUX/cop>(ist) <9:ADV/advmod>(schon)\
    \ <10:DET/conj>(eine) <ROOT> <11:NOUN/nsubj>(Zahl) <12:ADV/advmod>(da) <13:VERB/root>(meinten)\
    \ <14:NUM/nummod>(42) <15:NOUN/nsubj>(Prozent) <16:DET/det>(der) <17:NOUN/nmod>(M\xE4\
    nner) <18:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - nmod
  sentence: "<1:DET/root>(eine) <ROOT> <2:NOUN/root>(Entlastung) <3:ADP/case>(f\xFC\
    r) <4:NOUN/nmod>(Eltern) <5:ADJ/advmod>(einengend) <6:ADP/case>(f\xFCr) <7:NOUN/nmod>(Teenies)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - cop
  - !!python/tuple
    - 2
    - 9
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 11
    - dep
  sentence: "<1:AUX/cop>(bin) <2:CCONJ/cc>(oder) <3:ADV/advmod>(hm) <4:ADV/advmod>(hoffentlich)\
    \ <5:AUX/cop>(war) <6:PRON/nsubj>(es) <7:DET/det>(keine) <8:DET/det>(eine) <9:NOUN/root>(hyper)\
    \ <ROOT> <10:ADJ/amod>(super) <11:NOUN/root>(M\xFCcke) <12:DET/det>(die) <13:NOUN/dep>(Riesenstiche)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 4
    - advmod
  - !!python/tuple
    - 11
    - 12
    - dep
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det>(den) <3:PROPN/obl>(USA) <4:VERB/root>(hat)\
    \ <5:DET/det>(die) <6:PROPN/nsubj>(Abo) <8:NOUN/flat>(Flut) <9:ADV/advmod>(also)\
    \ <10:ADV/advmod>(ziemlich) <ROOT> <11:NOUN/dep>(Ausma\xDFe) <12:VERB/root>(angenommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Auch) <2:ADP/case>(in) <3:DET/det>(dem) <4:NUM/nummod>(20)
    <5:NOUN/nmod>(Jahrhundert) <6:VERB/root>(wurden) <7:ADV/advmod>(immer) <8:ADV/advmod>(noch)
    <ROOT> <9:NOUN/dep>(Methoden) <10:VERB/root>(eingesetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 9
    - advmod
  sentence: <1:NOUN/nsubj>(thema) <2:VERB/root>(angeht) <3:ADV/advmod>(also) <4:PRON/nsubj>(ich)
    <5:VERB/conj>(bekomme) <6:ADV/advmod>(wirklich) <7:ADJ/advmod>(richtig) <ROOT>
    <8:ADV/advmod>(auch) <9:NOUN/root>(beleidigungen) <10:ADP/case>(zu) <11:DET/det>(diesem)
    <12:NOUN/nmod>(thema) <13:ADV/advmod>(also)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - parataxis
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - obj
  sentence: "<ROOT> <1:NOUN/parataxis>(missbrauchsvorw\xFCrfe) <2:ADJ/advmod>(mutma\xDF\
    lich) <3:AUX/aux>(muss) <4:PRON/nsubj>(man) <5:ADV/advmod>(dazu) <6:VERB/root>(sagen)\
    \ <7:PRON/nsubj>(er) <8:ADV/advmod>(selbst) <9:VERB/conj>(bestreitet) <10:PRON/nsubj>(das)\
    \ <11:DET/obj>(alles)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NUM/root>(Zwei) <2:ADV/advmod>(besonders) <ROOT> <3:NOUN/obj>(F\xE4\
    lle) <4:AUX/aux>(wollen) <5:PRON/nsubj>(wir) <6:PRON/obj>(uns) <7:VERB/root>(anschauen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/root>(die) <ROOT> <2:ADJ/amod>(k\xF6rperliche) <3:NOUN/obj>(Abh\xE4\
    ngigkeit) <4:ADP/case>(von) <5:NOUN/nmod>(Alkohol) <6:VERB/root>(dazukommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - conj
  - !!python/tuple
    - 16
    - 17
    - case
  - !!python/tuple
    - 17
    - 15
    - nmod
  sentence: "<1:SCONJ/mark>(Als) <2:DET/det>(die) <3:PROPN/nsubj>(T\xFCrkei) <4:NUM/obl>(1974)\
    \ <5:VERB/advcl>(einmarschierte) <6:VERB/root>(ging) <7:PRON/nsubj>(es) <8:PART/advmod>(nicht)\
    \ <9:ADV/advmod>(nur) <10:ADP/case>(um) <11:PROPN/obl>(Zyperns) <ROOT> <12:NOUN/root>(Location)\
    \ <13:CCONJ/cc>(oder) <14:DET/det>(die) <15:NOUN/conj>(Rivalit\xE4t) <16:ADP/case>(mit)\
    \ <17:PROPN/nmod>(Griechenland)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - flat
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/root>(das) <2:ADP/case>(auf) <3:DET/det>(den) <4:ADJ/amod>(ersten)\
    \ <5:NOUN/nmod>(Blick) <ROOT> <6:PROPN/nsubj>(Silent) <7:PROPN/flat>(Hill) <9:NOUN/flat>(Gef\xFC\
    hle) <10:ADP/case>(in) <11:DET/obl>(einem) <12:VERB/root>(weckt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - det
  - !!python/tuple
    - 8
    - 11
    - amod
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - conj
  - !!python/tuple
    - 11
    - 5
    - dep
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(finde) <3:PRON/nsubj>(ich) <4:DET/obj>(eine)\
    \ <ROOT> <5:NOUN/root>(Vorstellung) <6:ADV/advmod>(Zumal) <7:DET/det>(die) <8:ADJ/amod>(\xF6\
    kologischen) <9:CCONJ/cc>(und) <10:ADJ/conj>(finanziellen) <11:NOUN/dep>(Probleme)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - xcomp
  sentence: <ROOT> <1:NOUN/nsubj>(Lage) <2:VERB/root>(haben) <3:PRON/nsubj>(Das) <4:AUX/cop>(sind)
    <5:NOUN/obj>(Schweinehalter) <6:ADV/advmod>(immer) <7:ADV/advmod>(schon) <8:ADJ/xcomp>(gewohnt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:PART/advmod>(nicht) <3:ADV/advmod>(nur) <ROOT>\
    \ <4:NOUN/nsubj>(K\xF6rperpanzer) <5:VERB/root>(tragen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Expertenmodus) <4:VERB/root>(fliegt)
    <5:PRON/nsubj>(ihr) <ROOT> <6:X/compound>(U) <8:PROPN/root>(turns)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 9
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(denn) <2:ADV/advmod>(grade) <3:DET/det>(der) <4:NOUN/nsubj>(Lockdown)\
    \ <5:AUX/cop>(war) <6:ADP/case>(f\xFCr) <7:DET/det>(viele) <8:NOUN/nmod>(Familien)\
    \ <9:DET/root>(eine) <ROOT> <10:NOUN/root>(Belastungsprobe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - nummod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 2
    - obj
  - !!python/tuple
    - 11
    - 2
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(mache) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <5:ADP/case>(mit) <6:NUM/nummod>(zwei) <7:CCONJ/cc>(oder) <8:NUM/conj>(vier) <9:NOUN/obl>(Jahren)
    <10:DET/obj>(eine) <11:ADJ/advmod>(wirklich) <ROOT> <12:NOUN/root>(OP)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/root>(Wenn) <2:PRON/nsubj>(wir) <ROOT> <3:NOUN/nsubj>(L\xF6\
    cher) <4:ADP/case>(in) <5:DET/det>(der) <6:NOUN/obl>(Wand) <7:VERB/root>(h\xE4\
    tten)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: "<1:SCONJ/mark>(Weil) <2:PRON/nsubj>(wir) <3:NOUN/obj>(Narzissten) <4:ADV/advmod>(eh)\
    \ <5:ADP/root>(als) <ROOT> <6:NOUN/dep>(B\xF6sewichte) <7:VERB/root>(dargestellt)\
    \ <8:AUX/aux:pass>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(gern) <3:ADV/advmod>(mal) <4:ADV/root>(so)
    <ROOT> <5:NOUN/obj>(Sachen) <6:VERB/root>(raushaut)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:PRON/nsubj>(Was) <2:PRON/nsubj>(man) <3:ADV/advmod>(aber) <4:ADJ/root>(wei\xDF\
    ) <5:AUX/cop>(ist) <6:SCONJ/mark>(dass) <7:NOUN/appos>(Lithium) <ROOT> <8:NOUN/nsubj>(Nebenwirkungen)\
    \ <9:VERB/root>(haben) <10:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:VERB/root>(Geh\xF6rt) <2:DET/obj>(diese) <ROOT> <3:NOUN/root>(Gewalt)\
    \ <4:ADV/advmod>(wirklich) <5:ADP/case>(zu) <6:DET/det:poss>(seinem) <7:NOUN/nmod>(Alltag)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: <1:DET/root>(Diese) <ROOT> <2:NOUN/nsubj>(Spannweite) <3:PRON/nsubj>(das)
    <4:VERB/root>(liegt) <5:ADP/case>(vor) <6:DET/obl>(allem) <7:ADV/advmod>(daran)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt) <4:DET/nsubj>(eine)
    <5:ADJ/root>(ganz) <ROOT> <6:NOUN/xcomp>(Masse) <7:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/root>(krass) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(jemand)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/nsubj>(Symptome) <7:VERB/root>(zeigt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 5
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(erz\xE4hlst) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/root>(Sachen) <6:PRON/nsubj>(was) <7:PRON/obj>(dir) <8:VERB/acl>(passiert)\
    \ <9:AUX/aux>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 3
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:VERB/root>(Klingt) <2:ADP/case>(auf) <3:NOUN/obl>(Singles) <4:ADP/case>(wie)\
    \ <ROOT> <5:NOUN/root>(S\xE4nger)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - nsubj
  - !!python/tuple
    - 2
    - 9
    - aux
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - case
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/aux>(haben) <3:ADV/advmod>(mal) <4:DET/det>(eine)
    <5:NOUN/obj>(Grafik) <6:ADP/case>(aus) <7:DET/det>(der) <8:NOUN/nmod>(Studie)
    <9:VERB/root>(zusammengebastelt) <10:PRON/obj>(die) <11:ADV/advmod>(wirklich)
    <ROOT> <12:NOUN/root>(Unterschiede) <13:ADP/case>(zwischen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:AUX/aux>(kann) <3:PRON/nsubj>(es) <4:AUX/root>(sein)
    <5:SCONJ/mark>(dass) <6:ADV/advmod>(so) <7:DET/det>(viele) <8:NOUN/nsubj>(Teile)
    <ROOT> <9:NOUN/obj>(Fehler) <10:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/nsubj>(Beides) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Einschnitte)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - obj
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - obl
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <ROOT> <1:NOUN/obj>(Horrorvorstellungen) <2:ADV/advmod>(wieder) <3:ADP/case>(in)
    <4:DET/det>(die) <5:NOUN/obl>(Platte) <6:PART/mark>(zu) <7:VERB/root>(ziehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - obl:arg
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - acl
  - !!python/tuple
    - 8
    - 14
    - obj
  - !!python/tuple
    - 9
    - 14
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - compound
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 7
    - acl
  - !!python/tuple
    - 15
    - 14
    - aux
  - !!python/tuple
    - 16
    - 3
    - cop
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 16
    - obl
  sentence: <1:ADV/advmod>(Also) <2:ADV/root>(so) <ROOT> <3:NOUN/root>(Geschichten)
    <4:PRON/nsubj>(die) <5:PRON/obl:arg>(mir) <6:ADV/advmod>(direkt) <7:VERB/acl>(einfallen)
    <8:PRON/obj>(die) <9:PRON/nsubj>(wir) <10:ADP/case>(per) <11:NOUN/compound>(E)
    <13:NOUN/obl>(Mail) <14:VERB/acl>(bekommen) <15:AUX/aux>(haben) <16:AUX/cop>(sind)
    <17:ADP/case>(zu) <18:DET/det>(dem) <19:NOUN/obl>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux:pass
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(wir) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/dep>(Community) <6:VERB/root>(haben) <7:AUX/aux:pass>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 4
    - xcomp
  sentence: "<1:CCONJ/cc>(Aber) <2:ADP/root>(ohne) <ROOT> <3:NOUN/nsubj>(Powersch\xFC\
    sse) <4:VERB/root>(wird) <5:PRON/nsubj>(das) <6:ADP/case>(in) <7:DET/det>(der)\
    \ <8:NOUN/nmod>(Regel) <9:PRON/xcomp>(nichts)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(machen) <2:PRON/nsubj>(wir) <3:ADV/advmod>(noch) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/root>(Entdeckung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  sentence: <1:NOUN/root>(Zuschauer) <2:ADV/advmod>(lieber) <ROOT> <3:NOUN/obj>(Szenen)
    <4:VERB/root>(sehen) <5:AUX/aux>(wollt) <6:ADV/advmod>(Vielleicht) <7:VERB/conj>(irre)
    <8:PRON/nsubj>(ich) <9:PRON/obj>(mich) <10:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/obj>(Annahme) <6:PART/mark>(zu) <7:VERB/root>(denken)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(der) <2:ADV/advmod>(so) <3:PROPN/root>(ne) <ROOT> <4:NOUN/dep>(Vergangenheit)
    <5:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - expl
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(glaube) <3:ADP/case>(in) <4:DET/det:poss>(deinem)
    <5:NOUN/obl>(Leben) <6:VERB/conj>(gab) <7:PRON/expl>(es) <8:DET/obj>(viele) <ROOT>
    <9:NOUN/root>(Erlebnisse)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  sentence: <1:PRON/root>(Die) <ROOT> <2:NOUN/root>(Klatsche) <3:DET/det>(der) <4:NOUN/nmod>(Kauderwelschreime)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/root>(Tick) <2:PROPN/flat>(tack) <3:PROPN/flat>(Boom) <ROOT>
    <4:NOUN/root>(Gang)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/nsubj>(Alle) <2:VERB/root>(reden) <3:ADP/case>(\xFCber) <4:ADJ/amod>(neue)\
    \ <5:NOUN/obl>(Spiele) <6:CCONJ/cc>(und) <7:PRON/conj>(deren) <ROOT> <8:NOUN/root>(Grafik)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 2
    - csubj
  sentence: "<1:DET/root>(eine) <ROOT> <2:NOUN/root>(Herausforderung) <3:ADV/advmod>(jetzt)\
    \ <4:DET/det>(dieses) <5:NOUN/obj>(Ding) <6:ADV/advmod>(\xFCberhaupt) <7:PART/mark>(zu)\
    \ <8:VERB/csubj>(halten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(Eine) <ROOT> <2:NOUN/root>(Reaktion)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 7
    - nmod
  - !!python/tuple
    - 12
    - 11
    - appos
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 7
    - cop
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(handelt) <3:PRON/obj>(sich) <4:ADP/case>(um)
    <5:DET/det>(eine) <6:ADJ/obl>(weitere) <ROOT> <7:NOUN/root>(Eskalationsstufe)
    <8:DET/det>(des) <9:PROPN/nmod>(Kreml) <10:ADP/case>(in) <11:NOUN/nmod>(Richtung)
    <12:NOUN/appos>(Faschismus) <13:CCONJ/cc>(und) <14:PRON/nsubj>(es) <15:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 5
    - advcl
  sentence: "<1:AUX/cop>(ist) <2:PRON/nsubj>(es) <3:ADJ/advmod>(h\xE4ufig) <4:X/root>(ne)\
    \ <ROOT> <5:NOUN/root>(Belastung) <6:SCONJ/mark>(weil) <7:PRON/nsubj>(sie) <8:NOUN/obj>(Gedanken)\
    \ <9:VERB/advcl>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - flat
  sentence: <1:ADJ/root>(Ganz) <ROOT> <2:PROPN/root>(Assi) <4:NOUN/flat>(Schiene)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(will) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Yacht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:DET/root>(dieses) <ROOT> <2:NOUN/root>(Gef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: "<1:CCONJ/cc>(sondern) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <ROOT> <4:NOUN/root>(Ohrl\xF6\
    cher) <5:X/dep>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  sentence: "<1:DET/root>(Viele) <ROOT> <2:NOUN/nsubj>(Rapper) <3:VERB/root>(geseh'n)\
    \ <4:PRON/nsubj>(die) <5:VERB/xcomp>(abkacken) <6:ADP/case>(bei) <7:NOUN/obl>(Schl\xE4\
    gerei)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <4:ADV/advmod>(ne) <ROOT> <5:NOUN/root>(Nummer)
    <6:ADP/case>(in) <7:DET/nmod>(dei) <9:PROPN/nmod>(Drecksdorf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 10
    - 6
    - conj
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(machen) <ROOT> <3:NOUN/root>(Hits)
    <4:ADP/case>(wie) <6:PROPN/nmod>(Benzema) <8:CCONJ/cc>(und) <10:PROPN/conj>(Roller)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nummod
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: <1:NOUN/root>(Verspreche) <2:NUM/nummod>(drei) <3:ADP/dep>(zu) <ROOT>
    <4:NOUN/root>(Newcomer) <5:ADP/dep>(ab)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:NOUN/root>(Texte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(was) <3:X/dep>(ne) <ROOT> <4:PROPN/root>(Kombo)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/root>(das) <ROOT> <3:ADP/case>(an) <4:DET/det>(der)
    <5:NOUN/obl>(Story) <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Stecken) <2:ADV/advmod>(doch) <3:ADJ/root>(sicher) <ROOT>
    <4:NOUN/root>(Minderwertigkeitskomplexe)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(Mit) <2:NUM/nummod>(drei) <3:NOUN/obl>(Stichen) <4:VERB/root>(bezahl'n)\
    \ <5:ADP/case>(f\xFCr) <ROOT> <6:PROPN/root>(Rolex)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/nsubj>(Jeder) <2:VERB/root>(kennt) <ROOT> <3:NOUN/nsubj>(Leute)
    <4:PRON/nsubj>(das) <5:AUX/cop>(ist) <6:PRON/nsubj>(nichts) <7:NOUN/root>(besonderes)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(So) <ROOT> <2:NOUN/root>(Kopfficks)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:ADV/root>(Mehr) <2:ADP/case>(als) <3:ADJ/nmod>(paar) <ROOT> <4:NOUN/root>(Bars)
    <5:CCONJ/cc>(und) <7:NOUN/conj>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - nummod
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 12
    - compound
  - !!python/tuple
    - 12
    - 7
    - obj
  sentence: "<1:PRON/nsubj>(Die) <2:AUX/aux>(ist) <3:NOUN/nsubj>(S\xE4ngerin) <4:VERB/root>(hat)\
    \ <5:DET/obj>(eine) <ROOT> <6:NOUN/obj>(Stimme) <7:VERB/root>(singt) <8:X/nummod>(v)\
    \ <9:PROPN/flat>(a) <10:NOUN/compound>(Soul) <12:NOUN/obj>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - nsubj
  - !!python/tuple
    - 2
    - 9
    - cop
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 9
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(sind) <3:ADV/advmod>(dann) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(mal) <6:NUM/nummod>(2) <7:NUM/nummod>(5) <8:NOUN/nmod>(Jahre) <9:PRON/root>(Das)
    <10:AUX/cop>(sind) <ROOT> <11:NOUN/root>(Zeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Klimapaket) <3:AUX/cop>(war) <4:ADV/advmod>(jetzt)\
    \ <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Ern\xFCchterung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Klimapaket) <3:AUX/cop>(war) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(Ern\xFCchterung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <ROOT> <3:NOUN/root>(Fans)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 13
    - cc
  - !!python/tuple
    - 6
    - 13
    - aux
  - !!python/tuple
    - 7
    - 13
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 13
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 4
    - conj
  - !!python/tuple
    - 14
    - 18
    - cc
  - !!python/tuple
    - 15
    - 18
    - nsubj
  - !!python/tuple
    - 16
    - 18
    - cop
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(kann) <3:ADV/advmod>(bedenkenlos) <4:VERB/root>(reisen)
    <5:CCONJ/cc>(und) <6:AUX/aux>(muss) <7:PART/advmod>(nicht) <8:DET/det:poss>(mein)
    <9:NOUN/obj>(Leben) <10:ADP/case>(auf) <11:DET/det>(einem) <12:NOUN/obl>(Schlauchboot)
    <13:VERB/conj>(riskieren) <14:CCONJ/cc>(Und) <15:PRON/nsubj>(das) <16:AUX/cop>(ist)
    <17:ADV/advmod>(auch) <18:PRON/conj>(das) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - obj
  sentence: <1:PRON/root>(Der) <ROOT> <2:NOUN/nsubj>(Hype) <3:VERB/root>(bringt) <4:PRON/obj>(euch)
    <5:PRON/obj>(nichts)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Liefer) <3:ADP/dep>(zu) <ROOT> <4:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/nsubj>(Weiber)\
    \ <4:PRON/nsubj>(ich) <5:VERB/root>(ficke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(war'n) <4:ADV/advmod>(ne) <ROOT> <5:NOUN/root>(Bande)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(wir) <3:VERB/root>(hab) <ROOT> <5:NOUN/root>(Strategie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/obj>(Konsequenzen) <2:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 6
    - appos
  sentence: <1:DET/root>(Eine) <ROOT> <2:NOUN/obj>(Entscheidung) <3:SCONJ/mark>(denn)
    <4:PRON/nsubj>(wir) <5:VERB/root>(haben) <6:NOUN/obj>(Schlafsack) <7:NOUN/appos>(Isomatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:VERB/root>(kommen) <3:DET/det>(diese) <4:NOUN/nsubj>(Trolle)
    <5:ADV/advmod>(denn) <6:ADV/advmod>(immer) <7:ADV/advmod>(wieder) <8:ADP/case>(auf)
    <9:ADV/advmod>(so) <ROOT> <10:NOUN/root>(Kombinationen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 5
    - aux
  sentence: <1:SCONJ/mark>(Dass) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Bindung) <6:ADP/case>(zu) <7:PRON/nmod>(jemandem) <8:ADV/advmod>(so)
    <9:ADV/advmod>(schnell) <10:AUX/aux>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - cc
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Macht) <2:VERB/root>(versteht) <3:CCONJ/cc>(und) <4:DET/det>(das)\
    \ <5:NOUN/nsubj>(Recht) <6:DET/det>(des) <7:NOUN/nmod>(St\xE4rkeren) <8:VERB/conj>(akzeptiert)\
    \ <9:DET/nsubj>(eine) <10:ADJ/advmod>(derartig) <ROOT> <11:NOUN/root>(Schw\xE4\
    che)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 2
    - det:poss
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - nmod
  sentence: "<1:DET/det>(Eine) <2:NOUN/root>(Sache) <3:PRON/nsubj>(die) <4:PRON/obj>(sich)\
    \ <5:ADP/case>(bei) <6:PROPN/obl>(Luca) <7:ADV/advmod>(nie) <8:VERB/acl>(ge\xE4\
    ndert) <9:AUX/aux>(hat) <10:AUX/cop>(ist) <11:DET/det:poss>(seine) <ROOT> <12:NOUN/root>(Liebe)\
    \ <13:ADP/case>(zu) <14:DET/det>(der) <15:NOUN/nmod>(Musik)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/root>(diese) <ROOT> <3:NOUN/nsubj>(Erfindung)\
    \ <4:AUX/aux>(hat) <5:PROPN/obj>(Brandenburg) <6:ADP/case>(zu) <7:DET/det>(dem)\
    \ <8:NOUN/xcomp>(Milliard\xE4r) <9:VERB/root>(gemacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 14
    - obj
  - !!python/tuple
    - 7
    - 14
    - aux
  - !!python/tuple
    - 8
    - 14
    - nsubj
  - !!python/tuple
    - 9
    - 14
    - advmod
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(so) <ROOT> <4:NOUN/obj>(Erfahrungen)
    <5:VERB/root>(gemacht) <6:PRON/obj>(die) <7:AUX/aux>(kann) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(hier) <10:ADV/advmod>(auch) <11:ADV/advmod>(fast) <12:ADV/advmod>(schon)
    <13:PART/advmod>(nicht) <14:VERB/conj>(teilen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/root>(immer) <ROOT> <2:NOUN/root>(Waffen) <3:ADV/advmod>(dabei)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - nmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(hat) <4:DET/obj>(keine)
    <ROOT> <5:ADJ/amod>(eigene) <6:NOUN/root>(Funktion) <7:ADP/case>(wie) <8:PROPN/nmod>(Mr)
    <9:PROPN/flat>(Shifty) <10:ADP/case>(zu) <11:DET/det>(dem) <12:NOUN/nmod>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: "<1:ADP/case>(Vor) <2:NOUN/obl>(Kurzem) <3:VERB/root>(stie\xDFen) <4:PRON/nsubj>(wir)\
    \ <5:ADP/case>(auf) <6:DET/obl>(eine) <ROOT> <7:NOUN/root>(Seite) <8:PROPN/appos>(Babycaust)\
    \ <9:PROPN/flat>(de)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Bilder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - acl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/root>(Guck) <2:PRON/obj>(was) <3:PRON/nsubj>(ich) <4:ADP/acl>(f\xFC\
    r) <ROOT> <5:PROPN/nsubj>(Slides) <6:VERB/root>(mache)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - acl
  - !!python/tuple
    - 8
    - 7
    - cop
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(gibt) <3:PRON/nsubj>(es) <ROOT> <4:NOUN/root>(Gifte)\
    \ <5:PRON/nsubj>(die) <6:ADV/advmod>(schon) <7:ADJ/acl>(gef\xE4hrlich) <8:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/det:poss>(deine) <3:NOUN/nsubj>(Jungs) <4:VERB/root>(fahren)
    <5:ADV/advmod>(ach) <6:ADV/advmod>(so) <ROOT> <7:NOUN/root>(Sportwagen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(Damals) <2:ADV/root>(schon) <ROOT> <3:NOUN/root>(T\xE4\
    nzer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(soll) <3:DET/det>(ein) <4:ADJ/obl>(paar)
    <ROOT> <5:NOUN/dep>(Parts) <6:VERB/root>(rappen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:ADV/advmod>(aktuell) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/root>(Klimakrise)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(die) <2:ADP/case>(f\xFCr) <3:NOUN/nmod>(Schauspieler)\
    \ <4:ADV/advmod>(zu) <5:ADJ/root>(gef\xE4hrlich) <6:AUX/cop>(sind) <7:CCONJ/cc>(und)\
    \ <8:VERB/conj>(macht) <ROOT> <9:NOUN/root>(Tricks)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - cc
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:VERB/root>(Hei\xDFt) <2:DET/case>(unterm) <3:NOUN/obl>(Strich) <4:NOUN/obj>(Stress)\
    \ <5:CCONJ/cc>(und) <ROOT> <6:ADJ/amod>(gesundheitliche) <7:NOUN/root>(Probleme)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(mehr) <6:ADV/advmod>(so) <ROOT> <7:NOUN/root>(Songs)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(der) <2:PROPN/nsubj>(Ba) <4:PROPN/flat>(Baba) <5:VERB/root>(ballert)
    <6:ADV/advmod>(wieder) <ROOT> <7:NOUN/root>(Lieder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(habe) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Idee)
    <5:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 10
    - nmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Steh) <2:ADP/case>(mit) <3:PROPN/nmod>(Ninjas) <4:ADV/advmod>(ganz)
    <5:ADP/case>(in) <6:NOUN/nmod>(Schwarz) <7:ADP/case>(an) <8:DET/det>(dem) <9:NOUN/nmod>(Block)
    <10:PRON/root>(die) <ROOT> <11:NOUN/nsubj>(Dinger) <12:VERB/root>(raushauen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(liefern) <3:PRON/obj>(das) <ROOT> <4:NOUN/root>(Kontrastprogramm)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 3
    - nmod
  - !!python/tuple
    - 12
    - 11
    - appos
  sentence: <1:ADV/root>(Hier) <2:X/punct>(ne) <ROOT> <3:NOUN/root>(Waffe) <4:ADP/case>(zu)
    <5:DET/det>(dem) <6:NOUN/nmod>(Beispiel) <7:ADV/advmod>(Einfach) <8:ADV/advmod>(so)
    <9:ADP/case>(in) <10:DET/det>(dem) <11:NOUN/nmod>(Gras) <12:PROPN/appos>(Lol)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Junge) <2:VERB/root>(warn) <3:PRON/nsubj>(das) <ROOT> <4:NOUN/root>(Zeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:DET/det>(Dieses) <2:NOUN/nsubj>(Land) <3:VERB/root>(hat) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/root>(Geschichte) <6:ADP/case>(hinter) <7:PRON/nmod>(sich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mache) <3:NOUN/obj>(Kampfsport) <4:ADP/case>(aus)
    <5:NUM/obl>(6) <ROOT> <6:NOUN/root>(Arten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Denn) <2:ADV/advmod>(hier) <3:VERB/root>(kommen) <ROOT>\
    \ <4:NOUN/root>(G\xF6ren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/nsubj>(Dinge) <2:VERB/root>(passier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: "<ROOT> <1:NOUN/obj>(Gr\xF6\xDFen) <2:VERB/root>(war'n) <3:PRON/nsubj>(sie)\
    \ <4:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:CCONJ/cc>(oder) <2:VERB/root>(reicht) <3:ADV/advmod>(schon) <4:PRON/nsubj>(das)\
    \ <ROOT> <5:NOUN/root>(Machtgef\xE4lle)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Steilkurve)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PART/advmod>(nicht) <2:ADJ/root>(zwingend) <3:ADP/case>(als) <ROOT>\
    \ <4:PROPN/dep>(E3) <6:NOUN/flat>(\xDCberraschung) <7:VERB/root>(bezeichnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(scheinbar) <3:DET/root>(eine) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/nsubj>(Info) <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 7
    - 4
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/root>(die) <ROOT> <2:PROPN/dep>(Vibes) <3:ADP/case>(von) <4:PROPN/nmod>(Breath)\
    \ <5:PROPN/flat>(of) <6:DET/flat>(the) <7:PROPN/flat>(Wild) <8:VERB/root>(verspr\xFC\
    ht)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Denn) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:ADV/advmod>(flow)\
    \ <5:VERB/root>(scheinen) <6:PRON/obj>(sie) <ROOT> <7:NOUN/obj>(Gef\xFChle) <8:PART/mark>(zu)\
    \ <9:VERB/root>(kriegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(So) <2:VERB/root>(werden) <3:ADP/case>(aus) <4:ADJ/amod>(schwachen)
    <5:NOUN/obl>(Lines) <ROOT> <6:PROPN/root>(Lines)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/nsubj>(Alle) <2:VERB/root>(fordern) <3:ADP/case>(von) <4:PRON/obl>(mir)
    <ROOT> <5:NOUN/root>(Vergleiche)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(seid) <ROOT> <3:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Form)
    <5:ADV/advmod>(davon)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(spiel) <2:PRON/appos>(deine) <ROOT> <3:NOUN/root>(Tour)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(es) <3:ADP/case>(auf) <4:DET/det>(dem)
    <5:NOUN/obl>(Auktionsmarkt) <6:ADV/advmod>(so) <ROOT> <7:NOUN/nsubj>(Unterschiede)
    <8:VERB/root>(gibt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 14
    - case
  - !!python/tuple
    - 8
    - 14
    - case
  - !!python/tuple
    - 9
    - 14
    - det
  - !!python/tuple
    - 10
    - 14
    - compound
  - !!python/tuple
    - 12
    - 14
    - compound
  - !!python/tuple
    - 14
    - 6
    - nmod
  sentence: "<1:AUX/cop>(Ist) <2:DET/root>(eine) <ROOT> <3:NOUN/nsubj>(Szene) <4:VERB/root>(gibt)\
    \ <5:DET/det>(mehr) <6:NOUN/obj>(Zubeh\xF6r) <7:ADP/case>(als) <8:ADP/case>(in)\
    \ <9:DET/det>(dem) <10:NOUN/compound>(Auto) <12:NOUN/compound>(Tuning) <14:NOUN/nmod>(Bereich)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - dep
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(waren) <3:ADV/advmod>(nat\xFCrlich) <4:ADV/advmod>(schon)\
    \ <5:ADJ/root>(richtig) <ROOT> <6:NOUN/root>(Dreharbeiten) <7:X/dep>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(einer) <3:NOUN/root>(Blutleiste) <4:ADP/case>(f\xFC\
    r) <ROOT> <5:NOUN/root>(Vampirattacken)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/root>(Eine) <ROOT> <2:NOUN/nsubj>(Form) <3:DET/det>(des) <4:NOUN/nmod>(Cybermobbings)
    <5:AUX/cop>(ist) <6:DET/det>(das) <7:NOUN/root>(Doxing)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:ADV/advmod>(Ja) <2:X/root>(uff) <ROOT> <3:NOUN/root>(Behauptung) <4:ADP/case>(von)
    <5:DET/det>(nem) <6:NOUN/nmod>(Laien)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - parataxis
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - dep
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 9
    - compound:prt
  sentence: "<1:DET/obj>(Welche) <2:AUX/aux>(werde) <3:PRON/nsubj>(ich) <4:ADV/advmod>(sp\xE4\
    ter) <5:VERB/root>(verstehen) <6:PRON/nsubj>(Das) <7:AUX/parataxis>(sind) <8:ADV/advmod>(schon)\
    \ <ROOT> <9:NOUN/root>(Geschichten) <10:PRON/dep>(die) <11:PRON/nsubj>(man) <12:ADV/advmod>(hier)\
    \ <13:ADP/compound:prt>(zu)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 8
    - xcomp
  - !!python/tuple
    - 13
    - 12
    - cop
  sentence: "<1:VERB/root>(Kennt) <2:PRON/nsubj>(ihr) <3:ADV/advmod>(auch) <4:NOUN/nsubj>(L\xE4\
    nder) <5:PRON/obj>(die) <6:ADV/advmod>(so) <ROOT> <7:NOUN/nsubj>(Geschichten)\
    \ <8:VERB/root>(liefern) <9:ADV/advmod>(aber) <10:ADV/advmod>(eigentlich) <11:ADV/advmod>(total)\
    \ <12:ADJ/xcomp>(unbekannt) <13:AUX/cop>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 12
    - nsubj
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - xcomp
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(es) <2:AUX/root>(ist) <3:ADP/case>(durch) <4:PRON/obl>(die)\
    \ <ROOT> <5:NOUN/nsubj>(Sonne) <6:PRON/nsubj>(die) <7:AUX/aux>(war) <8:ADV/advmod>(einfach)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(sehr) <11:ADJ/xcomp>(gro\xDF) <12:VERB/root>(geworden)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Denn) <2:ADJ/amod>(gleichzeitig) <3:AUX/cop>(ist) <4:PROPN/nsubj>(Japan)
    <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Leistungsgesellschaft)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - conj
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  - !!python/tuple
    - 15
    - 16
    - cc
  - !!python/tuple
    - 16
    - 14
    - conj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PRON/nsubj>(nichts) <4:DET/root>(anderes)
    <5:ADP/case>(als) <6:DET/nmod>(eine) <ROOT> <7:NOUN/root>(Verharmlosung) <8:DET/det>(des)
    <9:NOUN/nmod>(Holocaust) <10:CCONJ/cc>(und) <11:DET/det>(der) <12:NOUN/conj>(Genozide)
    <13:ADP/case>(in) <14:PROPN/nmod>(Kambodscha) <15:CCONJ/cc>(und) <16:PROPN/conj>(Ruanda)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 5
    - 1
    - conj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 1
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PROPN/root>(Plug) <3:CCONJ/cc>(and) <5:NOUN/conj>(Play) <6:CCONJ/cc>(und)
    <7:NOUN/conj>(Multitasking) <ROOT> <9:NOUN/root>(Innovation)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - appos
  sentence: <1:ADP/case>(Vor) <2:NUM/nummod>(20) <3:NOUN/obl>(Jahren) <4:VERB/root>(kam)
    <5:ADV/advmod>(dann) <6:ADP/case>(mit) <7:PROPN/obl>(Steam) <8:PRON/nsubj>(der)
    <ROOT> <9:NOUN/compound>(PC) <11:NOUN/root>(Spiele) <12:PROPN/appos>(Dream)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cop
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:AUX/cop>(w\xE4re) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <4:DET/det>(jedes)\
    \ <5:NOUN/nmod>(Mal) <6:ADV/advmod>(so) <7:X/root>(ne) <ROOT> <8:NOUN/root>(Spa\xDF\
    bremse)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - csubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: "<ROOT> <1:NOUN/nsubj>(Viecher) <2:VERB/csubj>(umlegen) <4:VERB/root>(wei\xDF\
    t) <5:PRON/nsubj>(du) <6:PRON/obj>(was)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(h\xF6rst) <3:ADP/case>(mit) <4:NOUN/obl>(Faszination)\
    \ <5:DET/obj>(diese) <ROOT> <6:NOUN/root>(M\xF6rderfusion)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Benny) <2:PROPN/flat>(Blanco) <3:VERB/root>(pumpt) <4:ADV/compound:prt>(weiter)
    <ROOT> <5:NOUN/root>(Beats)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 1
    - xcomp
  - !!python/tuple
    - 7
    - 1
    - xcomp
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:VERB/root>(Hat) <2:DET/det>(kein) <3:ADJ/nsubj>(bock) <4:NOUN/obj>(Schwachsinn)
    <5:PART/mark>(zu) <6:VERB/xcomp>(lernen) <7:VERB/xcomp>(macht) <8:ADV/advmod>(denn)
    <9:ADV/advmod>(ne) <ROOT> <10:NOUN/root>(Karriere)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - obj
  - !!python/tuple
    - 7
    - 12
    - cc
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 12
    - aux
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - cop
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 12
    - ccomp
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:ADV/advmod>(total)
    <5:PRON/root>(die) <ROOT> <6:NOUN/obj>(Krankheit) <7:CCONJ/cc>(und) <8:ADV/advmod>(wie)
    <9:AUX/aux>(kann) <10:PRON/nsubj>(man) <11:ADV/advmod>(damit) <12:VERB/root>(leben)
    <13:PRON/nsubj>(Das) <14:AUX/cop>(waren) <15:ADV/advmod>(so) <16:DET/ccomp>(meine)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 12
    - obl
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - acl
  sentence: <1:PRON/root>(Das) <ROOT> <2:AUX/cop>(sind) <3:ADV/advmod>(aber) <4:DET/det>(die)
    <5:ADJ/amod>(heftigen) <6:NOUN/root>(Strafen) <7:PRON/nsubj>(die) <8:DET/obj>(einem)
    <9:ADP/case>(in) <10:PROPN/obl>(Brunei) <11:ADJ/advmod>(theoretisch) <12:VERB/acl>(drohen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Stalking) <2:AUX/cop>(ist) <3:ADP/case>(f\xFCr) <4:NOUN/nmod>(Betroffene)\
    \ <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Belastung)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 8
    - parataxis
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - obj
  - !!python/tuple
    - 17
    - 14
    - compound:prt
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(das) <3:DET/nsubj>(eine) <4:ADJ/root>(super)
    <ROOT> <5:NOUN/nsubj>(Stressreaktion) <6:ADV/advmod>(ja) <7:PRON/nsubj>(der) <8:VERB/root>(hat)
    <9:ADV/advmod>(voll) <10:NOUN/obj>(Angst) <11:ADV/advmod>(okay) <12:ADV/advmod>(ja)
    <13:PRON/nsubj>(der) <14:VERB/parataxis>(hat) <15:ADV/advmod>(voll) <16:NOUN/obj>(Angst)
    <17:X/compound:prt>(angela)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - aux
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Solche) <2:NOUN/nsubj>(Fl\xFCsse) <3:VERB/root>(sehen) <4:ADJ/xcomp>(toll)\
    \ <5:ADP/case>(aus) <6:PRON/nsubj>(Man) <7:AUX/aux>(kann) <8:ADV/advmod>(hier)\
    \ <ROOT> <9:NOUN/obj>(Sachen) <10:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - case
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:DET/det>(die) <3:NOUN/root>(Profis) <4:ADP/case>(f\xFC\
    r) <ROOT> <5:NOUN/obj>(Sachen) <6:ADP/case>(mit) <7:DET/det:poss>(ihren) <8:NOUN/obl>(Kajaks)\
    \ <9:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - acl
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/root>(Stunts)\
    \ <4:PRON/nsubj>(die) <5:ADP/case>(in) <6:DET/det>(den) <7:ADJ/amod>(rei\xDFenden)\
    \ <8:NOUN/obl>(Fl\xFCssen) <9:VERB/acl>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Denn) <2:DET/det>(die) <3:NOUN/nsubj>(Eindringlinge) <4:AUX/cop>(sind)\
    \ <5:ADJ/root>(gro\xDF) <6:CCONJ/cc>(und) <7:ADV/conj>(ziemlich) <ROOT> <8:NOUN/root>(K\xE4\
    mpfer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:DET/det>(Ein) <2:NOUN/nsubj>(Xenomorph) <3:VERB/root>(legt) <4:ADV/advmod>(aber)
    <ROOT> <5:NOUN/root>(Eier) <6:CCONJ/cc>(aber) <7:ADV/advmod>(warum) <8:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/root>(Drogen) <2:ADP/case>(f\xFCr) <3:ADJ/nmod>(lau) <4:CCONJ/cc>(und)\
    \ <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/conj>(Strand) <ROOT> <8:NOUN/root>(Partys)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(hast) <3:ADV/advmod>(ja) <ROOT> <4:NOUN/root>(Oberarme)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(sei) <2:PRON/root>(der) <ROOT> <3:NOUN/root>(Motherfucker)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Leute) <2:PRON/nsubj>(ich) <3:AUX/root>(durfte) <4:ADV/advmod>(ja)\
    \ <5:ADV/advmod>(schon) <6:ADV/advmod>(echt) <ROOT> <7:NOUN/obj>(Sachen) <8:ADP/case>(f\xFC\
    r) <9:PRON/obl>(euch) <10:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(so) <3:PART/mark>(zu) <4:VERB/root>(tun)\
    \ <5:SCONJ/mark>(als) <6:AUX/aux>(k\xF6nnte) <7:PRON/nsubj>(ich) <ROOT> <8:NOUN/root>(Kombos)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 7
    - compound:prt
  sentence: "<1:PRON/nsubj>(der) <2:VERB/root>(hat) <3:DET/obj>(dieses) <ROOT> <4:NOUN/compound>(Hand)\
    \ <6:NOUN/obj>(Ekzem) <7:VERB/root>(behandeln) <8:PRON/nsubj>(wir) <9:PRON/obj>(das)\
    \ <10:ADV/advmod>(nat\xFCrlich) <11:ADP/compound:prt>(mit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 1
    - xcomp
  - !!python/tuple
    - 11
    - 17
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 11
    - nmod
  - !!python/tuple
    - 15
    - 16
    - cc
  - !!python/tuple
    - 16
    - 14
    - conj
  - !!python/tuple
    - 17
    - 0
    - root
  - !!python/tuple
    - 18
    - 17
    - aux
  sentence: "<1:VERB/root>(Ist) <2:ADV/advmod>(doch) <3:ADV/advmod>(irgendwie) <4:ADV/advmod>(heftig)\
    \ <5:PRON/nsubj>(was) <6:ADP/case>(f\xFCr) <7:ADJ/amod>(geringe) <8:NOUN/nmod>(Mengen)\
    \ <9:ADV/advmod>(schon) <10:ADP/xcomp>(f\xFCr) <ROOT> <11:NOUN/nsubj>(Folgen)\
    \ <12:ADP/case>(f\xFCr) <13:DET/det:poss>(unsere) <14:NOUN/nmod>(Natur) <15:CCONJ/cc>(und)\
    \ <16:NOUN/conj>(Umwelt) <17:VERB/root>(haben) <18:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:DET/det>(ein)\
    \ <5:NOUN/root>(Indiz) <6:ADP/case>(f\xFCr) <7:DET/nmod>(eine) <ROOT> <8:NOUN/root>(Diskrepanz)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - dep
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:DET/det:poss>(mein) <3:PRON/nsubj>(das) <4:AUX/cop>(ist)
    <5:ADV/advmod>(schon) <6:DET/root>(eine) <ROOT> <7:NOUN/dep>(Geschichte) <8:DET/det>(die)
    <9:PROPN/nsubj>(Nadine) <10:VERB/root>(erlebt) <11:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:ADJ/amod>(abwechslungsreiche) <3:NOUN/root>(Gameplay)
    <4:PRON/appos>(die) <ROOT> <5:NOUN/root>(Musik)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - dep
  - !!python/tuple
    - 5
    - 9
    - nsubj:pass
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/dep>(Geschichte)\
    \ <5:PRON/nsubj:pass>(die) <6:ADP/case>(durch) <7:DET/det>(die) <8:NOUN/obl>(Pandemie)\
    \ <9:VERB/root>(ausgel\xF6st)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - obj
  - !!python/tuple
    - 13
    - 10
    - conj
  - !!python/tuple
    - 14
    - 10
    - cc
  sentence: <1:ADJ/advmod>(komplett) <2:VERB/root>(aufgemotzt) <3:CCONJ/cc>(und) <4:ADJ/amod>(knallige)
    <5:NOUN/obj>(farben) <6:ADV/advmod>(dran) <7:VERB/conj>(gemalt) <8:CCONJ/cc>(und)
    <ROOT> <9:NOUN/nsubj>(motoren) <10:VERB/root>(eingebaut) <11:CCONJ/cc>(und) <12:DET/obj>(solche)
    <13:VERB/conj>(sachen) <14:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 4
    - ccomp
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 6
    - obj
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 6
    - compound:prt
  sentence: "<1:ADV/advmod>(hier) <2:ADV/root>(so) <ROOT> <3:NOUN/obj>(steigungen)\
    \ <4:VERB/root>(gibt) <5:PRON/expl>(das) <6:VERB/ccomp>(sieht) <7:PRON/nsubj>(man)\
    \ <8:ADV/advmod>(da) <9:ADJ/advmod>(tats\xE4chlich) <10:PART/advmod>(nicht) <11:PRON/obj>(was)\
    \ <12:PRON/nsubj>(man) <13:ADP/compound:prt>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:CCONJ/cc>(Oder) <2:PRON/nsubj>(Ich) <3:VERB/root>(meine) <4:PRON/obj>(das)
    <ROOT> <5:AUX/root>(ist) <6:ADV/advmod>(auch) <7:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - appos
  sentence: <1:VERB/root>(Habe) <2:PRON/nsubj>(ich) <3:DET/obj>(eine) <4:ADV/advmod>(besonders)
    <ROOT> <5:NOUN/root>(Form) <6:PROPN/appos>(Nee)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/det>(das) <4:NOUN/obj>(Gef\xFC\
    hl) <5:SCONJ/mark>(dass) <6:ADV/advmod>(hier) <7:DET/ccomp>(eine) <ROOT> <8:NOUN/nsubj>(Story)\
    \ <9:ADV/advmod>(dahinter) <10:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - obj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - acl
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Alle) <2:DET/det>(diese) <3:NOUN/obj>(Nebens\xE4tze) <4:PRON/obj>(die)\
    \ <5:PRON/nsubj>(du) <6:VERB/acl>(gesagt) <7:AUX/aux>(hast) <8:VERB/root>(bedeuten)\
    \ <ROOT> <9:NOUN/root>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Die) <2:VERB/root>(machen) <3:ADV/advmod>(so) <ROOT> <4:PROPN/dep>(Selfies)\
    \ <5:SCONJ/mark>(dass) <6:PRON/nsubj>(sie) <7:VERB/root>(abst\xFCrzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 10
    - obj
  - !!python/tuple
    - 3
    - 10
    - aux
  - !!python/tuple
    - 4
    - 10
    - obj
  - !!python/tuple
    - 5
    - 10
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 7
    - flat
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/root>(Eine) <ROOT> <2:NOUN/obj>(Geschichte) <3:AUX/aux>(hat) <4:PRON/obj>(uns)\
    \ <5:PROPN/obj>(Janina) <6:ADP/case>(aus) <7:PROPN/nmod>(Baden) <9:PROPN/flat>(W\xFC\
    rttemberg) <10:VERB/root>(erz\xE4hlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 5
    - conj
  sentence: "<1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:DET/obj>(eine) <ROOT> <4:ADJ/amod>(progressive)\
    \ <5:NOUN/root>(Erbschafts) <7:CCONJ/cc>(und) <8:NOUN/conj>(Verm\xF6genssteuer)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ihr) <2:AUX/aux>(habt) <3:VERB/root>(gesehen) <4:NOUN/obj>(Roboter)\
    \ <5:AUX/aux>(k\xF6nnen) <ROOT> <6:NOUN/root>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <3:ADV/advmod>(so) <ROOT> <4:NOUN/root>(Beats)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - obj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PROPN/root>(Hamburgs) <ROOT> <2:NOUN/obj>(Rapper) <3:AUX/aux>(kann)\
    \ <4:PRON/nsubj>(ich) <5:ADP/case>(an) <6:ADV/advmod>(nur) <7:DET/det>(einer)\
    \ <8:NOUN/obl>(Hand) <9:VERB/root>(abz\xE4hlen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:ADV/root>(hin) <2:CCONJ/cc>(und) <3:ADV/conj>(wieder) <4:ADV/advmod>(dennoch)
    <ROOT> <5:NOUN/root>(Bruchlandungen) <6:ADV/dep>(hin)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:AUX/aux>(Hab) <3:ADV/advmod>(nie) <4:VERB/root>(verstanden) <5:ADP/case>(mit)
    <6:PRON/obl>(dir) <7:ADP/compound:prt>(ohne) <ROOT> <8:NOUN/obj>(Sorgen) <9:PART/mark>(zu)
    <10:VERB/root>(leben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  sentence: <1:CCONJ/cc>(Aber) <2:DET/root>(dieser) <ROOT> <3:NOUN/nsubj>(Affe) <4:ADV/advmod>(hier)
    <5:VERB/root>(hat) <6:NOUN/obj>(Bierabitur)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <3:ADP/compound:prt>(auf) <ROOT>
    <4:PROPN/nsubj>(Tracks) <5:PROPN/flat>(Bock) <6:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Da) <2:VERB/root>(erforschen) <3:PRON/nsubj>(wir) <4:ADV/advmod>(n\xE4\
    mlich) <5:DET/obj>(eine) <ROOT> <6:NOUN/root>(H\xF6hle)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: "<1:PROPN/root>(Puh) <ROOT> <2:NOUN/root>(Folgen) <3:ADP/case>(f\xFCr)\
    \ <4:NOUN/nmod>(Mensch) <5:CCONJ/cc>(und) <6:NOUN/conj>(Umwelt) <7:ADV/advmod>(also)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Heute) <2:AUX/cop>(war) <3:ADV/advmod>(wirklich) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Nacht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - obj
  sentence: "<1:NOUN/root>(Bretter) <2:ADP/case>(f\xFCr) <3:ADV/advmod>(so) <ROOT>\
    \ <4:NOUN/nsubj>(Tricks) <5:VERB/root>(gibt) <6:X/advmod>(s) <7:DET/obj>(viele)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:PRON/obl>(denen) <3:VERB/root>(fahren) <4:NOUN/nsubj>(Profis)
    <5:ADV/advmod>(richtig) <6:ADJ/advmod>(richtig) <ROOT> <7:NOUN/root>(Rennen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - ccomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wer) <2:VERB/root>(hat) <3:DET/det>(solche) <4:NOUN/obj>(Patterns)
    <6:DET/det:poss>(Meine) <7:NOUN/nsubj>(Patterns) <8:AUX/cop>(sind) <9:DET/ccomp>(solche)
    <ROOT> <10:NOUN/root>(Patterns)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - xcomp
  sentence: <1:SCONJ/mark>(Dass) <2:DET/root>(andere) <ROOT> <3:NOUN/nsubj>(Patterns)
    <4:VERB/root>(sagen) <6:NOUN/xcomp>(Alter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Patterns)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Unglaublich) <ROOT> <2:NOUN/root>(Technik)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Mero) <2:VERB/root>(spuckt) <3:ADV/advmod>(jetzt) <ROOT>
    <4:NOUN/root>(Reime)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/amod>(Deutsche) <2:NOUN/nsubj>(Rapper) <3:VERB/root>(suchen) <4:PRON/obj>(sich)
    <ROOT> <5:NOUN/root>(Studios)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(tick) <4:ADP/case>(in) <5:DET/det>(dem)
    <6:NOUN/obl>(Dorf) <7:ADJ/appos>(paar) <ROOT> <8:PROPN/root>(Drugs)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - dep
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 9
    - 6
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - compound:prt
  sentence: <1:NOUN/root>(Alter) <ROOT> <3:NOUN/dep>(Braut) <5:PRON/nsubj>(sie) <6:VERB/root>(sagt)
    <9:VERB/parataxis>(Lass) <10:PRON/nsubj>(es) <11:ADV/compound:prt>(raus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(Glaubt) <2:PRON/obl:arg>(mir) <3:DET/det>(die) <4:ADJ/amod>(ungeheure)
    <5:NOUN/obj>(Bedeutung) <6:DET/appos>(dieser) <ROOT> <7:NOUN/compound>(Baby) <9:NOUN/root>(Ungleichverteilung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  sentence: "<1:NOUN/root>(Gewalt) <2:CCONJ/cc>(und) <ROOT> <3:NOUN/root>(Vernachl\xE4\
    ssigung) <4:ADP/case>(von) <5:NOUN/nmod>(Eltern)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - cc
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 1
    - conj
  sentence: "<ROOT> <1:NOUN/root>(Flashbacks) <2:CCONJ/cc>(und) <3:ADP/case>(zu) <4:DET/det>(dem)\
    \ <5:NOUN/nmod>(Beispiel) <6:ADJ/amod>(k\xF6rperliche) <7:NOUN/conj>(Anspannung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(sehen) <3:ADP/compound:prt>(aus) <4:ADP/case>(wie)
    <5:ADJ/amod>(richtige) <ROOT> <6:NOUN/root>(Giftschlangen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - aux
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 6
    - ccomp
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - xcomp
  sentence: <1:DET/root>(eine) <ROOT> <2:NOUN/nsubj>(OP) <3:DET/det>(die) <4:DET/det>(viel)
    <5:NOUN/obj>(Vorbereitung) <6:VERB/root>(braucht) <7:PRON/nsubj>(Du) <8:AUX/aux>(musst)
    <9:PRON/obj>(dich) <10:ADV/advmod>(sehr) <11:DET/advmod>(viel) <12:VERB/ccomp>(informieren)
    <13:PRON/nsubj>(Du) <14:VERB/xcomp>(brauchst)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 9
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 9
    - obl
  - !!python/tuple
    - 13
    - 14
    - dep
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(man) <3:DET/det>(diesen) <4:NOUN/obj>(Seeweg)\
    \ <5:VERB/root>(nutzen) <6:AUX/aux>(kann) <7:CCONJ/cc>(Und) <8:PRON/nsubj>(das)\
    \ <9:VERB/conj>(w\xFCrde) <10:PROPN/obj>(Russland) <11:ADP/case>(in) <12:DET/obl>(eine)\
    \ <ROOT> <13:NOUN/dep>(Machtposition) <14:VERB/root>(bringen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 16
    - cc
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - aux
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 5
    - conj
  - !!python/tuple
    - 17
    - 16
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 20
    - case
  - !!python/tuple
    - 20
    - 18
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:DET/det>(das)\
    \ <5:NOUN/root>(Fundament) <6:ADP/case>(f\xFCr) <7:DET/det>(den) <8:NOUN/nmod>(Erfolg)\
    \ <9:DET/det>(des) <10:PROPN/amod>(Online) <11:PROPN/nmod>(Stores) <12:CCONJ/cc>(Aber)\
    \ <13:PROPN/nsubj>(Steam) <14:AUX/aux>(hat) <15:ADV/advmod>(auch) <16:VERB/conj>(geliefert)\
    \ <17:ADV/advmod>(etwa) <ROOT> <18:NOUN/root>(Rabatte) <19:ADP/case>(auf) <20:PROPN/nmod>(Games)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <4:ADV/advmod>(ne) <ROOT> <5:NOUN/root>(Braut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hierzu) <2:VERB/root>(hab) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(noch) <6:DET/advmod>(ne) <7:ADJ/advmod>(ganz) <ROOT> <8:NOUN/obj>(Geschichte)\
    \ <9:PART/mark>(zu) <10:VERB/root>(erz\xE4hlen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: "<1:PRON/nsubj>(sie) <2:VERB/root>(w\xE4r'n) <ROOT> <3:PROPN/root>(Kiffer)\
    \ <5:PROPN/appos>(Huh)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Geschichte)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: <1:CCONJ/root>(Und) <ROOT> <2:NOUN/nsubj>(Bilder) <3:ADP/case>(wie) <4:DET/nmod>(diese)
    <5:VERB/root>(gingen) <6:ADP/case>(um) <7:DET/det>(die) <8:NOUN/obl>(Welt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux:pass
  sentence: <1:SCONJ/root>(dass) <2:ADP/case>(per) <3:NOUN/nmod>(Chat) <ROOT> <4:NOUN/dep>(Sachen)
    <5:VERB/root>(rumgeschickt) <6:AUX/aux:pass>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:DET/root>(eine) <ROOT> <3:NOUN/nsubj>(Verbesserung)\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:NOUN/nmod>(Energiekosten) <7:VERB/root>(bedeutet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - aux
  - !!python/tuple
    - 9
    - 4
    - parataxis
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys) <7:PRON/nsubj>(Ich) <8:AUX/aux>(muss) <9:VERB/parataxis>(lachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - appos
  - !!python/tuple
    - 10
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys) <7:INTJ/advmod>(Komm) <8:ADJ/appos>(klar) <10:ADV/advmod>(Warum)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys) <7:VERB/appos>(Kannst) <8:PRON/nsubj>(du) <9:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - parataxis
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys) <7:ADV/advmod>(Wie) <8:PRON/nsubj>(die) <9:VERB/parataxis>(tanzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 4
    - appos
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADP/compound:prt>(zu) <ROOT>
    <4:NOUN/root>(Storys) <7:CCONJ/cc>(Und) <8:INTJ/appos>(denk)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(man) <3:DET/det>(eine) <4:ADJ/root>(heftige)
    <5:CCONJ/cc>(und) <ROOT> <6:NOUN/root>(Bindung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(hier) <3:DET/root>(diese) <ROOT> <4:NOUN/dep>(Ank\xFC\
    ndigung) <5:VERB/root>(rausgehauen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - dep
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(also) <2:AUX/root>(werden) <3:ADV/advmod>(irgendwie) <4:ADV/advmod>(m\xF6\
    glichst) <ROOT> <5:NOUN/dep>(Thesen) <6:ADP/case>(an) <7:DET/det>(die) <8:NOUN/obl>(Wand)\
    \ <9:VERB/root>(geworfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(durch) <2:NOUN/nmod>(Beschleunigung) <3:DET/root>(eine)\
    \ <ROOT> <4:ADJ/amod>(harte) <5:NOUN/obj>(Fl\xE4che) <6:VERB/root>(hingebracht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(nehme) <3:ADV/advmod>(dagegen) <4:ADJ/advmod>(nat\xFC\
    rlich) <5:ADV/advmod>(auch) <6:NOUN/obj>(Medikamente) <7:CCONJ/cc>(und) <ROOT>\
    \ <8:NOUN/root>(Tabletten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/root>(Beschleunigung) <2:AUX/aux>(kann) <ROOT> <3:NOUN/nsubj>(Gef\xFC\
    hle) <4:VERB/root>(hervorrufen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 6
    - conj
  - !!python/tuple
    - 11
    - 13
    - aux
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 13
    - compound:prt
  sentence: "<1:ADP/case>(in) <2:DET/det>(den) <3:NOUN/obl>(Meeren) <4:X/cc>(usw)\
    \ <5:PRON/nsubj>(Das) <6:VERB/root>(will) <7:ADV/advmod>(ja) <8:DET/obj>(keiner)\
    \ <9:CCONJ/cc>(Aber) <10:PRON/conj>(das) <ROOT> <11:AUX/aux>(ist) <12:NOUN/nsubj>(Sch\xE4\
    tzungen) <13:VERB/root>(gehen) <14:ADV/advmod>(davon) <15:ADP/compound:prt>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 5
    - 3
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/root>(Prinzessin) <2:PROPN/appos>(Lillifee) <3:ADP/flat>(z) <4:PROPN/appos>(B)
    <5:AUX/aux>(kann) <ROOT> <6:NOUN/root>(Zaubertricks)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:NOUN/root>(ne) <ROOT> <4:NOUN/root>(Vorstellung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(hat) <3:ADJ/advmod>(richtig) <ROOT>
    <4:NOUN/root>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  sentence: "<1:ADV/advmod>(also) <2:ADV/advmod>(v\xF6llig) <3:VERB/root>(abgehen)\
    \ <4:PRON/nsubj>(die) <ROOT> <5:NOUN/nsubj>(Angst) <6:VERB/root>(zeigen) <7:ADP/case>(bei)\
    \ <8:ADV/compound:prt>(ein)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - obl:arg
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - case
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 7
    - nmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(das) <ROOT> <3:AUX/cop>(ist) <4:ADV/advmod>(vorher)
    <5:AUX/cop>(war) <6:PRON/obl:arg>(mir) <7:ADJ/root>(klar) <8:ADP/case>(auf) <9:ADV/advmod>(so)
    <10:DET/det>(einer) <11:ADJ/amod>(rationalen) <12:NOUN/nmod>(Ebene)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - obj
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - conj
  sentence: "<1:ADP/case>(\xDCber) <2:DET/root>(diese) <ROOT> <3:NOUN/obj>(Geschichte)\
    \ <4:AUX/aux>(will) <5:PRON/nsubj>(ich) <6:ADP/case>(mit) <7:PROPN/obl>(Michelle)\
    \ <8:ADV/advmod>(noch) <9:VERB/root>(reden) <10:CCONJ/cc>(Aber) <11:PART/advmod>(nicht)\
    \ <12:ADV/conj>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: "<1:SCONJ/root>(als) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(wir) <ROOT> <4:NOUN/root>(Feinde)\
    \ <5:AUX/cop>(w\xE4ren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Wirklich) <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Aussage)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: "<1:SCONJ/root>(Dass) <2:PRON/nsubj>(du) <3:ADP/case>(in) <4:NOUN/obl>(Wirklichkeit)\
    \ <ROOT> <5:NOUN/root>(Existenz\xE4ngste) <6:AUX/aux>(hast)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/root>(das) <ROOT> <3:NOUN/root>(Album) <4:SCONJ/mark>(das)\
    \ <5:PRON/nsubj>(wir) <6:ADV/advmod>(hier) <7:VERB/ccomp>(aufgenommen) <8:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:NOUN/root>(W\xE4r') <2:ADV/advmod>(auch) <ROOT> <3:NOUN/root>(Blamage)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ihr) <2:VERB/root>(versp\xFCrt) <3:ADJ/advmod>(voll) <ROOT>\
    \ <4:NOUN/root>(Atemnot)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 14
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 14
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 5
    - conj
  sentence: <1:PRON/root>(der) <ROOT> <2:NOUN/nsubj>(Tracks) <3:ADP/case>(auf) <4:NOUN/obl>(Platte)
    <5:VERB/root>(presst) <6:CCONJ/cc>(und) <7:DET/det>(andere) <8:NOUN/nsubj>(Acts)
    <9:ADV/advmod>(ganz) <10:ADV/advmod>(einfach) <11:ADP/case>(in) <12:DET/det>(die)
    <13:NOUN/obl>(Tasche) <14:VERB/conj>(steckt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(sie) <3:AUX/root>(k\xF6nnen) <ROOT>\
    \ <4:NOUN/root>(Tricks)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(die) <2:ADV/advmod>(besonders) <ROOT> <3:NOUN/nsubj>(Inhalte)
    <4:VERB/root>(zeigen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(das) <3:NOUN/nsubj>(Aussehen) <4:DET/advmod>(keine)
    <5:ADV/root>(so) <ROOT> <6:NOUN/obj>(Rolle) <7:VERB/root>(spielt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(triffst) <2:PRON/nsubj>(du) <3:ADV/advmod>(meist) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(Flittchen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(hei\xDFt) <3:ADV/advmod>(aber) <4:PART/advmod>(nicht)\
    \ <5:SCONJ/mark>(dass) <6:PRON/nsubj>(es) <7:DET/obj>(keine) <ROOT> <8:NOUN/nsubj>(Spielsucht)\
    \ <9:AUX/cop>(war) <10:DET/det>(ne) <11:PROPN/root>(Also)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/root>(Themen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(zu) <ROOT> <2:PROPN/root>(Vibes)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Ich) <3:VERB/root>(erkl\xE4re) <4:PRON/obj>(dir) <5:ADV/mark>(warum)\
    \ <6:DET/nsubj>(dieser) <ROOT> <7:NOUN/root>(Hass)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 6
    - acl
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:PRON/root>(der) <ROOT> <4:NOUN/compound>(Performance)
    <6:NOUN/root>(Druck) <7:PRON/nsubj>(der) <8:ADP/case>(auf) <9:DET/det>(beiden)
    <10:NOUN/obl>(Seiten) <11:VERB/acl>(liegt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/root>(Diese) <ROOT> <2:ADJ/amod>(harte) <3:NOUN/nsubj>(Grenze)
    <4:ADP/case>(bei) <5:DET/det>(diesem) <6:NOUN/nmod>(Thema) <7:AUX/cop>(ist) <8:PART/advmod>(nicht)
    <9:ADJ/root>(angemessen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/root>(diese) <ROOT> <3:NOUN/nsubj>(Verantwortung)
    <4:ADJ/root>(einfach)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(du) <ROOT> <2:PROPN/root>(Bitch)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - acl
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(eine) <4:NOUN/root>(kleine)
    <ROOT> <5:NOUN/root>(Minderheit) <6:PRON/nsubj>(die) <7:ADV/advmod>(so) <8:ADJ/acl>(aggressiv)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(schreib) <2:PRON/nsubj>(du) <3:ADV/compound:prt>(weiter)
    <4:PRON/obj>(deine) <ROOT> <5:NOUN/root>(Zeile)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 5
    - det:poss
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 12
    - 10
    - advmod
  sentence: "<1:PRON/nsubj>(Du) <2:CCONJ/cc>(und) <3:DET/det:poss>(deine) <4:ADJ/amod>(klein\u2019\
    n) <5:NOUN/conj>(Jungs) <6:VERB/root>(seid) <7:ADV/advmod>(schon) <8:ADV/advmod>(voll)\
    \ <9:PRON/obj>(die) <ROOT> <10:PROPN/root>(Gang) <12:ADV/advmod>(eh)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux:pass
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(findet) <3:DET/det>(viele) <4:NOUN/obj>(Videos)
    <5:ADP/case>(in) <6:PRON/obl>(denen) <ROOT> <7:PROPN/dep>(Skills) <8:VERB/root>(gezeigt)
    <9:AUX/aux:pass>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - mark
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 5
    - advcl
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(App) <3:VERB/root>(hat) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:NOUN/root>(Features) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:NOUN/obj>(Videos)
    <9:ADP/case>(von) <10:DET/det>(einem) <11:NOUN/nmod>(Creator) <12:VERB/advcl>(entdeckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: <1:ADJ/root>(ganz) <ROOT> <2:NOUN/nsubj>(Symbolkraft) <3:PRON/nsubj>(Ich)
    <4:AUX/aux>(habe) <5:PRON/obj>(das) <6:ADV/advmod>(immer) <7:VERB/root>(gesagt)
    <8:CCONJ/cc>(und) <9:PRON/nsubj>(ich) <10:VERB/conj>(wiederhole) <11:PRON/obj>(das)
    <12:ADV/advmod>(auch) <13:ADV/advmod>(immer)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - obj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 5
    - ccomp
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 11
    - ccomp
  sentence: "<1:PRON/root>(Das) <ROOT> <2:AUX/aux>(ist) <3:PRON/nsubj>(ich) <4:AUX/aux>(h\xE4\
    tte) <5:VERB/root>(gedacht) <6:SCONJ/mark>(dass) <7:PRON/obj>(mich) <8:ADV/advmod>(hier)\
    \ <9:DET/det>(mehr) <10:NOUN/obj>(Leute) <11:VERB/ccomp>(ansprechen) <12:SCONJ/mark>(dass)\
    \ <13:PRON/nsubj>(ich) <14:DET/det>(keinen) <15:NOUN/obj>(Alkohol) <16:VERB/ccomp>(trinke)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(hat) <4:PRON/nsubj>(das)
    <5:AUX/ccomp>(sind) <6:ADV/advmod>(schon) <ROOT> <7:NOUN/root>(Geschichten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(man) <3:VERB/root>(limitiert) <4:DET/det>(das)
    <5:NOUN/obj>(Spiel) <6:ADP/case>(um) <7:DET/obl>(eine) <ROOT> <8:NOUN/root>(Komponente)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <3:CCONJ/cc>(und) <4:ADJ/amod>(kranke)\
    \ <5:PROPN/root>(Corona) <7:NOUN/flat>(Verschw\xF6rungstheorien)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - dep
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/mark>(Um) <2:ADV/advmod>(mal) <3:ADV/advmod>(so) <4:DET/det>(ne)
    <5:ADJ/root>(kleine) <ROOT> <6:NOUN/dep>(Tour) <7:PART/mark>(zu) <8:VERB/root>(beschreiben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADJ/advmod>(eigentlich) <2:ADJ/root>(ganz) <ROOT> <3:NOUN/root>(Szene)
    <4:ADV/advmod>(irgendwie)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - xcomp
  sentence: <1:PRON/root>(Der) <ROOT> <2:PROPN/nsubj>(Tobak) <3:DET/det>(der) <4:PROPN/nmod>(Kiddie)
    <6:NOUN/flat>(Band) <7:VERB/root>(macht) <8:DET/det>(den) <9:NOUN/nsubj>(Nikotinfan)
    <10:ADJ/xcomp>(topfit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/root>(aber) <ROOT> <2:NOUN/root>(Schuhe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/root>(die) <ROOT> <3:PROPN/nsubj>(Cocksnitch)\
    \ <4:VERB/root>(verl\xE4sst) <5:DET/det:poss>(ihr) <6:NOUN/obj>(Rattenloch) <7:PART/advmod>(nicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - appos
  - !!python/tuple
    - 6
    - 5
    - cc
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/root>(Guck) <2:ADV/advmod>(mal) <3:ADV/advmod>(hier) <5:NOUN/appos>(Chromspinners)
    <6:CCONJ/cc>(und) <ROOT> <7:ADJ/amod>(neue) <8:PROPN/root>(Rims)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(aber) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(echt) <6:DET/root>(eine) <ROOT> <7:NOUN/root>(Kunst) <8:CCONJ/cc>(und)
    <9:NOUN/conj>(Gratwanderung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:X/root>(ne) <ROOT> <3:ADJ/amod>(psychische) <4:NOUN/root>(Herausforderung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - appos
  sentence: "<1:ADV/root>(Denn) <ROOT> <2:NOUN/root>(Unzuverl\xE4ssigkeit) <3:ADJ/amod>(politisches)\
    \ <4:NOUN/nmod>(Hasardspiel) <5:CCONJ/cc>(und) <6:ADJ/amod>(milit\xE4rischer)\
    \ <7:NOUN/conj>(Irrsinn) <8:PRON/appos>(der)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(dieser) <3:NOUN/nsubj>(Kanal) <4:VERB/root>(macht)\
    \ <5:ADJ/advmod>(echt) <ROOT> <6:NOUN/root>(Ums\xE4tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihre) <2:ADJ/amod>(letzte) <3:NOUN/nsubj>(Session) <4:AUX/cop>(war)
    <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Herausforderung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:AUX/cop>(war) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <ROOT> <1:NOUN/nsubj>(Fehlentscheidungen) <2:AUX/cop>(waren) <3:DET/det>(die)
    <4:NOUN/root>(Folge)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 4
    - nsubj:pass
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:PRON/obl>(dem) <3:PRON/nsubj:pass>(man) <4:VERB/root>(vorbereitet)
    <5:AUX/aux:pass>(wird) <6:ADP/case>(auf) <7:PRON/obl>(das) <ROOT> <8:NOUN/root>(Abenteuer)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 10
    - csubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:ADV/advmod>(so) <3:DET/det>(ne) <4:NOUN/obl>(Herde)\
    \ <5:NOUN/obj>(Verantwortung) <6:PART/mark>(zu) <7:VERB/csubj>(\xFCbernehmen)\
    \ <8:AUX/cop>(ist) <9:ADV/advmod>(einfach) <10:NOUN/root>(ne) <ROOT> <11:NOUN/root>(Verantwortung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mache) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADJ/amod>(tats\xE4\
    chlich) <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Erfahrung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Immerhin) <2:VERB/root>(geht) <3:PRON/nsubj>(es) <4:ADP/compound:prt>(um)
    <ROOT> <5:NOUN/root>(Gewalttaten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(wie) <3:VERB/root>(rechtfertigen) <4:NOUN/nsubj>(Leute)
    <5:DET/obj>(diese) <ROOT> <6:NOUN/root>(Gewalt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/cop>(bist) <3:PRON/root>(der) <ROOT> <4:NOUN/root>(Held)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(habt) <3:DET/obj>(alle) <ROOT> <4:NOUN/root>(Waffen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(War) <2:ADV/advmod>(irgendwie) <3:ADV/advmod>(ganz) <4:ADV/advmod>(anders)
    <5:ADV/advmod>(echt) <6:ADV/advmod>(mal) <7:X/punct>(ne) <ROOT> <8:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:PROPN/nsubj>(Delta) <3:CCONJ/cc>(und) <4:PROPN/conj>(Superspreading)\
    \ <5:ADP/case>(in) <6:NOUN/nmod>(Innenr\xE4umen) <7:VERB/root>(Habt) <8:PRON/obj>(ihr)\
    \ <9:PART/advmod>(nicht) <10:ADV/advmod>(auch) <11:DET/obj>(eine) <ROOT> <12:NOUN/root>(Verantwortung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - cc
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PART/advmod>(Nicht) <2:ADV/advmod>(zu) <3:ADJ/root>(zweit) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(allein) <6:CCONJ/cc>(sondern) <ROOT> <7:NOUN/root>(mulitshow)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(total) <4:PRON/root>(die)
    <ROOT> <5:NOUN/obj>(Zahl) <6:VERB/root>(finde) <7:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(kennt) <3:ADJ/obl>(paar) <ROOT> <4:NOUN/root>(Typen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - ccomp
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 7
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:AUX/ccomp>(ist) <3:ADV/advmod>(los) <5:DET/det:poss>(Ihr)
    <6:NOUN/nsubj>(Typen) <7:VERB/root>(meint) <8:PRON/obj>(ihr) <9:VERB/xcomp>(kickt)
    <ROOT> <10:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:AUX/root>(muss) <3:PRON/nsubj>(man) <4:ADV/advmod>(m\xF6\
    glichst) <ROOT> <5:NOUN/dep>(Tricks) <6:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:NOUN/nsubj>(Restaurant) <3:VERB/root>(aufzumachen)
    <4:PRON/nsubj>(das) <5:AUX/cop>(ist) <6:NOUN/parataxis>(ne) <ROOT> <7:NOUN/root>(Investition)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:VERB/root>(Haust) <2:DET/det>(die) <3:NOUN/obj>(Mucke) <4:ADP/compound:prt>(an)
    <5:CCONJ/cc>(und) <6:VERB/conj>(freust) <7:PRON/obj>(dich) <8:ADV/advmod>(wieder)
    <9:ADP/case>(auf) <11:X/obl>(ne) <ROOT> <12:NOUN/root>(Party)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <3:NOUN/root>(ne) <ROOT> <4:ADJ/amod>(Schei\xDF\
    e) <5:NOUN/root>(Alter)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - compound
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 2
    - csubj:pass
  - !!python/tuple
    - 10
    - 15
    - cc
  - !!python/tuple
    - 11
    - 15
    - case
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - nmod
  - !!python/tuple
    - 15
    - 2
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:PART/mark>(zu) <2:VERB/root>(sehen) <3:ADV/advmod>(mehr) <4:ADP/case>(\xFC\
    ber) <5:DET/det>(die) <6:NOUN/compound>(Inhibitor) <7:NOUN/obl>(Chips) <8:PART/mark>(zu)\
    \ <9:VERB/csubj:pass>(erfahren) <10:CCONJ/cc>(und) <11:ADP/case>(um) <12:ADP/case>(an)\
    \ <13:DET/det>(dem) <14:NOUN/nmod>(Ende) <15:DET/conj>(eine) <ROOT> <16:NOUN/root>(Theorie)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - obj
  sentence: "<1:VERB/root>(hat) <ROOT> <2:NOUN/compound>(Insider) <4:NOUN/root>(Infos)\
    \ <5:CCONJ/cc>(und) <6:VERB/conj>(wei\xDF) <7:ADV/advmod>(mehr) <8:CCONJ/case>(als)\
    \ <9:PRON/obl>(wir) <10:DET/obj>(alle)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Was) <3:X/dep>(ne) <ROOT> <4:NOUN/root>(Frau)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(ja) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Aussage)
    <5:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(vorweg) <3:PRON/nsubj>(es) <4:VERB/root>(geht)
    <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(Video) <8:ADP/compound:prt>(um)
    <ROOT> <9:NOUN/root>(Gewalt)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Da) <2:AUX/aux>(hab) <3:PRON/nsubj>(ich) <4:DET/det>(das)\
    \ <5:ADJ/amod>(erste) <6:NOUN/nmod>(Mal) <7:ADJ/root>(richtig) <ROOT> <8:NOUN/dep>(Angst)\
    \ <9:VERB/root>(versp\xFCrt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 12
    - dep
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 12
    - aux
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 12
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 12
    - obl
  - !!python/tuple
    - 11
    - 10
    - flat
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - cc
  - !!python/tuple
    - 14
    - 12
    - conj
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - advmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 14
    - obl
  sentence: "<1:PRON/root>(Das) <ROOT> <2:NOUN/dep>(Gegenst\xFCck) <3:PROPN/appos>(Jennifer)\
    \ <4:PROPN/flat>(Hof) <5:PRON/flat>(Die) <6:AUX/aux>(hat) <7:NUM/nummod>(zwei)\
    \ <8:NOUN/obl>(Jahre) <9:ADP/case>(nach) <10:PROPN/obl>(Lena) <11:PROPN/flat>(Gercke)\
    \ <12:VERB/root>(gewonnen) <13:CCONJ/cc>(Und) <14:VERB/conj>(Ist) <15:ADV/advmod>(mittlerweile)\
    \ <16:ADV/advmod>(raus) <17:ADP/case>(aus) <18:DET/det>(dem) <19:NOUN/obl>(Modelbusiness)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:DET/obj>(eine) <4:ADV/advmod>(sehr)
    <ROOT> <5:NOUN/root>(Trennung) <6:ADP/case>(zwischen) <7:NOUN/nmod>(Redaktion)
    <8:CCONJ/cc>(und) <9:NOUN/conj>(Sales)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 11
    - dep
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - aux
  sentence: "<1:CCONJ/cc>(aber) <2:PRON/nsubj>(das) <3:AUX/root>(waren) <4:ADV/advmod>(schon)\
    \ <5:DET/det>(ein) <6:ADJ/obl>(paar) <ROOT> <7:NOUN/dep>(Ver\xE4nderungen) <8:DET/det>(die)\
    \ <9:PROPN/nsubj>(Trump) <10:ADV/advmod>(da) <11:VERB/root>(durchgeboxt) <12:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(richtig) <ROOT> <2:PROPN/root>(Mucke)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Nachricht) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(es) <8:ADV/advmod>(so)
    <9:ADV/advmod>(schnell) <10:VERB/ccomp>(ging)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:ADP/root>(zu) <ROOT> <3:NOUN/root>(Strophen)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <5:INTJ/advmod>(ha) <6:NOUN/nsubj>(ha) <7:PRON/root>(das) <8:AUX/cop>(waren) <ROOT>
    <9:NUM/nummod>(5) <10:NOUN/root>(Jahre)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 14
    - obj
  - !!python/tuple
    - 4
    - 14
    - advmod
  - !!python/tuple
    - 5
    - 14
    - advmod
  - !!python/tuple
    - 6
    - 14
    - aux
  - !!python/tuple
    - 7
    - 14
    - nsubj
  - !!python/tuple
    - 8
    - 14
    - advmod
  - !!python/tuple
    - 9
    - 14
    - advmod
  - !!python/tuple
    - 10
    - 14
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:AUX/root>(War) <2:X/dep>(ne) <ROOT> <3:NOUN/obj>(Zeit) <4:ADV/advmod>(Also)
    <5:ADV/advmod>(da) <6:AUX/aux>(wollt) <7:PRON/nsubj>(ich) <8:ADV/advmod>(dann)
    <9:ADV/advmod>(auch) <10:PRON/obj>(jemanden) <11:ADP/case>(aus) <12:DET/det:poss>(meiner)
    <13:NOUN/obl>(Familie) <14:VERB/root>(umbringen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:NOUN/root>(ne)
    <ROOT> <5:NOUN/root>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Eure) <2:NOUN/compound>(Plastik) <4:NOUN/obj>(Hits) <5:VERB/root>(machen)
    <ROOT> <6:NOUN/root>(Klicks)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - dep
  - !!python/tuple
    - 7
    - 3
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:PRON/obl>(mir) <3:AUX/root>(war) <4:DET/det>(jede)
    <5:NOUN/dep>(Nacht) <7:X/dep>(ne) <ROOT> <8:NOUN/root>(Nacht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: "<1:ADV/advmod>(Wie) <2:ADV/advmod>(fast) <3:DET/root>(alle) <4:AUX/aux>(habe)\
    \ <5:PRON/nsubj>(ich) <ROOT> <6:NOUN/root>(Albtr\xE4ume) <7:DET/det>(jede) <8:NOUN/nmod>(Nacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/nsubj>(Ich) <3:DET/det:poss>(mein) <4:DET/obj>(alles)\
    \ <5:DET/obj>(andere) <6:VERB/root>(w\xE4r) <7:ADV/advmod>(jetzt) <8:ADV/advmod>(auch)\
    \ <9:NOUN/obj>(ne) <ROOT> <10:NOUN/root>(Energieverschwendung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/root>(Schreibe) <ROOT> <2:NOUN/root>(Strophen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADJ/root>(Bekannt) <2:ADP/case>(f\xFCr) <ROOT> <3:NOUN/root>(Zeilen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihr) <2:ADP/case>(seit) <3:ADP/case>(auf) <4:PROPN/root>(Fruit)
    <5:CCONJ/cc>(und) <ROOT> <6:NOUN/root>(OGs)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(warum) <2:PRON/nsubj>(er) <3:ADJ/amod>(sp\xE4ter) <4:PRON/root>(der)\
    \ <ROOT> <5:ADJ/amod>(abgefuckte) <6:NOUN/nsubj>(Boy) <7:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 8
    - 5
    - dep
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(f\xE4ngt) <3:DET/nsubj>(dieses) <4:ADJ/advmod>(unfassbar)\
    \ <ROOT> <5:PROPN/root>(Cinematic) <7:NOUN/flat>(Video) <8:ADP/dep>(an)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <2:VERB/root>(einzugehen) <4:PRON/nsubj>(Es) <5:AUX/cop>(war) <6:DET/parataxis>(eine)
    <ROOT> <7:NOUN/root>(Diskussion) <8:CCONJ/cc>(oder) <9:NOUN/conj>(Und)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  - !!python/tuple
    - 8
    - 3
    - appos
  - !!python/tuple
    - 11
    - 3
    - appos
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <ROOT> <3:NOUN/root>(Leute) <5:PRON/appos>(wer)
    <8:PRON/appos>(wer) <11:PROPN/appos>(Hah)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/expl>(es) <3:VERB/root>(ergibt) <4:PRON/obj>(sich)
    <5:ADV/advmod>(wieder) <6:DET/nsubj>(eine) <ROOT> <7:NOUN/root>(Zufallsbegegnung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 13
    - nmod
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:DET/det>(die)\
    \ <5:NOUN/obj>(Leute) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/nmod>(\xD6PNV)\
    \ <9:VERB/conj>(verdienen) <10:ADV/advmod>(erst) <11:ADV/advmod>(mal) <12:NOUN/obj>(mega)\
    \ <ROOT> <13:NOUN/root>(Anerkennung) <14:ADP/case>(f\xFCr) <15:DET/det>(den) <16:NOUN/nmod>(Job)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: <1:ADJ/root>(ganz) <ROOT> <2:NOUN/root>(Geschichten) <3:ADP/case>(zu)
    <4:DET/det>(dem) <5:NOUN/nmod>(Teil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  sentence: "<1:ADV/advmod>(Woher) <2:DET/root>(dieses) <ROOT> <3:NOUN/obj>(Engagement)\
    \ <4:VERB/root>(kommt) <5:AUX/aux>(werde) <6:PRON/nsubj>(ich) <7:ADV/advmod>(sp\xE4\
    ter) <8:VERB/xcomp>(erfahren)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 18
    - aux:pass
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 18
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 18
    - aux:pass
  - !!python/tuple
    - 10
    - 18
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 18
    - nsubj:pass
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - conj
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 15
    - nmod
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:PRON/root>(Das) <ROOT> <2:AUX/aux:pass>(ist) <3:ADP/case>(Vor) <4:DET/det>(dem)
    <5:NOUN/obl>(Mord) <6:ADP/case>(an) <7:PROPN/nmod>(de) <8:PROPN/flat>(Vries) <9:AUX/aux:pass>(wurden)
    <10:ADV/advmod>(bereits) <11:DET/det>(der) <12:NOUN/nsubj:pass>(Bruder) <13:CCONJ/cc>(und)
    <14:DET/det>(der) <15:NOUN/conj>(Anwalt) <16:DET/det>(des) <17:NOUN/nmod>(Kronzeugen)
    <18:VERB/root>(erschossen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det>(manchen) <3:NOUN/obl>(S\xE4tzen) <4:PRON/nsubj>(die)\
    \ <5:ADJ/xcomp>(einfach) <6:AUX/aux>(sind) <7:VERB/root>(liegen) <ROOT> <8:NOUN/root>(Sch\xE4\
    tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ihr) <2:VERB/root>(macht) <3:ADP/case>(auf) <4:ADJ/advmod>(ganz)\
    \ <ROOT> <5:NOUN/root>(Schl\xE4ger)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - obj
  sentence: <ROOT> <1:NOUN/nsubj>(Fehlinterpretation) <2:DET/det:poss>(deines) <3:NOUN/nmod>(Verhaltens)
    <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/nmod>(Netz) <7:VERB/root>(darstellen)
    <8:CCONJ/cc>(und) <9:ADV/advmod>(dann) <10:VERB/conj>(wunderst) <11:PRON/nsubj>(du)
    <12:PRON/obj>(dich)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(aber) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(Ver\xE4nderung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:NOUN/nsubj>(Gewaltandrohungen) <5:VERB/root>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - compound
  - !!python/tuple
    - 10
    - 4
    - obl
  - !!python/tuple
    - 11
    - 4
    - advmod
  sentence: <1:PART/advmod>(nicht) <2:ADV/root>(so) <ROOT> <3:NOUN/nsubj>(Vorgaben)
    <4:VERB/root>(machen) <5:ADP/advmod>(wie) <6:ADV/advmod>(etwa) <7:ADV/advmod>(damals)
    <8:ADP/case>(bei) <9:PROPN/compound>(Game) <10:PROPN/obl>(One) <11:ADV/advmod>(noch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/root>(Dass) <ROOT> <2:ADJ/amod>(k\xFCnstlerische) <3:NOUN/nsubj>(Visionen)\
    \ <4:ADV/advmod>(nie) <5:DET/det>(das) <6:NOUN/obj>(Licht) <7:DET/det>(der) <8:NOUN/nmod>(Welt)\
    \ <9:VERB/root>(erblicken)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:PRON/root>(die) <ROOT> <4:NOUN/root>(Figur)
    <5:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(immer) <6:ADV/advmod>(so) <ROOT> <7:NOUN/root>(Tipps)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: "<ROOT> <1:NOUN/root>(Abgeschlagenheit) <2:CCONJ/cc>(und) <3:NOUN/conj>(M\xFC\
    digkeit) <5:PRON/nsubj>(ich) <6:AUX/cop>(war) <7:ADV/advmod>(einfach) <8:ADJ/advmod>(komplett)\
    \ <9:ADP/case>(neben) <10:DET/det>(der) <11:NOUN/nmod>(Spur)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:PRON/root>(Die) <ROOT> <2:NOUN/nsubj>(M\xFCdigkeit) <3:AUX/cop>(ist)\
    \ <4:ADV/advmod>(eigentlich) <5:ADJ/root>(logisch) <6:ADV/advmod>(Schlie\xDFlich)\
    \ <7:AUX/cop>(ist) <8:DET/det>(der) <9:NOUN/nsubj>(K\xF6rper) <10:ADP/case>(von)\
    \ <11:NOUN/nmod>(Kaffeetrinkern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:VERB/root>(geht) <3:ADP/compound:prt>(um) <ROOT>
    <4:NOUN/root>(Summen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - flat
  sentence: "<1:ADP/case>(In) <2:DET/det>(der) <3:ADJ/amod>(n\xE4chsten) <4:NOUN/obl>(Folge)\
    \ <5:VERB/root>(erwarten) <6:PRON/nsubj>(euch) <ROOT> <7:PROPN/root>(Landing)\
    \ <9:PROPN/flat>(Challenges)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schreibe) <ROOT> <3:NOUN/root>(Texte)
    <5:PRON/appos>(Ich) <6:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 10
    - 2
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(geht) <3:ADP/case>(in) <4:DET/det>(jedem)
    <5:NOUN/compound>(Block) <7:PROPN/obl>(Hamburg) <8:AUX/cop>(ist) <10:X/dep>(ne)
    <ROOT> <11:NOUN/root>(Stadt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/amod>(Kleine) <2:NOUN/nsubj>(Freier) <3:VERB/root>(machen) <4:ADV/advmod>(immer)
    <ROOT> <5:NOUN/root>(Welle)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/nsubj>(die) <3:VERB/root>(haben) <ROOT> <4:NOUN/root>(Animem\xE4\
    chte)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Leute) <2:PRON/nsubj>(die) <3:VERB/root>(haben) <4:ADV/advmod>(wirklich)
    <ROOT> <5:NOUN/dep>(Verbrechen) <6:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 3
    - cop
  - !!python/tuple
    - 7
    - 6
    - expl
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - obl
  sentence: "<1:ADP/case>(Ohne) <2:DET/root>(diese) <ROOT> <3:NOUN/root>(Dysbalance)\
    \ <4:DET/det>(des) <5:NOUN/nmod>(Bildungssystems) <6:AUX/cop>(w\xE4re) <7:PRON/expl>(es)\
    \ <8:ADJ/advmod>(wahrscheinlich) <9:CCONJ/cc>(weder) <10:ADP/case>(zu) <11:DET/det>(dem)\
    \ <12:ADJ/obl>(Ersten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(der) <3:NOUN/root>(Gruppe) <ROOT> <4:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:INTJ/root>(Geh) <3:CCONJ/cc>(und) <4:VERB/conj>(gebe) <5:DET/det>(jenen)
    <6:NOUN/obj>(Themen) <8:X/dep>(ne) <ROOT> <9:NOUN/root>(Magie)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det:poss>(meinem) <3:NOUN/obl>(Bett) <4:VERB/root>(herrscht)
    <5:ADV/advmod>(voll) <6:PRON/nsubj>(die) <ROOT> <7:NOUN/root>(Gravitation)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(wissen) <3:PART/advmod>(nicht) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(es) <6:AUX/cop>(ist) <7:ADV/advmod>(total) <8:PRON/conj>(die) <ROOT>
    <9:NOUN/root>(Situation)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cop
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:AUX/cop>(ist) <2:SCONJ/mark>(dass) <3:ADP/case>(durch) <4:NOUN/nmod>(Zufall)
    <5:DET/nsubj>(eine) <6:ADJ/root>(enorm) <ROOT> <7:NOUN/dep>(Questreihe) <8:VERB/root>(gestartet)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(es) <3:PART/advmod>(nicht) <4:PRON/nsubj>(das)\
    \ <5:VERB/root>(braucht) <6:ADP/case>(wie) <7:ADV/advmod>(hier) <8:ADV/advmod>(so)\
    \ <ROOT> <9:NOUN/root>(Strukturen) <10:CCONJ/cc>(und) <11:NOUN/conj>(Pl\xE4ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(eigentlich) <6:DET/root>(eine) <ROOT> <7:NOUN/root>(Steigerung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 2
    - csubj
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:DET/root>(Dieses) <ROOT> <2:NOUN/root>(Ohnmachtsgef\xFChl) <3:SCONJ/mark>(dass)\
    \ <4:PRON/nsubj>(man) <5:ADV/advmod>(eigentlich) <6:PRON/obj>(nichts) <7:VERB/csubj>(tun)\
    \ <8:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:VERB/root>(rappt) <ROOT> <3:NOUN/root>(Bars)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(der) <3:VERB/root>(hatte) <ROOT> <4:NOUN/root>(Folgen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:ADP/case>(Als) <2:PRON/obl>(Allererstes) <3:VERB/root>(haben) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(hier) <6:DET/det>(eine) <7:ADJ/obj>(richtige) <ROOT> <8:PROPN/root>(News)
    <9:ADP/case>(an) <10:DET/det>(dem) <11:NOUN/nmod>(Start)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(auch) <4:PART/advmod>(nicht)
    <5:PRON/root>(der) <ROOT> <6:NOUN/root>(Superknaller)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:ADV/advmod>(Nat\xFCrlich) <3:DET/root>(keine) <ROOT>\
    \ <4:NOUN/root>(Ank\xFCndigung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 7
    - aux:pass
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(so) <3:X/root>(ne) <ROOT> <4:NOUN/dep>(Situation)
    <5:PRON/appos>(Wir) <6:AUX/aux:pass>(sind) <7:VERB/root>(vorbereitet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 14
    - nsubj
  - !!python/tuple
    - 7
    - 14
    - cc
  - !!python/tuple
    - 8
    - 14
    - nsubj
  - !!python/tuple
    - 9
    - 14
    - aux
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Fidel) <2:VERB/root>(erz\xE4hlt) <3:ADV/advmod>(noch)\
    \ <4:DET/obj>(viel) <5:ADV/advmod>(mehr) <ROOT> <6:NOUN/nsubj>(Geschichten) <7:CCONJ/cc>(Aber)\
    \ <8:PRON/nsubj>(es) <9:AUX/aux>(soll) <10:ADV/advmod>(ja) <11:PART/advmod>(nicht)\
    \ <12:ADV/advmod>(einfach) <13:ADV/advmod>(darum) <14:VERB/root>(gehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(ich) <ROOT> <3:NOUN/dep>(Bilder) <4:VERB/root>(schiess)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - flat
  - !!python/tuple
    - 13
    - 11
    - flat
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(pop) <4:PRON/obl:arg>(mir) <5:ADV/compound:prt>(weiter)
    <ROOT> <6:PROPN/nsubj>(Pills) <7:CCONJ/cc>(und) <8:DET/det:poss>(mein) <9:NOUN/conj>(Mouth)
    <10:AUX/cop>(ist) <11:PROPN/root>(full) <12:PROPN/flat>(of) <13:PROPN/flat>(Grills)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - obl
  sentence: <1:PRON/root>(Das) <ROOT> <2:ADP/case>(bei) <3:PRON/obl>(uns) <4:AUX/root>(ist)
    <5:ADV/advmod>(ja) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <8:VERB/conj>(hat)
    <9:DET/det>(keinen) <10:NOUN/obj>(Tagesrhythmus) <11:ADP/case>(in) <12:DET/det>(dem)
    <13:NOUN/obl>(Sinne)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  sentence: <1:ADP/case>(Auf) <2:DET/root>(eine) <ROOT> <3:NOUN/obj>(Zahl) <4:VERB/root>(macht)
    <5:PRON/nsubj>(er) <6:PRON/obj>(mich) <7:ADV/advmod>(sofort) <8:ADJ/xcomp>(aufmerksam)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: <1:PRON/nsubj>(Sie) <2:VERB/root>(haben) <ROOT> <3:NOUN/root>(Selbstzweifel)
    <4:CCONJ/cc>(und) <5:VERB/conj>(denken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advcl
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - obl
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(das) <ROOT> <3:AUX/aux>(war) <4:ADV/advmod>(eigentlich)
    <5:PRON/nsubj>(ich) <6:AUX/aux>(muss) <7:ADV/advmod>(ja) <8:PROPN/obj>(Eberswalder)
    <9:VERB/root>(aussteigen) <10:SCONJ/mark>(weil) <11:PRON/nsubj>(ich) <12:VERB/advcl>(wollte)
    <13:ADP/case>(zu) <14:PRON/obl>(dem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(wie) <2:ADV/root>(etwa) <ROOT> <3:NOUN/compound>(Super) <5:NOUN/root>(Attacken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 2
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(leg) <4:ADP/case>(als) <5:NOUN/obl>(Gangster)
    <6:CCONJ/cc>(und) <7:ADP/case>(als) <8:NOUN/compound>(Rapper) <10:X/obl>(ne) <ROOT>
    <11:NOUN/root>(Karriere) <12:ADV/dep>(hin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <ROOT> <4:NOUN/root>(Wut) <5:ADP/case>(in)
    <6:DET/det>(dem) <7:NOUN/nmod>(Bauch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: "<1:ADP/case>(auf) <2:DET/root>(eine) <ROOT> <3:NOUN/dep>(Geschichte)\
    \ <4:VERB/root>(gesto\xDFen) <5:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/root>(was) <2:ADV/advmod>(ja) <3:ADV/advmod>(auch) <4:ADV/advmod>(so)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/nsubj>(Dimensionen) <7:VERB/root>(annimmt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:AUX/root>(kann) <3:ADV/advmod>(ja) <4:ADV/advmod>(so)
    <ROOT> <5:ADJ/amod>(ernsthafte) <6:NOUN/obj>(Folgen) <7:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <ROOT> <1:ADJ/amod>(innergesellschaftliche) <2:NOUN/root>(Unterschiede)
    <3:ADP/case>(zwischen) <4:NOUN/nmod>(Arm) <5:CCONJ/cc>(und) <6:NOUN/conj>(Reich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(habt) <ROOT> <3:PROPN/root>(Cliqen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:AUX/cop>(Bin) <2:PRON/root>(der) <ROOT> <3:NOUN/root>(Schl\xE4ger)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/root>(Viel) <2:ADP/dep>(zu) <ROOT> <3:NOUN/root>(Sorten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obj>(die) <ROOT> <4:NOUN/root>(Uhr)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - ccomp
  - !!python/tuple
    - 5
    - 1
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(findet) <2:PROPN/nsubj>(Lena) <3:VERB/ccomp>(hat) <5:X/dep>(ne)
    <ROOT> <6:NOUN/root>(Stimme)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(schon)
    <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Erkenntnis)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - dep
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <ROOT> <1:NOUN/dep>(Storys) <2:ADJ/amod>(Fettes) <3:NOUN/root>(Brot)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hattest) <3:ADJ/amod>(letztes) <4:NOUN/obl>(Mal)
    <5:DET/obj>(dieses) <ROOT> <6:NOUN/root>(Spiel)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 10
    - case
  - !!python/tuple
    - 7
    - 10
    - det
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 4
    - nmod
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Situation)\
    \ <5:ADV/advmod>(hier) <6:ADP/case>(in) <7:DET/det>(der) <8:NOUN/compound>(Autobahn)\
    \ <10:NOUN/nmod>(Rastst\xE4tte)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Menschen) <2:ADV/advmod>(so) <3:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - dep
  sentence: <1:X/dep>(#) <2:ADV/root>(Schon) <ROOT> <3:NOUN/nsubj>(Themen) <4:DET/det>(dieses)
    <5:NOUN/nmod>(Jahr) <6:VERB/root>(meinste) <7:PART/advmod>(nicht) <9:PROPN/nsubj>(Och)
    <10:X/dep>(joa)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:X/root>(Wow) <2:PRON/nsubj>(was) <3:AUX/cop>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(wieder) <6:ADP/case>(f\xFCr) <7:NOUN/obl>(ne) <ROOT> <8:NOUN/root>(Sendung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 4
    - nmod
  sentence: "<1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:PRON/obj>(das) <ROOT> <4:NOUN/root>(Missverh\xE4\
    ltnis) <5:ADP/case>(bei) <6:DET/det>(der) <7:PROPN/nmod>(SVB) <8:ADV/advmod>(auch)\
    \ <9:ADP/case>(in) <10:ADJ/amod>(folgender) <11:NOUN/nmod>(Grafik)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - dep
  sentence: "<1:CCONJ/cc>(und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)\
    \ <5:ADV/advmod>(schon) <6:DET/root>(eine) <ROOT> <7:NOUN/root>(Zerst\xF6rung)\
    \ <9:X/dep>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - dep
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: "<1:NOUN/dep>(Energietr\xE4ger) <2:ADV/advmod>(erst) <3:DET/det>(den)\
    \ <4:ADJ/amod>(wichtigsten) <5:NOUN/root>(Grundstein) <6:ADP/case>(f\xFCr) <7:PRON/nmod>(die)\
    \ <ROOT> <8:NOUN/root>(Abh\xE4ngigkeit) <9:ADP/case>(von) <10:PROPN/nmod>(Putins)\
    \ <11:NOUN/nmod>(Energielieferungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(ich) <3:VERB/root>(habe) <4:ADP/case>(an)
    <5:NOUN/obl>(Weihnachten) <6:ADV/advmod>(immer) <ROOT> <7:NOUN/root>(Erwartungen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/root>(weil) <2:ADV/advmod>(so) <ROOT> <3:NOUN/nsubj>(\xDCberzeugungsversuche)\
    \ <4:ADV/advmod>(meistens) <5:ADP/case>(zu) <6:NOUN/obl>(Reaktanz) <7:VERB/root>(f\xFC\
    hren)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(wirklich) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Umstellung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: "<1:ADV/advmod>(Also) <2:DET/root>(eine) <3:ADV/advmod>(besonders) <ROOT>\
    \ <4:NOUN/root>(\xDCbung) <5:X/dep>(Ja)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: "<1:ADV/advmod>(Doch) <2:PRON/root>(der) <ROOT> <3:NOUN/nsubj>(Senior)\
    \ <4:VERB/root>(kriegt) <5:DET/det>(keinen) <6:NOUN/obj>(St\xE4nder) <7:ADV/advmod>(mehr)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(halt) <4:ADV/advmod>(grad)
    <5:ADV/advmod>('ne) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/root>(Rede)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - flat
  sentence: <1:SCONJ/root>(wie) <2:PRON/nsubj>(ich) <ROOT> <3:PROPN/root>(Raps) <4:PROPN/flat>(spuck)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PART/advmod>(nicht) <2:ADP/root>(zu) <ROOT> <3:NOUN/root>(Bars)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - acl
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - det
  sentence: "<1:ADV/advmod>(Warum) <2:ADV/advmod>(aber) <3:VERB/root>(hat) <4:DET/det>(die)\
    \ <5:NOUN/nsubj>(Wohnsnot) <6:ADP/case>(in) <7:PROPN/obl>(Stockholm) <8:ADV/advmod>(derart)\
    \ <ROOT> <9:NOUN/nsubj>(Z\xFCge) <10:VERB/acl>(angenommen) <11:DET/nsubj>(Alles)\
    \ <12:VERB/root>(begann) <13:ADP/case>(in) <14:DET/det>(den)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Nein) <2:NOUN/obj>(spa\xDF) <3:PRON/nsubj>(die) <4:VERB/root>(haben)\
    \ <ROOT> <5:PROPN/root>(Wallhacks)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - aux
  - !!python/tuple
    - 9
    - 11
    - obl:arg
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - conj
  sentence: <1:PRON/root>(Der) <ROOT> <2:NOUN/obj>(Ausgleich) <3:ADV/advmod>(ne) <4:PRON/nsubj>(Ich)
    <5:VERB/root>(helf) <6:DET/obj>(anderen) <7:ADV/advmod>(aber) <8:AUX/aux>(muss)
    <9:PRON/obl:arg>(mir) <10:ADV/advmod>(auch) <11:VERB/conj>(helfen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - xcomp
  sentence: "<1:NOUN/root>(Bauen) <2:ADV/advmod>(hier) <ROOT> <3:NOUN/nsubj>(H\xE4\
    user) <4:ADV/advmod>(hin) <5:VERB/root>(unterst\xFCtzen) <6:DET/det>(die) <7:NOUN/nsubj>(Familie)\
    \ <8:VERB/xcomp>(heiraten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: "<1:PRON/nsubj>(die) <2:ADJ/advmod>(schwarz) <3:VERB/root>(angelaufen)\
    \ <4:AUX/cop>(sind) <6:ADJ/advmod>(ganz) <ROOT> <7:NOUN/root>(Tr\xE4ume) <8:ADP/case>(Vor)\
    \ <9:DET/det>(der) <10:NOUN/nmod>(OP)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - conj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 6
    - conj
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 13
    - nmod
  sentence: "<1:ADV/root>(warum) <2:DET/det>(die) <3:NOUN/nsubj>(J\xE4ger) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/nsubj>(Mann\xF6ver) <6:VERB/root>(machen) <7:AUX/aux>(k\xF6nnen)\
    \ <8:CCONJ/cc>(und) <9:ADV/advmod>(auch) <10:ADV/conj>(warum) <11:ADV/advmod>(eben)\
    \ <12:DET/det>(die) <13:NOUN/conj>(Schiffe) <14:DET/det>(des) <15:NOUN/nmod>(Widerstandes)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(Stimmt) <2:CCONJ/cc>(Und) <3:PRON/nsubj>(man) <4:VERB/conj>(braucht)
    <5:ADV/compound:prt>(ne) <ROOT> <6:NOUN/compound>(Internet) <8:NOUN/root>(Leitung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 15
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 6
    - 2
    - flat
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 2
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 15
    - cop
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:PROPN/nsubj>(Long) <4:PROPN/flat>(Covid) <6:NOUN/flat>(Symptome)\
    \ <7:PRON/nsubj>(die) <8:ADP/case>(bei) <9:PRON/obl>(mir) <10:VERB/acl>(aufgetreten)\
    \ <11:AUX/aux>(sind) <12:AUX/cop>(waren) <13:ADP/case>(vor) <14:DET/det>(allem)\
    \ <15:DET/root>(diese) <ROOT> <16:NOUN/root>(Ersch\xF6pfung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 7
    - amod
  sentence: "<1:ADJ/advmod>(seltsam) <2:VERB/root>(klingen) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)\
    \ <5:DET/obj>(eine) <6:ADV/advmod>(so) <ROOT> <7:NOUN/root>(Trennung) <8:ADP/case>(zwischen)\
    \ <9:NOUN/nmod>(Inl\xE4ndern) <10:CCONJ/cc>(und) <11:NOUN/conj>(Ausl\xE4ndern)\
    \ <12:ADJ/amod>(\xF6ffentlichem)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADP/case>(von) <4:DET/det>(dem)
    <5:PROPN/obl>(bouncen) <ROOT> <6:NOUN/root>(Schmerzen) <7:ADP/case>(in) <8:DET/det>(dem)
    <9:NOUN/nmod>(Meniskus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - cop
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wie) <2:ADJ/root>(h\xE4sslich) <3:PRON/nsubj>(ich) <4:AUX/cop>(sei)\
    \ <5:CCONJ/cc>(und) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ich) <8:ADV/advmod>(bestimmt)\
    \ <9:ADJ/conj>(wahnsinnig) <ROOT> <10:ADJ/root>(heftige)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  sentence: <1:ADV/advmod>(Doch) <2:VERB/root>(sehe) <3:DET/obj>(viele) <ROOT> <4:NOUN/nsubj>(Stimmen)
    <5:VERB/root>(fall'n) <6:ADP/case>(in) <7:PROPN/obl>(Berlin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Dieser) <2:NOUN/nsubj>(Stadtteil) <3:VERB/root>(hat) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/root>(Altersspanne)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/advmod>(voll) <4:PRON/root>(der)
    <ROOT> <5:NOUN/root>(Moment)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nummod
  - !!python/tuple
    - 7
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - nmod
  - !!python/tuple
    - 10
    - 2
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  sentence: "<1:ADV/advmod>(mehr) <2:NOUN/root>(Verm\xF6gen) <3:ADP/case>(als) <4:DET/det>(die)\
    \ <5:ADJ/amod>(\xE4rmsten) <6:NUM/nummod>(99) <7:NUM/nmod>(8) <8:ADP/case>(An)\
    \ <9:DET/nmod>(eine) <10:ADV/advmod>(derart) <ROOT> <11:NOUN/nsubj>(Ungleichheit)\
    \ <12:VERB/root>(kommt) <13:ADJ/advmod>(wahrlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(hier) <3:VERB/root>(geht) <4:PRON/nsubj>(es)
    <5:ADP/case>(bei) <6:PROPN/obl>(Highperfomer) <7:PROPN/flat>(Henning) <8:ADP/case>(um)
    <9:PROPN/nmod>(Argentiniens) <ROOT> <10:NOUN/root>(Wirtschaftskrise)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(ging) <4:ADP/case>(in)
    <5:DET/obl>(eine) <6:ADJ/advmod>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 1
    - conj
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <ROOT> <1:NOUN/root>(Tiefe) <2:ADP/case>(auf) <3:ADV/advmod>(einmal) <4:CCONJ/cc>(und)
    <5:VERB/conj>(hat) <6:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - dep
  - !!python/tuple
    - 4
    - 10
    - advmod
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - conj
  - !!python/tuple
    - 14
    - 13
    - expl
  - !!python/tuple
    - 15
    - 16
    - nummod
  - !!python/tuple
    - 16
    - 13
    - nsubj
  sentence: "<1:DET/det>(Eine) <2:ADJ/root>(ganz) <ROOT> <3:NOUN/dep>(Explosion) <4:ADV/advmod>(Sonst)\
    \ <5:AUX/aux>(w\xFCrden) <6:PRON/nsubj>(sie) <7:ADV/advmod>(niemals) <8:ADV/advmod>(so)\
    \ <9:ADV/advmod>(schnell) <10:VERB/root>(werden) <11:CCONJ/cc>(Und) <12:ADV/advmod>(da)\
    \ <13:VERB/conj>(gibt) <14:PRON/expl>(es) <15:NUM/nummod>(zwei) <16:NOUN/nsubj>(Haupt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/root>(Hey) <2:ADJ/advmod>(voll) <3:PRON/appos>(der) <ROOT> <4:ADJ/amod>(Schei\xDF\
    ) <5:NOUN/root>(Alter)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:AUX/root>(war) <4:ADP/case>(auf)
    <5:DET/det>(jeden) <6:NOUN/obl>(Fall) <7:X/dep>(ne) <ROOT> <8:PROPN/root>(Challenge)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:DET/root>(eine) <ROOT> <2:NOUN/nsubj>(Veranstaltung) <3:VERB/root>(machen)
    <4:VERB/xcomp>(organisieren) <5:CCONJ/cc>(und) <6:VERB/conj>(betreuen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PROPN/nsubj>(Schweinsteiger) <2:AUX/cop>(ist) <3:ADV/advmod>(also)
    <4:PRON/root>(die) <ROOT> <5:NOUN/root>(Nummer) <6:ADV/advmod>(eins)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(auch) <3:ADP/case>(auf) <4:ADJ/amod>(deutschen)\
    \ <5:NOUN/obl>(Bauernh\xF6fen) <6:VERB/root>(gibt) <7:PRON/nsubj>(es) <ROOT> <8:NOUN/root>(F\xE4\
    lle) <9:ADP/case>(von) <10:NOUN/nmod>(Tierleid)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 7
    - csubj
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(die) <2:NOUN/obj>(Arbeit) <3:VERB/csubj>(abgenommen) <4:AUX/aux>(hat)\
    \ <5:PRON/nsubj>(Es) <6:AUX/cop>(war) <7:DET/root>(eine) <ROOT> <8:NOUN/root>(Fehleinsch\xE4\
    tzung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/root>(auf) <ROOT> <2:NOUN/dep>(Br\xE4ute) <3:VERB/root>(abgespritzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(war) <ROOT> <4:NOUN/root>(Zeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det:poss>(deine) <2:ADJ/amod>(billige) <3:NOUN/nsubj>(Crew) <4:CCONJ/cc>(und)\
    \ <5:PRON/conj>(du) <6:AUX/cop>(sind) <7:ADJ/root>(\xFCbertrieben) <ROOT> <8:NOUN/root>(Opfer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:NOUN/nsubj>(Duisburger) <3:AUX/root>(sind) <ROOT>
    <4:NOUN/root>(Typen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(fahr) <4:NOUN/obj>(Fahrrad) <5:ADP/case>(mit)\
    \ <6:DET/det>(den) <7:NOUN/nmod>(H\xE4nden) <8:ADP/case>(in) <9:DET/det>(der)\
    \ <10:NOUN/nmod>(Jackentasche) <ROOT> <12:NOUN/root>(Sache)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obj
  sentence: "<1:PRON/nsubj>(Ihr) <2:AUX/cop>(seid) <3:DET/root>(alle) <ROOT> <4:NOUN/root>(Rapper)\
    \ <5:CCONJ/cc>(doch) <6:PRON/nsubj>(ich) <7:VERB/appos>(geb) <8:DET/det>(ein)\
    \ <9:NOUN/obj>(Schei\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(heut) <3:AUX/root>(ist) <ROOT> <4:NOUN/root>(Action)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(sie) <ROOT> <3:NOUN/nsubj>(Gangs)\
    \ <4:VERB/root>(besch\xFCtzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - dep
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(werden) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:NOUN/dep>(Sachen) <6:ADP/case>(\xFCber) <7:PRON/obl>(mich) <8:VERB/root>(behauptet)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/nsubj>(ich)\
    \ <5:VERB/ccomp>(h\xE4tte) <6:ADV/advmod>(mega) <ROOT> <7:NOUN/root>(Panik)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(es) <3:AUX/root>(war) <4:ADV/advmod>(auch)
    <ROOT> <5:NOUN/root>(Panik) <6:SCONJ/mark>(als) <7:PRON/nsubj>(es) <8:ADV/advmod>(dann)
    <9:VERB/advcl>(geklingelt) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - obj
  - !!python/tuple
    - 4
    - 10
    - obj
  - !!python/tuple
    - 5
    - 10
    - aux
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(gibt) <ROOT> <3:NOUN/obj>(G\xE4rten)\
    \ <4:PRON/obj>(die) <5:AUX/aux>(kann) <6:PRON/nsubj>(man) <7:PART/advmod>(nicht)\
    \ <8:DET/det>(mehr) <9:NOUN/obj>(G\xE4rten) <10:VERB/root>(nennen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: "<1:PART/advmod>(Nicht) <2:SCONJ/root>(dass) <3:PRON/nsubj>(wir) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/root>(Draufg\xE4nger) <6:AUX/cop>(w\xE4ren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: <1:ADV/advmod>(Heute) <2:VERB/root>(geht) <3:NOUN/nsubj>(s) <4:ADV/advmod>(darum)
    <5:ADP/mark>(wie) <ROOT> <6:NOUN/root>(Sachen) <7:PRON/nsubj>(du) <8:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <3:ADV/advmod>(ja) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(Angst) <6:ADP/case>(vor) <7:PRON/nmod>(dir)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(brauchen) <2:PRON/nsubj>(wir) <3:PART/advmod>(nicht) <4:ADV/advmod>(noch)
    <5:ADV/advmod>('n) <6:ADJ/obl>(paar) <ROOT> <7:NOUN/root>(Features)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det:poss>(meinen) <3:NOUN/obl>(Texten) <4:VERB/root>(hab)
    <6:PRON/nsubj>(ich) <7:ADV/advmod>(so) <ROOT> <8:NOUN/root>(Fantasien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(interessiere) <3:PRON/obj>(mich) <4:ADV/advmod>(nur)\
    \ <5:ADP/case>(f\xFCr) <6:PROPN/nmod>(4D's) <7:ADJ/advmod>(enorm) <ROOT> <8:NOUN/root>(Loops)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/root>(Dieses) <ROOT> <2:NOUN/obj>(Doppelleben) <3:PART/mark>(zu)\
    \ <4:VERB/root>(f\xFChren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(seid) <3:ADV/advmod>(ja) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(seid) <3:ADV/advmod>(ja) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(wollt) <ROOT> <3:NOUN/nsubj>(Reimketten)
    <4:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  sentence: "<ROOT> <1:NOUN/nsubj>(M\xE4nner) <2:VERB/root>(haben) <3:DET/det>(kein)\
    \ <4:ADJ/obj>(verkacktes)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Was) <3:X/dep>(ne) <ROOT> <4:NOUN/root>(Welt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Was) <3:X/dep>(ne) <ROOT> <4:NOUN/root>(Welt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADJ/amod>(500er) <2:NOUN/nsubj>(Benzes) <3:AUX/root>(sind) <ROOT> <4:NOUN/root>(Autos)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(Wirklich) <2:DET/root>(eine) <ROOT> <3:NOUN/root>(Ver\xE4\
    nderung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(\xE4h) <2:ADJ/amod>(fantastische) <3:PROPN/nsubj>(Erdogan)\
    \ <4:ADP/case>(in) <5:PROPN/nmod>(Istanbul) <6:DET/root>(eine) <ROOT> <7:NOUN/dep>(Klatsche)\
    \ <8:VERB/root>(kassiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(empfinde) <3:PRON/nsubj>(es) <4:ADP/xcomp>(als)
    <ROOT> <5:NOUN/root>(Form) <6:DET/det>(der) <7:NOUN/nmod>(Unehrlichkeit) <8:CCONJ/cc>(und)
    <9:NOUN/conj>(Feigheit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(warum) <2:DET/nsubj>(dieser) <ROOT> <3:NOUN/root>(Hass)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - dep
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 9
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/root>(durch) <ROOT> <2:NOUN/dep>(Heldentaten) <3:ADV/advmod>(wieder)
    <4:NOUN/obj>(Inspiration) <5:ADP/case>(in) <6:DET/det>(die) <7:NOUN/obl>(Birne)
    <8:PART/mark>(zu) <9:VERB/root>(ballern)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: "<1:ADV/advmod>(so) <2:DET/root>(eine) <ROOT> <3:NOUN/obj>(Aufmerksamkeit)\
    \ <4:VERB/root>(generieren) <5:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:SCONJ/root>(weil) <2:PRON/obj>(sich) <3:ADP/case>(\xFCber) <4:DET/det>(die)\
    \ <5:NOUN/obl>(Jahre) <6:ADV/advmod>(ne) <ROOT> <7:NOUN/dep>(Szene) <8:VERB/root>(entwickelt)\
    \ <9:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - acl
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:NOUN/root>(Nachrichten) <3:PRON/obj>(die)
    <4:PRON/nsubj>(er) <5:ADV/advmod>(hier) <6:VERB/acl>(bekommt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 1
    - advcl
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 11
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADJ/root>(Gut) <2:CCONJ/cc>(aber) <3:SCONJ/advcl>(bevor) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(da) <6:ADV/advmod>(zu) <7:ADV/advmod>(sehr) <8:ADP/case>(in) <9:ADV/advmod>(noch)
    <ROOT> <10:NOUN/dep>(Reviews) <11:VERB/root>(gehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(dachte) <3:ADV/advmod>(tats\xE4chlich)\
    \ <4:PRON/nsubj>(das) <5:VERB/ccomp>(w\xE4r) <6:ADV/advmod>(jetzt) <ROOT> <7:NOUN/root>(Euphorie)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <3:ADV/advmod>(voll) <ROOT> <4:NOUN/root>(Tracks)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(schon) <2:DET/root>(eine) <3:ADV/advmod>(sehr) <ROOT> <4:NOUN/root>(Entscheidung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux:pass
  - !!python/tuple
    - 4
    - 2
    - nsubj:pass
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 9
    - appos
  sentence: "<1:ADJ/advmod>(pannenfrei) <2:VERB/root>(abliefen) <3:AUX/aux:pass>(wurden)\
    \ <4:PRON/nsubj:pass>(sie) <5:ADP/case>(durch) <6:DET/obl>(ihre) <ROOT> <7:NOUN/root>(Absenz)\
    \ <8:ADP/case>(von) <9:NOUN/nmod>(Gef\xFChl) <10:NOUN/appos>(Menschlichkeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/dep>(Kiezlegende) <3:ADV/advmod>(gestern)
    <4:VERB/root>(geseh'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(schei\xDF) <3:ADP/case>(auf) <4:PRON/obl>(dich)\
    \ <5:CCONJ/cc>(und) <6:PRON/conj>(deine) <ROOT> <7:NOUN/root>(Bande)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - det
  - !!python/tuple
    - 3
    - 6
    - amod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cc
  sentence: "<1:SCONJ/mark>(weil) <2:DET/det>(eine) <3:ADJ/amod>(harmlose) <4:ADJ/advmod>(lustig)\
    \ <5:ADJ/amod>(gemeinte) <6:NOUN/root>(L\xFCge) <ROOT> <7:NOUN/obj>(Auswirkungen)\
    \ <8:VERB/root>(haben) <9:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:SCONJ/mark>(als) <2:VERB/root>(w\xE4rt) <3:DET/det:poss>(ihr) <4:NOUN/nsubj>(Hurens\xF6\
    hne) <ROOT> <5:NOUN/root>(Stars)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(haben) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Entwicklung)
    <5:ADP/case>(hinter) <6:PRON/nmod>(sich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/obj>(Was) <2:VERB/root>(machen) <3:PRON/nsubj>(wir) <4:ADP/case>(mit)
    <5:DET/det>(all) <6:DET/obl>(jenen) <7:DET/det>(die) <8:DET/obj>(diese) <ROOT>
    <9:NOUN/nsubj>(Diskriminierung) <10:VERB/root>(trifft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(das) <ROOT> <3:AUX/root>(ist) <4:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Vor) <2:PRON/obl>(mir) <3:VERB/root>(entstehen) <ROOT> <4:NOUN/root>(Muster)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - advcl
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - xcomp
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:DET/det>(ein) <4:NOUN/nsubj>(Mafiaboss)\
    \ <5:DET/det>(der) <6:NOUN/advcl>(Pr\xE4sident) <7:AUX/cop>(ist) <8:VERB/root>(sorgt)\
    \ <9:PRON/nsubj>(das) <10:ADV/advmod>(echt) <11:ADP/xcomp>(f\xFCr) <ROOT> <12:NOUN/root>(Stories)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(aber) <4:DET/root>(eine)
    <ROOT> <5:PROPN/root>(Challenge)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/root>(besonders) <ROOT> <2:NOUN/obj>(M\xF6glichkeiten) <3:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(ja) <3:PRON/nsubj>(es) <4:AUX/cop>(war)
    <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Tortur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/root>(sind) <3:ADV/advmod>(auch) <ROOT> <4:NOUN/nsubj>(Ver\xE4\
    nderungen) <5:DET/det>(Das) <6:NOUN/nmod>(Leben) <7:VERB/root>(ver\xE4ndert) <8:PRON/obj>(sich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - appos
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obj
  sentence: <1:ADV/advmod>(Ja) <2:DET/root>(eine) <ROOT> <3:NOUN/root>(Stimmung) <4:CCONJ/cc>(Aber)
    <5:PRON/nsubj>(es) <6:VERB/appos>(macht) <7:ADV/advmod>(auch) <8:DET/det>(ein)
    <9:DET/det>(bisschen) <10:NOUN/obj>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Stars)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:ADP/case>(f\xFCr) <4:X/root>(ne) <ROOT> <5:PROPN/root>(Diva)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <4:ADV/root>(ne) <ROOT> <5:PROPN/root>(Diva)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:ADP/case>(f\xFCr) <4:X/root>(ne) <ROOT> <5:PROPN/root>(Diva)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(schreibt) <2:ADV/advmod>(schon) <3:ADV/advmod>(wieder) <ROOT>
    <4:NOUN/root>(Reviews)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 9
    - amod
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 3
    - obj
  sentence: "<1:NOUN/root>(Derbe) <ROOT> <2:NOUN/nsubj>(Texte) <3:VERB/root>(sicherten)\
    \ <4:PRON/obl:arg>(mir) <5:ADJ/amod>(Erste) <7:NOUN/compound>(Klasse) <9:NOUN/obj>(Pl\xE4\
    tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - obj
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - advcl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/obj>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(einfach) <4:ADV/advmod>(schon)\
    \ <5:ADV/advmod>(relativ) <6:ADV/advmod>(fr\xFCh) <7:VERB/root>(gemerkt) <8:AUX/aux>(habe)\
    \ <9:SCONJ/mark>(nachdem) <10:DET/nsubj>(diese) <11:ADJ/advcl>(super) <ROOT> <12:NOUN/root>(Verliebtheitsphase)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 12
    - dep
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 12
    - nmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Frauenbild) <3:VERB/root>(spielt) <4:DET/obj>(eine)
    <5:ADJ/advmod>(ganz) <ROOT> <6:NOUN/dep>(Rolle) <7:ADP/case>(bei) <8:DET/det>(dem)
    <9:NOUN/nmod>(Thema) <10:ADJ/amod>(selbstbestimmte) <11:NOUN/nsubj>(Beziehung)
    <12:ADJ/root>(selbstbestimmte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Viecher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(waren) <3:ADV/advmod>(einfach) <4:ADV/advmod>(immer)
    <ROOT> <5:NOUN/compound>(Momente) <7:NOUN/root>(Total)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(sondern) <2:ADV/advmod>(auch) <3:ADV/advmod>(einfach) <4:NOUN/root>(ne)
    <ROOT> <5:NOUN/root>(Motivation)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(die) <2:ADV/advmod>(besonders) <ROOT> <3:NOUN/nsubj>(Inhalte)
    <4:VERB/root>(zeigen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(jetzt) <3:VERB/root>(kommt) <4:DET/det>(die)
    <5:ADJ/advmod>(ganz) <ROOT> <6:PROPN/root>(Hook)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Nur) <2:DET/det>(diese) <3:ADJ/amod>(chemischen) <4:NOUN/nsubj>(Prozesse)
    <5:AUX/cop>(sind) <6:PART/advmod>(nicht) <7:ADV/advmod>(ganz) <8:ADJ/root>(einfach)
    <9:CCONJ/cc>(und) <10:PRON/nsubj>(sie) <11:VERB/conj>(erfordern) <12:ADJ/advmod>(richtig)
    <ROOT> <13:PROPN/root>(Skills)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - csubj
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(so) <4:DET/obj>(viele)
    <ROOT> <5:NOUN/root>(Schicksale) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ich) <8:ADJ/csubj>(froh)
    <9:AUX/cop>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - acl
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:ADV/advmod>(nat\xFCrlich) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(Aufgabe) <6:PRON/obj>(die) <7:DET/det>(alle) <8:NOUN/nsubj>(Beteiligten)\
    \ <9:VERB/acl>(stemmen) <10:AUX/aux>(mussten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:PROPN/nsubj>(Party) <3:NOUN/root>(grad)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:PROPN/nsubj>(Party) <3:NOUN/root>(grad)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(so) <2:X/root>(ne) <ROOT> <3:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/root>(Attitude) <4:X/dep>(ne) <ROOT> <5:ADJ/root>(abgefuckte)
    <7:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/det>(eine)\
    \ <5:ADJ/root>(extrem) <ROOT> <6:ADJ/amod>(psychische) <7:NOUN/root>(St\xF6rung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:NOUN/root>(Krieg) <2:SCONJ/mark>(ob) <3:DET/obj>(diese) <ROOT> <4:NOUN/nsubj>(Karre)
    <5:ADV/advmod>(wirklich) <6:ADV/advmod>(auch) <7:DET/det:poss>(mein) <8:NOUN/root>(Firmenwagen)
    <9:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 3
    - acl
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(er) <ROOT> <3:NOUN/root>(Erfahrungen)\
    \ <4:AUX/aux>(hat) <5:CCONJ/cc>(und) <6:PRON/obj>(sich) <7:PART/advmod>(nicht)\
    \ <8:VERB/xcomp>(einsch\xFCchtern) <9:VERB/acl>(l\xE4sst)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - aux
  - !!python/tuple
    - 10
    - 7
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 7
    - advmod
  sentence: "<1:SCONJ/root>(Wenn) <2:PRON/nsubj>(ich) <ROOT> <3:PROPN/nsubj>(Moves)\
    \ <4:VERB/root>(mache) <5:CCONJ/cc>(und) <6:PRON/nsubj>(er) <7:VERB/conj>(wei\xDF\
    ) <8:PRON/obj>(das) <9:AUX/aux>(kann) <10:PRON/nsubj>(ich) <11:PART/advmod>(nicht)\
    \ <12:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:ADV/advmod>(noch) <4:ADV/advmod>(mehr)
    <ROOT> <5:NOUN/dep>(Bilder) <6:VERB/root>(gefunden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(es) <2:VERB/root>(z\xE4hlt) <3:PRON/nsubj>(der) <ROOT>\
    \ <4:NOUN/root>(Arsch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj:pass
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: "<1:DET/root>(Dieses) <ROOT> <2:NOUN/nsubj>(Missverh\xE4ltnis) <3:AUX/cop>(war)\
    \ <4:ADV/advmod>(auch) <5:ADV/advmod>(darin) <6:VERB/root>(zur\xFCckzuf\xFChren)\
    \ <7:SCONJ/mark>(dass) <8:DET/det>(die) <9:NOUN/nsubj:pass>(Nazitruppen) <10:ADV/advmod>(selbst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 2
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 9
    - flat
  sentence: "<1:DET/det>(Das) <2:NOUN/root>(Einzige) <3:PRON/obj>(was) <4:PRON/nsubj>(sie)\
    \ <5:VERB/acl>(t\xF6ten) <6:AUX/aux>(kann) <7:AUX/cop>(ist) <8:PRON/nsubj>(das)\
    \ <ROOT> <9:PROPN/root>(Monado) <11:NOUN/flat>(Schwert)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <2:PRON/nsubj>(Er) <3:VERB/root>(hat) <4:PRON/obl:arg>(mir) <5:ADV/advmod>(davor)
    <6:ADJ/advmod>(richtig) <ROOT> <7:NOUN/dep>(Tipps) <8:VERB/root>(gegeben)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(mal) <7:X/root>(ne) <ROOT> <8:NOUN/root>(Zahl)
    <9:ADV/advmod>(Auch) <10:ADP/case>(in) <11:DET/det>(der) <12:NOUN/nmod>(Werbung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(auch) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(S\xFCdwand)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(hatte) <4:ADV/advmod>(auch)
    <ROOT> <5:NOUN/root>(Erlebnisse)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:PRON/root>(Was) <2:PRON/nsubj>(ich) <3:ADV/advmod>(ja) <ROOT> <4:VERB/root>(finde)
    <5:AUX/aux>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(Obwohl) <2:PRON/obj>(uns) <3:DET/det>(die) <4:NOUN/obj>(Gegenwart)
    <ROOT> <5:NOUN/nsubj>(Grafikbretter) <6:ADP/case>(vor) <7:DET/det>(den) <8:NOUN/obl>(Latz)
    <9:VERB/root>(knallt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 5
    - 6
    - compound
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <ROOT> <4:NOUN/compound>(Mobbin)
    <6:NOUN/obj>(Erfahrungen) <7:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Geschichte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - det
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: <1:ADV/advmod>(So) <2:X/root>(ne) <ROOT> <3:NOUN/root>(Konkurrenz) <4:DET/det>(alle)
    <5:ADP/case>(in) <6:DET/det>(derselben) <7:NOUN/nmod>(Kategorie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:VERB/root>(gibt) <ROOT> <3:ADJ/root>(gesellschaftliche)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Komm) <2:PRON/obl:arg>(mir) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:NOUN/root>(Szene)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(verzichtet) <3:ADP/compound:prt>(auf)\
    \ <ROOT> <4:NOUN/root>(Blo\xDFstellungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Pflanze) <3:VERB/root>(hat) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/root>(Knospe)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(wir) <3:VERB/root>(haben) <4:ADV/advmod>(einfach)
    <5:DET/obj>(eine) <6:ADV/advmod>(sehr) <7:ADV/advmod>(sehr) <ROOT> <8:NOUN/root>(Freundschaft)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 8
    - obl
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Von) <2:ADP/case>(wegen) <3:PRON/obl>(du) <4:CCONJ/cc>(und)\
    \ <5:DET/det:poss>(deine) <6:NOUN/conj>(Freunde) <7:PRON/obj>(ihr) <8:VERB/root>(seid)\
    \ <ROOT> <9:NOUN/root>(S\xE4ufer)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - compound
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 11
    - nummod
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - dep
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/compound>(Hitze) <7:X/dep>(Ja) <8:NUM/nummod>(220\xB0) <10:NUM/nummod>(220)\
    \ <11:NOUN/root>(\xB0) <12:X/dep>(wow)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <ROOT> <3:NOUN/root>(Langeweile)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:PROPN/nsubj>(Fuck) <2:DET/det>(Ein) <3:ADJ/amod>(extremer) <4:NOUN/nsubj>(Film)
    <5:DET/det>(eine) <6:ADJ/root>(absolut) <ROOT> <7:NOUN/root>(Tour) <8:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 6
    - dep
  sentence: "<1:VERB/root>(f\xE4llt) <2:PRON/nsubj>(sie) <3:ADV/advmod>(eben) <4:PART/advmod>(nicht)\
    \ <5:ADP/compound:prt>(durch) <ROOT> <6:NOUN/root>(Gewaltakte) <7:ADP/case>(in)\
    \ <8:PROPN/nmod>(Deutschland) <9:ADP/dep>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 6
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 11
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:ADP/case>(auf) <3:DET/det>(der) <4:DET/det>(anderen)\
    \ <5:NOUN/obl>(Seite) <6:VERB/root>(hatte) <7:PRON/nsubj>(ich) <8:ADV/advmod>(so)\
    \ <9:DET/obj>(dieses) <10:ADV/advmod>(ganz) <ROOT> <11:NOUN/root>(Gef\xFChl) <12:DET/det>(des)\
    \ <13:ADJ/amod>(innerlichen) <14:NOUN/nmod>(Widerstands)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - case
  sentence: <1:PRON/root>(Der) <ROOT> <2:ADP/case>(aus) <3:PROPN/root>(Thug) <4:ADP/case>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Sie) <2:VERB/root>(fragen) <3:PRON/obj>(mich) <4:PRON/obj>(was)\
    \ <5:PRON/nsubj>(ich) <6:VERB/ccomp>(g\xE4b\xB4) <7:ADP/case>(f\xFCr) <8:DET/obl>(meine)\
    \ <ROOT> <9:NOUN/root>(passion)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PROPN/root>(Plane) <2:PROPN/flat>(grade) <ROOT> <3:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det:poss>(Ihr) <2:NOUN/nsubj>(Pissbacken) <3:VERB/root>(macht)
    <4:PRON/obl:arg>(mir) <5:DET/advmod>(viel) <6:ADV/advmod>(zu) <7:ADJ/advmod>(lang)
    <8:ADP/compound:prt>(auf) <ROOT> <9:X/root>(Gs)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obl
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Gegensatz) <4:ADP/case>(zu)\
    \ <5:DET/det>(dem) <6:NOUN/nmod>(Park) <7:VERB/root>(finden) <8:PRON/nsubj>(wir)\
    \ <9:ADJ/advmod>(richtig) <ROOT> <10:PROPN/root>(M\xFCllecken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(habt) <ROOT> <3:NOUN/root>(Marketings)
    <4:CCONJ/cc>(und) <5:NOUN/conj>(Klickszahl)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:DET/det:poss>(ihrem) <3:ADJ/amod>(neusten) <4:NOUN/obl>(Bild)
    <5:ADP/case>(auf) <6:NOUN/nmod>(Instagram) <7:VERB/root>(zeigt) <8:PRON/nsubj>(sie)
    <9:DET/obj>(ihre) <ROOT> <10:NOUN/root>(Verwandlung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/root>(einzigen) <3:PRON/nsubj>(die) <4:ADV/advmod>(dagegen)\
    \ <5:VERB/acl>(anstinken) <6:AUX/aux>(sind) <ROOT> <7:NOUN/root>(Widerstandsk\xE4\
    mpfer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Messer) <3:VERB/root>(mache) <4:DET/obj>(eine)\
    \ <ROOT> <5:NOUN/root>(Schnittfl\xE4che)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:SCONJ/mark>(weil) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)\
    \ <5:PART/advmod>(nicht) <6:ADV/advmod>(mehr) <7:VERB/root>(gebraucht) <8:AUX/aux>(hab)\
    \ <9:DET/obj>(diese) <ROOT> <10:NOUN/root>(N\xE4he)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - xcomp
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADJ/xcomp>(klar) <3:PRON/nsubj>(sie) <4:VERB/root>(hat)
    <5:ADV/advmod>(auch) <6:ADV/advmod>(wirklich) <ROOT> <7:NOUN/obj>(Dinge) <8:VERB/root>(erlebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:ADJ/amod>(junge) <3:NOUN/dep>(Frauen) <4:ADP/case>(wie)
    <5:PROPN/nmod>(Lou) <ROOT> <6:NOUN/obj>(Dinge) <7:ADP/case>(vor) <8:DET/det>(der)
    <9:NOUN/obl>(Kamera) <10:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 3
    - nsubj:pass
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:PART/mark>(zu) <3:VERB/root>(\xFCberleben) <4:AUX/cop>(ist)\
    \ <5:DET/nsubj:pass>(eine) <ROOT> <6:PROPN/root>(Challenge)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - obj
  - !!python/tuple
    - 11
    - 6
    - advmod
  sentence: <1:VERB/root>(Habe) <2:PRON/nsubj>(ich) <3:ADV/advmod>(jetzt) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/dep>(Spielidee) <6:VERB/root>(geliefert) <7:CCONJ/cc>(und) <8:NOUN/conj>(Schlag)
    <9:ADV/advmod>(da) <10:PRON/obj>(nichts) <11:ADV/advmod>(draus)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 9
    - 5
    - flat
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(die) <3:VERB/root>(haben) <4:ADV/advmod>(jetzt)
    <ROOT> <5:PROPN/root>(Killer) <7:PROPN/flat>(Kraken) <9:PROPN/flat>(Wow)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:NOUN/root>(Mann) <3:AUX/aux>(Habe) <ROOT> <4:NOUN/root>(Weiber) <5:ADV/advmod>(so)
    <6:ADP/case>(wie) <7:PROPN/nmod>(Hermine)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:NOUN/root>(Mann) <3:AUX/aux>(Habe) <ROOT> <4:NOUN/root>(Weiber) <5:ADV/advmod>(so)
    <6:ADP/case>(wie) <7:PROPN/nmod>(Hermine)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:PRON/root>(Der) <ROOT> <2:ADJ/amod>(Banger) <3:NOUN/root>(Waffenh\xE4\
    ndler) <4:ADV/advmod>(auch) <5:ADP/case>(auf) <6:DET/det>(dem) <7:NOUN/nmod>(Schwarzmarkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 2
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  - !!python/tuple
    - 14
    - 13
    - flat
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - amod
  - !!python/tuple
    - 17
    - 11
    - nmod
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(kriege) <3:PRON/obj>(das) <4:ADV/advmod>(so)\
    \ <5:ADV/advmod>(ganz) <6:PART/advmod>(nicht) <7:ADP/case>(auf) <8:DET/det>(die)\
    \ <9:NOUN/obl>(Kette) <10:DET/obj>(diese) <ROOT> <11:NOUN/root>(Kritik) <12:ADP/case>(an)\
    \ <13:PROPN/nmod>(Dino) <14:PROPN/flat>(topm\xF6ller) <15:ADP/case>(auf) <16:PROPN/amod>(Social)\
    \ <17:PROPN/nmod>(Media)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - obj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - acl
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 3
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:DET/det>(die) <3:NOUN/root>(Geschichten) <4:PRON/obj>(die)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(vorher) <7:ADP/case>(von) <8:PRON/obl>(ihm)\
    \ <9:VERB/acl>(geh\xF6rt) <10:AUX/aux>(hatte) <11:AUX/cop>(waren) <12:ADV/advmod>(auch)\
    \ <13:ADV/advmod>(eher) <ROOT> <14:NOUN/root>(Sachen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - dep
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(nat\xFCrlich) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(Herausforderung) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man)\
    \ <8:DET/dep>(eine)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Sie) <2:AUX/aux>(haben) <3:DET/det:poss>(mein) <4:NOUN/obj>(Leben)\
    \ <5:ADV/advmod>(sehr) <6:VERB/root>(ver\xE4ndert) <7:ADP/case>(auf) <8:DET/obl>(eine)\
    \ <ROOT> <9:NOUN/root>(Weise)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - dep
  sentence: <1:VERB/root>(lesen) <2:ADV/advmod>(da) <3:AUX/cop>(sind) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(sehr) <ROOT> <6:NOUN/root>(Geschichten) <7:ADP/advmod>(mit) <8:ADP/dep>(bei)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - dep
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(weil) <2:DET/root>(eine) <ROOT> <3:NOUN/dep>(Kontrolle)\
    \ <4:ADP/case>(\xFCber) <5:DET/det>(die) <6:NOUN/nmod>(Arbeitenden) <7:VERB/root>(herrscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - conj
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(also) <4:NOUN/nsubj>(Job)
    <5:ADP/case>(bei) <6:PRON/nmod>(denen) <7:DET/nsubj>(eine) <ROOT> <8:NOUN/root>(Kontrolle)
    <9:CCONJ/cc>(und) <10:NOUN/conj>(Disziplinierung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(komm') <3:ADP/case>(nach) <4:DET/det>('nem)\
    \ <5:NOUN/obl>(Sabbatjahr) <6:ADV/compound:prt>(zur\xFCck) <7:CCONJ/cc>(und) <8:VERB/conj>(piss')\
    \ <9:ADJ/obj>(paar) <ROOT> <10:NOUN/root>(Parts)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(eine)\
    \ <ROOT> <5:NOUN/root>(Gr\xF6\xDFenordnung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ihr) <2:VERB/root>(w\xE4rt) <4:ADV/advmod>(ne) <ROOT>\
    \ <5:NOUN/root>(Gefahr)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:ADP/case>(zu) <3:DET/det>(dem) <4:NOUN/obl>(Beispiel)
    <5:VERB/root>(hab) <ROOT> <6:NOUN/root>(Angst) <7:ADP/case>(vor) <8:NOUN/nmod>(Spritzen)
    <9:CCONJ/cc>(und) <10:NOUN/conj>(Nadeln)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 8
    - dep
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/root>(Staatshaushalte) <2:NOUN/appos>(Instabilit\xE4t) <ROOT>\
    \ <3:NOUN/dep>(Ungleichheit) <4:CCONJ/cc>(und) <5:ADJ/advmod>(extem) <6:ADJ/amod>(hohe)\
    \ <7:NOUN/conj>(Lebenshaltungskosten) <8:VERB/root>(belasten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(Bis) <2:ADV/advmod>(jetzt) <3:AUX/cop>(sind) <4:PRON/nsubj>(das)\
    \ <5:DET/nsubj>(alles) <6:ADV/advmod>(ganz) <7:ADJ/root>(sch\xF6n) <ROOT> <8:NOUN/root>(Geschichten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 5
    - conj
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(zweitens) <3:VERB/root>(haben) <4:PRON/nsubj>(die)
    <ROOT> <5:NOUN/root>(Dysbalance) <6:CCONJ/cc>(und) <7:DET/det>(die) <8:ADJ/amod>(verfehlten)
    <9:NOUN/conj>(Anreize) <10:ADV/advmod>(auch) <11:ADV/advmod>(sehr) <12:ADJ/conj>(nachteilige)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(der) <3:ADJ/amod>(variierende) <4:NOUN/nsubj>(Stresspegel)
    <5:VERB/root>(entwickeln) <6:DET/obj>(eine) <ROOT> <7:NOUN/root>(Sogwirkung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Doch) <2:PRON/nsubj>(wir) <3:VERB/root>(interessieren) <4:PRON/obj>(uns)\
    \ <5:ADP/case>(in) <6:DET/det>(der) <7:PROPN/obl>(Cypher) <8:ADV/advmod>(nur)\
    \ <9:ADP/xcomp>(f\xFCr) <ROOT> <10:NOUN/root>(Flows)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/root>(euch) <3:ADV/advmod>(deshalb) <4:ADV/advmod>(auch)
    <5:ADP/compound:prt>(ohne) <ROOT> <6:NOUN/root>(Knobelkompetenz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - cc
  - !!python/tuple
    - 8
    - 2
    - cc
  sentence: "<ROOT> <1:NOUN/nsubj>(Spr\xFCnge) <2:VERB/root>(absolvieren) <3:ADJ/amod>(Hoch-)\
    \ <4:NOUN/obj>(geschwindigkeiten) <5:VERB/xcomp>(erzielen) <6:CCONJ/cc>(und) <7:CCONJ/cc>(und)\
    \ <8:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 3
    - acl
  sentence: "<1:DET/nsubj>(Eine) <2:ADJ/root>(richtig) <ROOT> <3:NOUN/root>(W\xF6\
    lbung) <4:PRON/nsubj>(die) <5:ADV/advmod>(auch) <6:ADJ/xcomp>(stabil) <7:VERB/acl>(bleibt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - dep
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 7
    - 3
    - flat
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/nsubj>(eine) <2:ADJ/root>(\xFCbertrieben) <ROOT> <3:PROPN/dep>(Borderlands)\
    \ <5:PROPN/flat>(Tech) <7:NOUN/flat>(Demo) <8:VERB/root>(pr\xE4sentiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADP/case>(auf) <3:ADV/advmod>(einmal) <4:VERB/root>(werden)
    <5:NOUN/nsubj>(Weiber) <ROOT> <6:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - mark
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Wie) <2:AUX/root>(war) <3:PRON/nsubj>(das) <4:ADP/case>(f\xFC\
    r) <5:PRON/obl>(euch) <6:SCONJ/mark>(dass) <7:PRON/obj>(ihr) <8:ADV/advmod>(da)\
    \ <9:ADV/advmod>(schon) <ROOT> <10:NOUN/obj>(Klickzahlen) <11:VERB/root>(hattet)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(was) <3:ADV/advmod>(hier) <4:VERB/root>(passierte)
    <5:AUX/aux>(war) <6:PRON/nsubj>(das) <ROOT> <7:NOUN/root>(Gegenteil)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:AUX/cop>(Ist) <2:PRON/obl:arg>(ihm) <3:ADJ/root>(schei\xDFegal) <4:AUX/aux>(hat)\
    \ <5:PRON/nsubj>(er) <6:VERB/ccomp>(gesagt) <7:PROPN/amod>(Krasser) <8:NOUN/obj>(Typ)\
    \ <ROOT> <9:NOUN/root>(Nummer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - dep
  - !!python/tuple
    - 7
    - 13
    - dep
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADP/case>(Vor) <2:NOUN/obl>(kurzem) <3:AUX/root>(habe) <4:PRON/nsubj>(ich)
    <5:PRON/obj>(euch) <6:NUM/dep>(50) <ROOT> <7:NOUN/dep>(Fakten) <8:ADP/case>(zu)
    <9:DET/det>(den) <10:NOUN/nmod>(Kampfdroiden) <11:DET/det>(der) <12:NOUN/nmod>(Separatisten)
    <13:VERB/root>(vorgestellt)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - ccomp
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - expl
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 6
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - nmod
  - !!python/tuple
    - 14
    - 13
    - nmod
  sentence: "<1:NOUN/nsubj>(Truppen) <2:ADP/case>(in) <3:DET/det>(den) <4:NOUN/nmod>(Klonkriegen)\
    \ <5:AUX/ccomp>(waren) <6:VERB/root>(gibt) <7:PRON/expl>(es) <8:ADV/advmod>(heute)\
    \ <9:NUM/xcomp>(50) <ROOT> <10:NOUN/root>(Fakten) <11:ADP/case>(\xFCber) <12:DET/det>(die)\
    \ <13:NOUN/nmod>(Klontruppen) <14:PRON/nmod>(der)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 13
    - cc
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 13
    - aux
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 13
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 5
    - conj
  - !!python/tuple
    - 14
    - 13
    - cc
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/nsubj>(er) <3:AUX/root>(kann) <ROOT> <4:NOUN/nsubj>(Man\xF6\
    ver) <5:VERB/root>(ausf\xFChren) <6:CCONJ/cc>(und) <7:PRON/nsubj>(er) <8:AUX/aux>(muss)\
    \ <9:DET/det>(keine) <10:NOUN/obj>(Angst) <11:ADP/case>(vorm) <12:NOUN/nmod>(Sterben)\
    \ <13:VERB/conj>(haben) <14:CCONJ/cc>(aber)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 11
    - dep
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 11
    - nmod
  sentence: <1:ADP/case>(Mit) <2:NUM/obl>(880) <3:PRON/nsubj>(ich) <4:VERB/root>(finde)
    <5:PRON/expl>(es) <6:ADV/advmod>(so) <7:DET/obj>(eine) <ROOT> <8:NOUN/dep>(Zahl)
    <9:NUM/nummod>(880) <10:NOUN/nmod>(Millionen) <11:NOUN/root>(Klicks) <12:ADP/case>(auf)
    <13:DET/det:poss>(seine) <14:NOUN/nmod>(Videos)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  sentence: "<1:PRON/nsubj>(was) <2:PRON/root>(das) <3:ADV/advmod>(insgesamt) <4:ADP/case>(f\xFC\
    r) <5:DET/nmod>(eine) <ROOT> <6:ADJ/amod>(weltweite) <7:NOUN/root>(Superkraft)\
    \ <8:AUX/cop>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(schreibe) <2:ADJ/obj>(paar) <ROOT> <3:NOUN/root>(Tracks)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Nenn) <2:PRON/obj>(mir) <3:NUM/obj>(sechs) <ROOT> <4:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hasse) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:ADJ/root>(Ganz) <ROOT> <2:NOUN/dep>(Sache) <3:VERB/root>(Schaut) <4:ADV/advmod>(gerne)
    <5:ADV/advmod>(rein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - appos
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(rechnest) <ROOT> <3:NOUN/root>(Sachen)\
    \ <4:PRON/nsubj>(Was) <5:AUX/cop>(ist) <6:DET/det:poss>(deine) <7:ADJ/amod>(gro\xDF\
    e) <8:NOUN/appos>(St\xE4rke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/amod>(Fette) <2:NOUN/obj>(Wummen) <3:ADJ/amod>(coole) <4:NOUN/root>(Kamerafahrten)
    <ROOT> <5:NOUN/root>(Action)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - mark
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 13
    - advcl
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - ccomp
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - obj
  - !!python/tuple
    - 16
    - 13
    - advmod
  - !!python/tuple
    - 17
    - 13
    - obj
  - !!python/tuple
    - 18
    - 19
    - case
  - !!python/tuple
    - 19
    - 21
    - nmod
  - !!python/tuple
    - 20
    - 21
    - det
  - !!python/tuple
    - 21
    - 17
    - acl
  - !!python/tuple
    - 22
    - 21
    - cop
  - !!python/tuple
    - 23
    - 27
    - cc
  - !!python/tuple
    - 24
    - 25
    - advmod
  - !!python/tuple
    - 25
    - 27
    - advmod
  - !!python/tuple
    - 26
    - 27
    - nsubj
  - !!python/tuple
    - 27
    - 13
    - conj
  - !!python/tuple
    - 28
    - 27
    - obj
  - !!python/tuple
    - 29
    - 27
    - advmod
  - !!python/tuple
    - 30
    - 31
    - nsubj
  - !!python/tuple
    - 31
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Als) <2:PRON/nsubj>(jemand) <3:PRON/nsubj>(der) <4:DET/obj>(viel)\
    \ <5:ADP/case>(in) <6:NOUN/nmod>(Umgebungen) <7:AUX/advcl>(ist) <8:ADV/advmod>(wo)\
    \ <9:DET/det>(andere) <10:NOUN/nsubj>(Stress) <11:VERB/ccomp>(erleben) <12:ADV/advmod>(also)\
    \ <13:VERB/root>(stellen) <14:PRON/nsubj>(wir) <15:PRON/obj>(uns) <16:ADV/advmod>(mal)\
    \ <17:PRON/obj>(jemand) <18:ADP/case>(vor) <19:PRON/nmod>(der) <20:DET/det>(ein)\
    \ <21:NOUN/acl>(Rettungssanit\xE4ter) <22:AUX/cop>(ist) <23:CCONJ/cc>(und) <24:ADV/advmod>(immer)\
    \ <25:ADV/advmod>(wieder) <26:NOUN/nsubj>(Leute) <27:VERB/conj>(sieht) <28:PRON/obj>(die)\
    \ <29:ADV/advmod>(wirklich) <ROOT> <30:NOUN/nsubj>(Situationen) <31:VERB/root>(erleben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 12
    - obj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 12
    - mark
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 16
    - mark
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 12
    - advcl
  - !!python/tuple
    - 17
    - 18
    - case
  - !!python/tuple
    - 18
    - 19
    - obl
  - !!python/tuple
    - 19
    - 16
    - xcomp
  - !!python/tuple
    - 20
    - 23
    - cc
  - !!python/tuple
    - 21
    - 23
    - advmod
  - !!python/tuple
    - 22
    - 23
    - advmod
  - !!python/tuple
    - 23
    - 19
    - conj
  - !!python/tuple
    - 24
    - 26
    - mark
  - !!python/tuple
    - 25
    - 26
    - mark
  - !!python/tuple
    - 26
    - 19
    - conj
  - !!python/tuple
    - 27
    - 33
    - cc
  - !!python/tuple
    - 28
    - 33
    - advmod
  - !!python/tuple
    - 29
    - 31
    - case
  - !!python/tuple
    - 30
    - 31
    - det
  - !!python/tuple
    - 31
    - 33
    - obl
  - !!python/tuple
    - 32
    - 33
    - mark
  - !!python/tuple
    - 33
    - 26
    - conj
  - !!python/tuple
    - 34
    - 42
    - advmod
  - !!python/tuple
    - 35
    - 42
    - aux
  - !!python/tuple
    - 36
    - 42
    - nsubj
  - !!python/tuple
    - 37
    - 38
    - case
  - !!python/tuple
    - 38
    - 42
    - obl
  - !!python/tuple
    - 39
    - 42
    - advmod
  - !!python/tuple
    - 40
    - 41
    - det
  - !!python/tuple
    - 41
    - 42
    - obj
  - !!python/tuple
    - 42
    - 12
    - conj
  sentence: "<1:ADV/advmod>(Nur) <2:PRON/obj>(das) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(so) <6:DET/obj>(eine) <ROOT> <7:NOUN/obj>(Erkenntnis) <8:ADP/case>(aus)\
    \ <9:DET/det>(der) <10:NOUN/nmod>(Forschung) <11:PART/mark>(zu) <12:VERB/root>(sagen)\
    \ <13:SCONJ/mark>(wenn) <14:PRON/nsubj>(ich) <15:PRON/obj>(es) <16:VERB/advcl>(schaffe)\
    \ <17:ADP/case>(aus) <18:DET/obl>(diesem) <19:VERB/xcomp>(mitsp\xFCren) <20:CCONJ/cc>(und)\
    \ <21:ADV/advmod>(damit) <22:ADV/advmod>(auch) <23:VERB/conj>(mitleiden) <24:ADV/mark>(raus)\
    \ <25:PART/mark>(zu) <26:VERB/conj>(kommen) <27:CCONJ/cc>(und) <28:ADV/advmod>(eher)\
    \ <29:ADP/case>(in) <30:DET/det>(das) <31:NOUN/obl>(Mitgef\xFChl) <32:PART/mark>(zu)\
    \ <33:VERB/conj>(gehen) <34:ADV/advmod>(dann) <35:AUX/aux>(kann) <36:PRON/nsubj>(es)\
    \ <37:ADP/case>(f\xFCr) <38:PRON/obl>(mich) <39:ADV/advmod>(auch) <40:PRON/det>(etwas)\
    \ <41:NOUN/obj>(Positives) <42:VERB/conj>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: "<1:PROPN/nsubj>(Boah) <2:ADV/advmod>(da) <3:AUX/cop>(waren) <4:ADJ/root>(nat\xFC\
    rlich) <ROOT> <5:NOUN/root>(Stellen) <6:ADV/advmod>(dabei)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:NOUN/root>(ne)
    <ROOT> <5:NOUN/root>(Leistung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 4
    - advcl
  - !!python/tuple
    - 10
    - 9
    - mark
  - !!python/tuple
    - 11
    - 9
    - nsubj
  sentence: "<ROOT> <1:NOUN/nsubj>(Dinge) <2:DET/det>(dieses) <3:NOUN/obl>(Jahr) <4:VERB/root>(abgegangen)\
    \ <5:AUX/aux>(sind) <6:SCONJ/mark>(W\xE4hrend) <7:PRON/nsubj>(wir) <8:NUM/obl>(2020)\
    \ <9:VERB/advcl>(bef\xFCrchteten) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(die)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 8
    - conj
  sentence: "<1:DET/det>(Diese) <2:NOUN/nsubj>(Bezeichnungen) <3:AUX/cop>(sind) <4:ADP/case>(f\xFC\
    r) <5:PROPN/nmod>(Lukas) <6:PART/advmod>(nicht) <7:ADV/advmod>(nur) <8:ADJ/root>(erniedrigend)\
    \ <9:CCONJ/cc>(sondern) <10:PRON/obj>(sie) <11:VERB/conj>(haben) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(hat) <ROOT> <4:NOUN/root>(Folgen)\
    \ <5:ADP/case>(f\xFCr) <6:DET/det>(den) <7:NOUN/nmod>(Rest) <8:DET/det>(des) <9:NOUN/nmod>(Landes)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:ADP/case>(an) <4:DET/det>(dem)
    <5:NOUN/obl>(Rande) <6:ADV/advmod>(nur) <ROOT> <7:NOUN/dep>(Beschimpfungen) <8:VERB/root>(mitgekriegt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - mark
  - !!python/tuple
    - 5
    - 2
    - expl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 2
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  - !!python/tuple
    - 12
    - 10
    - aux
  sentence: <1:ADV/advmod>(so) <2:VERB/root>(fixiert) <3:ADV/advmod>(darauf) <4:SCONJ/mark>(dass)
    <5:PRON/expl>(es) <6:ADV/advmod>(nur) <7:PRON/nsubj>(die) <8:DET/det>(die) <9:NOUN/obj>(harte)
    <ROOT> <10:NOUN/root>(Pornopenetration) <11:AUX/cop>(sein) <12:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:DET/det>(Die) <2:DET/nsubj>(meisten) <3:VERB/root>(haben) <4:DET/obj>(mehrere)
    <ROOT> <5:NOUN/root>(Storys) <6:ADP/case>(auf) <7:NOUN/nmod>(Lager)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 5
    - nmod
  sentence: <1:ADV/advmod>(Wie) <2:ADV/advmod>(so) <3:ADV/advmod>(ne) <4:ADJ/root>(ganz)
    <ROOT> <5:NOUN/root>(Leere) <6:CCONJ/cc>(und) <7:NOUN/conj>(Taubheit) <8:ADP/case>(in)
    <9:DET/det>(einem) <10:ADJ/nmod>(drin)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - mark
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 9
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 13
    - obj
  - !!python/tuple
    - 12
    - 13
    - mark
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(man) <3:ADV/advmod>(gerade) <4:ADP/case>(in)
    <5:NOUN/obl>(Gruppen) <6:ADP/case>(mit) <7:NOUN/obl>(Gruppendruck) <8:ADV/advmod>(dazu)
    <9:VERB/root>(neigt) <10:ADV/advmod>(sehr) <ROOT> <11:NOUN/obj>(Sachen) <12:PART/mark>(zu)
    <13:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:CCONJ/root>(und) <ROOT> <2:ADJ/amod>(k\xF6rperliche) <3:NOUN/root>(Symptome)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/cop>(ist) <3:ADV/advmod>(eben) <4:NOUN/root>(ne)
    <ROOT> <5:NOUN/root>(Wolke)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Geschichte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Damit) <2:AUX/root>(habe) <3:PRON/nsubj>(ich) <ROOT> <4:NOUN/root>(\xDC\
    berdosierungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 11
    - obj
  - !!python/tuple
    - 4
    - 11
    - aux
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(So) <2:DET/root>(eine) <ROOT> <3:NOUN/obj>(Di\xE4t) <4:AUX/aux>(sollte)\
    \ <5:PRON/nsubj>(man) <6:ADV/advmod>(aber) <7:ADV/advmod>(nur) <8:ADP/case>(mit)\
    \ <9:ADJ/amod>(\xE4rztlicher) <10:NOUN/obl>(Begleitung) <11:VERB/root>(tun)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - nsubj:pass
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 9
    - aux:pass
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: <1:DET/root>(Diese) <ROOT> <2:NOUN/nsubj:pass>(Inszenierung) <3:ADP/case>(von)
    <4:NOUN/nmod>(Macht) <5:AUX/aux:pass>(wurde) <6:ADV/advmod>(sogar) <7:ADP/case>(auf)
    <8:NOUN/obl>(Video) <9:VERB/root>(festgehalten) <10:CCONJ/cc>(und) <11:VERB/conj>(ging)
    <12:ADJ/advmod>(viral)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(wollte) <3:VERB/root>(wissen) <4:ADV/advmod>(woher)
    <5:DET/obj>(dieser) <ROOT> <6:NOUN/nsubj>(Unterschied) <7:VERB/root>(kommt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 9
    - dep
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/root>(W\xE4re) <2:PROPN/nsubj>(Simon) <3:ADP/case>(in) <4:DET/obl>(eine)\
    \ <ROOT> <5:NOUN/dep>(Depression) <6:CCONJ/cc>(oder) <7:AUX/aux>(w\xE4re) <8:PRON/nsubj>(ich)\
    \ <9:VERB/root>(abgerutscht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 7
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - xcomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/nmod>(viele) <3:VERB/root>(w\xFCrde) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(aber) <6:ADV/advmod>(schon) <7:DET/xcomp>(eine) <ROOT> <8:NOUN/nsubj>(Einschr\xE4\
    nkung) <9:VERB/root>(bedeuten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nmod
  sentence: <1:VERB/root>(erlebt) <ROOT> <2:NOUN/root>(Geschichten) <3:NOUN/appos>(Zeug)
    <4:ADP/case>(zu) <5:DET/det>(dem) <6:NOUN/nmod>(Verfilmen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADV/advmod>(Tja) <2:DET/root>(diese) <ROOT> <3:NOUN/nsubj>(Anomalie)
    <4:VERB/root>(zeigt) <5:SCONJ/mark>(dass) <6:ADV/advmod>(hier) <7:PRON/nsubj>(irgendwas)
    <8:ADV/advmod>(verdammt) <9:ADJ/ccomp>(faul) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:VERB/root>(bringe) <ROOT> <2:NOUN/root>(Melodien)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(Bringe) <ROOT> <2:NOUN/root>(Melodien)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advcl
  sentence: <1:DET/root>(Eine) <ROOT> <2:NOUN/root>(Leistung) <3:SCONJ/mark>(wenn)
    <4:PRON/nsubj>(man) <5:VERB/advcl>(bedenkt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(siehst) <3:PRON/nsubj>(es) <4:VERB/ccomp>(gibt)\
    \ <5:ADV/advmod>(ganz) <6:ADJ/xcomp>(sch\xF6n) <ROOT> <7:NOUN/root>(Exoplaneten)"
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <2:PROPN/nsubj>(Nasti) <3:AUX/cop>(ist) <4:PRON/root>(der) <ROOT> <5:NOUN/root>(Hacker)
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - aux
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <2:ADV/advmod>(So) <3:ADP/case>(bis) <4:ADP/case>(auf) <5:PRON/root>(das)
    <ROOT> <6:PROPN/nsubj>(Hacking) <7:AUX/aux>(hat) <8:DET/det:poss>(unser) <9:NOUN/obj>(Team)
    <10:DET/det>(alles) <11:NOUN/obj>(Wichtige) <12:VERB/root>(gelernt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 12
    - cop
  - !!python/tuple
    - 12
    - 2
    - obj
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:ADV/advmod>(auch) <4:ADV/advmod>(echt)\
    \ <5:ADP/case>(an) <6:DET/det>(dem) <7:DET/det>(aller) <8:ADJ/obl>(beeindruckendsten)\
    \ <9:ADP/case>(an) <10:PRON/nmod>(dir) <11:AUX/cop>(ist) <12:PRON/obj>(was) <13:ADP/case>(f\xFC\
    r) <14:DET/nmod>(eine) <ROOT> <15:NOUN/root>(Lebensfreude)"
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - cop
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 9
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 15
    - cc
  - !!python/tuple
    - 11
    - 15
    - cop
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 9
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/nsubj>(das) <3:ADP/case>(bei) <4:DET/nmod>(vielen)
    <5:ADP/case>(von) <6:DET/det:poss>(ihren) <7:NOUN/nmod>(Aussteigern) <8:DET/det>(der)
    <9:NOUN/root>(Fall) <10:CCONJ/cc>(oder) <11:AUX/cop>(ist) <12:PROPN/nsubj>(Vanessa)
    <13:ADV/advmod>(jetzt) <14:ADV/advmod>(echt) <15:DET/conj>(eine) <ROOT> <16:NOUN/root>(Ausnahme)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:NOUN/nsubj>(Wahlkampf) <3:AUX/cop>(ist) <4:ADV/advmod>(sehr)
    <5:ADJ/root>(hart) <ROOT> <6:NOUN/root>(Lebensumstellung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 4
    - acl
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(sind) <3:ADV/root>(halt) <ROOT> <4:NOUN/root>(Erinnerungen)
    <5:PRON/nsubj>(die) <6:PRON/obj>(sich) <7:VERB/acl>(einbrennen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advcl
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/obj>(was) <2:PRON/nsubj>(man) <3:ADV/advmod>(da) <4:VERB/root>(machen)
    <5:AUX/aux>(kann) <6:SCONJ/mark>(weil) <7:ADV/advmod>(da) <8:AUX/advcl>(sind)
    <9:ADV/advmod>(so) <ROOT> <10:NOUN/root>(Leute)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: <1:ADJ/root>(total) <ROOT> <2:NOUN/root>(Jugendarbeit) <3:CCONJ/cc>(und)
    <4:PRON/conj>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 16
    - case
  - !!python/tuple
    - 13
    - 16
    - amod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - amod
  - !!python/tuple
    - 16
    - 11
    - nmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 16
    - nmod
  sentence: <1:DET/det>(Der) <2:NOUN/nsubj>(Typ) <3:VERB/root>(macht) <4:ADP/case>(seit)
    <5:NOUN/obl>(Jahren) <ROOT> <6:NOUN/nsubj>(Filme) <7:VERB/root>(hat) <8:ADV/advmod>(immer)
    <9:ADV/advmod>(wieder) <10:ADJ/amod>(komische) <11:NOUN/obj>(Geschichten) <12:ADP/case>(mit)
    <13:DET/amod>(viel) <14:ADP/case>(zu) <15:ADJ/amod>(jungen) <16:NOUN/nmod>(Frauen)
    <17:ADP/case>(an) <18:DET/det>(dem) <19:NOUN/nmod>(Laufen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADV/root>(trotzdem) <ROOT> <3:NOUN/nsubj>(Schwierigkeiten)
    <4:ADP/case>(in) <5:PROPN/nmod>(Mathe) <6:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:VERB/root>(haben) <2:PRON/nsubj>(sie) <ROOT> <3:NOUN/root>(Schwierigkeiten)
    <4:ADP/case>(bei) <5:DET/det>(den) <6:NOUN/nmod>(Grundrechenarten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(aber) <4:ADV/advmod>(auch)
    <5:NOUN/nsubj>(Betroffene) <6:PRON/nsubj>(die) <7:ADV/advmod>(weniger) <ROOT>
    <8:NOUN/nsubj>(Probleme) <9:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:NOUN/nsubj>(Probleme) <3:ADP/case>(mit) <4:NOUN/nmod>(Zahlen)
    <5:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 11
    - cc
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - cop
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 3
    - nsubj
  sentence: <1:ADV/advmod>(wirklich) <2:DET/root>(eine) <ROOT> <3:NOUN/root>(Entwicklung)
    <4:ADV/advmod>(da) <5:CCONJ/cc>(und) <6:ADV/advmod>(deshalb) <7:AUX/cop>(war)
    <8:ADV/advmod>(jetzt) <9:ADV/advmod>(nur) <10:DET/det>(die) <11:NOUN/nsubj>(Frage)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 12
    - dep
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADV/advmod>(trotzdem) <2:ADV/advmod>(richtig) <3:ADJ/amod>(guter) <4:NOUN/root>(Wettkampf)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(du) <7:VERB/conj>(hast) <8:ADV/advmod>(trotzdem)
    <9:DET/det>(eine) <10:ADJ/obj>(super) <ROOT> <11:NOUN/dep>(Leistung) <12:VERB/root>(gebracht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wollte) <3:ADV/advmod>(jetzt) <4:PART/advmod>(nicht)
    <5:DET/obj>(dieses) <ROOT> <6:NOUN/dep>(Beispiel) <7:VERB/root>(verwenden)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 11
    - dep
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PROPN/nsubj>(GB) <2:CCONJ/cc>(und) <3:DET/det:poss>(seine) <4:NOUN/conj>(Jungs)
    <5:VERB/root>(haben) <6:DET/det>(alle) <7:NOUN/obj>(ne) <ROOT> <8:NOUN/dep>(Lebensgeschichte)
    <9:DET/det>(Wenig) <10:NOUN/obj>(Chancen) <11:VERB/root>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Aufgabe)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Formulierung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 7
    - obj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(der) <2:NOUN/nsubj>(Mann) <3:VERB/root>(hat) <4:ADV/compound:prt>(ne)\
    \ <ROOT> <5:NOUN/obj>(Lebensgeschichte) <6:PART/mark>(zu) <7:VERB/root>(erz\xE4\
    hlen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cc
  sentence: <1:PROPN/root>(Wow) <ROOT> <2:NOUN/root>(Geschichte) <3:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det>(der) <2:PROPN/root>(Boy) <3:ADP/case>(f\xFCr) <ROOT> <4:NOUN/root>(Dinger)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:DET/det:poss>(mein) <3:NOUN/nsubj>(Sohn) <4:PRON/root>(das)
    <ROOT> <5:NOUN/root>(Gegenteil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - dep
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Der) <2:VERB/root>(macht) <ROOT> <3:NOUN/dep>(Sachen) <4:ADP/case>(an)
    <5:PROPN/nmod>(Reck) <6:CCONJ/cc>(und) <7:PROPN/conj>(Barren) <8:NOUN/obl>(Mal)
    <9:VERB/root>(gucken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:NOUN/obl>(Vierertrupps) <3:VERB/root>(arbeiteten)\
    \ <4:CCONJ/cc>(und) <5:ADV/advmod>(sogar) <6:ADJ/amod>(eigene) <7:ADV/advmod>(sehr)\
    \ <ROOT> <8:NOUN/obj>(R\xFCstungen) <9:VERB/root>(hatten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/nsubj>(Politik) <3:VERB/root>(treffe) <4:ADV/advmod>(derzeit)
    <5:ADV/advmod>(auch) <ROOT> <6:NOUN/root>(Fehlentscheide)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Herausforderung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - obj
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - ccomp
  - !!python/tuple
    - 9
    - 14
    - mark
  - !!python/tuple
    - 10
    - 14
    - advmod
  - !!python/tuple
    - 11
    - 14
    - mark
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 8
    - advcl
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Telefon) <2:VERB/root>(beschlagnahmt) <3:PRON/obj>(was)
    <4:PRON/nsubj>(ich) <5:ADV/advmod>(auch) <6:ADV/advmod>(ziemlich) <7:ADV/advmod>(krass)
    <8:VERB/ccomp>(finde) <9:SCONJ/mark>(weil) <10:ADV/advmod>(also) <11:SCONJ/mark>(weil)
    <12:PRON/nsubj>(es) <13:ADV/advmod>(voll) <14:PRON/advcl>(der) <ROOT> <15:NOUN/root>(Eingriff)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Nummer) <6:ADP/case>(auf) <7:DET/det>(jeden) <8:NOUN/nmod>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/root>(eine) <2:ADV/advmod>(sehr) <3:ADV/advmod>(sehr) <4:ADV/advmod>(sehr)
    <ROOT> <5:ADJ/amod>(toxische) <6:NOUN/root>(Beziehung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - appos
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:PRON/obl:arg>(mir) <4:DET/obj>(keine)
    <ROOT> <5:NOUN/dep>(Story) <6:VERB/root>(ausgedacht) <8:ADV/appos>(nein)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:DET/det>(diese) <3:NOUN/nsubj>(Verschiebungen)\
    \ <4:ADP/root>(f\xFCr) <ROOT> <5:NOUN/obj>(Auswirkungen) <6:ADP/case>(auf) <7:DET/det>(die)\
    \ <8:NOUN/nmod>(Landschaft) <9:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - xcomp
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(wird) <2:DET/xcomp>(eine) <ROOT> <3:NOUN/dep>(Druckwelle)
    <4:VERB/root>(freigesetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - dep
  sentence: <1:ADV/advmod>(Hier) <2:VERB/root>(finden) <3:ADV/advmod>(oft) <ROOT>
    <4:NOUN/root>(Erdbeben) <5:ADP/dep>(statt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 11
    - nsubj
  - !!python/tuple
    - 3
    - 11
    - aux
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:DET/root>(Dieses) <ROOT> <2:NOUN/nsubj>(Missverh\xE4ltnis) <3:AUX/aux>(hat)\
    \ <4:DET/det>(das) <5:PROPN/amod>(Vereinigte) <6:PROPN/nsubj>(K\xF6nigreich) <7:ADV/advmod>(zudem)\
    \ <8:ADP/case>(von) <9:DET/det>(der) <10:NOUN/nmod>(Au\xDFenwelt) <11:ADJ/root>(abh\xE4\
    ngig)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 15
    - dep
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:CCONJ/cc>(und) <3:ADV/advmod>(dann) <4:VERB/root>(setzt)
    <5:PRON/nsubj>(er) <6:DET/det>(die) <7:NOUN/obj>(Brille) <8:ADP/compound:prt>(ab)
    <9:CCONJ/cc>(und) <10:PRON/nsubj>(er) <11:VERB/conj>(hat) <12:ADV/advmod>(so)
    <ROOT> <13:NOUN/dep>(Augen) <14:PRON/nsubj>(die) <15:VERB/root>(rauskommen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - obl
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - expl
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 8
    - xcomp
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - advmod
  sentence: "<1:ADP/case>(Mit) <2:DET/det>(anderen) <3:NOUN/obl>(Worten) <4:ADP/case>(Auf)\
    \ <5:DET/det>(der) <6:ADJ/amod>(ganzen) <7:NOUN/nmod>(Welt) <8:VERB/root>(gibt)\
    \ <9:PRON/expl>(es) <10:ADV/advmod>(nur) <11:ADV/advmod>(sehr) <12:DET/nsubj>(wenige)\
    \ <13:ADJ/xcomp>(\xE4hnlich) <ROOT> <14:NOUN/root>(Beispiele) <15:ADV/advmod>(daf\xFC\
    r)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - acl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - ccomp
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(ehrlich) <3:VERB/acl>(gesagt) <4:VERB/root>(finde)\
    \ <5:PRON/nsubj>(ich) <6:PRON/nsubj>(das) <7:AUX/ccomp>(sind) <8:ADV/advmod>(ziemlich)\
    \ <ROOT> <9:NOUN/root>(Vorw\xFCrfe)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:DET/det>(die) <3:NOUN/nsubj>(Vermutung) <4:AUX/root>(ist)
    <5:ADV/advmod>(halt) <6:SCONJ/mark>(dass) <7:DET/det>(die) <8:NOUN/nsubj>(Konzerne)
    <ROOT> <9:NOUN/root>(Materialschlachten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:INTJ/root>(Na) <2:ADV/advmod>(gut) <3:ADV/advmod>(daf\xFCr) <4:ADV/advmod>(aber)\
    \ <ROOT> <5:NOUN/root>(Helden)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 8
    - nummod
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 4
    - appos
  sentence: <1:AUX/cop>(Sind) <2:ADV/advmod>(halt) <3:ADJ/root>(richtig) <ROOT> <4:NOUN/root>(Effekte)
    <5:ADP/case>(drin) <6:NUM/nummod>(0) <7:NUM/nummod>(57) <8:NOUN/appos>(GB)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/root>(Beats)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/root>(Beats)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dieser) <3:NOUN/nmod>(Nacht) <4:AUX/cop>(ist)
    <5:PRON/nsubj>(es) <6:PRON/root>(das) <ROOT> <7:NOUN/root>(Gegenteil)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:VERB/root>(gibt) <2:PRON/nsubj>(es) <3:ADV/advmod>(zwar) <ROOT> <4:NOUN/root>(Derbys)
    <5:CCONJ/cc>(und) <6:ADJ/amod>(volle) <7:NOUN/conj>(Stadien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:NOUN/nsubj>(Drogen) <2:VERB/root>(spielen) <3:ADV/advmod>(noch) <4:DET/obj>(eine)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Rolle) <7:ADP/case>(bei) <8:PRON/nmod>(ihr)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Auf) <2:DET/det>(der) <3:ADJ/amod>(ersten) <4:NOUN/obl>(Aufnahme)
    <5:VERB/root>(sehen) <6:PRON/nsubj>(wir) <7:DET/obj>(eine) <ROOT> <8:NOUN/root>(Explosion)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(solche) <3:NOUN/nsubj>(Videos) <4:ADV/advmod>(so)
    <5:X/root>(ne) <ROOT> <6:NOUN/dep>(Reichweite) <7:VERB/root>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(hatte) <4:ADP/case>(\xFC\
    ber) <5:DET/det>(mehrere) <6:NOUN/obl>(Tage) <7:ADJ/advmod>(ganz) <ROOT> <8:NOUN/root>(Halsschmerzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/root>(das) <ROOT> <3:NOUN/compound>(Future)
    <5:NOUN/nsubj>(Motorrad) <6:ADP/case>(an) <7:DET/det>(jedem) <8:NOUN/obl>(Kieselstein)
    <9:VERB/root>(zerschellt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 2
    - cc
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Man) <2:VERB/root>(braucht) <3:ADV/advmod>(eigentlich)\
    \ <4:DET/det>(keine) <5:NOUN/obj>(Hektar) <6:ADJ/amod>(gro\xDFen) <7:NOUN/obj>(L\xF6\
    cher) <8:CCONJ/cc>(und) <9:NOUN/conj>(B\xFCrgerkriege) <10:CCONJ/cc>(und) <ROOT>\
    \ <11:NOUN/root>(Monopolisten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - obj
  sentence: <1:ADP/case>(Auf) <2:DET/det>(der) <3:NOUN/obl>(Fahrt) <4:VERB/root>(hatte)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(schon) <7:DET/obj>(eine) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/det>(die) <3:NOUN/nsubj>(Medikamente) <4:ADV/advmod>(so)
    <ROOT> <5:NOUN/nsubj>(Nebenwirkungen) <6:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 8
    - obl
  - !!python/tuple
    - 13
    - 17
    - cc
  - !!python/tuple
    - 14
    - 17
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - cop
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 2
    - conj
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 22
    - obj
  - !!python/tuple
    - 20
    - 22
    - nsubj
  - !!python/tuple
    - 21
    - 22
    - advmod
  - !!python/tuple
    - 22
    - 18
    - acl
  sentence: "<1:PRON/obl:arg>(Mir) <2:VERB/root>(geht) <3:PRON/expl>(es) <4:ADV/advmod>(sehr)\
    \ <5:ADV/advmod>(sehr) <6:ADV/advmod>(gut) <7:PRON/nsubj>(Ich) <8:VERB/conj>(komm)\
    \ <9:ADV/advmod>(grad) <10:ADP/case>(von) <11:DET/det>(der) <12:NOUN/obl>(B\xFC\
    hne) <13:CCONJ/cc>(und) <14:PRON/nsubj>(es) <15:AUX/cop>(war) <16:ADV/advmod>(so)\
    \ <17:DET/conj>(eine) <ROOT> <18:NOUN/root>(Show) <19:PRON/obj>(die) <20:PRON/nsubj>(wir)\
    \ <21:ADV/advmod>(gerade) <22:VERB/acl>(hatten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 12
    - cc
  - !!python/tuple
    - 6
    - 12
    - nsubj
  - !!python/tuple
    - 7
    - 12
    - aux
  - !!python/tuple
    - 8
    - 12
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 12
    - xcomp
  - !!python/tuple
    - 12
    - 4
    - conj
  sentence: "<1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:ADV/advmod>(ja) <ROOT> <4:NOUN/root>(Z\xE4\
    hne) <5:CCONJ/cc>(Und) <6:PRON/nsubj>(ich) <7:AUX/aux>(hab) <8:PRON/obj>(mich)\
    \ <9:ADP/case>(von) <10:PRON/obl>(der) <11:VERB/xcomp>(k\xFCssen) <12:VERB/conj>(lassen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 13
    - dep
  - !!python/tuple
    - 10
    - 13
    - aux
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 9
    - conj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(gehts) <3:ADP/case>(um) <4:DET/det>(einen)
    <5:NOUN/obl>(Typen) <6:DET/det>(der) <7:DET/nsubj>(eine) <8:ADV/advmod>(ziemlich)
    <ROOT> <9:NOUN/dep>(Nacht) <10:AUX/aux>(hatte) <11:CCONJ/cc>(und) <12:ADV/conj>(morgens)
    <13:VERB/root>(bemerkt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 10
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - appos
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 10
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - obj
  sentence: <1:PRON/root>(Wer) <2:ADV/advmod>(gleich) <ROOT> <3:NOUN/nsubj>(Bilder)
    <4:ADP/case>(von) <5:NOUN/nmod>(Menschen) <6:PRON/nsubj>(die) <7:VERB/appos>(trippen)
    <8:CCONJ/cc>(oder) <9:VERB/xcomp>(kotzen) <10:VERB/root>(erwartet) <11:NOUN/obj>(Fehlanzeige)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - aux
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 7
    - ccomp
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:ADV/advmod>(geil) <4:PRON/nsubj>(ich)
    <5:AUX/aux>(habe) <ROOT> <6:NOUN/nsubj>(Gigs) <7:VERB/root>(gehabt) <8:PRON/nsubj>(ich)
    <9:AUX/cop>(bin) <10:ADJ/ccomp>(geil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 6
    - cop
  sentence: "<1:PRON/nsubj>(wir) <2:VERB/root>(wissen) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)\
    \ <5:ADV/advmod>(ne) <ROOT> <6:NOUN/root>(Situation) <7:ADP/case>(f\xFCr) <8:PRON/nmod>(euch)\
    \ <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Pille) <3:AUX/cop>(ist) <4:ADJ/advmod>(voll)
    <5:PRON/root>(die) <ROOT> <6:NOUN/root>(Hormonbombe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Sinan) <2:VERB/root>(schreibt) <3:ADP/case>(in) <4:DET/det:poss>(seiner)
    <5:NOUN/obl>(Badewanne) <ROOT> <6:NOUN/root>(Texte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <3:DET/det>(alle) <4:ADJ/advmod>(ganz)
    <ROOT> <5:NOUN/compound>(YouTube) <7:NOUN/root>(Entertainer)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - expl
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 7
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 20
    - nmod
  - !!python/tuple
    - 16
    - 20
    - nsubj
  - !!python/tuple
    - 17
    - 20
    - advmod
  - !!python/tuple
    - 18
    - 20
    - advmod
  - !!python/tuple
    - 19
    - 20
    - advmod
  - !!python/tuple
    - 20
    - 13
    - acl
  - !!python/tuple
    - 21
    - 20
    - cop
  - !!python/tuple
    - 22
    - 26
    - mark
  - !!python/tuple
    - 23
    - 26
    - mark
  - !!python/tuple
    - 24
    - 26
    - advmod
  - !!python/tuple
    - 25
    - 26
    - amod
  - !!python/tuple
    - 26
    - 20
    - advcl
  - !!python/tuple
    - 27
    - 26
    - cop
  - !!python/tuple
    - 28
    - 31
    - cc
  - !!python/tuple
    - 29
    - 31
    - advmod
  - !!python/tuple
    - 30
    - 31
    - advmod
  - !!python/tuple
    - 31
    - 26
    - conj
  sentence: "<1:PROPN/nsubj>(Tuvalu) <2:AUX/aux>(k\xF6nnte) <3:ADV/advmod>(dann) <4:ADV/advmod>(einfach)\
    \ <5:NOUN/ccomp>(Geschichte) <6:AUX/cop>(sein) <7:VERB/root>(g\xE4be) <8:PRON/expl>(es)\
    \ <9:ADV/advmod>(da) <10:PART/advmod>(nicht) <11:DET/det>(diese) <12:DET/obj>(eine)\
    \ <ROOT> <13:NOUN/root>(Idee) <14:ADP/case>(bei) <15:PRON/nmod>(der) <16:PRON/nsubj>(ich)\
    \ <17:ADV/advmod>(allerdings) <18:PART/advmod>(nicht) <19:ADV/advmod>(ganz) <20:ADJ/acl>(sicher)\
    \ <21:AUX/cop>(bin) <22:SCONJ/mark>(ob) <23:SCONJ/mark>(das) <24:ADV/advmod>(jetzt)\
    \ <25:ADJ/amod>(geiler) <26:NOUN/advcl>(Zukunftsschei\xDF) <27:AUX/cop>(ist) <28:CCONJ/cc>(oder)\
    \ <29:ADV/advmod>(einfach) <30:ADV/advmod>(nur) <31:NOUN/conj>(PR)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schiebe) <ROOT> <3:NOUN/root>(Filme)
    <4:ADP/case>(wie) <5:PROPN/nmod>(Narcos) <7:PROPN/flat>(Bitches)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(die) <3:AUX/root>(sind) <4:DET/advmod>(viel)
    <5:ADP/compound:prt>(zu) <ROOT> <6:NOUN/root>(Junkies)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(Ja) <2:VERB/root>(geblieben) <3:AUX/cop>(ist) <4:ADP/case>(auf)
    <5:DET/det>(jeden) <6:NOUN/obl>(Fall) <7:DET/det>(die) <8:PRON/nsubj>(die) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - nmod
  sentence: <1:DET/root>(Viele) <ROOT> <2:NOUN/root>(Bilder) <3:CCONJ/cc>(und) <4:DET/det>(die)
    <5:NOUN/conj>(Szenen) <6:ADP/case>(wie) <7:ADP/case>(in) <8:DET/det>(dem) <9:NOUN/nmod>(Film)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 8
    - amod
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Ein) <2:ADJ/nmod>(paar) <3:NOUN/nmod>(Jahre) <4:ADJ/amod>(sp\xE4\
    ter) <5:AUX/cop>(war) <6:PRON/nsubj>(er) <7:ADV/advmod>(dann) <8:PRON/root>(der)\
    \ <ROOT> <9:NOUN/root>(Profi)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(nennst) <3:PRON/nsubj>(es) <ROOT> <4:PROPN/root>(Mate)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(nenn') <3:PRON/nsubj>(ich) <ROOT> <4:PROPN/root>(Mathe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(macht) <ROOT> <3:NOUN/root>(Tracks)
    <5:PART/advmod>(Nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(seid) <ROOT> <3:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:ADV/advmod>(hier) <3:ADJ/advmod>(wirklich) <ROOT>\
    \ <4:NOUN/nsubj>(M\xE4chte) <5:ADP/case>(an) <6:DET/det>(dem) <7:NOUN/nmod>(Werk)\
    \ <8:AUX/root>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADJ/advmod>(Fr\xFCher) <2:AUX/root>(war) <4:X/dep>(ne) <ROOT> <5:NOUN/root>(Zeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 10
    - 7
    - appos
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - nsubj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(zeig') <3:NOUN/obj>(Leuten) <4:DET/det:poss>(meine)
    <5:NOUN/obj>(Videos) <6:CCONJ/cc>(und) <7:VERB/conj>(sag) <10:PRON/appos>(Der)
    <ROOT> <11:NOUN/nsubj>(Typ) <12:ADV/advmod>(da) <13:AUX/root>(bin) <14:PRON/nsubj>(ich)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  sentence: <1:VERB/root>(nehmen) <2:NOUN/obj>(Betroffene) <ROOT> <3:NOUN/root>(Eingriffe)
    <4:ADP/case>(in) <5:NOUN/nmod>(Kauf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  sentence: <1:ADV/root>(ziemlich) <ROOT> <2:NOUN/nsubj>(kommentare) <3:AUX/aux>(gewesen)
    <4:ADV/advmod>(ehrlich) <5:VERB/root>(gesagt) <6:AUX/aux>(habe) <7:PRON/nsubj>(ich)
    <8:ADV/advmod>(selbst) <9:ADV/advmod>(noch) <10:ADV/advmod>(nie)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Denn) <2:PRON/nsubj>(wir) <3:VERB/root>(haben) <ROOT>\
    \ <4:NOUN/root>(Pl\xE4ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obj
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(hat) <3:ADV/advmod>(so) <4:DET/obj>(eine)
    <ROOT> <5:NOUN/nsubj>(Weite) <6:VERB/root>(sieht) <7:ADV/advmod>(richtig) <8:DET/det>(den)
    <9:NOUN/obj>(Horizont)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obl:arg
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:DET/det>(einem) <2:DET/det>(anderen) <3:NOUN/obl:arg>(\xC4u\xDFeren)\
    \ <4:NOUN/nsubj>(Gott) <5:DET/det>(der) <6:PROPN/nmod>(Mogh) <7:DET/root>(eine)\
    \ <ROOT> <8:NOUN/dep>(Blutpower) <9:VERB/root>(gegeben) <10:AUX/aux>(hat)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - dep
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(voll) <4:PRON/obj>(die)
    <ROOT> <5:NOUN/dep>(Idee) <6:DET/det>(ein) <7:NOUN/root>(Businessmodell)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - ccomp
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - aux
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(kostet) <3:PRON/obj>(nichts) <4:AUX/aux>(Muss)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(LSD) <7:VERB/ccomp>(nehmen) <8:PRON/nsubj>(Ich)
    <9:AUX/aux>(hab) <ROOT> <10:NOUN/root>(Angst) <11:ADV/advmod>(davor)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - acl
  - !!python/tuple
    - 6
    - 7
    - ccomp
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 7
    - compound:prt
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(w\xE4hrend) <3:PRON/nsubj>(ich) <4:PRON/root>(das)\
    \ <ROOT> <5:VERB/acl>(Atmen) <6:VERB/ccomp>(hatte) <7:VERB/root>(war) <8:PRON/nsubj>(ich)\
    \ <9:ADP/case>(auf) <10:ADV/advmod>(einmal) <11:ADV/compound:prt>(weg)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:X/root>(ne) <ROOT> <2:NOUN/dep>(Zeit) <3:ADV/advmod>(auch) <5:AUX/cop>(Ist)
    <6:DET/det>(ne) <7:ADJ/amod>(gewisse) <8:NOUN/root>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(schaff) <5:ADP/case>(mit)\
    \ <6:DET/det:poss>(meiner) <7:NOUN/obl>(Stimme) <8:DET/obj>(eine) <ROOT> <9:NOUN/root>(Atmosph\xE4\
    re)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - dep
  sentence: "<1:PRON/nsubj>(ihr) <2:AUX/cop>(seid) <3:ADJ/root>(ganz) <ROOT> <4:NOUN/root>(Ehrom\xE4\
    nner) <6:X/dep>(yuah)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schreib') <3:NUM/obj>(tausend) <ROOT>
    <4:NOUN/nsubj>(Verse) <5:PRON/nsubj>(du) <6:AUX/aux>(hast) <7:ADV/advmod>(maximal)
    <8:NOUN/obj>(Ein'n) <9:VERB/root>(geschrieben) <10:ADP/case>(wie) <11:NOUN/obl>(Erstsemester)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Sch\xF6neberg) <2:AUX/cop>(ist) <3:DET/det>(ein) <4:ADP/root>(zu)\
    \ <ROOT> <5:PROPN/root>(City)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - xcomp
  sentence: <1:VERB/root>(wird) <2:ADV/advmod>('ne) <3:ADJ/xcomp>(richtig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/cop>(sind) <3:ADJ/root>(voll) <ROOT> <4:NOUN/root>(Menschen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  sentence: <ROOT> <1:NOUN/root>(Wendung) <3:X/dep>(arh)
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 8
    - obj
  sentence: "<2:PRON/nsubj>(Ich) <3:AUX/aux>(kann) <4:PRON/root>(die) <ROOT> <5:NOUN/nsubj>(Windm\xFC\
    hle) <7:ADV/advmod>(Wieso) <8:VERB/root>(hat) <9:DET/det>(der) <10:ADJ/amod>(nen)\
    \ <11:NOUN/obj>(Ball)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det:poss>(Seine) <2:NOUN/nsubj>(Kumpels) <3:VERB/root>(sagen)\
    \ <6:NOUN/parataxis>(Alter) <7:PRON/nsubj>(was) <8:ADP/parataxis>(f\xFCr) <ROOT>\
    \ <9:NOUN/root>(Takes)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/obj>(Entwicklung) <2:VERB/root>(finde)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 5
    - xcomp
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schieb) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:NOUN/nsubj>(Filme) <5:VERB/root>(hat) <6:ADP/case>(mit) <7:PROPN/obl>(Guz)
    <8:PRON/obj>(was) <9:PART/mark>(zu) <10:VERB/xcomp>(tun)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:VERB/root>(Hab) <3:ADV/advmod>(nur) <ROOT> <4:NOUN/root>(Sachen) <5:ADP/case>(in)
    <6:DET/det>(dem) <7:NOUN/nmod>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - appos
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Aussage)\
    \ <5:CCONJ/cc>(aber) <6:PRON/nsubj>(ich) <7:VERB/appos>(glaube) <8:NOUN/nsubj>(K\xFC\
    nstler) <9:AUX/cop>(ist) <10:DET/det>(ein) <11:NOUN/obj>(Auftrag) <12:ADV/advmod>(irgendwie)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 10
    - amod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 3
    - nsubj
  sentence: <1:VERB/root>(Hatte) <2:DET/obj>(diese) <ROOT> <3:NOUN/root>(Ausbeutung)
    <4:ADV/advmod>(jedoch) <5:ADV/advmod>(auch) <6:ADV/advmod>(schon) <7:ADV/advmod>(zuvor)
    <8:ADJ/amod>(katastrophale) <9:ADJ/amod>(strukturelle) <10:NOUN/nsubj>(Folgen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 2
    - advcl
  sentence: <1:X/root>(ne) <ROOT> <2:NOUN/root>(Nummer) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(er)
    <5:PRON/obj>(sich) <6:ADP/case>(vor) <7:PRON/obl>(dir) <8:VERB/advcl>(aufbaut)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(es) <3:DET/root>(eine) <ROOT> <4:NOUN/dep>(Verbundenheit)
    <5:VERB/root>(wiederherstellt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(Eine) <ROOT> <2:NOUN/root>(Vorstellung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Sache)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/cop>(bin) <3:DET/root>(dieser) <ROOT> <4:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(Der) <ROOT> <2:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - conj
  sentence: <1:ADV/advmod>(also) <2:ADV/root>(sehr) <ROOT> <3:NOUN/root>(Szenen) <4:CCONJ/cc>(und)
    <5:PRON/nsubj>(man) <6:AUX/aux>(muss) <7:ADV/advmod>(auch) <8:VERB/conj>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(der) <ROOT> <2:NOUN/obj>(Erfahrungen) <3:VERB/root>(gemacht)
    <4:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - det
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - amod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/root>(Kinderwunsch) <2:DET/det>(eine) <3:ADV/advmod>(ganz) <4:ADJ/amod>(eigene)
    <5:ADV/advmod>(oft) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/dep>(Geschichte) <8:VERB/root>(steckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - obj
  - !!python/tuple
    - 4
    - 9
    - aux
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(man) <ROOT> <3:NOUN/obj>(Bauchschmerzen)
    <4:AUX/aux>(hat) <5:DET/obj>(einem) <6:DET/det>(das) <7:NOUN/nsubj>(Knie) <8:ADV/advmod>(doll)
    <9:VERB/root>(wehtut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(dann) <2:AUX/root>(kann) <3:PRON/nsubj>(das) <4:ADJ/advmod>(wirklich)
    <ROOT> <5:NOUN/obj>(Folgen) <6:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - aux
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 1
    - compound:prt
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:AUX/root>(sind) <2:PART/advmod>(nicht) <3:ADP/case>(ohne) <4:PRON/obl>(man)\
    \ <5:AUX/aux>(muss) <6:PRON/obj>(sich) <7:ADP/compound:prt>(auf) <ROOT> <8:NOUN/nsubj>(Gef\xFC\
    hle) <9:VERB/xcomp>(gefasst) <10:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - appos
  - !!python/tuple
    - 7
    - 11
    - compound
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:X/dep>(Z) <2:X/dep>(T) <3:NOUN/root>(Sachen) <4:ADV/advmod>(wo) <5:PRON/nsubj>(du)
    <6:ADJ/appos>(richtig) <ROOT> <7:NOUN/compound>(Multi) <9:NOUN/compound>(Tasking)
    <11:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 5
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 5
    - obl
  sentence: <1:ADV/root>(Ja) <ROOT> <2:NOUN/root>(Themen) <3:CCONJ/cc>(und) <4:PRON/expl>(es)
    <5:VERB/conj>(melden) <6:PRON/obj>(sich) <7:ADV/advmod>(ja) <8:ADV/advmod>(auch)
    <9:ADV/advmod>(sehr) <10:ADV/advmod>(sehr) <11:DET/det>(viele) <12:ADJ/amod>(junge)
    <13:NOUN/nsubj>(Zuschauer) <14:ADP/case>(bei) <15:PRON/obl>(euch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obj
  sentence: "<1:CCONJ/cc>(Und) <2:DET/root>(eine) <ROOT> <3:NOUN/nsubj>(Single) <4:VERB/root>(\xF6\
    ffnet) <5:ADV/advmod>(mei'm) <6:NOUN/obj>(Album) <7:DET/det>(die) <8:NOUN/obj>(T\xFC\
    r)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - flat
  sentence: <1:ADV/root>(Sehr) <ROOT> <2:PROPN/root>(Science) <4:PROPN/flat>(Fiction)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(eine) <ROOT> <2:NOUN/root>(Verschiebung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - nmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(h\xE4tte) <3:ADJ/advmod>(ganz) <ROOT>\
    \ <4:NOUN/root>(Auswirkungen) <5:ADV/advmod>(nat\xFCrlich) <6:ADV/advmod>(auch)\
    \ <7:ADP/case>(bei) <8:PRON/nmod>(uns) <9:ADP/case>(in) <10:PROPN/nmod>(Europa)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 14
    - cc
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 6
    - conj
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/root>(die) <ROOT> <3:NOUN/nsubj>(Ironie) <4:AUX/aux>(ist)\
    \ <5:ADV/advmod>(anscheinend) <6:VERB/root>(sehe) <7:PRON/nsubj>(ich) <8:ADP/compound:prt>(aus)\
    \ <9:SCONJ/case>(wie) <10:DET/det>(ein) <11:NOUN/obl>(T\xFCrsteher) <12:CCONJ/cc>(aber)\
    \ <13:PRON/nsubj>(ich) <14:VERB/conj>(komme)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(jetzt) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/nsubj>(Probleme) <7:ADP/case>(mit) <8:DET/det>(der)
    <9:NOUN/nmod>(Polizei) <10:PRON/nsubj>(ich) <11:VERB/root>(gebe) <12:PRON/obj>(euch)
    <13:DET/det>(ein) <14:NOUN/obj>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Wirklich) <2:ADV/advmod>(sehr) <3:ADV/advmod>(sehr) <4:ADJ/root>(spannend)
    <ROOT> <5:NOUN/root>(Wendungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Richtig) <2:ADJ/amod>(schicke) <3:NOUN/root>(Flittchen)
    <4:CCONJ/cc>(und) <ROOT> <5:NOUN/root>(Sluts)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:ADV/advmod>(so) <4:DET/obj>(eine)\
    \ <ROOT> <5:NOUN/root>(Nervosit\xE4t) <6:ADP/case>(in) <7:DET/det:poss>(meinem)\
    \ <8:NOUN/nmod>(K\xF6rper) <9:ADV/advmod>(irgendwie)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(So) <2:DET/det>(eine) <3:NOUN/nsubj>(Gereiztheit) <4:ADV/advmod>(so)
    <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Unkonzentriertheit)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - conj
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:SCONJ/mark>(damit) <2:DET/det>(das) <3:NOUN/nsubj>(Hirn) <4:ADP/case>(an)
    <5:PRON/obl>(sich) <6:VERB/root>(weiterleben) <7:AUX/aux>(konnte) <8:CCONJ/cc>(Und)
    <9:ADV/advmod>(hier) <10:VERB/conj>(kommt) <11:PRON/nsubj>(das) <ROOT> <12:DET/det>(Das)
    <13:NOUN/nsubj>(Hirn) <14:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(hat) <3:DET/det>(das) <4:NOUN/nsubj>(Wasser)
    <5:ADV/advmod>(so) <6:DET/obj>(eine) <ROOT> <7:NOUN/root>(Kraft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(zeigt) <3:PRON/obj>(das) <ROOT> <4:NOUN/root>(Ausma\xDF\
    ) <5:DET/det>(der) <6:PROPN/nmod>(Wildschwein) <7:PROPN/flat>(Plage) <8:ADP/case>(in)\
    \ <9:DET/det>(den) <10:PROPN/nmod>(USA)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obl
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 6
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADV/advmod>(Also) <2:ADP/case>(in) <3:DET/det>(dem) <4:ADJ/amod>(folgenden)\
    \ <5:NOUN/obl>(Kapitel) <6:VERB/root>(geht) <7:PRON/nsubj>(es) <8:ADJ/advmod>(explizit)\
    \ <9:ADP/case>(um) <10:DET/det>(das) <11:NOUN/obl>(T\xF6ten) <12:ADP/case>(von)\
    \ <13:NOUN/nmod>(Wildschwein) <14:ADP/case>(auf) <15:ADV/advmod>(teilweise) <16:ADV/advmod>(ziemlich)\
    \ <ROOT> <17:NOUN/root>(Weise)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(ich) <3:ADP/case>(nach) <4:NUM/nummod>(eineinhalb)\
    \ <5:NOUN/nmod>(Stunden) <6:ADJ/root>(\xE4hm) <ROOT> <7:NOUN/obj>(Schmerzen) <8:VERB/root>(hatte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:PRON/nsubj>(Der) <2:VERB/root>(hat) <3:DET/nsubj>(eine) <4:ADJ/advmod>(richtig)\
    \ <ROOT> <5:NOUN/root>(\xDCbersicht) <6:ADP/case>(auf) <7:DET/det:poss>(seiner)\
    \ <8:NOUN/nmod>(Homepage)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - aux
  sentence: <ROOT> <1:NOUN/obj>(Drogen) <2:VERB/root>(genommen) <3:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 9
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:NOUN/root>(schlimme) <3:ADV/advmod>(daran) <4:DET/obj>(diese)\
    \ <ROOT> <5:NOUN/nsubj>(Schieflage) <6:AUX/root>(war) <7:ADP/case>(bei) <8:ADJ/amod>(gro\xDF\
    en) <9:NOUN/obl>(Teilen) <10:DET/det>(der) <11:ADJ/amod>(deutschen) <12:NOUN/nmod>(W\xE4\
    hlerschaft)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 8
    - appos
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 5
    - nmod
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 12
    - nmod
  sentence: <1:ADP/root>(auf) <ROOT> <2:NOUN/root>(Weise) <3:ADP/case>(von) <4:DET/det>(dem)
    <5:PRON/nmod>(was) <6:ADP/case>(in) <7:DET/det>(der) <8:PROPN/nmod>(Volksrepublik)
    <9:PROPN/appos>(China) <10:ADP/case>(unter) <11:DET/det>(der) <12:NOUN/nmod>(Diktatur)
    <13:DET/det>(der) <14:PROPN/nmod>(Kommunistischen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 14
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 8
    - conj
  - !!python/tuple
    - 12
    - 14
    - cop
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(vor) <3:DET/det>(allem) <4:DET/root>(dieser)
    <ROOT> <5:NOUN/nsubj>(Kontrast) <6:ADP/case>(zwischen) <7:DET/det>(der) <8:PROPN/nmod>(Dom)
    <9:PROPN/flat>(Rep) <10:CCONJ/cc>(und) <11:PROPN/conj>(Haiti) <12:AUX/cop>(ist)
    <13:ADV/advmod>(einfach) <14:ADJ/root>(irre)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 8
    - csubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Jetzt) <2:ADP/case>(mit) <3:PRON/obl>(dir) <4:PART/mark>(zu)\
    \ <5:VERB/csubj>(ficken) <6:AUX/cop>(w\xE4r) <7:PRON/nsubj>('ne) <8:ADJ/root>(richtig)\
    \ <ROOT> <9:NOUN/root>(Mutprobe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/compound:prt>(ne) <ROOT>
    <4:NOUN/root>(Spritzen) <6:CCONJ/cc>(und) <7:NOUN/conj>(Nadelphobie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obl:arg
  - !!python/tuple
    - 9
    - 10
    - nummod
  - !!python/tuple
    - 10
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(so) <ROOT> <4:NOUN/root>(Angst)
    <5:ADV/advmod>(davor) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(ich) <8:PRON/obl:arg>(mir)
    <9:NUM/nummod>(25) <10:NOUN/nmod>(Jahre)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:NUM/root>(vier) <ROOT> <4:PROPN/root>(SpookTuber)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(wir) <7:AUX/aux>(wollen) <8:ADV/advmod>(viral)
    <9:VERB/conj>(gehen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - flat
  sentence: <1:ADV/root>(So) <ROOT> <2:PROPN/root>(Low) <4:NOUN/flat>(Cut)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - cc
  sentence: <1:PART/advmod>(Nicht) <2:ADV/advmod>(zu) <3:ADJ/root>(zweit) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(allein) <6:CCONJ/cc>(sondern) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/root>(Patek) <2:PROPN/flat>(Philippes) <3:ADV/advmod>(nur) <4:ADV/advmod>(f\xFC\
    rs) <ROOT> <5:NOUN/root>(Image)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(verwandelt) <3:ADJ/amod>(kahle) <4:NOUN/obj>(W\xE4\
    nde) <5:ADP/compound:prt>(in) <ROOT> <6:NOUN/root>(Kunstwerke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 5
    - acl
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - compound
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 5
    - parataxis
  - !!python/tuple
    - 12
    - 11
    - case
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - appos
  sentence: "<1:ADP/case>(an) <2:PROPN/obl>(Indien) <3:VERB/acl>(verkaufen) <4:AUX/aux>(will)\
    \ <5:VERB/root>(sagt) <6:PRON/nsubj>(sie) <7:PROPN/compound>(Hey) <8:NOUN/obj>(Alter)\
    \ <9:PRON/nsubj>(was) <10:AUX/cop>(sind) <11:PRON/parataxis>(das) <12:ADP/case>(f\xFC\
    r) <ROOT> <13:NOUN/root>(M\xFCnzen) <14:PRON/appos>(die)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det:poss
  - !!python/tuple
    - 13
    - 10
    - nmod
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Klimakrise) <3:VERB/root>(\xE4ndert)\
    \ <4:DET/det:poss>(unser) <5:NOUN/obj>(Wetter) <6:CCONJ/cc>(und) <7:AUX/cop>(ist)\
    \ <8:ADV/advmod>(damit) <9:DET/conj>(eine) <ROOT> <10:NOUN/root>(Herausforderung)\
    \ <11:ADP/case>(f\xFCr) <12:DET/det:poss>(unsere) <13:NOUN/nmod>(Landwirtschaft)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - amod
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(eine) <4:ADV/advmod>(sehr)\
    \ <ROOT> <5:ADJ/amod>(gro\xDFe) <6:ADJ/amod>(glaubw\xFCrdige) <7:ADJ/amod>(detailreiche)\
    \ <8:NOUN/root>(Welt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 7
    - obj
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - det:poss
  sentence: "<1:PROPN/nsubj>(Crystal) <3:NOUN/flat>(Konsum) <4:AUX/root>(kann) <5:ADV/advmod>(also)\
    \ <ROOT> <6:NOUN/obj>(Folgen) <7:VERB/root>(haben) <8:DET/det>(Die) <9:NOUN/obj>(Fotos)\
    \ <10:ADV/advmod>(v\xF6llig) <11:ADJ/amod>(fertiger) <12:NOUN/obj>(Menschen) <13:ADP/case>(mit)\
    \ <14:DET/det:poss>(ihren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(irgendwie) <4:ADV/advmod>(wenig)
    <5:ADJ/xcomp>(richtig) <ROOT> <6:ADJ/amod>(konsolenexklusive) <7:NOUN/root>(Launchtitel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/expl>(es) <3:VERB/root>(gab) <4:DET/det>(ne)\
    \ <5:NOUN/nmod>(Menge) <6:ADJ/amod>(geile) <7:NOUN/nsubj>(K\xE4mpfe) <8:ADP/compound:prt>(gegen)\
    \ <ROOT> <9:NOUN/root>(D\xE4monen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: "<1:PRON/nsubj>(Wir) <2:AUX/root>(sind) <ROOT> <3:NOUN/root>(Rivalen)\
    \ <4:ADV/advmod>(au\xDFerdem)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 4
    - obj
  sentence: <1:DET/root>(eine) <2:ADV/advmod>(derart) <ROOT> <3:NOUN/obj>(Ungleichheit)
    <4:VERB/root>(kommt) <5:ADV/advmod>(wahrlich) <6:DET/det>(keinen) <7:DET/det>(anderes)
    <8:NOUN/nsubj>(Land) <9:ADV/advmod>(heran) <10:DET/det>(diese) <11:NOUN/obj>(reichsten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 6
    - parataxis
  sentence: "<1:ADJ/amod>(liberalen) <2:NOUN/root>(Kapitalismus) <3:ADP/case>(auf)\
    \ <4:ADV/advmod>(so) <ROOT> <5:NOUN/dep>(Weise) <6:VERB/root>(gescheitert) <7:AUX/cop>(ist)\
    \ <8:ADV/advmod>(Warum) <9:AUX/cop>(ist) <10:PROPN/nsubj>(Russland) <11:ADJ/parataxis>(kl\xE4\
    glich)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(hier) <3:AUX/root>(kann) <4:PRON/nsubj>(ich)
    <5:PRON/obj>(euch) <ROOT> <6:NOUN/dep>(Hacks) <7:VERB/root>(geben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 8
    - conj
  - !!python/tuple
    - 13
    - 2
    - compound:prt
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 14
    - nmod
  - !!python/tuple
    - 17
    - 14
    - advmod
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(geht) <3:ADP/case>(um) <4:PROPN/obl>(Annalena)\
    \ <5:PROPN/flat>(Baerbock) <6:CCONJ/cc>(und) <7:DET/det>(den) <8:NOUN/conj>(Plagiatsvorwurf)\
    \ <9:CCONJ/cc>(und) <10:PRON/nsubj>(die) <11:DET/det:poss>(meiner) <12:NOUN/conj>(Meinung)\
    \ <13:ADP/compound:prt>(nach) <ROOT> <14:NOUN/root>(Unverh\xE4ltnism\xE4\xDFigkeit)\
    \ <15:DET/det>(der) <16:NOUN/nmod>(Medienberichterstattung) <17:ADV/advmod>(dar\xFC\
    ber)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 6
    - obl:arg
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADJ/amod>(wissenschaftlichen) <2:NOUN/obl:arg>(Fachartikeln) <3:ADP/case>(um)\
    \ <4:ADV/advmod>(\xFCber) <5:NUM/obl>(90) <6:VERB/root>(gesunken) <7:PRON/nsubj>(Das)\
    \ <8:VERB/xcomp>(hei\xDFt) <ROOT> <9:NOUN/root>(Erkenntnisse)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: "<1:PROPN/root>(Chapeau) <ROOT> <2:NOUN/root>(Leistung) <3:NOUN/appos>(Jungs)\
    \ <4:CCONJ/cc>(und) <5:NOUN/conj>(M\xE4dels)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - appos
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - acl
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 11
    - advmod
  sentence: "<1:ADV/advmod>(Einfach) <2:DET/det>(diese) <3:NOUN/root>(Vorstellung)\
    \ <4:SCONJ/mark>(dass) <5:ADV/advmod>(jetzt) <6:DET/det>(dieser) <7:NOUN/appos>(ganze)\
    \ <ROOT> <8:NOUN/root>(Kampf) <9:PRON/obj>(den) <10:PRON/nsubj>(ich) <11:VERB/acl>(gef\xFC\
    hrt) <12:AUX/aux>(habe) <13:ADV/advmod>(dann) <14:ADV/advmod>(noch)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/root>(du) <2:AUX/aux>(hast) <ROOT> <3:NOUN/root>(Tits)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(sowieso) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Geschichte)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:PRON/nsubj>(das) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Drucksituation)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 4
    - parataxis
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:NOUN/root>(ne) <ROOT> <4:NOUN/root>(Aussage)
    <5:PRON/obj>(Was) <6:VERB/parataxis>(sagen) <7:PRON/nsubj>(Sie) <8:ADV/advmod>(dazu)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 8
    - obl
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - obl:arg
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 8
    - obj
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADP/case>(bei) <2:PRON/obl>(mir) <3:PART/advmod>(nicht) <4:ADV/advmod>(aber)\
    \ <5:AUX/obj>(K\xF6n) <6:PRON/nsubj>(ich) <7:PRON/obl:arg>(mir) <8:VERB/root>(vorstellen)\
    \ <9:ADV/advmod>(aber) <10:DET/obj>(diese) <11:DET/obj>(diese) <ROOT> <12:NOUN/nsubj>(Emotionalit\xE4\
    t) <13:ADV/advmod>(manchmal) <14:X/root>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/root>(diese) <ROOT> <3:NOUN/root>(Abschlusspr\xFC\
    fung)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(was) <3:AUX/cop>(sind) <4:PRON/root>(das)\
    \ <5:ADV/advmod>(denn) <6:ADV/advmod>(da) <7:ADP/case>(f\xFCr) <8:NUM/obl>(3)\
    \ <ROOT> <9:NOUN/root>(Kackbratzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 5
    - conj
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/root>(bist) <4:ADV/advmod>(ne) <ROOT> <5:NOUN/root>(Blamage)\
    \ <6:CCONJ/cc>(und) <7:ADV/advmod>(auch) <8:ADV/advmod>(so) <9:ADJ/amod>(\xFC\
    bertrieben) <10:PROPN/conj>(Whack)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(also) <2:ADV/advmod>(grad) <3:ADV/advmod>(so) <4:DET/det>(eine)
    <5:NOUN/nsubj>(Art) <6:NOUN/obj>(Schub) <7:VERB/root>(hat) <8:CCONJ/cc>(und) <ROOT>
    <9:NOUN/nsubj>(Symptome) <10:VERB/root>(zeigt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 1
    - obl
  - !!python/tuple
    - 10
    - 1
    - compound:prt
  - !!python/tuple
    - 11
    - 13
    - mark
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 1
    - advcl
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: <1:VERB/root>(Guckt) <2:PRON/obj>(euch) <3:DET/det>(das) <4:NOUN/obj>(Video)
    <5:ADV/advmod>(unbedingt) <6:ADP/case>(bis) <7:ADP/case>(zu) <8:DET/det>(dem)
    <9:NOUN/obl>(Ende) <10:ADP/compound:prt>(an) <11:SCONJ/mark>(denn) <12:PRON/nsubj>(es)
    <13:VERB/advcl>(gibt) <14:DET/obj>(eine) <ROOT> <15:NOUN/root>(Verlosung)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 8
    - obl
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADP/case>(durch) <3:DET/det>(diese) <4:NOUN/obl>(Tafoni)
    <5:CCONJ/cc>(und) <6:DET/det>(die) <7:NOUN/conj>(Waben) <8:VERB/root>(hat) <9:PRON/nsubj>(es)
    <10:ADV/advmod>(so) <ROOT> <11:PROPN/root>(Henkel)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Aussage)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 13
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - det
  - !!python/tuple
    - 5
    - 8
    - amod
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 3
    - appos
  - !!python/tuple
    - 10
    - 8
    - appos
  - !!python/tuple
    - 11
    - 10
    - flat
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 17
    - dep
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADJ/amod>(illegale) <3:NOUN/nsubj>(M\xFCllentsorgung)\
    \ <4:DET/det>(Das) <5:ADJ/amod>(neue) <6:NOUN/compound>(Funk) <8:NOUN/appos>(Format)\
    \ <10:PROPN/appos>(Chris) <11:PROPN/flat>(M\xFCller) <13:VERB/root>(hat) <14:DET/obj>(eine)\
    \ <ROOT> <15:NOUN/dep>(Recherche) <16:ADV/advmod>(dazu) <17:VERB/root>(ver\xF6\
    ffentlicht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 6
    - 2
    - flat
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:PROPN/nsubj>(Anti) <4:PROPN/flat>(Mafia) <6:NOUN/flat>(Einheiten)
    <7:VERB/root>(haben) <8:ADV/advmod>(dort) <9:ADJ/advmod>(echt) <ROOT> <10:NOUN/obj>(Arbeit)
    <11:VERB/root>(geleistet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADV/root>(Insgeheim) <ROOT> <2:NOUN/root>(Spie\xDFer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 5
    - flat
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(gibt) <ROOT> <3:NOUN/root>(Streifen)
    <4:ADP/case>(wie) <5:PROPN/nmod>(Shutter) <6:PROPN/flat>(Island)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(FFM) <ROOT> <2:NOUN/root>(Gegend)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(auch) <3:ADP/case>(bei) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Ballett) <6:VERB/root>(gibt) <7:PRON/nsubj>(es) <8:ADJ/advmod>(richtig)\
    \ <ROOT> <9:NOUN/root>(Spr\xFCnge)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Leute) <2:PRON/nsubj>(wir) <3:VERB/root>(haben) <4:ADV/advmod>(schon)\
    \ <5:DET/obj>(einige) <ROOT> <6:NOUN/dep>(Spr\xFCnge) <7:VERB/root>(gesehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/case>(Von) <2:ADP/case>(wegen) <3:ADJ/amod>(deutscher) <4:NOUN/obl>(Rap)\
    \ <5:AUX/root>(w\xE4r) <6:X/advmod>(ne) <ROOT> <7:NOUN/root>(Konkurrenz)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Dreh) <2:ADV/advmod>(doch) <3:ADV/advmod>(noch) <4:DET/root>(eine)
    <ROOT> <5:NOUN/compound>(Runde) <7:NOUN/root>(Okay)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - dep
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <ROOT> <1:PROPN/dep>(Moves) <2:ADP/case>(auf) <3:DET/det>(den) <4:NOUN/obl>(Bordstein)
    <5:VERB/root>(setzen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(soll) <3:ADV/advmod>(wieder) <4:DET/det>(ein)
    <5:ADJ/obl>(paar) <ROOT> <6:NOUN/dep>(Parts) <7:VERB/root>(rappen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(staunt) <3:PRON/nsubj>(ihr) <4:PRON/obj>(was)
    <6:ADV/advmod>(Ziemlich) <ROOT> <7:PROPN/root>(Punchline)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <4:ADV/advmod>(ne) <ROOT> <5:NOUN/root>(Energie)
    <6:ADV/advmod>(zusammen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/det>(eine) <4:ADJ/root>(extrem)
    <ROOT> <5:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/nsubj>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/root>(eine)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Aussage)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:PRON/root>(das) <3:ADP/case>(f\xFCr) <4:NOUN/nmod>(ne)\
    \ <ROOT> <5:NOUN/root>(Frau)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - dep
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(hast) <ROOT> <3:NOUN/root>(Schl\xE4\
    ger) <4:ADP/dep>(bei)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux:pass
  sentence: "<1:AUX/root>(m\xFCssten) <ROOT> <2:NOUN/dep>(Preiserh\xF6hungen) <3:ADV/advmod>(ja)\
    \ <4:ADV/advmod>(eigentlich) <5:VERB/root>(zur\xFCckgenommen) <6:AUX/aux:pass>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - dep
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(so) <4:DET/det>(die)\
    \ <5:NOUN/root>(\xFCbelste) <ROOT> <6:PROPN/root>(Action) <7:X/dep>(ne)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - dep
  - !!python/tuple
    - 3
    - 7
    - nsubj:pass
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - acl
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - obl
  - !!python/tuple
    - 13
    - 9
    - advmod
  - !!python/tuple
    - 14
    - 9
    - advmod
  sentence: <1:DET/root>(Diese) <ROOT> <2:NOUN/dep>(Teilung) <3:PRON/nsubj:pass>(die)
    <4:ADV/advmod>(da) <5:ADV/advmod>(oft) <6:ADV/advmod>(so) <7:VERB/acl>(kolportiert)
    <8:AUX/aux:pass>(wird) <9:VERB/root>(gibts) <10:ADP/case>(in) <11:DET/det>(der)
    <12:NOUN/obl>(Form) <13:ADV/advmod>(eigentlich) <14:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <3:NOUN/obj>(Heldensachen)\
    \ <4:PRON/nsubj>(ich) <5:VERB/root>(machen) <6:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:SCONJ/root>(Obwohl) <2:PRON/nsubj>(das) <ROOT> <3:NOUN/root>(Selbstbewusstsein)
    <4:CCONJ/cc>(und) <5:DET/det>(das) <6:NOUN/conj>(Streben) <7:ADP/case>(nach) <8:NOUN/nmod>(Erfolg)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/mark>(wenn) <2:PRON/nsubj>(man) <3:PRON/obj>(sich) <4:ADV/advmod>(nur)\
    \ <5:VERB/root>(wertf\xFChlt) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man) <ROOT>\
    \ <8:NOUN/obj>(Leistungen) <9:VERB/root>(bringt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:DET/det>(Diese) <2:NOUN/nsubj>(Cola) <3:VERB/root>(wird) <4:PRON/obj>(dir)
    <5:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/root>(Das) <2:PRON/obj>(was) <3:PRON/obj>(ihr) <4:ADV/advmod>(da)
    <5:VERB/acl>(bringt) <6:AUX/aux>(sind) <ROOT> <7:NOUN/root>(Vorurteile)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt) <4:DET/root>(keine)
    <ROOT> <5:NOUN/root>(Grafik)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:PRON/nsubj>(es) <2:AUX/cop>(ist) <3:DET/root>(keine) <ROOT> <4:NOUN/root>(Steuerung)
    <5:CCONJ/cc>(oder) <6:NOUN/conj>(Gameplay)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:DET/det>(andere) <4:NOUN/nsubj>(Methoden)
    <5:CCONJ/cc>(Aber) <6:PRON/nsubj>(das) <7:VERB/conj>(finde) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(ne) <10:ADV/advmod>(sehr) <ROOT> <11:NOUN/root>(Methode)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PRON/root>(der) <ROOT> <4:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(Dass) <2:PRON/nsubj>(es) <3:ADV/advmod>(da) <4:ADV/advmod>(so)\
    \ <ROOT> <5:NOUN/nsubj>(Qualit\xE4tsunterschiede) <6:VERB/root>(gibt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - expl
  - !!python/tuple
    - 7
    - 5
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nmod
  - !!python/tuple
    - 15
    - 19
    - advmod
  - !!python/tuple
    - 16
    - 19
    - advmod
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 8
    - nmod
  sentence: <1:ADP/case>(In) <2:DET/det>(der) <3:NOUN/obl>(Oberstufe) <4:ADV/advmod>(besonders)
    <5:VERB/root>(gab) <6:PRON/expl>(es) <7:ADJ/xcomp>(super) <ROOT> <8:NOUN/root>(Probleme)
    <9:ADP/case>(mit) <10:ADJ/amod>(rechten) <11:NOUN/nmod>(Inhalten) <12:ADP/case>(auf)
    <13:DET/det>(jeden) <14:NOUN/nmod>(Fall) <15:ADV/advmod>(also) <16:ADV/advmod>(auch)
    <17:ADP/case>(in) <18:DET/det>(der) <19:NOUN/nmod>(Klassengruppe)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - amod
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - mark
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 8
    - obl
  - !!python/tuple
    - 15
    - 14
    - appos
  sentence: <1:ADJ/amod>(Gleichzeitig) <2:AUX/cop>(ist) <3:PRON/nsubj>(es) <4:ADV/advmod>(schon)
    <5:DET/root>(eine) <ROOT> <6:NOUN/obj>(behauptung) <7:PART/mark>(zu) <8:VERB/root>(sagen)
    <9:SCONJ/mark>(dass) <10:PRON/nsubj>(man) <11:ADP/case>(in) <12:DET/det>(den)
    <13:ADJ/amod>(unteren) <14:NOUN/obl>(Ebenen) <15:PROPN/appos>(Coruscants)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - nsubj
  sentence: <1:DET/det>(Eine) <2:DET/root>(andere) <ROOT> <3:NOUN/root>(Frage) <4:AUX/cop>(war)
    <5:DET/det>(Das) <6:NOUN/nsubj>(Ding) <7:DET/det>(das) <8:PRON/nsubj>(du)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 7
    - dep
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Psychopathie) <2:VERB/root>(wird) <3:ADV/advmod>(teilweise)
    <4:ADP/xcomp>(als) <ROOT> <5:NOUN/dep>(Form) <6:ADV/advmod>(davon) <7:VERB/root>(beschrieben)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(Zu) <2:DET/det>(dem) <3:NOUN/root>(Teil) <4:ADV/advmod>(auch)
    <ROOT> <5:NOUN/root>(Probleme)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(eine)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Versprechung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(dank) <2:PRON/nmod>(ihm) <3:ADV/advmod>(schon) <4:ADV/advmod>(extrem)
    <5:DET/root>(viel) <ROOT> <6:NOUN/dep>(Sachen) <7:VERB/root>(gelernt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(er) <3:VERB/root>(meinte) <4:PRON/nsubj>(das)
    <5:AUX/cop>(war) <6:DET/obj>(eine) <ROOT> <7:NOUN/root>(Erfahrung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(trotzdem) <3:VERB/root>(liest) <4:PRON/nsubj>(man)
    <5:ADV/advmod>(auch) <6:ADV/advmod>(immer) <7:ADV/advmod>(wieder) <ROOT> <8:NOUN/root>(Schlagzeilen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Menge) <6:ADP/case>(an) <7:NOUN/nmod>(Wasser)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 5
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - dep
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(die) <2:ADP/case>(in) <3:PROPN/nmod>(Westdeutschland) <4:ADV/advmod>(genauso)
    <5:ADJ/root>(vorhanden) <6:AUX/cop>(sind) <7:ADV/advmod>(nur) <8:ADP/case>(in)
    <9:DET/det>(dem) <10:NOUN/nmod>(Osten) <11:DET/nsubj>(eine) <ROOT> <12:NOUN/dep>(Geschichte)
    <13:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - mark
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 1
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: "<1:VERB/root>(merkt) <2:PRON/nsubj>(man) <3:SCONJ/mark>(dass) <4:ADV/advmod>(da)\
    \ <5:DET/obj>(eine) <ROOT> <6:NOUN/root>(Identit\xE4t) <7:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  - !!python/tuple
    - 10
    - 8
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - advmod
  sentence: <1:INTJ/advmod>(Ach) <2:PRON/nsubj>(die) <3:VERB/root>(machen) <4:ADV/compound:prt>(ne)
    <ROOT> <5:NOUN/nsubj>(Maschine) <6:ADP/case>(aus) <7:PRON/nmod>(mir) <8:ADV/root>(Geil)
    <9:AUX/cop>(bin) <10:PRON/nsubj>(ich) <11:ADV/advmod>(dabei)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:PROPN/nsubj>(Sascha) <3:AUX/cop>(war) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(mich) <6:DET/root>(eine) <ROOT> <7:NOUN/root>(\xDCberraschung)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Mutter) <2:AUX/cop>(sein) <3:AUX/cop>(ist) <4:ADV/advmod>(immer)
    <5:NOUN/root>(ne) <ROOT> <6:NOUN/root>(Sache)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 6
    - nmod
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det:poss>(meiner) <3:NOUN/nmod>(Fantasie) <4:AUX/cop>(waren)
    <5:PRON/nsubj>(das) <6:ADJ/root>(richtig) <ROOT> <7:NOUN/root>(Helden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 2
    - flat
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(ohne) <2:NOUN/root>(Game) <3:PROPN/flat>(as) <4:PROPN/amod>(a)
    <5:NOUN/compound>(Service) <7:NOUN/flat>(Charakter) <8:ADP/compound:prt>(ohne)
    <ROOT> <9:NOUN/root>(Mikotransaktionen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <ROOT> <3:NOUN/root>(H\xF6henangst)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Trotzdem) <2:VERB/root>(haben) <3:DET/det>(die) <4:NOUN/nsubj>(Leute)
    <ROOT> <5:NOUN/dep>(Bauwerke) <6:VERB/root>(hingekriegt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(wir) <ROOT> <3:NOUN/dep>(Kreislaufprobleme)
    <4:VERB/root>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - obl
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Als) <2:NOUN/obl>(Arzt) <3:ADP/case>(w\xE4hrend) <4:PROPN/nmod>(Corona)\
    \ <5:VERB/root>(hat) <6:PROPN/nsubj>(Jonas) <7:DET/obj>(einige) <ROOT> <8:NOUN/obj>(Dinge)\
    \ <9:VERB/root>(erlebt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Wesensver\xE4\
    nderung) <5:CCONJ/cc>(und) <6:DET/det>(eine) <7:NOUN/conj>(Bildver\xE4nderung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - case
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 12
    - compound
  - !!python/tuple
    - 12
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Klar) <2:PART/advmod>(nicht) <3:DET/nsubj>(alle) <4:VERB/root>(haben)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(Hobbys) <7:ADP/case>(wie) <8:NOUN/compound>(U)
    <10:NOUN/compound>(Boot) <12:NOUN/nmod>(Expeditionen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - dep
  sentence: <1:VERB/root>(fallen) <ROOT> <2:NOUN/root>(Unterschiede) <3:ADP/dep>(auf)
- dependencies:
  - !!python/tuple
    - 1
    - 9
    - obj
  - !!python/tuple
    - 2
    - 6
    - case
  - !!python/tuple
    - 3
    - 6
    - det
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PRON/obj>(sich) <2:ADP/case>(in) <3:DET/det>(einer) <4:ADV/advmod>(sehr)\
    \ <5:ADJ/amod>(\xE4hnlichen) <6:NOUN/obl>(Situation) <7:DET/det>(Die) <8:NOUN/obj>(Milit\xE4\
    rakademien) <9:VERB/root>(melden) <ROOT> <10:NOUN/root>(R\xFCckg\xE4nge)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(bewirkt) <3:ADP/case>(bei) <4:PRON/obl>(mir)
    <5:PART/advmod>(nicht) <6:DET/obj>(eine) <ROOT> <7:NOUN/root>(Aufputschung)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: "<1:SCONJ/mark>(Weil) <2:DET/det>(die) <3:NOUN/nsubj>(Darsteller) <4:ADJ/root>(richtig)\
    \ <ROOT> <5:NOUN/dep>(Rennen) <6:VERB/root>(fahren) <7:AUX/aux>(m\xFCssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - appos
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 5
    - compound:prt
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(erste) <3:NOUN/root>(richtige) <ROOT> <4:ADJ/amod>(geile)
    <5:PROPN/root>(OpenWorld) <6:ADV/advmod>(So) <7:PROPN/amod>(ne) <8:PROPN/appos>(Stadt)
    <9:ADP/case>(mit) <10:NOUN/nmod>(Rumfahren) <11:CCONJ/cc>(und) <12:ADV/advmod>(so)
    <13:ADV/compound:prt>(weiter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - cop
  - !!python/tuple
    - 14
    - 11
    - appos
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 14
    - nmod
  sentence: "<1:PRON/nsubj>(was) <2:VERB/root>(geht) <3:ADP/case>(ab) <4:PRON/nsubj>(Was)\
    \ <5:AUX/cop>(ist) <6:PRON/nsubj>(das) <7:ADP/case>(f\xFCr) <8:DET/nmod>(eine)\
    \ <ROOT> <9:NOUN/compound>(Mega) <11:NOUN/root>(Konsole) <12:PRON/nsubj>(Was)\
    \ <13:AUX/cop>(ist) <14:PRON/appos>(das) <15:ADP/case>(f\xFCr) <16:DET/det>(ein)\
    \ <17:NOUN/nmod>(Spiel)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - xcomp
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 3
    - mark
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 10
    - nmod
  - !!python/tuple
    - 14
    - 13
    - appos
  sentence: "<1:PRON/root>(Das) <ROOT> <2:NOUN/xcomp>(Missverh\xE4ltnis) <3:VERB/root>(wird)\
    \ <4:ADV/advmod>(besonders) <5:ADJ/xcomp>(deutlich) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(man)\
    \ <8:PRON/obj>(sich) <9:DET/det>(die) <10:NOUN/obj>(Mengen) <11:ADP/case>(an)\
    \ <12:ADJ/amod>(abgebauten) <13:NOUN/nmod>(Urans) <14:DET/appos>(im)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(gegen) <2:DET/det>(die) <3:ADJ/amod>(ganzen) <4:NOUN/nmod>(Kids)
    <5:PRON/root>(die) <ROOT> <6:NOUN/nsubj>(Reflexe) <7:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <2:PROPN/nsubj>(Kuban) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:NOUN/root>(ne)
    <ROOT> <7:NOUN/root>(Entwicklung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - dep
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:DET/root>(Keine) <ROOT> <2:NOUN/dep>(Story) <3:DET/det>(keine) <4:NOUN/obj>(Quests)
    <5:DET/det>(das) <6:NOUN/nsubj>(Gameplay) <7:VERB/root>(regiert) <8:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - case
  - !!python/tuple
    - 2
    - 6
    - det
  - !!python/tuple
    - 3
    - 6
    - det
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:ADP/case>(f\xFCr) <2:DET/det>(die) <3:DET/det>(ein) <4:CCONJ/cc>(oder)\
    \ <5:DET/conj>(andere) <6:NOUN/nmod>(Beziehung) <7:DET/root>(eine) <ROOT> <8:NOUN/root>(Belastung)\
    \ <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - acl
  - !!python/tuple
    - 10
    - 9
    - dep
  sentence: "<1:ADP/case>(Um) <2:ADV/root>(so) <ROOT> <3:NOUN/root>(Ausbr\xFCche)\
    \ <4:ADV/advmod>(wo) <5:PROPN/nsubj>(Magma) <6:ADP/case>(durch) <7:DET/det>(die)\
    \ <8:NOUN/obl>(Gegend) <9:VERB/acl>(spritzt) <10:X/dep>(D)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/mark>(Weil) <2:PRON/nsubj>(es) <3:ADV/advmod>(so) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Sucht) <6:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <3:DET/root>(eine) <ROOT> <4:NOUN/root>(Sucht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADV/advmod>(schon) <ROOT> <4:NOUN/root>(Sinne)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:DET/root>(eine)
    <ROOT> <5:NOUN/root>(Aussage)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(irre) <4:PRON/root>(das)
    <5:AUX/cop>(sind) <ROOT> <6:NOUN/root>(Details)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(hattest) <ROOT> <2:PROPN/nsubj>(Pok\xE9mon) <3:ADV/advmod>(doppelt)\
    \ <4:VERB/root>(tauschen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 14
    - csubj
  - !!python/tuple
    - 13
    - 12
    - aux
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - advmod
  - !!python/tuple
    - 16
    - 14
    - advmod
  sentence: "<1:ADV/advmod>(auch) <2:ADV/advmod>(noch) <3:DET/det>(ein) <4:NOUN/root>(Video)\
    \ <5:ADP/case>(\xFCber) <6:PRON/nmod>(die) <ROOT> <7:NOUN/compound>(Torpedo) <9:NOUN/nsubj>(Sph\xE4\
    re) <10:DET/det>(des) <11:NOUN/nmod>(Imperiums) <12:VERB/csubj>(sehen) <13:AUX/aux>(wollt)\
    \ <14:VERB/root>(schaut) <15:ADV/advmod>(mal) <16:ADV/advmod>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Bruder) <3:X/appos>(z) <4:PROPN/appos>(B)
    <5:VERB/root>(hat) <6:ADV/advmod>(schon) <ROOT> <7:NOUN/obj>(Polizeigewalt) <8:VERB/root>(erfahren)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/aux>(muss) <3:VERB/root>(sagen) <4:PRON/nsubj>(das)
    <5:AUX/ccomp>(sind) <6:DET/obj>(alles) <7:ADV/advmod>(so) <ROOT> <8:NOUN/root>(Erfahrungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advcl
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Fallh\xF6\
    he) <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(du) <7:VERB/advcl>(sagst)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cop
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:AUX/cop>(Ist) <2:PRON/nsubj>(das) <3:ADV/advmod>(wirklich) <4:ADV/advmod>(noch)\
    \ <5:DET/root>(eine) <ROOT> <6:NOUN/root>(Fallh\xF6he)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/root>(weil) <2:X/advmod>(s) <3:ADV/advmod>(echt) <4:X/advmod>(ne)
    <ROOT> <5:NOUN/root>(Struktur) <6:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 7
    - 4
    - flat
  - !!python/tuple
    - 8
    - 4
    - flat
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/root>(daf\xFCr) <ROOT> <3:NOUN/root>(Themen)\
    \ <4:PROPN/appos>(puh) <6:PROPN/flat>(Assassin) <7:PROPN/flat>(s) <8:PROPN/flat>(Creed)\
    \ <9:PROPN/flat>(Odyssey)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - obj
  - !!python/tuple
    - 11
    - 16
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 16
    - aux
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/expl>(es)
    <5:VERB/ccomp>(liegt) <6:ADV/advmod>(daran) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(so) <10:DET/obj>(eine) <ROOT> <11:NOUN/nsubj>(Entwicklung) <12:ADP/case>(nach)
    <13:ADV/advmod>(vorne) <14:AUX/aux>(hab) <15:PRON/nsubj>(Ich) <16:AUX/root>(bin)
    <17:ADV/advmod>(wieder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 4
    - advcl
  sentence: <1:NOUN/dep>(Jahren) <2:ADP/root>(auf) <ROOT> <3:NUM/dep>(65) <4:VERB/root>(stiegen)
    <5:SCONJ/mark>(wenn) <6:DET/det>(die) <7:NOUN/nsubj>(Sanktionen) <8:VERB/xcomp>(bestehen)
    <9:VERB/advcl>(bleiben)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Venting) <2:AUX/cop>(ist) <3:PART/advmod>(nicht) <4:ADV/advmod>(nur)
    <5:DET/det>(ein) <6:NOUN/root>(Klimadisaster) <7:CCONJ/cc>(sondern) <8:ADV/advmod>(auch)
    <9:DET/conj>(eine) <ROOT> <10:NOUN/root>(Geldverschwendung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 7
    - acl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Viertel) <4:VERB/acl>(stehend)
    <5:ADP/case>(mit) <6:NOUN/obl>(Gun) <7:VERB/root>(seh') <8:PRON/nsubj>(ich) <9:ADV/advmod>(nur)
    <10:ADJ/advmod>(richtig) <ROOT> <11:PROPN/root>(Toys)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advcl
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - conj
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/root>(das) <ROOT> <3:AUX/advcl>(ist) <4:PRON/expl>(es)
    <5:VERB/root>(gab) <6:ADV/advmod>(auch) <7:DET/det>(keinen) <8:NOUN/nsubj>(Raum)
    <9:CCONJ/cc>(und) <10:DET/det>(keine) <11:NOUN/conj>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 5
    - nmod
  - !!python/tuple
    - 11
    - 10
    - case
  sentence: <1:PRON/root>(die) <ROOT> <2:ADJ/amod>(moralische) <3:CCONJ/cc>(und) <4:ADJ/conj>(sicherheitspolitisch)
    <5:NOUN/root>(Schieflage) <6:ADP/case>(auf) <7:ADP/case>(in) <8:DET/det>(welche)
    <9:PRON/nmod>(uns) <10:NOUN/nmod>(Politiker) <11:ADP/case>(wie)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - xcomp
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 7
    - xcomp
  - !!python/tuple
    - 11
    - 14
    - mark
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - aux
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(dann) <3:VERB/root>(finde) <4:PRON/nsubj>(ich)\
    \ <5:PRON/obj>(es) <6:ADV/advmod>(ehrlich) <7:VERB/xcomp>(gesagt) <8:ADV/advmod>(ultrabelastend)\
    \ <9:PART/mark>(zu) <10:VERB/xcomp>(schlafen) <11:SCONJ/mark>(weil) <12:PRON/nsubj>(ich)\
    \ <13:ADV/advmod>(dann) <14:ADV/advmod>(wirklich) <ROOT> <15:NOUN/root>(Alptr\xE4\
    ume) <16:AUX/aux>(habe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl:arg
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/obl:arg>(Mir) <2:VERB/root>(hilft) <3:DET/obj>(eine) <ROOT> <4:NOUN/root>(Routine)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:X/root>(ne) <ROOT> <4:NOUN/root>(Umstellung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 6
    - advcl
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:AUX/root>(sind) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(Tiefs) <7:SCONJ/mark>(wie) <8:PRON/nsubj>(ich)
    <9:PRON/obj>(sie) <10:ADP/case>(in) <11:PROPN/obl>(Borken) <12:VERB/advcl>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(das) <ROOT> <4:NOUN/root>(Zukunftsmusik)
    <5:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:AUX/root>(Muss) <2:ADV/advmod>(wohl) <4:X/dep>(ne) <ROOT> <5:NOUN/root>(Reise)
    <6:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:VERB/root>(Haben) <ROOT> <2:NOUN/root>(Hilfestunden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 11
    - dep
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:NOUN/nsubj>(Mobbing) <3:AUX/root>(kann) <4:ADV/advmod>(wirklich)
    <ROOT> <5:NOUN/dep>(Folgen) <6:ADP/case>(bis) <7:ADV/advmod>(hin) <8:ADP/case>(zu)
    <9:DET/det>(dem) <10:NOUN/obl>(Suizid) <11:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: "<1:PRON/nsubj>(was) <2:NOUN/root>(Mobbing) <3:ADP/case>(f\xFCr) <ROOT>\
    \ <4:NOUN/obj>(Folgen) <5:VERB/root>(haben) <6:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(das) <2:NOUN/root>(Mobbing) <3:ADJ/advmod>(wirklich) <ROOT>
    <4:CCONJ/cc>(und) <5:ADJ/amod>(langfristige) <6:NOUN/root>(Folgen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 6
    - nmod
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/nmod>(viele) <3:AUX/cop>(ist) <4:DET/det>(eine)\
    \ <5:NOUN/nsubj>(Impfpflicht) <6:DET/root>(eine) <7:ADV/advmod>(sehr) <ROOT> <8:NOUN/root>(Massnahme)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 11
    - obj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - obl
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 5
    - xcomp
  sentence: "<1:ADJ/root>(richtig) <ROOT> <2:NOUN/root>(Rampensau) <3:CCONJ/cc>(und)\
    \ <4:PRON/nsubj>(ich) <5:VERB/conj>(liebe) <6:PRON/obj>(es) <7:ADP/case>(auf)\
    \ <8:DET/det>(der) <9:NOUN/obl>(B\xFChne) <10:PART/mark>(zu) <11:VERB/xcomp>(stehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:ADV/advmod>(nur) <4:NOUN/obj>(Influencer)
    <5:CCONJ/cc>(oder) <ROOT> <6:NOUN/root>(Leute)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(dieser) <2:NOUN/nsubj>(Junge) <3:VERB/root>(kickt) <ROOT>
    <4:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - dep
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <ROOT> <3:NOUN/dep>(Angst) <4:ADP/case>(vorm)
    <5:NOUN/nmod>(Sterben) <6:VERB/root>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(da) <2:AUX/root>(waren) <3:ADV/advmod>(nur) <4:ADV/advmod>(noch)
    <ROOT> <5:NOUN/nsubj>(Sachen) <6:ADV/advmod>(drinnen) <7:ADV/advmod>(Etwa) <8:DET/det>(ein)
    <9:NOUN/root>(Roller)
krassem:
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 2
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fahr) <4:ADP/case>(hinter) <6:ADJ/amod>(ner)
    <7:NOUN/obl>(Hochseeyacht) <8:PROPN/appos>(Wasserski) <9:ADP/compound:prt>(mit)
    <ROOT> <10:PROPN/root>(Speed)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: <1:ADP/root>(Auf) <ROOT> <2:NOUN/root>(Shit) <3:ADP/case>(von) <4:NOUN/nmod>(Feedbackpass)
    <5:PRON/nsubj>(ich) <6:ADP/case>(mit) <7:NOUN/nmod>(Cuts) <8:ADP/case>(in) <9:DET/det>(dem)
    <10:NOUN/nmod>(Chorus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Jacke) <2:ADP/dep>(aus) <ROOT> <3:NOUN/root>(Leder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det>(der) <2:PROPN/root>(G) <3:ADP/compound:prt>(mit) <ROOT> <4:PROPN/root>(K\xF6\
    rp\u0435r)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - nmod
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 9
    - nmod
  sentence: <1:ADV/advmod>(Wie) <2:PRON/nsubj>(du) <3:PRON/obj>(dir) <4:VERB/advcl>(vorstellen)
    <5:AUX/aux>(kannst) <6:VERB/root>(steht) <7:DET/obj>(dies) <8:ADP/compound:prt>(in)
    <ROOT> <9:NOUN/root>(Widerspruch) <10:ADP/case>(zu) <11:PROPN/nmod>(Bukeles) <12:ADJ/amod>(heiligem)
    <13:NOUN/nmod>(Wahlkampfversprechen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 8
    - dep
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:ADV/advmod>(Hierzu) <2:VERB/root>(stehen) <3:ADP/compound:prt>(in)
    <ROOT> <4:NOUN/dep>(Kontrast) <5:DET/det>(die) <6:ADJ/amod>(wertvollen) <7:ADJ/amod>(ukrainischen)
    <8:NOUN/root>(Fortschritte) <9:DET/det>(der) <10:ADJ/amod>(letzten) <11:NOUN/nmod>(Wochen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADJ/root>(wei\xDFem) <ROOT> <2:NOUN/root>(Beamer)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: <1:CCONJ/cc>(oder) <2:ADV/advmod>(nur) <3:PRON/root>(die) <4:ADP/compound:prt>(mit)
    <ROOT> <5:PROPN/root>(Gaming) <7:NOUN/flat>(PC)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - obj
  sentence: <1:ADP/case>(Mit) <2:PROPN/root>(Sherlocks) <ROOT> <3:NOUN/obj>(Detektivblick)
    <4:VERB/root>(findet) <5:PRON/nsubj>(man) <6:CCONJ/cc>(und) <7:VERB/conj>(untersucht)
    <8:NOUN/obj>(Hinweise)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 5
    - acl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det>(Jedem) <2:NOUN/obl:arg>(Trend) <3:PART/mark>(zu) <4:VERB/acl>(folgen)
    <5:VERB/root>(zeugt) <6:ADP/case>(von) <7:ADJ/advmod>(echt) <ROOT> <8:NOUN/root>(Talent)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Diese) <2:NOUN/nsubj>(Paparazzi) <3:VERB/root>(holen) <4:PRON/obj>(mich)
    <5:DET/obj>(ein) <6:ADP/compound:prt>(mit) <ROOT> <7:PROPN/root>(Speed)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 8
    - nmod
  sentence: "<1:DET/nsubj>(Dies) <2:VERB/root>(stand) <3:ADJ/advmod>(nat\xFCrlich)\
    \ <4:ADP/compound:prt>(in) <ROOT> <5:NOUN/root>(Widerspruch) <6:ADP/case>(zu)\
    \ <7:DET/det>(der) <8:NOUN/nmod>(Grundidee) <9:DET/det>(des) <10:PROPN/nmod>(Quad)\
    \ <11:ADP/case>(mit) <12:DET/det>(dem) <13:NOUN/nmod>(Ergebnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Bau) <3:DET/det>(der) <4:NOUN/nmod>(Windr\xE4\
    der) <5:AUX/cop>(ist) <6:ADP/root>(mit) <ROOT> <7:NOUN/nsubj>(L\xE4rm) <8:ADJ/root>(verbunden)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 2
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/root>(Kippen) <3:ADP/case>(aus) <4:PROPN/nmod>(Tschechien)
    <5:ADP/dep>(mit) <ROOT> <6:NOUN/root>(Rabatt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - obj
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - mark
  - !!python/tuple
    - 13
    - 8
    - xcomp
  - !!python/tuple
    - 14
    - 8
    - aux
  sentence: "<1:DET/det>(ein) <2:ADJ/amod>(erstes) <3:NOUN/nsubj>(Bild) <4:ADV/advmod>(davon)\
    \ <5:VERB/root>(machen) <6:ADP/case>(mit) <7:ADV/advmod>(welch) <ROOT> <8:VERB/root>(Gef\xE4\
    lle) <9:PRON/nsubj>(wir) <10:PRON/obj>(es) <11:ADV/advmod>(hier) <12:PART/mark>(zu)\
    \ <13:VERB/xcomp>(tun) <14:AUX/aux>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(steht) <3:ADP/compound:prt>(in) <ROOT>
    <4:NOUN/root>(Widerspruch) <5:ADP/case>(zu) <6:DET/det>(dem) <7:ADJ/amod>(harmlosen)
    <8:NOUN/nmod>(Anschein)
krassen:
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(Anteil) <2:ADP/case>(an) <3:DET/nmod>(diesem) <ROOT> <4:ADJ/amod>(wirtschaftlichen)
    <5:NOUN/root>(Erfolg)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - nsubj
  - !!python/tuple
    - 9
    - 18
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 18
    - obl
  - !!python/tuple
    - 13
    - 18
    - advmod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 18
    - obl
  - !!python/tuple
    - 17
    - 18
    - mark
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(gibt) <4:PRON/expl>(es)
    <5:ADV/advmod>(aber) <6:ADV/advmod>(noch) <7:DET/det>(einen) <8:DET/nsubj>(anderen)
    <ROOT> <9:NOUN/obj>(Trick) <10:ADP/case>(um) <11:ADJ/amod>(illegales) <12:NOUN/obl>(Bargeld)
    <13:ADJ/advmod>(problemlos) <14:ADP/case>(auf) <15:DET/det>(das) <16:NOUN/obl>(Konto)
    <17:PART/mark>(zu) <18:VERB/root>(kriegen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:ADP/case>(au\xDFer) <2:PRON/root>(den) <ROOT> <3:NOUN/root>(Umgebungsdetails)\
    \ <5:ADP/case>(Auf) <6:DET/det>(jeden) <7:NOUN/nmod>(Fall)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 11
    - appos
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - nmod
  sentence: "<1:DET/det>(meisten) <2:NOUN/nsubj>(Leute) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:NOUN/nmod>(Westen) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/nmod>(Kopf)\
    \ <9:VERB/root>(haben) <10:DET/det>(ein) <11:NOUN/obj>(Land) <12:PRON/appos>(der)\
    \ <ROOT> <13:NOUN/root>(Gegens\xE4tze) <14:ADP/case>(zwischen) <15:NOUN/nmod>(Staatsmacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 12
    - obj
  - !!python/tuple
    - 2
    - 12
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - case
  - !!python/tuple
    - 4
    - 8
    - det
  - !!python/tuple
    - 5
    - 8
    - amod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 12
    - obl
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 12
    - obl
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - compound:prt
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 14
    - nmod
  sentence: "<1:PRON/obj>(die) <2:PRON/nsubj>(wir) <3:ADP/case>(aus) <4:DET/det>(den)\
    \ <5:ADJ/amod>(letzten) <6:ADV/advmod>(\xFCber) <7:NUM/nummod>(40) <8:NOUN/obl>(Jahren)\
    \ <9:ADP/case>(von) <10:PRON/obl>(ihm) <11:ADV/advmod>(so) <12:VERB/root>(kennen)\
    \ <13:ADP/compound:prt>(Mit) <ROOT> <14:NOUN/root>(K\xE4mpfen) <15:DET/det>(einer)\
    \ <16:ADJ/nmod>(ungew\xF6hnlichen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: "<1:ADP/case>(von) <2:DET/det>(den) <3:NOUN/obl>(Mandalorianern) <4:AUX/aux>(hat)\
    \ <5:VERB/root>(lernen) <6:AUX/aux>(k\xF6nnen) <7:DET/det>(Einen) <8:ADJ/obj>(weiteren)\
    \ <ROOT> <9:NOUN/root>(Punkt) <10:AUX/aux>(k\xF6nnen) <11:PRON/nsubj>(wir) <12:ADV/advmod>(ganz)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 8
    - mark
  - !!python/tuple
    - 10
    - 8
    - cop
  sentence: "<1:ADV/root>(ner) <ROOT> <2:NOUN/compound>(Gangster) <4:NOUN/root>(Story)\
    \ <5:CCONJ/cc>(oder) <6:DET/det>(irgendein) <7:NOUN/conj>(Schei\xDF) <8:NOUN/conj>(fame)\
    \ <9:PART/mark>(zu) <10:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 5
    - obl
  sentence: <1:NOUN/root>(Landen) <2:ADP/advmod>(mit) <ROOT> <3:NOUN/root>(Maschen)
    <4:CCONJ/cc>(und) <5:VERB/conj>(lassen) <6:DET/det>(die) <7:ADJ/amod>(laschen)
    <8:NOUN/obj>(Metaphern) <9:ADP/case>(in) <10:NOUN/obl>(Taschen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - compound
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(nur) <4:ADP/case>(durch)\
    \ <5:NOUN/compound>(Fitness) <6:DET/obj>(einen) <ROOT> <7:NOUN/root>(R\xFCcken)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:VERB/root>(Dienten) <2:DET/det>(die) <3:NOUN/nsubj>(Massen) <4:PRON/obj>(dem)\
    \ <ROOT> <5:NOUN/root>(Gr\xF6\xDFenwahn) <6:ADP/case>(von) <7:DET/det>(ein) <8:NOUN/nmod>(Paar)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(schiebt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 5
    - conj
  sentence: <1:PROPN/nsubj>(Fallout) <2:PROPN/appos>(3) <3:VERB/root>(strotzt) <4:ADP/compound:prt>(vor)
    <ROOT> <5:NOUN/root>(Missionen) <6:CCONJ/cc>(und) <7:ADJ/amod>(coolen) <8:NOUN/conj>(Storylines)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obl:arg
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - parataxis
  - !!python/tuple
    - 10
    - 9
    - mark
  - !!python/tuple
    - 11
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(trotzdem) <3:VERB/root>(denke) <4:PRON/nsubj>(ich)
    <5:PRON/obl:arg>(mir) <6:PRON/nsubj>(Ich) <7:AUX/cop>(bin) <8:ADV/advmod>(so)
    <9:ADJ/parataxis>(froh) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(ich) <12:DET/obj>(diese)
    <ROOT> <13:NOUN/root>(Geschichten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <3:DET/obj>(keinen) <ROOT> <4:NOUN/root>(Ausdauer)
    <6:CCONJ/cc>(oder) <7:NOUN/conj>(Kraftsport)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/nsubj>(Freunde) <3:AUX/root>(sind)
    <4:ADV/advmod>(gerade) <5:ADP/case>(an) <6:DET/det>(dem) <7:PROPN/obl>(Kekswichsen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(befinden) <3:PRON/obj>(uns) <4:ADP/case>(in)
    <5:DET/obl>(einem) <ROOT> <6:NOUN/root>(Wechsel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det>(Diese) <2:NOUN/nsubj>(Fl\xFCssigkeit) <3:VERB/root>(hat)\
    \ <4:ADV/advmod>(so) <5:DET/obj>(einen) <ROOT> <6:NOUN/root>(Geruch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - ccomp
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:PROPN/nsubj>(Tobi) <2:VERB/root>(sagt) <3:VERB/ccomp>(h\xE4tte) <4:PRON/nsubj>(er)\
    \ <5:DET/det>(mehr) <6:NOUN/obj>(Infos) <7:ADP/case>(zu) <8:PRON/nmod>(dem) <ROOT>\
    \ <9:NOUN/root>(Abh\xE4ngigkeitspotential) <10:ADP/case>(von) <11:ADJ/nmod>(synthethischen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  sentence: "<1:ADV/advmod>(doch) <2:DET/root>(einen) <ROOT> <3:NOUN/root>(Verhaltenskodex)\
    \ <4:ADP/case>(f\xFCr) <5:NOUN/nmod>(Zulieferer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:ADV/root>(echt) <ROOT> <3:NOUN/root>(Respekt) <4:ADV/advmod>(davor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 9
    - obl
  sentence: "<1:NOUN/nsubj>(L\xF6cher) <2:NOUN/root>(Galaxien) <3:CCONJ/cc>(und) <4:ADV/advmod>(noch)\
    \ <5:ADV/advmod>(viel) <6:ADV/conj>(mehr) <ROOT> <7:NOUN/nsubj>(Krempel) <8:ADV/advmod>(Wie)\
    \ <9:VERB/root>(kam) <10:PRON/nsubj>(es) <11:ADV/advmod>(aber) <12:ADP/case>(zu)\
    \ <13:ADV/advmod>(so) <14:DET/det>(einem) <15:NOUN/obl>(Universum)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:DET/det>(das) <3:NOUN/nsubj>(Spielprinzip) <4:VERB/root>(sitzt)\
    \ <5:ADJ/amod>(kugelige) <6:NOUN/obj>(Tiere) <7:ADP/compound:prt>(in) <ROOT> <8:NOUN/root>(K\xE4\
    mpfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Da) <2:VERB/root>(haben) <3:PRON/nsubj>(wir) <4:ADV/advmod>(noch)\
    \ <5:PART/advmod>(nicht) <6:PRON/nsubj>(die) <7:ADJ/advmod>(richtig) <ROOT> <8:NOUN/obj>(Vorw\xFC\
    rfe) <9:VERB/root>(rausgehauen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(Weil) <2:PRON/nsubj>(man) <3:ADV/advmod>(selbst) <4:DET/obj>(diesen)
    <ROOT> <5:NOUN/root>(Ansatz)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 5
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:ADV/advmod>(Jetzt) <2:VERB/root>(wei\xDF) <3:PRON/nsubj>(man) <4:PRON/obj>(sie)\
    \ <5:VERB/conj>(wird) <6:ADP/case>(an) <7:DET/det>(dem) <8:ADJ/amod>(n\xE4chsten)\
    \ <9:NOUN/obl>(Tag) <10:DET/obj>(einen) <ROOT> <11:NOUN/root>(Pilz)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:PRON/obj>(was) <3:VERB/root>(will) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(auch) <6:ADP/compound:prt>(mit) <ROOT> <7:PROPN/root>(Skills)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/root>(Massenm\xF6rder) <3:ADP/case>(mit) <4:PRON/nmod>(dem)\
    \ <ROOT> <5:NOUN/root>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(oder) <2:PRON/obj>(sich) <3:VERB/root>(erbrechen) <4:CCONJ/cc>(oder)
    <5:ADJ/conj>(extrem) <ROOT> <6:NOUN/dep>(Sport) <7:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - det:poss
  - !!python/tuple
    - 7
    - 10
    - dep
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(er) <3:ADV/advmod>(irgendwie) <4:ADV/advmod>(so)
    <5:ADP/case>(mit) <6:DET/det:poss>(seinen) <ROOT> <7:NOUN/dep>(Problemen) <8:ADV/advmod>(so)
    <9:ADV/advmod>(gut) <10:VERB/root>(umgehen) <11:AUX/aux>(konnte)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 4
    - advcl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:NOUN/obj>(s) <3:VERB/advcl>(losgeht) <4:VERB/root>(hat)
    <5:PRON/nsubj>(man) <6:PRON/obj>(den) <ROOT> <7:NOUN/root>(Adrenalinkick)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: "<1:ADP/root>(In) <ROOT> <2:NOUN/dep>(F\xE4llen) <3:ADV/advmod>(so) <4:PRON/root>(was)\
    \ <5:ADP/case>(wie) <6:PROPN/nmod>(Spring) <7:ADP/case>(aus) <8:DET/det>(dem)\
    \ <9:NOUN/nmod>(Fenster)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/root>(an) <ROOT> <2:NOUN/compound>(Karate) <4:NOUN/nsubj>(Moves)\
    \ <5:ADV/advmod>(direkt) <6:ADV/advmod>(wieder) <7:ADP/case>(nach) <8:ADV/advmod>(drau\xDF\
    en) <9:VERB/root>(pr\xFCgelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(kam) <3:ADV/advmod>(damals) <4:ADV/advmod>(zu)
    <5:ADJ/advmod>(richtig) <ROOT> <6:NOUN/root>(Ausschreitungen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ganz) <2:ADV/advmod>(ehrlich) <3:ADV/advmod>(Vielleicht)
    <4:VERB/root>(liegt) <5:PRON/nsubj>(es) <6:ADV/advmod>(einfach) <7:ADP/case>(an)
    <8:PRON/obl>(der) <ROOT> <9:NOUN/root>(Natur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:ADV/advmod>(Heute) <2:VERB/root>(geht) <3:PRON/nsubj>(es) <4:ADP/case>(um)\
    \ <5:DET/obl>(einen) <6:ADV/advmod>(ziemlich) <ROOT> <7:NOUN/root>(Sch\xF6nheitsfilter)\
    \ <8:ADP/case>(von) <9:PROPN/nmod>(TikTok)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 7
    - obl
  sentence: "<1:NOUN/nsubj>(Zukunfts\xE4ngste) <2:VERB/root>(haben) <3:SCONJ/mark>(dass)\
    \ <4:PRON/nsubj>(sie) <5:DET/obj>(einen) <ROOT> <6:NOUN/obj>(Leistungsdruck) <7:VERB/root>(versp\xFC\
    ren) <9:PRON/nsubj>(das) <10:ADV/advmod>(schon) <11:ADV/advmod>(irgendwie) <12:ADP/case>(seit)\
    \ <13:NOUN/obl>(Kinderzeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - flat
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 11
    - obj
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - amod
  - !!python/tuple
    - 16
    - 13
    - nmod
  sentence: "<1:ADV/advmod>(Vielleicht) <2:AUX/aux>(k\xF6nnt) <3:PRON/nsubj>(ihr)\
    \ <4:PRON/obj>(euch) <5:VERB/root>(erinnern) <6:ADP/case>(W\xE4hrend) <7:PRON/obl>(der)\
    \ <ROOT> <8:PROPN/nsubj>(Lockdown) <10:NOUN/flat>(Politik) <11:VERB/root>(haben)\
    \ <12:DET/det>(die) <13:NOUN/obj>(Menschen) <14:ADP/case>(f\xFCr) <15:ADJ/amod>(chinesische)\
    \ <16:NOUN/nmod>(Verh\xE4ltnisse)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(haben) <2:PRON/obj>(sich) <3:ADV/advmod>(mittlerweile) <4:ADP/compound:prt>(zu)
    <ROOT> <5:NOUN/dep>(Wertanlagen) <6:VERB/root>(entwickelt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advcl
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: "<1:VERB/advcl>(dachte) <2:PRON/nsubj>(ich) <3:VERB/root>(mache) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(heute) <6:ADV/advmod>(mal) <7:DET/det>(ein) <8:NOUN/obj>(Video)\
    \ <9:ADP/case>(mit) <10:NUM/nmod>(50) <ROOT> <11:NOUN/root>(Fakten) <12:ADP/case>(\xFC\
    ber) <13:NOUN/nmod>(Kampfdroiden)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 8
    - dep
  - !!python/tuple
    - 14
    - 8
    - nsubj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(waren) <3:ADV/advmod>(aber) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(schon) <6:DET/det>(die) <7:NUM/root>(50) <ROOT> <8:NOUN/root>(Fakten)\
    \ <9:ADP/case>(\xFCber) <10:NOUN/nmod>(Kampfdroiden) <11:DET/det>(der) <12:NOUN/nmod>(Separatisten)\
    \ <13:PRON/dep>(die) <14:PRON/nsubj>(ich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:ADV/root>(so) <ROOT> <3:NOUN/root>(Folgen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 12
    - dep
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 14
    - 16
    - cc
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 12
    - conj
  sentence: <1:VERB/root>(dauert) <2:ADP/case>(mit) <3:DET/obl>(diesen) <ROOT> <4:NOUN/dep>(Modellen)
    <5:ADV/advmod>(echt) <6:ADJ/amod>(lange) <7:PRON/nsubj>(Wir) <8:AUX/cop>(sind)
    <9:ADV/advmod>(da) <10:ADV/advmod>(aber) <11:ADV/advmod>(mal) <12:VERB/root>(eingetaucht)
    <14:CCONJ/cc>(und) <15:PRON/nsubj>(es) <16:AUX/conj>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 4
    - obl
  - !!python/tuple
    - 14
    - 12
    - flat
  - !!python/tuple
    - 15
    - 4
    - advmod
  sentence: "<1:ADP/case>(Zu) <2:PRON/root>(der) <ROOT> <3:NOUN/obj>(Abk\xFChlung)\
    \ <4:VERB/root>(kommt) <5:PRON/expl>(es) <6:SCONJ/mark>(weil) <7:ADP/case>(in)\
    \ <8:DET/det>(dem) <9:NOUN/obl>(Klimamodell) <10:ADP/case>(bei) <11:DET/det>(dem)\
    \ <12:PROPN/obl>(AMOC) <14:NOUN/flat>(Kollaps) <15:ADV/advmod>(sehr)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PROPN/nsubj>(Boeing) <2:VERB/root>(hat) <3:ADV/advmod>(einfach) <4:ADP/case>(an)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(Projekten) <7:ADP/case>(wie) <8:DET/det>(dem)
    <9:NOUN/nmod>(Mondauto)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:PRON/obj>(es) <4:ADV/advmod>(mal)
    <5:ADP/compound:prt>(mit) <ROOT> <6:NOUN/nsubj>(Verfolgungsjagden) <7:VERB/root>(versucht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(mobilisiert) <3:ADV/advmod>(immer) <4:ADV/advmod>(wieder)
    <5:ADP/compound:prt>(mit) <ROOT> <6:NOUN/root>(Worten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(tat) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(damit) <6:ADV/advmod>(selbst) <7:ADV/advmod>(auch) <8:ADV/advmod>(kein'n)
    <ROOT> <9:NOUN/root>(Gefall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(auch) <2:PRON/root>(die) <ROOT> <3:NOUN/compound>(Nerd)
    <5:NOUN/root>(Lappen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(deshalb) <3:ADP/case>(zu) <4:DET/root>(einem)
    <ROOT> <5:NOUN/root>(Bindungsverhalten)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(mal) <3:ADV/advmod>(ehrlich) <4:PROPN/nsubj>(Daniel)
    <5:PRON/nsubj>(das) <6:VERB/root>(klingt) <7:ADP/case>(nach) <8:DET/obl>(einem)
    <ROOT> <9:NOUN/root>(Schneeballsystem)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 2
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:DET/det>(die) <2:NOUN/root>(Evolution) <3:DET/det>(der) <4:PROPN/nmod>(Droidekas)
    <5:ADP/case>(von) <6:DET/det>(diesen) <7:NOUN/nmod>(Antiken) <8:NOUN/appos>(Dingern)
    <9:ADP/case>(bis) <10:ADV/advmod>(hin) <11:ADP/case>(zu) <12:DET/nmod>(diesen)
    <ROOT> <13:NOUN/root>(Kriegsmaschinen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - mark
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - advcl
  sentence: <1:VERB/root>(Gib) <2:PRON/obj>(ihr) <3:ADV/advmod>(nochmal) <4:DET/obj>(einen)
    <ROOT> <5:PROPN/nsubj>(Buff) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(sie) <8:ADV/advmod>(einfach)
    <9:ADV/advmod>(nichtmal) <10:VERB/root>(sterben) <11:SCONJ/mark>(wenn) <12:PRON/nsubj>(sie)
    <13:VERB/advcl>(stechen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 2
    - det
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - dep
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(h\xF6rt) <3:PRON/obj>(sich) <4:ADV/advmod>(erst)\
    \ <5:ADV/advmod>(mal) <6:ADP/case>(nach) <7:DET/det>(einem) <8:ADV/advmod>(ziemlich)\
    \ <ROOT> <9:NOUN/root>(Vorwurf) <10:ADP/dep>(an)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 3
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Frage) <3:AUX/root>(ist) <4:ADJ/advmod>(nat\xFC\
    rlich) <5:SCONJ/mark>(ob) <6:PROPN/nmod>(Putins) <7:NOUN/nsubj>(Ambitionen) <8:PART/advmod>(nicht)\
    \ <9:ADJ/advmod>(erneut) <10:ADP/case>(auf) <11:DET/obl>(eine) <ROOT> <12:NOUN/root>(Fehleinsch\xE4\
    tzung)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 13
    - nmod
  - !!python/tuple
    - 5
    - 13
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 13
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - case
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 13
    - nmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - xcomp
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det>(den) <3:ADJ/amod>(letzten) <4:NOUN/nmod>(Jahren)\
    \ <5:AUX/cop>(ist) <6:DET/det>(das) <7:NOUN/nsubj>(Skifahren) <8:ADP/case>(in)\
    \ <9:DET/det>(dem) <10:ADJ/amod>(freien) <11:NOUN/nmod>(Gel\xE4nde) <12:ADP/case>(zu)\
    \ <13:DET/root>(einem) <ROOT> <14:NOUN/xcomp>(Trend) <15:VERB/root>(geworden)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - appos
  - !!python/tuple
    - 9
    - 8
    - amod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(So) <2:DET/det>(ein) <3:ADJ/amod>(alter) <4:NOUN/root>(Mann)
    <5:PRON/nsubj>(der) <6:ADV/advmod>(aber) <7:ADV/advmod>(so) <8:DET/appos>(einen)
    <9:ADJ/amod>(ganz) <ROOT> <10:NOUN/nsubj>(Sportwagen) <11:VERB/root>(hat)
- dependencies:
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 10
    - 8
    - flat
  sentence: <2:ADV/advmod>(Hallo) <3:PRON/nsubj>(Wir) <4:VERB/root>(hatten) <5:ADV/advmod>(da)
    <6:DET/obj>(einen) <7:ADJ/advmod>(richtig) <ROOT> <8:PROPN/root>(Buddy) <10:NOUN/flat>(Moment)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:CCONJ/cc>(und) <3:ADV/advmod>(jetzt) <4:VERB/root>(kommen)
    <5:PRON/nsubj>(die) <ROOT> <6:NOUN/root>(Unterschiede)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - obj
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - acl
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 7
    - acl
  - !!python/tuple
    - 14
    - 13
    - compound:prt
  sentence: "<1:ADP/case>(in) <2:DET/det>(der) <3:NOUN/obl>(Atmosph\xE4re) <4:VERB/root>(erzeugen)\
    \ <5:AUX/aux>(kann) <6:DET/nsubj>(Diese) <ROOT> <7:NOUN/root>(Laser) <8:PRON/obj>(die)\
    \ <9:PRON/nsubj>(wir) <10:ADV/advmod>(gerade) <11:VERB/acl>(gesehen) <12:AUX/aux>(haben)\
    \ <13:VERB/acl>(kommen) <14:ADP/compound:prt>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 9
    - dep
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Tiersch\xFCtzer) <2:VERB/root>(haben) <3:PRON/obl:arg>(mir)\
    \ <4:ADP/compound:prt>(von) <ROOT> <5:NOUN/dep>(Zust\xE4nden) <6:ADP/case>(auf)\
    \ <7:DET/det>(den) <8:NOUN/nmod>(Farmen) <9:VERB/root>(berichtet)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 2
    - ccomp
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wusste) <3:ADV/advmod>(vorab) <4:ADV/advmod>(schon)
    <5:NOUN/obj>(Tiere) <6:VERB/ccomp>(leben) <7:ADV/advmod>(da) <8:ADP/compound:prt>(unter)
    <ROOT> <9:NOUN/root>(Bedingungen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/root>(Einen) <2:ADV/advmod>(so) <ROOT> <3:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 15
    - nsubj
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 15
    - cop
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 18
    - nsubj
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 15
    - appos
  - !!python/tuple
    - 19
    - 22
    - dep
  - !!python/tuple
    - 20
    - 21
    - case
  - !!python/tuple
    - 21
    - 22
    - obl
  - !!python/tuple
    - 22
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(der) <3:NOUN/nsubj>(Grund) <4:ADV/mark>(warum)\
    \ <5:PRON/nsubj>(ich) <6:PRON/obj>(euch) <7:PRON/obj>(das) <8:DET/obj>(alles)\
    \ <9:VERB/ccomp>(erz\xE4hle) <10:AUX/aux>(ist) <11:PRON/nsubj>(es) <12:AUX/cop>(ist)\
    \ <13:ADV/advmod>(genau) <14:DET/det>(dieser) <15:NOUN/root>(Scam) <16:PRON/nsubj>(der)\
    \ <17:ADV/advmod>(auch) <18:PROPN/appos>(Teddys) <ROOT> <19:NOUN/dep>(Lifestyle)\
    \ <20:ADP/case>(auf) <21:PROPN/obl>(Insta) <22:VERB/root>(erkl\xE4rt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - det:poss
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 11
    - obj
  sentence: "<1:ADV/advmod>(Irgendwann) <2:VERB/root>(wurde) <3:DET/det>(die) <4:ADJ/amod>(amerikanische)\
    \ <5:NOUN/nsubj>(Einwanderungsbeh\xF6rde) <6:ADP/case>(auf) <7:DET/det:poss>(seinen)\
    \ <ROOT> <8:NOUN/nsubj>(Lifestyle) <9:ADJ/root>(aufmerksam) <10:CCONJ/cc>(und)\
    \ <11:VERB/conj>(dachte) <12:PRON/obj>(sich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 8
    - ccomp
  sentence: "<1:PRON/nsubj>(sie) <2:VERB/root>(h\xE4tten) <3:ADV/advmod>(so) <4:ADV/advmod>(nen)\
    \ <ROOT> <5:NOUN/nsubj>(K\xF6rper) <6:PROPN/appos>(Nee) <7:DET/nsubj>(Alle) <8:VERB/root>(machen)\
    \ <9:PRON/obj>(was) <10:PRON/obj>(sie) <11:AUX/ccomp>(wollen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADP/case>(um) <2:DET/root>(einen) <ROOT> <3:NOUN/obj>(K\xF6rper) <4:PART/mark>(zu)\
    \ <5:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 4
    - acl
  sentence: "<1:DET/root>(Welche) <ROOT> <2:PROPN/nsubj>(Trails) <3:PRON/nsubj>(sie)\
    \ <4:VERB/root>(f\xE4hrt) <5:DET/det>(welche) <6:NOUN/obj>(Menschen) <7:PRON/obj>(sie)\
    \ <8:VERB/acl>(trifft)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - parataxis
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 5
    - aux
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(Dachte) <2:ADV/advmod>(oft) <4:PRON/nsubj>(Ihr) <5:VERB/parataxis>(sagt)
    <6:PRON/obj>(ihr) <7:AUX/aux>(wollt) <8:PRON/obj>(den) <ROOT> <9:NOUN/root>(Stoff)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - amod
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 7
    - conj
  sentence: "<1:CCONJ/cc>(aber) <2:ADV/advmod>(halt) <3:ADV/advmod>(einfach) <4:ADV/advmod>(lieber)\
    \ <5:ADP/case>(zu) <6:PRON/root>(dem) <ROOT> <7:NOUN/root>(Gangster) <8:CCONJ/cc>(oder)\
    \ <9:ADJ/amod>(gest\xE4hlten) <10:ADJ/amod>(Space) <11:NOUN/conj>(Marine)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 12
    - mark
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 6
    - csubj
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(entschuldige) <3:PRON/obj>(mich) <4:ADP/case>(f\xFC\
    r) <5:DET/det>(die) <ROOT> <6:NOUN/root>(Worte) <7:ADP/case>(in) <8:DET/det>(dem)\
    \ <9:NOUN/nmod>(Zitat) <10:SCONJ/mark>(das) <11:PRON/nsubj>(ich) <12:VERB/csubj>(wiedergebe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(wird) <3:ADV/advmod>(einfach) <4:ADP/case>(zu)
    <5:PRON/xcomp>(dem) <ROOT> <6:NOUN/dep>(Thema) <7:VERB/root>(gemacht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(so) <3:VERB/root>(machen) <4:PRON/nsubj>(wir)\
    \ <5:ADP/case>(aus) <6:PRON/obl>(deinen) <ROOT> <7:NOUN/root>(L\xF6wen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(sieht) <3:ADV/advmod>(halt) <4:ADV/advmod>(einfach)
    <5:ADP/case>(an) <6:DET/obl>(diesem) <ROOT> <7:NOUN/root>(Hype)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(musst') <3:PRON/nsubj>(ich) <4:ADV/advmod>(unbedingt)\
    \ <5:ADV/advmod>(doch) <6:ADV/advmod>(noch) <7:ADP/compound:prt>(mit) <ROOT> <8:NOUN/dep>(Leuten)\
    \ <9:VERB/root>(h\xE4ngen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:PROPN/flat>(Zappelphilipp) <3:VERB/root>(machst)
    <4:DET/obj>(einen) <5:ADP/compound:prt>(auf) <ROOT> <6:PROPN/root>(Spitter)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:ADJ/amod>(kleine) <3:NOUN/nsubj>(Missgeburt) <4:VERB/root>(hast)
    <5:ADV/advmod>(mal) <ROOT> <7:NOUN/dep>(Film) <8:VERB/root>(geschaut)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Entourage) <2:ADJ/advmod>(voll) <3:ADP/dep>(mit) <ROOT>
    <4:NOUN/root>(Gangstern)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(er) <3:NOUN/root>(mein'n) <ROOT> <4:NOUN/nsubj>(Drogenkonsum)
    <5:VERB/root>(reflektiert)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/mark>(Als) <2:PROPN/nsubj>(Tenny) <3:ADV/advmod>(schon) <4:ADV/advmod>('n)
    <5:ADJ/root>(richtig) <ROOT> <6:NOUN/root>(Hype)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:ADP/case>(An) <2:DET/det>(alle) <3:DET/root>(diese) <ROOT> <4:NOUN/compound>(Gangster)\
    \ <6:NOUN/root>(Rapper) <7:ADV/advmod>(da) <8:ADV/advmod>(drau\xDFen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(stehst) <3:ADV/advmod>(schon) <4:ADV/advmod>(wieder)
    <5:ADP/case>(vor) <6:DET/det>(der) <7:NOUN/obl>(Einfahrt) <8:ADP/case>(mit) <9:PROPN/obl>(dei)
    <ROOT> <11:PROPN/root>(Maybach)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Relationships) <2:VERB/root>(enden) <3:ADV/advmod>(oft)
    <4:ADP/compound:prt>(in) <ROOT> <5:NOUN/root>(Kollision)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:ADV/root>(ein'n) <ROOT> <3:NOUN/obj>(Erfolg) <4:PRON/nsubj>(wir)
    <5:VERB/root>(hatten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(hab'n) <2:ADJ/nmod>(paar) <3:NOUN/obj>(Batzen) <4:CCONJ/cc>(und)
    <ROOT> <6:NOUN/root>(Wagen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Schon) <2:ADP/case>(als) <3:ADJ/amod>(kleiner) <4:NOUN/obl>(Junge)
    <5:VERB/root>(hab) <7:PRON/nsubj>(ich) <8:DET/obj>(diese) <ROOT> <9:NOUN/dep>(Parts)
    <10:VERB/root>(gespuckt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - obj
  - !!python/tuple
    - 8
    - 1
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:PART/advmod>(nicht) <3:ADP/case>(vor) <4:DET/det>(den)
    <5:NOUN/obl>(Kindern) <6:DET/obj>(ein) <8:ADP/compound:prt>(auf) <ROOT> <9:NOUN/root>(Medizinmann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Absztrakkt) <2:VERB/root>(guckt) <3:ADJ/xcomp>(b\xF6se)\
    \ <4:CCONJ/cc>(und) <5:VERB/conj>(hat) <ROOT> <7:PROPN/root>(Flow)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Er) <2:VERB/root>(f\xE4hrt) <ROOT> <4:NOUN/root>(Film)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  sentence: <1:VERB/root>(Denken) <2:PRON/obj>(du) <3:CCONJ/cc>(und) <4:PRON/conj>(deine)
    <ROOT> <5:NOUN/nsubj>(Jungs) <6:PRON/appos>(du) <7:AUX/cop>(seist) <8:DET/det>(der)
    <9:NOUN/root>(Boss) <10:ADP/case>(an) <11:DET/det>(dem) <12:NOUN/nmod>(Block)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:DET/det>(Alle) <2:PRON/root>(deine) <ROOT> <3:NOUN/compound>(Ollen)\
    \ <4:ADJ/amod>(ham) <5:NOUN/root>(Segelohren) <6:ADP/case>(wie) <7:NOUN/nmod>(Au\xDF\
    enspiegel)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - det
  - !!python/tuple
    - 2
    - 4
    - amod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Eine) <2:ADJ/amod>(erfahrene) <3:ADJ/amod>(langj\xE4hrige)\
    \ <4:NOUN/root>(S\xE4ngerin) <5:ADP/case>(mit) <6:DET/nmod>(einer) <ROOT> <7:NOUN/root>(Stimme)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 9
    - det
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - conj
  sentence: "<1:ADP/case>(\xDCber) <2:PRON/root>(die) <ROOT> <3:NOUN/root>(Frauen)\
    \ <4:CCONJ/cc>(und) <5:DET/det>(den) <6:ADV/advmod>(ach) <7:ADV/advmod>(so) <8:ADJ/amod>(hei\xDF\
    en) <9:NOUN/conj>(Flirt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADV/advmod>(ja) <4:ADV/advmod>(voll)
    <5:PRON/obj>(den) <ROOT> <6:PROPN/root>(Flow)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(ja) <2:PRON/nsubj>(ich) <3:VERB/root>(komm) <4:ADP/compound:prt>(mit)
    <ROOT> <5:NOUN/root>(Gangstern)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(hab) <2:PRON/nsubj>(ich) <3:DET/obj>(ein) <ROOT> <4:NOUN/root>(Job)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - nmod
  sentence: <1:ADV/advmod>(dann) <2:ADV/advmod>(auch) <3:ADV/advmod>(noch) <4:DET/nsubj>(einem)
    <5:ADJ/root>(richtig) <ROOT> <6:ADJ/amod>(lustigen) <7:NOUN/root>(Plot) <8:PROPN/appos>(Twist)
    <9:ADP/case>(an) <10:DET/det>(dem) <11:NOUN/nmod>(Ende)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(damit) <2:VERB/root>(meine) <3:PRON/nsubj>(ich) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(mal) <6:DET/obj>(diese) <ROOT> <7:NOUN/root>(Beispiele)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(eure) <ROOT> <3:NOUN/compound>(Rap) <5:NOUN/nsubj>(Idole)
    <6:ADV/advmod>(sowieso) <7:ADV/advmod>(nur) <8:NOUN/root>(Arschkriecher)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADV/advmod>(noch) <2:DET/det>(das) <3:NOUN/root>(Potenzial) <4:ADP/case>(f\xFC\
    r) <5:DET/nmod>(einen) <ROOT> <6:PROPN/nsubj>(Impact) <7:VERB/root>(gehabt) <8:AUX/aux>(h\xE4\
    tte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Niemand) <2:VERB/root>(hat) <3:ADV/advmod>(so) <4:NOUN/obj>(n)
    <ROOT> <5:PROPN/root>(Aim) <6:CCONJ/case>(wie) <7:PRON/nmod>(du)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det:poss>(Meiner) <2:NOUN/obl>(Meinung) <3:ADP/case>(nach) <4:VERB/root>(gab)
    <5:PRON/expl>(es) <6:ADV/advmod>(noch) <7:ADV/advmod>(nie) <8:ADV/advmod>(so)
    <9:DET/obj>(einen) <ROOT> <10:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <ROOT> <4:NOUN/root>(Appetit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  sentence: "<1:PRON/root>(Ihr) <ROOT> <2:PROPN/nsubj>(Killer) <3:VERB/root>(h\xF6\
    rt) <4:ADV/advmod>(mal) <5:ADP/compound:prt>(zu)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(macht) <3:DET/obj>(alle) <ROOT> <4:PROPN/root>(Seller)
    <5:ADP/case>(mit) <6:NUM/nummod>(acht) <7:NOUN/nmod>(Bestellern)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - obj
  - !!python/tuple
    - 10
    - 11
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:AUX/aux>(werde) <4:PART/advmod>(nicht)
    <5:VERB/root>(blenden) <6:ADV/advmod>(auch) <7:SCONJ/mark>(wenn) <8:PRON/nsubj>(ich)
    <9:PRON/obj>(den) <ROOT> <10:NOUN/dep>(Weg) <11:VERB/root>(lauf)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:DET/det>(Alle) <2:PRON/root>(deine) <ROOT> <3:NOUN/nsubj>(Ollen) <4:VERB/root>(haben)\
    \ <5:NOUN/obj>(Segelohren) <6:ADP/case>(wie) <7:NOUN/nmod>(Au\xDFenspiegel)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/root>(Ihr) <ROOT> <2:PROPN/nsubj>(Baller) <3:AUX/aux>(werdet)\
    \ <4:ADV/advmod>(schon) <5:ADV/advmod>(bald) <6:ADP/case>(auf) <7:DET/det>(der)\
    \ <8:NOUN/obl>(Stra\xDFe) <9:VERB/root>(zelten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 6
    - nmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 2
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Deshalb) <2:VERB/root>(haben) <3:PROPN/nsubj>(Meloni)\
    \ <4:CCONJ/cc>(und) <5:DET/det>(die) <6:NOUN/conj>(Br\xFCder) <7:PROPN/nmod>(Italiens)\
    \ <8:ADV/advmod>(auch) <9:DET/obj>(einen) <ROOT> <10:NOUN/root>(Zuwachs)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - det:poss
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:AUX/cop>(bin) <3:ADV/advmod>(danach) <4:VERB/root>(weggeflyt)
    <6:ADP/case>(in) <7:DET/det:poss>(meinem) <ROOT> <8:PROPN/root>(Jet)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/dep>(Marketing) <2:VERB/root>(studieren) <3:CCONJ/cc>(und) <4:ADV/advmod>(dann)\
    \ <5:ADP/case>(f\xFCr) <6:DET/obl>(einen) <ROOT> <7:NOUN/dep>(Konzern) <8:VERB/root>(arbeiten)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADP/case>(durch) <3:DET/det>(dieses) <4:ADJ/amod>(krasse)\
    \ <5:NOUN/root>(Licht) <6:CCONJ/cc>(und) <7:DET/conj>(diese) <ROOT> <8:NOUN/root>(Ger\xE4\
    usche)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 4
    - obj
  - !!python/tuple
    - 9
    - 4
    - advmod
  sentence: <1:DET/root>(Dein) <ROOT> <3:PROPN/obj>(Porsche) <4:VERB/root>(seh') <5:PRON/nsubj>(ich)
    <6:DET/det>(alle) <7:NUM/nummod>(zwei) <8:NOUN/obj>(Minuten) <9:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(mach') <3:PRON/obj>(es) <4:ADP/case>(f\xFC\
    r) <5:DET/det>(den) <6:NOUN/obl>(Sound) <7:CCONJ/cc>(und) <8:DET/conj>(meine)\
    \ <ROOT> <9:NOUN/root>(Zeilen)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nmod
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - aux
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 12
    - nsubj
  - !!python/tuple
    - 15
    - 9
    - advmod
  sentence: "<1:PRON/nsubj>(man) <2:DET/det>(jeden) <3:NOUN/nmod>(Tag) <4:NUM/nummod>(zwei)\
    \ <5:NOUN/nmod>(Stunden) <6:ADV/advmod>(lang) <7:ADJ/root>(richtig) <ROOT> <8:NOUN/nsubj>(Sport)\
    \ <9:VERB/root>(machen) <10:AUX/aux>(muss) <11:ADV/advmod>(da) <12:AUX/aux>(muss)\
    \ <13:DET/det>(der) <14:NOUN/nsubj>(K\xF6rper) <15:ADJ/advmod>(relativ)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 4
    - parataxis
  - !!python/tuple
    - 13
    - 12
    - obj
  sentence: <1:ADV/advmod>(Doch) <2:ADP/root>(bei) <ROOT> <3:NOUN/obj>(Waffen) <4:VERB/root>(heisst)
    <5:PRON/expl>(es) <6:ADV/advmod>(hier) <7:ADV/advmod>(nur) <8:ADV/advmod>(noch)
    <10:DET/det>(der) <11:NOUN/nsubj>(Typ) <12:VERB/parataxis>(braucht) <13:NOUN/obj>(Knast)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - mark
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 6
    - 7
    - compound
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/mark>(Als) <2:PRON/nsubj>(ich) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:PROPN/compound>(Make) <6:PROPN/compound>(-Up) <7:NOUN/nmod>(Video) <8:PRON/root>(deine)
    <ROOT> <9:NOUN/nsubj>(Haare) <10:VERB/root>(sah)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PART/advmod>(Nicht) <2:ADV/advmod>(nur) <3:NOUN/nsubj>(Geld) <4:ADV/advmod>(auch)
    <5:ADJ/root>(richtig) <ROOT> <6:PROPN/root>(Loot)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(mit) <2:PRON/root>(dem) <ROOT> <3:NOUN/root>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - dep
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - amod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PROPN/dep>(Pull) <3:ADP/case>(auf) <4:DET/det>(die) <5:NOUN/root>(Wohnung)
    <6:ADP/case>(von) <7:PROPN/nmod>(Bonez) <8:PROPN/flat>(up) <9:ADP/case>(mit) <10:DET/det>(den)
    <11:ADJ/amod>(ganz) <ROOT> <12:NOUN/root>(Waffen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/amod>(Deutsche) <2:NOUN/nsubj>(Rapper) <3:VERB/root>(schieben)
    <4:DET/obj>(einen) <5:ADP/compound:prt>(zu) <ROOT> <6:NOUN/root>(Film)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Kuba) <2:AUX/cop>(ist) <3:ADJ/root>(gepr\xE4gt) <4:ADP/compound:prt>(von)\
    \ <ROOT> <5:ADJ/amod>(sozialen) <6:NOUN/root>(Gegens\xE4tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 6
    - appos
  sentence: <1:PROPN/root>(Eure) <ROOT> <2:NOUN/root>(Storys) <3:ADV/advmod>(nur)
    <4:ADP/case>(an) <5:DET/det>(dem) <6:NOUN/nmod>(Mittwochabend) <8:X/appos>(Nein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(Keine) <ROOT> <2:NOUN/root>(Hits)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Destiny) <2:PROPN/appos>(1) <3:DET/appos>(alle) <4:VERB/root>(hatten)
    <5:PROPN/obj>(mega) <6:PRON/appos>(die) <ROOT> <7:NOUN/root>(Erwartungen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(wir) <3:VERB/root>(haben) <4:ADV/advmod>(so)\
    \ <5:DET/obj>(einen) <ROOT> <6:NOUN/root>(Fachkr\xE4ftemangel)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - case
  - !!python/tuple
    - 5
    - 8
    - det
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:VERB/root>(geb) <4:ADP/case>(auf)
    <5:DET/det>(das) <6:NOUN/compound>(Natz) <8:NOUN/obl>(n) <ROOT> <9:NOUN/root>(Fick)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Schweden) <2:VERB/root>(versinkt) <3:ADV/advmod>(momentan)\
    \ <4:ADP/compound:prt>(in) <ROOT> <5:NOUN/root>(Bandenk\xE4mpfen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Auch) <2:ADV/advmod>(hier) <3:VERB/root>(sehen) <4:PRON/nsubj>(wir)
    <5:DET/obj>(einen) <ROOT> <6:NOUN/root>(Fall) <7:ADP/case>(von) <8:ADJ/amod>(spontaner)
    <9:NOUN/nmod>(Wunderheilung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(gibt) <2:PRON/nsubj>(es) <3:ADV/advmod>(sogar) <4:DET/obj>(einen)
    <5:ADJ/advmod>(richtig) <ROOT> <6:NOUN/root>(Anstieg)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 5
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - aux
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(das) <3:ADV/advmod>(noch) <4:ADV/advmod>(obendrauf)
    <5:VERB/root>(kommt) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(das) <8:DET/det>(eine)
    <9:ADJ/amod>(ganze) <10:NOUN/obj>(Reihe) <11:ADP/case>(von) <12:ADJ/amod>(fatalen)
    <13:ADJ/advmod>(wirklich) <ROOT> <14:NOUN/nsubj>(Nebenwirkungen) <15:VERB/root>(haben)
    <16:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - obj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 8
    - csubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/obj>(Sich) <2:ADP/case>(mit) <3:DET/det>(dem) <4:NOUN/obl>(Thema)\
    \ <5:NOUN/appos>(Zyklus) <6:NOUN/obj>(Bewusstsein) <7:VERB/csubj>(auseinanderzusetzen)\
    \ <8:VERB/root>(zeugt) <9:ADV/advmod>(nat\xFCrlich) <10:ADP/case>(von) <11:DET/obl>(einem)\
    \ <ROOT> <12:NOUN/root>(Privileg)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - obj
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 10
    - obj
  sentence: <1:PRON/nsubj>(Sie) <2:AUX/aux>(haben) <3:ADJ/amod>(riesige) <4:NOUN/obj>(Kirchen)
    <5:PRON/obj>(sie) <6:VERB/root>(haben) <ROOT> <7:NOUN/obj>(Einfluss) <8:CCONJ/cc>(und)
    <9:PRON/nsubj>(sie) <10:VERB/root>(haben) <11:DET/det>(eine) <12:NOUN/obj>(Agenda)
    <13:DET/det>(ein) <14:NOUN/obj>(Ziel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Mit) <ROOT> <2:NOUN/root>(Beats)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PROPN/root>(Prahl) <2:ADP/case>(mit) <3:PRON/nmod>(deinem) <ROOT>\
    \ <4:NOUN/root>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Um) <2:DET/root>(ihre) <ROOT> <3:NOUN/obj>(Regeln) <4:VERB/root>(durchzusetzen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Allein) <2:PRON/nsubj>(was) <3:DET/det>(dieses) <4:NOUN/obj>(Jahr)
    <5:VERB/root>(herauskommt) <6:ADP/compound:prt>(an) <ROOT> <7:NOUN/root>(Games)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 13
    - case
  - !!python/tuple
    - 10
    - 13
    - det
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 8
    - nmod
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Ding) <3:AUX/cop>(ist) <4:DET/root>(Diese)\
    \ <ROOT> <5:NOUN/nsubj>(Strafen) <6:AUX/cop>(sind) <7:DET/det>(kein) <8:NOUN/root>(\xDC\
    berbleibsel) <9:ADP/case>(aus) <10:DET/det>(einer) <11:ADV/advmod>(l\xE4ngst)\
    \ <12:ADJ/amod>(vergangenen) <13:NOUN/nmod>(Zeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/root>(einen) <2:ADV/advmod>(ziemlich) <ROOT> <3:ADV/advmod>(sogar)\
    \ <4:ADJ/amod>(t\xF6dlichen) <5:NOUN/root>(Lehrplan)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Leute) <3:VERB/root>(kommen) <4:ADV/advmod>(teilweise)
    <5:ADP/case>(aus) <6:ADJ/advmod>(total) <ROOT> <7:NOUN/root>(Akademikerfamilien)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(rasten) <2:ADP/compound:prt>(aus) <3:ADP/case>(zu) <4:DET/det>(den)
    <ROOT> <5:NOUN/root>(Sounds)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - obj
  - !!python/tuple
    - 7
    - 11
    - aux
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 15
    - obj
  - !!python/tuple
    - 14
    - 15
    - mark
  - !!python/tuple
    - 15
    - 11
    - xcomp
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(allerdings)\
    \ <5:DET/root>(keinen) <ROOT> <6:NOUN/obj>(Namen) <7:AUX/aux>(hat) <8:DET/det>(der)\
    \ <9:DET/obj>(einen) <10:ADV/advmod>(dazu) <11:VERB/root>(befugt) <12:DET/det>(den)\
    \ <13:NOUN/obj>(Namen) <14:PART/mark>(zu) <15:VERB/xcomp>(\xE4ndern)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 8
    - dep
  sentence: <2:PROPN/dep>(Markus) <4:ADV/advmod>(Wie) <5:VERB/root>(sehen) <6:SCONJ/mark>(denn)
    <7:DET/obj>(diese) <ROOT> <8:PROPN/compound>(Future) <10:NOUN/root>(Autos) <11:ADP/dep>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - amod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 4
    - nmod
  - !!python/tuple
    - 10
    - 4
    - cc
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(erkl\xE4rt) <3:PRON/nsubj>(die) <ROOT>\
    \ <4:NOUN/root>(Unterschiede) <5:ADP/case>(zwischen) <6:ADJ/amod>(ukrainischen)\
    \ <7:CCONJ/cc>(und) <8:ADJ/conj>(russischen) <9:NOUN/nmod>(Verlusten) <10:CCONJ/cc>(und)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - aux
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - det
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 2
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  sentence: <1:AUX/aux>(sind) <2:VERB/root>(machen) <3:DET/det>(die) <4:ADP/case>(in)
    <5:DET/det>(den) <6:NOUN/nmod>(Medien) <7:ADJ/xcomp>(kursierenden) <ROOT> <8:NOUN/root>(Unterschiede)
    <9:ADP/case>(zwischen) <10:ADJ/nmod>(ukrainischen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(von) <2:DET/root>(einem) <ROOT> <3:NOUN/root>(K\xF6rper)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:ADJ/amod>(letztes) <4:NOUN/obl>(Jahr)
    <5:DET/obj>(einen) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/root>(Hype)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(check) <5:ADV/advmod>(mal)
    <6:DET/nsubj>(mein) <ROOT> <8:PROPN/root>(Flow)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 9
    - dep
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<2:ADV/advmod>(Wie) <3:VERB/root>(schaffst) <4:PRON/nsubj>(du's) <5:ADV/advmod>(so)\
    \ <6:DET/obj>(einen) <ROOT> <7:NOUN/dep>(Part) <8:ADV/advmod>(einfach) <9:VERB/root>(hinzuschei\xDF\
    en)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:CCONJ/cc>(Denn) <2:PRON/nsubj>(eure) <3:VERB/root>(sogenannt) <ROOT>\
    \ <4:NOUN/nsubj>(Texte) <5:VERB/root>(gehn) <6:ADV/advmod>(so) <7:ADJ/advmod>(tief)\
    \ <8:ADP/case>(wie) <9:NOUN/nmod>(Katzenw\xE4sche)"
- dependencies:
  - !!python/tuple
    - 1
    - 11
    - cc
  - !!python/tuple
    - 2
    - 11
    - nsubj
  - !!python/tuple
    - 3
    - 11
    - cop
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 11
    - nmod
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - appos
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:NOUN/nsubj>(Genozide) <3:AUX/cop>(sind) <4:ADP/case>(in)
    <5:NOUN/compound>(Rap) <7:NOUN/nmod>(Musik) <8:ADV/advmod>(meistens) <9:ADV/advmod>(nur)
    <10:DET/det>(die) <11:NOUN/root>(Grundlage) <12:DET/appos>(einer) <ROOT> <13:NOUN/root>(Metapher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(wegen) <2:PRON/root>(den) <ROOT> <3:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/nsubj>(Dieses) <2:DET/det>(eine) <3:NOUN/root>(Gangsterlabel)\
    \ <4:ADP/case>(mit) <5:PRON/nmod>(dem) <ROOT> <6:NOUN/root>(L\xF6wensch\xE4del)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/root>(Flows) <3:CCONJ/cc>(und) <4:PRON/conj>(die)
    <ROOT> <5:NOUN/root>(Strophen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - obl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - acl
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/root>(die) <ROOT> <3:NOUN/root>(Rapstars) <4:ADP/case>(von)\
    \ <5:PRON/obl>(denen) <6:DET/det>(jeder) <7:NOUN/nsubj>(Pelz) <8:VERB/acl>(tr\xE4\
    gt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:DET/obj>(diesen)
    <ROOT> <5:ADJ/amod>(dreidimensionalen) <6:NOUN/root>(Wackelbildeffekt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(kommt) <3:PRON/nsubj>(es) <4:ADV/advmod>(oft)
    <5:ADP/case>(zu) <6:DET/obl>(einer) <ROOT> <7:NOUN/root>(Verschlechterung) <8:DET/det:poss>(ihres)
    <9:NOUN/nmod>(Zustands)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  sentence: <1:VERB/root>(Guckt) <2:PRON/obj>(euch) <3:ADV/advmod>(mal) <4:DET/obj>(diese)
    <ROOT> <5:PROPN/root>(Muckis) <6:ADP/compound:prt>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  sentence: <1:CCONJ/cc>(und) <2:DET/root>(diese) <ROOT> <3:NOUN/nsubj>(Tricks) <4:VERB/root>(machen)
    <5:ADP/case>(wie) <6:PROPN/obl>(Joe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - ccomp
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: "<1:VERB/root>(Zeig) <2:PRON/obl:arg>(mir) <3:ADV/advmod>(mal) <4:ADV/advmod>(wo)\
    \ <5:PRON/nsubj>(du) <6:PRON/nsubj>(die) <7:ADJ/ccomp>(richtig) <ROOT> <8:NOUN/nsubj>(Sachen)\
    \ <9:VERB/root>(machst) <11:ADV/advmod>(Da) <12:ADV/advmod>(dr\xFCben)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADP/root>(F\xFCr) <ROOT> <2:NOUN/root>(Applaus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/nsubj>(Alle) <2:VERB/root>(aufgeschmissen) <3:ADP/case>(mit) <4:DET/obl>(ihren)
    <ROOT> <5:NOUN/root>(Apparaten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/nsubj>(Manche) <2:VERB/root>(leisten) <3:PRON/obj>(sich) <4:ADV/compound:prt>(\xB4\
    nen) <ROOT> <5:PROPN/root>(Move)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:VERB/root>(Haftet) <2:ADV/advmod>(gerade) <3:ADP/case>(auf) <4:DET/det:poss>(meinen)
    <5:NOUN/obl>(sau) <ROOT> <6:PROPN/root>(Bauchmuscles)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(deine) <2:NOUN/root>(ganzen) <ROOT> <3:NOUN/nsubj>(Rapper)
    <4:AUX/cop>(sind) <5:ADV/advmod>(nur) <6:NOUN/root>(Topstory)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(den) <3:NOUN/root>(sau) <ROOT> <4:PROPN/nsubj>(Mercedes)\
    \ <5:ADV/advmod>(voll) <6:VERB/root>(auftanken) <7:ADP/case>(f\xFCr) <8:NUM/obl>(zehn)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/root>(Dislike) <2:ADP/case>(f\xFCr) <3:DET/nmod>(meine) <ROOT>\
    \ <4:PROPN/root>(Lines)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - mark
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - csubj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - xcomp
  - !!python/tuple
    - 8
    - 12
    - mark
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - xcomp
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(als) <3:PRON/nsubj>(die) <4:VERB/csubj>(platzte)\
    \ <5:ADV/advmod>(da) <6:VERB/root>(wurde) <7:ADJ/xcomp>(klar) <8:SCONJ/mark>(dass)\
    \ <9:PRON/nsubj>(es) <10:ADV/advmod>(nie) <11:DET/det>(eine) <12:NOUN/xcomp>(Basis)\
    \ <13:ADP/case>(f\xFCr) <14:DET/nmod>(diesen) <ROOT> <15:NOUN/nsubj>(Lebensstandard)\
    \ <16:VERB/root>(gab)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: "<1:ADV/advmod>(Also) <2:NOUN/nsubj>(Burger) <3:VERB/root>(herstellen)\
    \ <4:ADP/case>(bei) <5:PRON/obl>(den) <ROOT> <6:NOUN/root>(Preisen) <7:ADP/case>(f\xFC\
    r) <8:DET/det>(die) <9:NOUN/nmod>(Zutaten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Autos) <2:ADP/advmod>(mit) <ROOT> <3:NOUN/root>(Reifen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 10
    - 8
    - appos
  sentence: "<1:SCONJ/mark>(denn) <2:ADP/case>(au\xDFer) <3:PRON/obl>(mir) <4:VERB/root>(bringt)\
    \ <5:ADV/advmod>(hier) <6:DET/nsubj>(keiner) <7:ADV/advmod>(so) <ROOT> <8:PROPN/root>(Shit)\
    \ <10:DET/appos>(Keiner)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADP/case>(auf) <4:NOUN/obl>(nem)
    <ROOT> <5:NOUN/root>(Film)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/nsubj>(viele) <2:VERB/root>(haben) <3:PART/advmod>(nicht) <4:DET/obj>(einen)
    <ROOT> <5:PROPN/root>(Rhyme)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(welchen) <3:ADV/root>(sozusagen) <ROOT>
    <4:NOUN/obj>(Schritt) <5:VERB/root>(machten) <6:PRON/nsubj>(wir) <7:ADV/advmod>(da)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - mark
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wusste) <3:PART/advmod>(nicht) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(man) <6:ADP/case>(durch) <7:NOUN/obl>(Sehnsucht) <8:DET/appos>(solche)
    <ROOT> <9:NOUN/obj>(Schmerzen) <10:VERB/root>(kriegt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(glaube) <3:DET/obj>(diese) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - xcomp
  sentence: <1:NOUN/obj>(Klimakrise) <2:VERB/root>(sehe) <3:PRON/nsubj>(ich) <4:ADV/advmod>(auch)
    <5:ADP/xcomp>(als) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/root>(keine) <ROOT> <2:NOUN/obj>(Bilder) <3:CCONJ/cc>(oder) <4:NOUN/conj>(Videos)
    <5:VERB/root>(verschicken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - cc
  - !!python/tuple
    - 6
    - 9
    - mark
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 4
    - advcl
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <3:ADV/mark>(nen) <ROOT> <4:NOUN/root>(Mann)
    <5:CCONJ/cc>(und) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(du) <8:PRON/obj>(mich) <9:VERB/advcl>(hasst)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - obj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/nsubj>(dieser) <2:ADV/advmod>(ganz) <3:ADV/advmod>(ja) <4:ADJ/root>(ganz)
    <ROOT> <5:NOUN/obj>(Geschichte) <6:AUX/aux>(muss) <7:PRON/nsubj>(ich) <8:ADV/advmod>(so)
    <9:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:PRON/dep>(ihn) <3:ADP/case>(von) <4:DET/det:poss>(seinen)\
    \ <ROOT> <5:NOUN/obj>(Schmerzen) <6:VERB/root>(erl\xF6ste)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:DET/root>(dieser) <ROOT> <3:ADJ/amod>(spirituellen)
    <4:NOUN/root>(Energie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 3
    - conj
  sentence: <1:DET/det>(die) <2:NOUN/root>(dortigen) <ROOT> <3:NOUN/root>(Menschenrechtsverletzungen)
    <4:CCONJ/cc>(Und) <5:ADP/case>(dank) <6:DET/nmod>(dieser) <7:CCONJ/cc>(und) <8:DET/det:poss>(seines)
    <9:ADV/advmod>(schon) <10:ADJ/advmod>(weit) <11:ADJ/conj>(fortgeschrittenes)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(f\xFChren) <2:ADP/case>(zu) <3:DET/obl>(dieser) <ROOT>\
    \ <4:NOUN/root>(Unf\xE4higkeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - amod
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - dep
  sentence: <1:ADJ/amod>(Schick) <2:ADV/advmod>(mal) <3:ADP/case>(nach) <4:NOUN/nmod>(Haus)
    <6:PRON/root>(deine) <ROOT> <7:PROPN/root>(Pic') <8:X/dep>(s)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - xcomp
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - xcomp
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADJ/xcomp>(Grafisch) <2:VERB/root>(wurde) <3:PRON/obj>(uns) <4:ADP/case>(zu)
    <5:DET/det>(dem) <6:NOUN/xcomp>(Ende) <7:DET/det>(des) <8:ADV/advmod>(ohnehin)
    <9:ADV/advmod>(schon) <ROOT> <10:NOUN/root>(Spielejahres)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Wieder) <2:VERB/root>(pumpt) <3:DET/det>(das) <4:NOUN/nsubj>(Kapital)
    <5:ADV/advmod>(nur) <ROOT> <6:NOUN/root>(Schund) <7:ADP/case>(in) <8:DET/det>(die)
    <9:NOUN/nmod>(Charts)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(wohnst) <3:INTJ/advmod>(tight) <4:ADP/case>(in)
    <6:DET/det>(ner) <7:NOUN/obl>(Villa) <8:DET/obj>(einer) <ROOT> <9:NOUN/root>(Gangsterstadt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:NOUN/root>(Prototypkanacke) <3:ADP/case>(mit) <4:PRON/nmod>(dem)
    <ROOT> <5:PROPN/root>(Megahype)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <2:X/root>(N) <ROOT> <3:NOUN/root>(Wagen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Wegwerfen) <3:VERB/root>(hat) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/root>(Impact) <6:ADP/case>(auf) <7:NOUN/nmod>(Klima) <8:CCONJ/cc>(und)
    <9:NOUN/conj>(Umwelt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:ADV/advmod>(Heute) <2:VERB/root>(geht) <3:PRON/nsubj>(es) <4:ADP/case>(um)\
    \ <5:DET/obl>(einen) <6:ADV/advmod>(ziemlich) <ROOT> <7:NOUN/root>(Sch\xF6nheitsfilter)\
    \ <8:ADP/case>(von) <9:PROPN/nmod>(TikTok)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(da) <2:VERB/root>(geht) <3:NOUN/nsubj>(s) <4:ADP/case>(um)
    <5:ADV/advmod>(nen) <ROOT> <6:NOUN/compound>(Stalking) <8:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 6
    - obl:arg
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 11
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:DET/det>(Solche) <2:NOUN/obl:arg>(Personen) <3:AUX/aux>(muss) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(auch) <6:VERB/root>(geben) <7:PRON/nsubj>(die) <8:ADP/case>(von)
    <9:DET/obl>(dieser) <ROOT> <10:NOUN/dep>(Gegenseite) <11:VERB/root>(berichten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Freundin) <3:VERB/root>(dehydriert)
    <4:ADP/case>(von) <5:PRON/obl>(den) <ROOT> <6:PROPN/root>(Raploops)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(wieder) <3:ADV/advmod>(mal) <4:VERB/root>(schieb)\
    \ <6:PRON/nsubj>(ich) <7:DET/det>(den) <8:ADP/compound:prt>(\xFCber) <ROOT> <9:NOUN/root>(Egotrip)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 15
    - advcl
  - !!python/tuple
    - 5
    - 15
    - advmod
  - !!python/tuple
    - 6
    - 15
    - aux
  - !!python/tuple
    - 7
    - 15
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 15
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADP/root>(zur) <ROOT> <2:NOUN/nsubj>(Blutvergiftungen) <3:DET/obj>(alles)\
    \ <4:VERB/advcl>(einfangen) <5:ADV/advmod>(Eigentlich) <6:AUX/aux>(m\xFCsste)\
    \ <7:PRON/nsubj>(man) <8:DET/det>(die) <9:NOUN/obj>(Stra\xDFe) <10:ADP/case>(mit)\
    \ <11:NOUN/nmod>(Frischwasser) <12:ADP/case>(von) <13:DET/det>(dem) <14:NOUN/nmod>(Schlamm)\
    \ <15:VERB/root>(befreien)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nmod
  sentence: "<1:ADP/case>(Von) <2:DET/det>(einem) <3:ADV/root>(sehr) <ROOT> <4:PROPN/root>(Vers)\
    \ <5:ADV/advmod>(danach) <6:ADP/case>(in) <7:DET/det>(das) <8:NOUN/nmod>(Ma\xDF\
    )"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(wei\xDF) <3:ADP/case>(von) <4:PRON/obl>(deiner)\
    \ <ROOT> <5:NOUN/root>(Angst)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - aux
  - !!python/tuple
    - 3
    - 8
    - obj
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - obj
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 13
    - aux
  - !!python/tuple
    - 15
    - 26
    - cc
  - !!python/tuple
    - 16
    - 26
    - advmod
  - !!python/tuple
    - 17
    - 26
    - advmod
  - !!python/tuple
    - 18
    - 26
    - advmod
  - !!python/tuple
    - 19
    - 22
    - det
  - !!python/tuple
    - 20
    - 22
    - amod
  - !!python/tuple
    - 21
    - 22
    - amod
  - !!python/tuple
    - 22
    - 26
    - obj
  - !!python/tuple
    - 23
    - 25
    - case
  - !!python/tuple
    - 24
    - 25
    - det
  - !!python/tuple
    - 25
    - 26
    - obl
  - !!python/tuple
    - 26
    - 13
    - conj
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/aux>(habt) <3:PRON/obj>(ihr) <4:ADV/advmod>(vielleicht)\
    \ <5:DET/advmod>(selber) <6:ADV/advmod>(schon) <7:ADV/advmod>(mal) <8:VERB/root>(bemerkt)\
    \ <9:SCONJ/mark>(wenn) <10:PRON/nsubj>(ihr) <11:DET/obj>(einen) <ROOT> <12:NOUN/nsubj>(Vollmond)\
    \ <13:VERB/root>(knipsen) <14:AUX/aux>(wolltet) <15:CCONJ/cc>(und) <16:ADV/advmod>(dann)\
    \ <17:ADV/advmod>(nur) <18:ADV/advmod>(so) <19:DET/det>(einen) <20:ADJ/amod>(\xF6\
    mmeligen) <21:ADJ/amod>(wei\xDFen) <22:NOUN/obj>(Klecks) <23:ADP/case>(auf) <24:DET/det>(dem)\
    \ <25:NOUN/obl>(Foto) <26:VERB/conj>(hattet)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 8
    - acl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  sentence: "<1:ADP/root>(Anstatt) <2:SCONJ/mark>(dass) <3:DET/det:poss>(eure) <4:NOUN/nsubj>(Helden)\
    \ <5:ADP/compound:prt>(mit) <ROOT> <6:NOUN/obj>(Talenten) <7:VERB/acl>(gl\xE4\
    nzen) <8:VERB/root>(haben) <9:PRON/nsubj>(sie) <10:NOUN/obj>(Macken)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:VERB/root>(wirst) <3:ADP/case>(durch) <4:DET/det:poss>(dein)
    <5:NOUN/obl>(Messer) <6:ADP/case>(zu) <7:PRON/obl>(nem) <ROOT> <8:NOUN/root>(Typ?)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - det
  - !!python/tuple
    - 3
    - 5
    - amod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Obwohl) <2:DET/det>(die) <3:ADJ/amod>(technisch) <4:PART/advmod>(nicht)\
    \ <5:PRON/root>(die) <ROOT> <6:NOUN/obj>(M\xF6glichkeiten) <7:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - advcl
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 20
    - mark
  - !!python/tuple
    - 14
    - 20
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - det:poss
  - !!python/tuple
    - 16
    - 20
    - obj
  - !!python/tuple
    - 17
    - 20
    - advmod
  - !!python/tuple
    - 18
    - 19
    - cc
  - !!python/tuple
    - 19
    - 17
    - fixed
  - !!python/tuple
    - 20
    - 11
    - advcl
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(mich) <3:VERB/root>(klingt) <4:PRON/nsubj>(das)\
    \ <5:ADP/case>(nach) <6:DET/obl>(einer) <ROOT> <7:NOUN/root>(Geschichte) <8:SCONJ/mark>(wenn)\
    \ <9:PRON/nsubj>(man) <10:ADV/advmod>(dabei) <11:VERB/advcl>(zusehen) <12:AUX/aux>(muss)\
    \ <13:SCONJ/mark>(wie) <14:PRON/nsubj>(man) <15:DET/det:poss>(seinen) <16:NOUN/obj>(Partner)\
    \ <17:ADP/advmod>(nach) <18:CCONJ/cc>(und) <19:ADP/fixed>(nach) <20:VERB/advcl>(verliert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 3
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:DET/det>(dem) <3:NOUN/root>(Sinne) <4:ADP/case>(von)\
    \ <5:ADJ/amod>(hochaufl\xF6senden) <6:NOUN/nmod>(Texturen) <7:CCONJ/cc>(oder)\
    \ <ROOT> <8:NOUN/nsubj>(Lichteffekten) <9:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - appos
  sentence: "<1:PRON/nsubj>(Wir) <2:VERB/root>(sind) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(hier)\
    \ <5:ADV/advmod>(mitten) <6:ADP/case>(in) <7:DET/obl>(dieser) <ROOT> <8:NOUN/root>(M\xFC\
    llkippe) <9:PROPN/appos>(Dandora)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 10
    - obj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Besonders) <2:NOUN/nsubj>(Frauen) <3:VERB/root>(stehen)
    <4:ADV/advmod>(immer) <5:ADV/advmod>(noch) <6:ADP/case>(unter) <7:PRON/obl>(dem)
    <ROOT> <8:NOUN/obj>(Druck) <9:ADJ/advmod>(gut) <10:VERB/root>(auszusehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(machst) <3:ADP/compound:prt>(auf) <ROOT>
    <4:NOUN/root>(Kerl)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/root>(Sind) <2:DET/det>(die) <3:ADJ/amod>(derben) <4:NOUN/nsubj>(Gassenhauer)
    <5:ADP/case>(von) <6:PRON/nmod>(den) <ROOT> <7:NOUN/root>(Nerds)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:X/root>(\xB4n) <ROOT> <3:NOUN/obj>(Pakt) <4:PART/mark>(zu)\
    \ <5:VERB/root>(schlie\xDFen) <6:ADP/case>(mit) <7:DET/det>(den) <8:NOUN/obl>(Kr\xE4\
    ften)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Dazu) <2:VERB/root>(kommen) <3:PRON/nsubj>(die) <ROOT>
    <4:NOUN/nsubj>(Extreme) <5:DET/det>(die) <6:NOUN/obj>(s) <7:DET/obj>(einem) <8:ADV/advmod>(sehr)
    <9:ADJ/advmod>(schwer) <10:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - expl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Jungs) <2:NOUN/nsubj>(Jungs) <3:PRON/expl>(es) <4:AUX/root>(ist)
    <5:ADP/case>(aus) <6:ADP/case>(mit) <7:NOUN/obl>(euren) <ROOT> <8:NOUN/root>(Tagen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADP/case>(mit) <2:DET/root>(diesen) <ROOT> <3:ADJ/amod>(brutalen)\
    \ <4:NOUN/nsubj>(Gewalttaten) <5:PRON/obj>(etwas) <6:VERB/root>(br\xF6ckeln)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 5
    - appos
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 3
    - dep
  sentence: <1:DET/root>(einen) <ROOT> <2:NOUN/nsubj>(Raketenantrieb) <3:VERB/root>(entwickelt)
    <4:DET/det>(Keine) <5:NOUN/obj>(Ahnung) <6:NOUN/appos>(Antimaterie) <7:NOUN/appos>(Sonnensegel)
    <8:X/dep>(whatever)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:PRON/nsubj>(es) <3:AUX/aux>(hat) <4:ADV/advmod>(lange)
    <5:VERB/root>(gedauert) <6:SCONJ/mark>(bis) <7:PRON/nsubj>(ich) <8:DET/obj>(diese)
    <ROOT> <9:NOUN/root>(Achterbahnkurven)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Nach) <2:DET/det>(der) <3:NOUN/obl>(Schule) <4:ADP/case>(mit)
    <5:NOUN/nmod>(Jungs) <6:VERB/root>(treffen) <7:ADP/compound:prt>(auf) <ROOT> <8:NOUN/root>(Bikes)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 5
    - flat
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(deine) <ROOT> <3:NOUN/nsubj>(Gangsterfreunde)
    <4:VERB/root>(ticken) <5:PROPN/obj>(Walther) <6:PROPN/flat>(P4s)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 8
    - obl:arg
  - !!python/tuple
    - 10
    - 8
    - obj
  sentence: <1:SCONJ/mark>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <ROOT> <5:NOUN/root>(Drang)
    <6:CCONJ/cc>(und) <7:PRON/nsubj>(das) <8:VERB/conj>(macht) <9:PRON/obl:arg>(mir)
    <10:NOUN/obj>(Angst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - nummod
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 17
    - cop
  - !!python/tuple
    - 13
    - 17
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 11
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(meine) <3:PRON/nsubj>(wir) <4:VERB/ccomp>(kommen)
    <5:ADP/compound:prt>(aus) <ROOT> <6:NOUN/nsubj>(Zeiten) <7:ADV/advmod>(hier) <8:AUX/cop>(sind)
    <9:NUM/nummod>(1) <10:NUM/nummod>(500) <11:NOUN/root>(Leute) <12:AUX/cop>(Ist)
    <13:PRON/nsubj>(das) <14:PART/advmod>(nicht) <15:ADV/advmod>(voll) <16:DET/det>(der)
    <17:NOUN/conj>(Druck)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - advcl
  - !!python/tuple
    - 12
    - 11
    - aux
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 5
    - conj
  - !!python/tuple
    - 15
    - 14
    - nsubj
  - !!python/tuple
    - 16
    - 14
    - advmod
  - !!python/tuple
    - 17
    - 14
    - advmod
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 14
    - obj
  - !!python/tuple
    - 20
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(glaube) <4:PRON/expl>(es)
    <5:VERB/ccomp>(ist) <6:ADV/advmod>(auch) <7:ADV/advmod>(wie) <8:SCONJ/mark>(wenn)
    <9:PRON/nsubj>(man) <10:ADV/advmod>(lange) <11:VERB/advcl>(gefastet) <12:AUX/aux>(hat)
    <13:ADV/advmod>(dann) <14:VERB/conj>(hat) <15:PRON/nsubj>(man) <16:ADV/advmod>(irgendwann)
    <17:ADV/advmod>(wieder) <18:ADV/advmod>(so) <19:DET/obj>(einen) <ROOT> <20:NOUN/root>(Hunger)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/nsubj>(einen) <2:ADJ/root>(\xE4hnlich) <ROOT> <3:NOUN/dep>(Aufstieg)\
    \ <4:VERB/root>(hingelegt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(wollt) <ROOT> <3:NOUN/root>(Erfolg) <4:CCONJ/cc>(und)
    <5:DET/det>(ein) <6:ADJ/nmod>(paar) <7:NOUN/conj>(Platten) <8:ADP/case>(aus) <9:NOUN/nmod>(Gold)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:PRON/root>(die) <ROOT> <2:NOUN/root>(\xDCberflieger)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: <1:ADP/case>(Auf) <2:PRON/root>(deiner) <ROOT> <3:PROPN/nsubj>(Antikriegsdemo)
    <4:VERB/root>(war'n) <5:NUM/nummod>(drei) <6:NOUN/obj>(Leute)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 3
    - xcomp
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 5
    - ccomp
  - !!python/tuple
    - 12
    - 13
    - expl
  - !!python/tuple
    - 13
    - 11
    - parataxis
  - !!python/tuple
    - 14
    - 13
    - advmod
  - !!python/tuple
    - 15
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 13
    - obj
  - !!python/tuple
    - 18
    - 19
    - obj
  - !!python/tuple
    - 19
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(finde) <4:PRON/expl>(es)\
    \ <5:ADJ/xcomp>(wichtig) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(jemand) <8:ADP/case>(in)\
    \ <9:DET/det>(der) <10:NOUN/obl>(\xD6ffentlichkeit) <11:VERB/ccomp>(sagt) <12:PRON/expl>(es)\
    \ <13:VERB/parataxis>(gibt) <14:ADV/advmod>(auch) <15:NOUN/nsubj>(Menschen) <16:DET/det>(die)\
    \ <17:DET/obj>(keine) <ROOT> <18:NOUN/obj>(Schmerzen) <19:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(h\xE4ltst) <3:PRON/obj>(dich) <4:PROPN/obj>(Kek)\
    \ <5:ADV/advmod>(immer) <6:ADV/advmod>(noch) <7:ADP/case>(f\xFCr) <8:PRON/obl>(den)\
    \ <ROOT> <9:NOUN/root>(Mann)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(auch) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(sie)
    <5:DET/root>(einen) <ROOT> <6:PROPN/nsubj>(Majordeal) <7:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 7
    - conj
  sentence: "<1:AUX/dep>(wird) <2:VERB/root>(nutzt) <3:DET/det>(das) <4:NOUN/nsubj>(Team)\
    \ <5:DET/obj>(diese) <ROOT> <6:NOUN/root>(Ger\xE4te) <7:NOUN/appos>(Computermodelle)\
    \ <8:CCONJ/cc>(und) <9:ADJ/amod>(K\xFCnstliche) <10:NOUN/conj>(Intelligenz)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(merkt) <3:ADV/advmod>(schon) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/root>(Unterschied) <6:ADP/case>(zwischen) <7:DET/det>(den) <8:NOUN/nmod>(Apps)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(oder) <2:PRON/root>(die) <ROOT> <3:NOUN/compound>(Polizei)
    <5:NOUN/root>(Verfolgungsjagden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 2
    - nmod
  sentence: "<ROOT> <2:NOUN/root>(Gegensatz) <3:ADP/case>(zu) <4:DET/det>(der) <5:NOUN/compound>(Mineral\xF6\
    l) <7:NOUN/nmod>(Lobby)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 9
    - compound
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:VERB/root>(hat) <2:ADV/advmod>(k\xFCrzlich) <3:ADP/compound:prt>(mit)\
    \ <ROOT> <4:NOUN/compound>(Fels) <6:CCONJ/cc>(und) <7:NOUN/conj>(Bl\xE4tter) <9:NOUN/root>(Pornos)\
    \ <10:ADP/case>(auf) <11:PROPN/nmod>(YouTube)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - advmod
  - !!python/tuple
    - 2
    - 8
    - mark
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(Auch) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(sie) <4:PRON/obj>(mich)\
    \ <5:ADV/advmod>(gerne) <6:ADP/case>(f\xFCr) <7:PRON/obl>(sich) <8:VERB/root>(gewinnen)\
    \ <9:AUX/aux>(w\xFCrden) <10:ADP/case>(aufgrund) <11:PRON/obl>(der) <ROOT> <12:NOUN/root>(Performance)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(mach) <2:ADP/case>(um) <3:PRON/obl>(mich) <4:ADV/compound:prt>(nen)
    <ROOT> <5:NOUN/root>(Bogen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <ROOT> <1:PROPN/root>(Raves) <2:ADV/advmod>(irgendwie) <3:ADP/case>(in)
    <4:PROPN/nmod>(Berlin) <5:CCONJ/cc>(oder) <6:ADV/advmod>(so) <7:PROPN/conj>(Berghain)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/nsubj>(du) <3:PRON/obj>(dir) <4:DET/obj>(einen)
    <5:ADJ/root>(richtig) <ROOT> <6:NOUN/compound>(High) <8:NOUN/nsubj>(End-PC) <9:VERB/root>(bauen)
    <10:AUX/aux>(willst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - csubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Wer) <2:ADV/advmod>(lange) <3:VERB/csubj>(\xFCbt) <4:VERB/root>(schafft)\
    \ <5:ADV/advmod>(damit) <6:DET/obj>(solche) <ROOT> <7:NOUN/root>(Spr\xFCnge)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(es) <3:ADV/advmod>(so) <4:DET/root>(einen)\
    \ <ROOT> <5:NOUN/compound>(Preis) <7:NOUN/obj>(unterschied) <8:VERB/root>(rechtfertigen)\
    \ <9:AUX/aux>(w\xFCrde)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 13
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  - !!python/tuple
    - 15
    - 13
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:DET/det>(den) <2:NOUN/obl:arg>(\xD6PNV) <3:DET/det>(Die) <4:NOUN/appos>(Leute)\
    \ <5:ADP/case>(wie) <6:PRON/nmod>(ihr) <7:PRON/nsubj>(die) <8:ADP/case>(bei) <9:DET/det>(der)\
    \ <10:NOUN/obl>(Bahn) <11:VERB/root>(arbeiten) <12:PRON/nsubj>(die) <13:VERB/conj>(machen)\
    \ <14:DET/obj>(einen) <15:ADJ/advmod>(richtig) <ROOT> <16:NOUN/root>(Job)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(noch) <4:ADV/advmod>(nie)
    <5:ADV/advmod>(so) <6:DET/obj>(einen) <ROOT> <7:NOUN/dep>(Apfelgeruch) <8:VERB/root>(gehabt)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - dep
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - amod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PROPN/dep>(Pull) <3:ADP/case>(auf) <4:DET/det>(die) <5:NOUN/root>(Wohnung)
    <6:ADP/case>(von) <7:PROPN/nmod>(Bonez) <8:PROPN/flat>(up) <9:ADP/case>(mit) <10:DET/det>(den)
    <11:ADJ/amod>(ganz) <ROOT> <12:NOUN/root>(Waffen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 9
    - aux:pass
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 3
    - xcomp
  sentence: "<1:PROPN/root>(B\xF6s') <2:PRON/appos>(den) <ROOT> <3:VERB/root>(schieben)\
    \ <4:CCONJ/cc>(und) <5:ADV/advmod>(zu) <6:ADJ/conj>(bl\xF6d) <7:AUX/aux:pass>(sind)\
    \ <8:PART/mark>(zu) <9:VERB/xcomp>(raffen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: <1:ADP/case>(in) <2:DET/det:poss>(ihren) <3:ADV/root>(teilweise) <ROOT>
    <4:NOUN/dep>(Arbeitsalltag) <5:VERB/root>(gegeben) <6:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(erkl\xE4r') <3:ADV/advmod>(mal) <4:PRON/obj>(Deiner)\
    \ <ROOT> <5:NOUN/root>(Braut)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - nmod
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 5
    - advmod
  - !!python/tuple
    - 13
    - 5
    - dep
  - !!python/tuple
    - 14
    - 5
    - dep
  sentence: <1:ADV/advmod>(Damit) <2:VERB/root>(stellten) <3:PRON/nsubj>(sie) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/root>(Widerspruch) <6:ADP/case>(zu) <7:DET/det>(den) <8:DET/det>(anderen)
    <9:PROPN/nmod>(Jedi) <10:DET/det:poss>(ihrer) <11:NOUN/nmod>(Zeit) <12:ADV/advmod>(dar)
    <13:PRON/dep>(die) <14:ADP/dep>(zu)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(komm') <3:ADP/case>(aus) <4:DET/obl>(einer)
    <ROOT> <5:NOUN/root>(Gegend)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PROPN/root>(Erdogan) <2:ADV/advmod>(hier) <3:ADP/case>(nach) <4:ADV/advmod>(derart)\
    \ <ROOT> <5:ADJ/amod>(doppelten) <6:NOUN/obj>(Ma\xDFst\xE4ben) <7:VERB/root>(handelt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - expl
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - mark
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  - !!python/tuple
    - 11
    - 16
    - advmod
  - !!python/tuple
    - 12
    - 10
    - aux
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 10
    - obl
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(immer) <4:ADV/advmod>(so)
    <5:ADJ/root>(erstaunlich) <6:SCONJ/mark>(dass) <7:DET/det>(die) <8:NOUN/nsubj>(Leute)
    <9:ADV/advmod>(oft) <10:VERB/ccomp>(denken) <11:ADV/advmod>(wie) <12:AUX/aux>(kann)
    <13:PRON/nsubj>(die) <14:ADP/case>(mit) <15:ADV/advmod>(so) <16:DET/obl>(einer)
    <ROOT> <17:NOUN/root>(Behinderung)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - cc
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(brauch) <3:ADV/advmod>(immer) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/root>(Schnitt) <6:CCONJ/cc>(und) <7:ADV/advmod>(auch) <8:DET/det>(die)
    <9:ADJ/amod>(absolute) <10:NOUN/conj>(Ruhe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: <1:ADP/root>(mit) <ROOT> <2:NOUN/root>(Straftaten) <3:ADP/case>(in) <4:DET/det>(die)
    <5:NOUN/nmod>(Medien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(bist) <3:ADV/advmod>(da) <4:ADV/advmod>(schon)
    <5:ADP/case>(in) <6:ADV/advmod>(sehr) <7:ADV/advmod>(sehr) <8:ADV/advmod>(sehr)
    <ROOT> <9:PROPN/root>(Van)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PROPN/nsubj>(China) <2:AUX/cop>(ist) <3:DET/det>(das) <4:NOUN/root>(Land)
    <5:ADP/case>(mit) <6:PRON/nmod>(dem) <ROOT> <7:NOUN/root>(Wirtschaftswachstum)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Leute) <2:ADP/case>(in) <3:DET/det:poss>(ihren) <4:NOUN/nmod>(Zwanzigern)
    <5:VERB/root>(stehen) <6:ADP/case>(unter) <7:DET/obl>(einem) <ROOT> <8:NOUN/root>(Druck)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/root>(ganzen) <ROOT> <3:NOUN/root>(Weiber) <4:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: <1:CCONJ/cc>(sondern) <2:NUM/root>(acht) <ROOT> <3:PROPN/root>(Frau'n)
    <5:PROPN/appos>(Yeah)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(wenn) <2:PRON/nsubj>(ich) <3:DET/root>(dein) <ROOT> <4:NOUN/dep>(Partner)
    <5:VERB/root>(ficke)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/root>(sie) <3:CCONJ/cc>(und) <4:DET/det:poss>(ihre)\
    \ <5:NOUN/conj>(M\xE4dels) <6:ADP/case>(von) <7:PRON/nmod>(dem) <ROOT> <8:NOUN/root>(Spast)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - compound:prt
  sentence: "<1:INTJ/advmod>(Sind's) <2:ADV/advmod>(wom\xF6glich) <3:PRON/root>(wir)\
    \ <4:CCONJ/cc>(und) <5:VERB/conj>(nehmen) <6:ADV/advmod>(grad) <ROOT> <8:PROPN/root>(Burner)\
    \ <9:ADP/compound:prt>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(statt) <2:DET/det>(dem) <3:ADJ/root>(angedachten) <ROOT>
    <4:PROPN/root>(Porsche)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(statt) <2:NOUN/root>(Schuhe) <ROOT> <3:PROPN/root>(Butterfly)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - det:poss
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(hat) <2:PROPN/nsubj>(Tsubasa) <3:DET/det:poss>(seinen) <ROOT>
    <4:NOUN/dep>(Superschuss) <5:ADV/advmod>(noch) <6:PART/advmod>(nicht) <7:VERB/root>(gelernt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(sondern) <2:NOUN/root>(Symptom) <3:DET/det>(des) <ROOT> <4:NOUN/root>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(leben) <3:ADP/case>(in) <5:ADV/advmod>(ner)
    <ROOT> <6:NOUN/root>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Jambeatz) <2:VERB/root>(macht) <3:PRON/obj>(den) <ROOT>
    <4:NOUN/root>(Sound)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 7
    - xcomp
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <3:DET/det>(kein) <ROOT> <5:NOUN/root>(Gewinn)
    <6:CCONJ/cc>(und) <7:VERB/conj>(bring) <8:ADV/advmod>(nur) <9:NOUN/obj>(Kassen)
    <10:ADP/case>(zu) <11:DET/det>(dem) <12:VERB/xcomp>(klingeln)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - appos
  sentence: <1:PROPN/nsubj>(Bonez) <2:AUX/root>(ist) <3:ADV/advmod>(da) <4:CCONJ/cc>(und)
    <5:VERB/conj>(bringt) <6:ADV/advmod>(wieder) <ROOT> <7:NOUN/root>(Rap) <9:X/appos>(Yeah)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - xcomp
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - appos
  - !!python/tuple
    - 7
    - 2
    - appos
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 12
    - 14
    - nmod
  - !!python/tuple
    - 13
    - 14
    - amod
  - !!python/tuple
    - 14
    - 10
    - nmod
  sentence: "<1:ADJ/xcomp>(niedrig) <2:VERB/root>(bleibt) <4:ADV/advmod>(n\xE4mlich)\
    \ <5:ADV/advmod>(nur) <6:NUM/appos>(0) <7:NUM/appos>(6) <8:ADP/case>(in) <9:PRON/obl>(dem)\
    \ <ROOT> <10:NOUN/root>(Gegensatz) <11:ADP/case>(zu) <12:PROPN/nmod>(Italiens)\
    \ <13:ADJ/amod>(schrecklichen) <14:NUM/nmod>(7)"
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <2:ADP/case>(wegen) <3:PRON/root>(der) <ROOT> <4:NOUN/root>(Kursschwankungen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - dep
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:DET/root>(welche) <ROOT> <2:NOUN/dep>(Fehler) <3:PROPN/obj>(Facebook)
    <4:ADP/case>(in) <5:ADJ/amod>(letzter) <6:NOUN/obl>(Zeit) <7:VERB/root>(gemacht)
    <8:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(f\xFCr) <2:DET/root>(diese) <ROOT> <3:NOUN/root>(Tipps)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: <1:ADV/advmod>(schon) <2:ADV/advmod>(so) <3:DET/root>(einen) <ROOT> <4:NOUN/obj>(Effekt)
    <5:VERB/root>(haben) <6:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:SCONJ/mark>(dass) <2:DET/det>(die) <3:ADJ/amod>(dramatischen) <4:DET/root>(diese)
    <ROOT> <5:NOUN/nsubj>(Forderungen) <6:PART/advmod>(nicht) <7:DET/det>(die) <8:NOUN/root>(falschen)
    <9:AUX/cop>(sind)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - aux
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - compound:prt
  - !!python/tuple
    - 8
    - 12
    - dep
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:AUX/aux>(hat) <2:CCONJ/cc>(weder) <3:DET/det>(eine) <4:NOUN/nsubj>(Massenbewegung)\
    \ <5:VERB/root>(gestartet) <6:CCONJ/cc>(noch) <7:ADP/compound:prt>(zu) <ROOT>\
    \ <8:NOUN/dep>(Ausschl\xE4gen) <9:ADP/case>(in) <10:DET/det>(den) <11:NOUN/obl>(Statistiken)\
    \ <12:VERB/root>(gef\xFChrt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: "<1:DET/root>(dieser) <ROOT> <2:NOUN/nsubj>(Experimente) <3:VERB/root>(\xFC\
    berpr\xFCfen) <4:AUX/aux>(k\xF6nnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 2
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fange) <3:ADV/advmod>(mal) <4:ADP/case>(mit)
    <5:DET/det>(ein) <6:ADJ/obl>(paar) <ROOT> <7:NOUN/root>(Zahlen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - expl
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: "<1:ADP/case>(In) <2:PROPN/nmod>(Deutschland) <3:AUX/cop>(ist) <4:PRON/nsubj>(das)\
    \ <5:ADJ/advmod>(\xE4hnlich) <6:ADV/advmod>(Hier) <7:VERB/root>(gibt) <8:PRON/expl>(es)\
    \ <9:DET/obj>(einen) <10:ADV/advmod>(ziemlich) <ROOT> <11:NOUN/root>(Mangel) <12:ADP/case>(an)\
    \ <13:NOUN/nmod>(Erntehelfer)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - mark
  - !!python/tuple
    - 7
    - 3
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:AUX/root>(ist) <4:ADV/advmod>(sogar)
    <5:ADV/advmod>(so) <6:SCONJ/mark>(dass) <7:ADP/compound:prt>(bei) <ROOT> <8:NOUN/root>(Hollywoodproduktionen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:VERB/root>(merkt) <3:DET/obj>(einen) <ROOT> <4:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(Jetzt) <2:ADV/advmod>(aber) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)
    <5:ADP/case>(zu) <6:PRON/nmod>(dem) <ROOT> <7:NOUN/root>(Gegenteil)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(hat) <2:DET/det>(keinen) <3:NOUN/obj>(spezifischen) <ROOT>
    <4:NOUN/root>(Eigengeschmack)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(Die) <3:VERB/root>(haben) <ROOT> <4:NOUN/root>(Erfolg)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(was) <3:VERB/root>(ist) <4:ADV/advmod>(jetzt)
    <5:ADV/advmod>(wo) <6:AUX/ccomp>(sind) <7:PRON/nsubj>(die) <ROOT> <8:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nummod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - dep
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Fast) <2:NUM/nummod>(80) <3:NOUN/root>(Bl\xE4tter) <4:ADJ/advmod>(voll)\
    \ <5:ADP/dep>(mit) <ROOT> <6:NOUN/nsubj>(Texten) <7:ADV/advmod>(nur) <8:ADP/case>(um)\
    \ <9:NOUN/nmod>(Klassen) <10:ADJ/root>(besser)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(jetzt) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:DET/det>(ein)
    <ROOT> <6:PROPN/root>(Papa)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/nsubj>(Signings) <3:VERB/root>(sind)
    <4:PART/advmod>(nicht) <5:ADV/advmod>(mal) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/obl>(Takt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(also) <2:PRON/nsubj>(wir) <3:VERB/root>(machen) <4:ADV/advmod>(hier)
    <5:ADV/advmod>(immer) <6:PRON/obj>(den) <ROOT> <7:NOUN/root>(Kulturjournalismus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:DET/nsubj>(einen) <4:ADJ/advmod>(richtig)
    <ROOT> <5:NOUN/root>(Unfallwagen) <6:CCONJ/cc>(und) <7:DET/det>(einen) <8:NOUN/conj>(Unfallort)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 5
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:PRON/nsubj>(Was) <2:PRON/root>(du) <3:ADP/case>(\xFCber) <4:PRON/nmod>(die)\
    \ <ROOT> <5:NOUN/nsubj>(Algorithmen) <6:DET/det>(der) <7:NOUN/compound>(Dating)\
    \ <9:NOUN/nmod>(Plattformen) <10:VERB/root>(wissen) <11:AUX/aux>(solltest)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/root>(an) <ROOT> <2:NOUN/obj>(Spr\xFCchen) <3:AUX/aux>(bin) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(noch) <6:ADV/advmod>(nie) <7:VERB/root>(gescheitert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - dep
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/root>(Die) <ROOT> <2:NOUN/dep>(Rapper) <3:ADP/case>(von) <4:ADV/advmod>(gestern)\
    \ <5:ADV/advmod>(gehn\u2018) <6:ADV/advmod>(morgen) <7:NOUN/obj>(Hecken) <8:VERB/root>(schneiden)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(Hinterlass) <3:DET/dep>(ein) <ROOT> <5:NOUN/root>(Schaden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - nmod
  sentence: "<1:ADP/case>(Mit) <2:PRON/root>(deinem) <ROOT> <3:PROPN/nsubj>(Hype)\
    \ <4:VERB/root>(l\xE4ufts) <5:PART/advmod>(nicht) <6:ADJ/advmod>(l\xE4nger) <7:ADP/case>(als)\
    \ <8:ADP/case>(in) <9:DET/det>(dem) <10:NOUN/nmod>(Puff)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <ROOT> <5:NOUN/root>(Kater)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:SCONJ/root>(Dass) <2:PRON/nsubj>(ich) <ROOT> <3:NOUN/nsubj>(Fame) <4:VERB/root>(bekomme)
    <5:CCONJ/cc>(und) <6:VERB/conj>(durchdrehe)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(rapp) <3:DET/det>(die) <4:ADJ/amod>(ganz) <ROOT> <5:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 8
    - case
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Oder) <2:VERB/root>(werdet) <3:NOUN/xcomp>(Zeuge) <4:ADP/case>(wie)\
    \ <5:ADP/case>(aus) <6:ADV/advmod>(bereits) <7:ADV/advmod>(schon) <8:ADV/advmod>(sehr)\
    \ <ROOT> <9:PROPN/root>(Pok\xE9mon)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 12
    - dep
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 12
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADP/case>(unter) <2:PRON/root>(was) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(nem)\
    \ <ROOT> <5:NOUN/dep>(Druck) <6:DET/det>(die) <7:NOUN/nsubj>(Spieler) <8:ADV/advmod>(innen)\
    \ <9:ADP/case>(in) <10:DET/det>(der) <11:NOUN/obl>(Serie) <12:VERB/root>(stehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 4
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(zwar) <3:ADP/root>(mit) <ROOT> <4:NOUN/root>(Eingriffen)
    <5:ADP/case>(in) <6:DET/det>(die) <7:NOUN/nmod>(Netzfreiheit) <8:NOUN/dep>(Reaktionen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - cc
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 9
    - advcl
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - obj
  - !!python/tuple
    - 16
    - 18
    - advmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 13
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/obj>(das) <3:VERB/root>(hat) <4:PRON/nsubj>(er)
    <5:ADP/case>(in) <6:ADV/advmod>(so) <7:DET/obl>(einem) <ROOT> <8:NOUN/dep>(Ton)
    <9:VERB/root>(gesagt) <10:CCONJ/cc>(und) <11:ADV/advmod>(so) <12:ADV/advmod>(so)
    <13:SCONJ/advcl>(wie) <14:PRON/nsubj>(ich) <15:PRON/obj>(ihn) <16:ADV/advmod>(eigentlich)
    <17:ADV/advmod>(gar) <18:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - cop
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(die) <3:PROPN/nsubj>(VAE) <4:AUX/cop>(sind)
    <5:PART/advmod>(nicht) <6:DET/det>(das) <7:ADJ/amod>(einzige) <8:NOUN/root>(Land)
    <9:ADP/case>(mit) <10:ADV/advmod>(solch) <11:DET/nmod>(einer) <ROOT> <12:NOUN/root>(Einwandererquote)
    <13:ADV/advmod>(Nur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(woher) <2:VERB/root>(nimmst) <3:PRON/nsubj>(du) <4:PRON/obj>(den)
    <ROOT> <5:PROPN/root>(Will'n)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - det:poss
  - !!python/tuple
    - 5
    - 7
    - compound
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(Ohne) <2:NOUN/obl>(Zweifel) <3:VERB/root>(kickt) <4:DET/det:poss>(ihr)\
    \ <5:NOUN/compound>(M\xF6chtegern) <7:NOUN/nsubj>(Macs) <ROOT> <8:NOUN/root>(Text)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(hab) <4:ADV/advmod>(immer) <ROOT> <5:NOUN/root>(Stoff)
    <7:NOUN/appos>(Dope)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - appos
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 8
    - compound:prt
  sentence: "<1:PRON/nsubj>(sie) <2:VERB/root>(haben) <3:ADJ/obj>(grad) <ROOT> <5:NOUN/root>(Lauf)\
    \ <7:X/advmod>(Och) <8:INTJ/appos>(h\xF6r) <9:ADV/advmod>(doch) <10:ADP/compound:prt>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj:pass
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - acl
  - !!python/tuple
    - 8
    - 7
    - aux:pass
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(sind) <3:PRON/root>(die) <ROOT> <4:NOUN/root>(Verh\xF6\
    rmethoden) <5:PRON/nsubj:pass>(die) <6:ADV/advmod>(heute) <7:VERB/acl>(verboten)\
    \ <8:AUX/aux:pass>(sind)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tust) <3:ADP/compound:prt>(auf) <ROOT>
    <4:X/root>(G) <5:CCONJ/cc>(und) <6:ADJ/conj>(hart)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADV/advmod>(ey) <3:PRON/nsubj>(ich) <4:VERB/root>(hab)
    <5:ADV/mark>(nen) <ROOT> <6:NOUN/root>(penis)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - acl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advcl
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - ccomp
  - !!python/tuple
    - 12
    - 13
    - dep
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:VERB/acl>(fallen) <2:VERB/root>(lassen) <3:SCONJ/mark>(Weil) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(zu) <6:ADV/advmod>(gut) <7:VERB/advcl>(gelegen) <8:AUX/aux>(war)
    <9:SCONJ/mark>(weil) <10:PRON/nsubj>(es) <11:PRON/ccomp>(die) <ROOT> <12:NOUN/dep>(Schiffswerften)
    <13:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:NOUN/nsubj>(Honig) <2:VERB/root>(nimmt) <3:PRON/obj>(den) <ROOT> <4:NOUN/root>(Essiggeschmack)
    <5:ADV/advmod>(weg)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:DET/root>(keinen) <2:ADV/advmod>(so) <ROOT> <3:NOUN/root>(Bezug) <4:ADP/case>(zu)
    <5:DET/det>(der) <6:NOUN/nmod>(Gesellschaft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  sentence: <1:ADP/case>(Auf) <2:PROPN/obl>(Telegram) <3:VERB/root>(gab) <4:PROPN/nsubj>(s)
    <5:ADP/case>(in) <6:PROPN/obl>(Russland) <7:ADV/advmod>(mal) <8:DET/obj>(diesen)
    <ROOT> <9:NOUN/root>(Kanal) <10:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADJ/advmod>(wahrscheinlich) <3:AUX/root>(ist) <4:NOUN/nsubj>(Butter)
    <5:ADP/case>(trotz) <6:PRON/obl>(der) <ROOT> <7:NOUN/root>(Preise)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(traf) <2:ADV/advmod>(hier) <3:CCONJ/cc>(und) <4:ADV/advmod>(da)
    <6:ADV/advmod>(nen) <ROOT> <7:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(brauch) <3:ADV/advmod>(nur) <4:DET/det>(ein)
    <ROOT> <6:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADP/case>(nach) <4:DET/obl>(einer)
    <ROOT> <5:NOUN/root>(Kombination)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 1
    - compound:prt
  - !!python/tuple
    - 10
    - 11
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:SCONJ/root>(Wenn) <2:PRON/nsubj>(sie) <3:DET/det>(die) <4:NOUN/obj>(Finger)
    <5:ADP/case>(von) <6:DET/det>(den) <7:ADV/advmod>(scheinbar) <8:ADV/advmod>(viel)
    <9:ADP/compound:prt>(zu) <ROOT> <10:NOUN/dep>(Tassen) <11:VERB/root>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: "<ROOT> <2:NOUN/root>(Gegensatz) <3:ADP/case>(zu) <4:DET/det>(der) <5:NOUN/nmod>(Mineral\xF6\
    llobby)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:VERB/root>(landen) <3:DET/det>(jedes) <4:NOUN/obl>(Mal)
    <5:ADP/compound:prt>(beim) <ROOT> <6:NOUN/root>(Gegenteil)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 1
    - dep
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADJ/root>(Willkommen) <2:ADP/case>(bei) <3:DET/det>(dem) <4:NOUN/nmod>(Label)\
    \ <5:ADV/advmod>(wo) <6:PRON/nsubj>(dich) <7:DET/dep>(keiner) <8:ADP/case>(f\xFC\
    r) <9:PRON/nmod>(den) <ROOT> <10:VERB/root>(h\xE4lt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bring) <3:PRON/obj>(euch) <4:ADV/advmod>(immer)
    <5:ADV/advmod>(all') <6:PRON/obj>(die) <ROOT> <7:NOUN/root>(Themen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 7
    - 4
    - flat
  sentence: <1:NOUN/root>(Zerbreche) <2:NOUN/appos>(Visagen) <3:ADP/dep>(mit) <ROOT>
    <4:PROPN/root>(Muay) <5:PROPN/flat>(Thai) <7:PROPN/flat>(Kicks)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Nur) <2:PRON/root>(die) <ROOT> <3:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(nur) <4:ADP/case>(f\xFC\
    r) <5:PRON/root>(euch) <6:CCONJ/cc>(und) <7:ADP/case>(f\xFCr) <8:PRON/conj>(den)\
    \ <ROOT> <9:PROPN/root>(Reim)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: "<1:CCONJ/cc>(Und) <2:VERB/root>(erz\xE4hlt) <3:PRON/obj>(euch) <4:PRON/obj>(eure)\
    \ <ROOT> <5:NOUN/root>(Gangsterstorys) <7:NOUN/appos>(M\xE4rchenstunde)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:DET/root>(alle) <ROOT> <2:VERB/root>(wissen) <3:ADV/advmod>(bescheid)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:DET/det>(anderes) <3:NOUN/root>(Album) <4:ADP/case>(mit)
    <5:DET/nmod>(einem) <ROOT> <6:NOUN/root>(Titel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: <1:CCONJ/cc>(aber) <2:VERB/root>(steht) <3:ADV/advmod>(immer) <4:ADV/advmod>(noch)
    <5:ADP/compound:prt>(im) <ROOT> <6:NOUN/root>(Gegensatz) <7:ADP/case>(zu) <8:DET/det>(den)
    <9:NOUN/nmod>(Problemen) <10:DET/det:poss>(unserer) <11:NOUN/nmod>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ihr) <2:AUX/root>(wollt) <ROOT> <3:PROPN/root>(Flow)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: "<1:PRON/root>(die) <ROOT> <2:NOUN/nsubj>(M\xE4nner) <3:VERB/root>(trinken)\
    \ <4:NUM/obj>(zwei)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(ja) <4:ADV/advmod>(jetzt)
    <5:DET/obj>(diesen) <ROOT> <6:NOUN/root>(Trend) <7:ADP/case>(mit) <8:PROPN/nmod>(Contouring)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 9
    - 5
    - flat
  sentence: <ROOT> <2:NOUN/root>(Gegensatz) <3:ADP/case>(zu) <4:DET/det>(dem) <5:PROPN/nmod>(Secret)
    <6:PROPN/flat>(of) <7:PROPN/flat>(Mana) <9:NOUN/flat>(Remake)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - xcomp
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 14
    - advmod
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 8
    - obj
  sentence: <1:ADJ/root>(skurrilen) <2:CCONJ/cc>(und) <3:ADP/conj>(um) <ROOT> <4:VERB/root>(dingen)
    <5:DET/nsubj>(dieser) <6:NOUN/obj>(film) <7:ADV/advmod>(so) <8:VERB/xcomp>(hat)
    <9:AUX/aux>(ist) <10:ADV/advmod>(ja) <11:ADV/advmod>(auch) <12:ADV/advmod>(so)
    <13:DET/det:poss>(deine) <14:NOUN/obj>(person)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 8
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Immobilienpreise) <3:CCONJ/cc>(und) <4:DET/det>(die)\
    \ <5:NOUN/conj>(Kaufkraft) <6:DET/det>(der) <7:NOUN/nmod>(Chinesen) <8:VERB/root>(stehen)\
    \ <9:ADV/advmod>(also) <10:ADP/case>(in) <11:DET/obl>(einem) <ROOT> <12:NOUN/root>(Missverh\xE4\
    ltnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 2
    - compound:prt
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 2
    - conj
  - !!python/tuple
    - 12
    - 2
    - nsubj
  - !!python/tuple
    - 13
    - 18
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 13
    - nmod
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 21
    - cc
  - !!python/tuple
    - 20
    - 21
    - advmod
  - !!python/tuple
    - 21
    - 18
    - advmod
  sentence: "<1:PRON/nsubj>(Es) <2:VERB/root>(sieht) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Moment) <6:ADV/advmod>(auch) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)\
    \ <9:ADP/compound:prt>(aus) <10:SCONJ/mark>(als) <11:AUX/conj>(w\xFCrden) <12:PRON/nsubj>(die)\
    \ <ROOT> <13:NOUN/nsubj>(Probleme) <14:ADP/case>(an) <15:DET/det>(dem) <16:NOUN/nmod>(Mekong)\
    \ <17:ADV/advmod>(weniger) <18:VERB/root>(werden) <19:CCONJ/cc>(sondern) <20:ADV/advmod>(eher)\
    \ <21:ADV/advmod>(mehr)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(steht) <3:PRON/nsubj>(ihr) <4:ADV/advmod>(da)
    <5:ADV/advmod>(alleine) <6:ADP/case>(mit) <7:DET/obl>(dieser) <ROOT> <8:NOUN/root>(Diagnose)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:VERB/root>(bestimmt) <4:NOUN/dep>(Im) <ROOT> <5:NOUN/root>(Konsolenkrieg)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(ich) <3:VERB/root>(besitz') <4:ADV/advmod>(da)
    <5:NOUN/obj>(Minen) <6:ADP/compound:prt>(mit) <ROOT> <7:NOUN/root>(Diamanten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - compound
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:NOUN/compound>(Mitte) <2:NUM/dep>(20) <3:ADP/root>(mit) <ROOT> <4:NOUN/root>(Tits)
    <5:CCONJ/cc>(und) <6:DET/det>(nem) <7:NOUN/conj>(Arsch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <ROOT> <2:NOUN/nsubj>(Gegensatz) <3:ADP/case>(zu) <4:PRON/nmod>(dir) <5:AUX/cop>(bin)
    <6:PRON/nsubj>(ich) <7:ADJ/root>(konsequent)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Leute) <3:VERB/root>(reden) <4:DET/det>(dieser)
    <5:NOUN/obj>(Zaza) <6:VERB/xcomp>(hat) <ROOT> <8:NOUN/root>(Style)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  sentence: "<1:VERB/root>(machst) <2:ADP/compound:prt>(auf) <ROOT> <3:NOUN/root>(B\xE4\
    r) <4:CCONJ/cc>(und) <5:NOUN/conj>(Kante)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 2
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:AUX/cop>(is) <2:NOUN/root>(Sex) <3:ADP/case>(mit) <4:NOUN/nmod>(Frauen)
    <5:ADP/case>(in) <6:NOUN/nmod>(Strapsen) <7:CCONJ/cc>(und) <8:ADP/dep>(mit) <ROOT>
    <9:NOUN/root>(Titten)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 15
    - obj
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - obj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 8
    - acl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(waren) <3:ADV/advmod>(aber) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(schon) <6:DET/det>(die) <7:NUM/root>(50) <ROOT> <8:NOUN/root>(Fakten)\
    \ <9:ADP/case>(\xFCber) <10:PROPN/nmod>(Sith) <11:PRON/obj>(die) <12:PRON/nsubj>(ich)\
    \ <13:PRON/obj>(euch) <14:ADV/advmod>(heute) <15:VERB/acl>(vorstellen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/obj>(diesen) <2:NOUN/obj>(beelitz) <3:VERB/root>(heilst\xE4tten)\
    \ <4:CCONJ/cc>(oder) <5:ADV/advmod>(zumindest) <6:DET/conj>(irgendwelche) <ROOT>\
    \ <7:ADJ/amod>(paranormalen) <8:NOUN/root>(ph\xE4nomene)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - obj
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Mhm) <2:ADV/advmod>(Also) <3:DET/det>(das) <4:NOUN/nsubj>(Knochenmark)
    <5:VERB/root>(hat) <6:DET/obj>(keinen) <ROOT> <7:ADJ/amod>(spezifischen) <8:NOUN/root>(Eigengeschmack)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(Bis) <2:ADP/case>(auf) <3:DET/nmod>(diesen) <4:DET/root>(einen)
    <ROOT> <5:NOUN/root>(Roboter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 2
    - cc
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:NOUN/root>(Land) <3:ADP/case>(voller) <4:PROPN/nmod>(Fun)
    <5:PROPN/flat>(Facts) <6:CCONJ/cc>(und) <ROOT> <7:NOUN/root>(Storys)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 7
    - ccomp
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - cc
  - !!python/tuple
    - 11
    - 7
    - conj
  - !!python/tuple
    - 12
    - 11
    - obl:arg
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - obj
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/root>(w\xE4hrend) <3:PRON/nsubj>(er) <4:DET/obj>(diese)\
    \ <ROOT> <5:NOUN/obj>(Sachen) <6:VERB/ccomp>(erz\xE4hlt) <7:VERB/root>(sitze)\
    \ <8:PRON/nsubj>(ich) <9:ADV/advmod>(da) <10:CCONJ/cc>(und) <11:VERB/conj>(schmiere)\
    \ <12:PRON/obl:arg>(mir) <13:DET/det>(ein) <14:NOUN/obj>(Br\xF6tchen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:DET/root>(dieser) <ROOT> <3:NOUN/root>(Selbstoptimierung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(vergiss) <2:DET/det>(den) <3:PROPN/obj>(Porsche) <4:ADP/compound:prt>(mit)
    <ROOT> <5:NOUN/root>(Felgen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Predigt) <2:PRON/nsubj>(was) <3:ADP/dep>(von) <ROOT> <4:NOUN/root>(Werten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:PRON/obl:arg>(mir) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:NOUN/root>(Hardrocker)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:PRON/nsubj>(ich) <3:VERB/root>(brauch) <4:DET/obj>(keine)
    <ROOT> <5:NOUN/root>(Vergleiche)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - parataxis
  sentence: <1:ADP/case>(Um) <2:PRON/root>(der) <ROOT> <3:NOUN/obj>(Ohnmacht) <4:PART/mark>(zu)
    <5:VERB/root>(entgegnen) <7:PRON/nsubj>(Es) <8:VERB/parataxis>(reicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  - !!python/tuple
    - 10
    - 11
    - dep
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:NOUN/root>(Konflikte) <2:PRON/obj>(die) <3:PRON/nsubj>(es) <4:PART/advmod>(nicht)\
    \ <5:VERB/acl>(gewinnen) <6:AUX/aux>(kann) <7:ADV/advmod>(da) <8:PRON/nsubj>(sie)\
    \ <9:ADP/compound:prt>(auf) <ROOT> <10:NOUN/dep>(Fehleinsch\xE4tzungen) <11:VERB/root>(basieren)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  sentence: <1:PROPN/root>(Eure) <ROOT> <2:NOUN/nsubj>(Gangsterrapper) <3:VERB/root>(zahlen)
    <4:NOUN/obj>(Schutzgeld)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - obl:arg
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:AUX/aux>(wollt) <3:PRON/obj>(ihr) <4:PRON/obl:arg>(mir)\
    \ <5:VERB/root>(erz\xE4hlen) <6:ADP/case>(von) <7:PRON/obl>(eurem) <ROOT> <8:NOUN/root>(Game)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(ihr) <ROOT> <2:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:NOUN/root>(Ficke) <2:DET/det>(die) <3:NOUN/dep>(Szene) <4:ADP/advmod>(mit)\
    \ <5:ADP/compound:prt>(zu) <ROOT> <6:NOUN/root>(S\xE4tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(tunnel) <3:DET/det>(die) <4:ADJ/amod>(halbe)
    <5:NOUN/obj>(Mannschaft) <6:ADV/advmod>(nur) <7:ADP/case>(aus) <8:DET/obl>(einem)
    <ROOT> <9:NOUN/root>(Zufall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - case
  sentence: "<1:ADV/advmod>(Vielleicht) <2:VERB/root>(hast) <3:PRON/nsubj>(du\u2026\
    ) <4:ADV/advmod>(vielleicht) <5:VERB/ccomp>(bin) <6:PRON/nsubj>(ich) <7:ADV/advmod>(da)\
    \ <8:PART/advmod>(nicht) <9:ADP/case>(von) <10:DET/det>(der) <11:ADJ/advmod>(ganz)\
    \ <ROOT> <12:NOUN/root>(Radikalit\xE4t) <13:ADP/case>(wie)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - expl
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - ccomp
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:AUX/root>(ist) <2:PRON/expl>(es) <3:ADV/advmod>(nat\xFCrlich) <4:ADV/advmod>(so)\
    \ <5:SCONJ/mark>(dass) <6:PRON/nsubj>(wir) <7:ADV/advmod>(halt) <8:PRON/ccomp>(die)\
    \ <ROOT> <9:NOUN/dep>(Trailer) <10:VERB/root>(sehen) <11:AUX/aux>(wollen)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 10
    - obl
  - !!python/tuple
    - 14
    - 10
    - cc
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(h\xE4tte) <3:PRON/obj>(irgendwas) <4:ADP/case>(in)\
    \ <5:DET/det>(dem) <6:NOUN/obl>(Netz) <7:VERB/root>(gesagt) <8:CCONJ/cc>(und)\
    \ <9:ADV/advmod>(jetzt) <10:VERB/conj>(wird's) <11:ADV/advmod>(hart) <12:ADP/case>(mit)\
    \ <13:NOUN/obl>(Waffen) <14:CCONJ/cc>(und) <ROOT> <15:NOUN/root>(Jungs)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:ADV/advmod>(trotzdem) <3:VERB/root>(hat) <4:PROPN/nsubj>(Ferdinand)
    <5:PROPN/flat>(Junior) <6:DET/obj>(diesen) <ROOT> <7:NOUN/dep>(Erdrutschsieg)
    <8:VERB/root>(hingelegt) <9:X/punct>(How)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 1
    - obj
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:SCONJ/root>(Bevor) <2:PRON/nsubj>(ich) <3:PRON/obj>(dir) <4:ADV/advmod>(mehr)
    <5:ADP/case>(von) <6:DET/det>(diesem) <7:NOUN/nmod>(Hai) <8:DET/obj>(einem) <ROOT>
    <9:NOUN/compound>(Meeressaurier) <11:NOUN/root>(Killer)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 1
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  - !!python/tuple
    - 11
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - ccomp
  sentence: "<1:SCONJ/mark>(Dass) <2:DET/det>(die) <3:DET/det>(meisten) <4:NOUN/compound>(trans)\
    \ <6:NOUN/root>(Personen) <7:ADP/compound:prt>(mit) <ROOT> <8:NOUN/obj>(Diskriminierungen)\
    \ <9:VERB/root>(k\xE4mpfen) <10:AUX/aux>(m\xFCssen) <11:PRON/nsubj>(das) <12:AUX/ccomp>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(ich) <3:ADV/advmod>(noch) <4:PART/advmod>(nicht)
    <5:PRON/root>(den) <ROOT> <6:NOUN/nsubj>(Erfolg) <7:VERB/root>(hatte) <8:ADP/case>(als)
    <9:NOUN/obl>(Frau)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/root>(weil) <3:PROPN/nsubj>(Shulk) <4:ADP/case>(mit)
    <5:PRON/obl>(dem) <ROOT> <6:PROPN/nsubj>(Monado) <7:VERB/root>(klarkommt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - obl
  sentence: <1:DET/root>(Einen) <2:ADV/advmod>(besonders) <ROOT> <3:NOUN/nsubj>(Sprung)
    <4:VERB/root>(gab) <5:PRON/nsubj>(es) <6:ADP/case>(in) <7:DET/det>(der) <8:NOUN/obl>(Pandemie)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/nsubj>(einen) <2:ADV/advmod>(richtig) <3:ADJ/root>(tollen) <ROOT>
    <4:NOUN/dep>(Film) <5:VERB/root>(herauszubringen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(die) <ROOT> <3:NOUN/root>(Folgen) <4:ADP/case>(von)
    <5:DET/det>(dem) <6:NOUN/nmod>(Klimawandel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Doch) <2:PRON/root>(deine) <ROOT> <3:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/nsubj>(OL) <2:PROPN/flat>(Bratan) <3:PROPN/flat>(flowt) <4:ADJ/root>(perfekt)
    <5:CCONJ/cc>(und) <6:PRON/nsubj>(ich) <7:VERB/conj>(hab) <ROOT> <9:NOUN/dep>(Stil)
    <10:VERB/root>(entdeckt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(wann) <2:PRON/root>(ihr) <ROOT> <3:PROPN/nsubj>(Gs) <4:ADV/advmod>(schon)
    <5:ADP/case>(in) <6:DET/det:poss>(meiner) <7:NOUN/obl>(Gegend) <8:VERB/root>(wart)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(geh\xF6rst) <3:ADP/case>(zu) <5:ADV/advmod>(ner)\
    \ <ROOT> <6:NOUN/root>(Spezies) <7:ADP/case>(mit) <8:NOUN/nmod>(K\xE4mpfergeist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(hatte) <3:ADP/case>(in) <4:DET/det:poss>(sei'm)
    <5:NOUN/obl>(Leben) <6:ADV/advmod>(nie) <8:ADV/advmod>(nen) <ROOT> <9:NOUN/root>(Draht)
    <10:ADP/case>(zu) <11:PROPN/nmod>(Tschetschen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schreib) <4:ADV/advmod>(schon) <5:ADV/advmod>(wieder)
    <6:DET/obj>(einen) <ROOT> <7:NOUN/root>(Part)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 11
    - nsubj
  - !!python/tuple
    - 6
    - 11
    - obj
  - !!python/tuple
    - 7
    - 11
    - aux
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:DET/det>(das) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/nsubj>(Boiler) <6:PRON/obj>(Das) <7:AUX/aux>(habe) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(noch) <10:ADV/advmod>(nie) <11:VERB/root>(gesehen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Noch) <2:ADV/advmod>(immer) <3:VERB/root>(macht) <4:ADP/case>(aus)
    <5:PRON/obl>(euch) <6:NOUN/obj>(Placebo) <7:NOUN/obj>(kein'n) <ROOT> <8:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(zeig) <2:PRON/obj>(mir) <3:PRON/obj>(deine) <ROOT> <4:PROPN/root>(Muckis)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  sentence: "<1:ADP/root>(Mit) <ROOT> <2:NOUN/obj>(Aktionen) <3:VERB/root>(sorgen)\
    \ <4:PRON/nsubj>(wir) <5:ADP/case>(f\xFCr) <6:NOUN/obl>(Massenkonfusion)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 3
    - obl
  sentence: "<1:DET/root>(Diese) <ROOT> <2:NOUN/obj>(Angstanf\xE4lle) <3:VERB/root>(hat)\
    \ <4:PRON/nsubj>(sie) <5:ADV/advmod>(aber) <6:ADV/advmod>(erst) <7:ADP/case>(seit)\
    \ <8:NUM/nummod>(zwei) <9:NOUN/obl>(Jahren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - nummod
  - !!python/tuple
    - 6
    - 9
    - nummod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 2
    - appos
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 9
    - nmod
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - advmod
  sentence: "<1:DET/det>(die) <2:PROPN/root>(Ukraine) <4:ADV/advmod>(etwa) <5:NUM/nummod>(20)\
    \ <6:NUM/nummod>(000) <7:ADP/case>(bis) <8:NUM/nmod>(60) <9:NUM/appos>(000) <10:ADP/case>(pro)\
    \ <11:NOUN/nmod>(Tag) <12:ADP/case>(F\xFCr) <13:DET/nmod>(diesen) <ROOT> <14:NOUN/nsubj>(Unterschied)\
    \ <15:VERB/root>(gibt) <16:PRON/nsubj>(es) <17:ADJ/advmod>(ganz)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - mark
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(geht) <3:ADV/advmod>(darum) <4:SCONJ/mark>(dass)
    <5:PRON/nsubj>(wir) <6:DET/obj>(einen) <ROOT> <7:NOUN/root>(Wettbewerbsvorteil)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - amod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:SCONJ/root>(wenn) <3:PROPN/nsubj>(Simon) <4:ADP/case>(von)
    <5:DET/det>(einem) <6:ADV/advmod>(richtig) <7:ADJ/amod>(richtig) <ROOT> <8:NOUN/nsubj>(Trick)
    <9:VERB/root>(spricht)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Sitzen) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/nmod>(Krankenwagen)
    <5:ADJ/advmod>(schwer) <6:VERB/root>(verletzt) <7:DET/det>(die) <8:ADV/advmod>(so)
    <9:ADJ/amod>(genannten) <ROOT> <10:ADJ/root>(killer)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - obl:arg
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 8
    - appos
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(den) <3:NOUN/root>(ganzen) <ROOT> <4:ADJ/amod>(deutschen)
    <5:NOUN/obl:arg>(Rappern) <6:VERB/root>(fehl'n) <7:DET/det>(die) <8:NOUN/nsubj>(Themen)
    <13:DET/det:poss>(meine) <14:NOUN/appos>(Fehler)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(komme) <2:ADP/compound:prt>(mit) <ROOT> <3:PROPN/root>(Tschetschen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - nmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nmod
  sentence: "<1:PROPN/root>(Z) <2:PROPN/flat>(B) <3:ADP/compound:prt>(mit) <ROOT>\
    \ <4:NOUN/root>(Nahkampfattacken) <5:ADP/case>(mit) <6:PROPN/nmod>(Cooldown) <7:ADJ/amod>(neuen)\
    \ <8:NOUN/nmod>(Schaupl\xE4tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - acl
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:VERB/root>(hat) <3:PRON/obj>(die) <ROOT> <4:VERB/acl>(gemacht)
    <5:DET/det>(die) <6:NOUN/obj>(Beine) <7:ADV/advmod>(noch) <8:VERB/root>(hochgestellt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/amod>(pseudodeepen) <2:NOUN/root>(Story) <3:CCONJ/cc>(und) <4:DET/conj>(irgendwelchen)
    <ROOT> <5:ADJ/amod>(ernsten) <6:NOUN/root>(Themen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Woher) <2:VERB/root>(kommen) <3:DET/nsubj>(diese) <ROOT>
    <4:NOUN/root>(Preisunterschiede)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det:poss
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 2
    - conj
  - !!python/tuple
    - 17
    - 16
    - obj
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 18
    - cc
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:ADP/case>(zu) <4:DET/det>(dem)
    <5:NOUN/obl>(Zeitpunkt) <6:ADV/advmod>(so) <7:DET/det>(viele) <8:NOUN/obj>(Baustellen)
    <9:ADP/case>(in) <10:DET/det:poss>(meinem) <11:NOUN/nmod>(Leben) <12:ADP/case>(wie)
    <13:ADV/advmod>(noch) <14:ADV/advmod>(nie) <15:PRON/nsubj>(Ich) <16:VERB/conj>(hatte)
    <17:DET/obj>(einen) <ROOT> <18:NOUN/root>(Tiefpunkt) <19:CCONJ/cc>(und)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(steht) <4:ADV/advmod>(nat\xFC\
    rlich) <5:ADJ/advmod>(klar) <6:ADP/compound:prt>(im) <ROOT> <7:ADJ/root>(Unverh\xE4\
    ltnis) <8:ADP/case>(zu) <9:DET/det>(dem) <10:NOUN/nmod>(Zeitraum)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 6
    - dep
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 6
    - nmod
  sentence: "<1:ADV/advmod>(Damit) <2:VERB/root>(stehen) <3:PRON/nsubj>(sie) <4:ADP/case>(zu)\
    \ <5:DET/obl>(einem) <ROOT> <6:NOUN/root>(Kontrast) <7:DET/det>(der) <8:PROPN/nmod>(Jedi)\
    \ <9:DET/det>(der) <10:PROPN/nmod>(Klonkriege) <11:PRON/dep>(die) <12:PRON/nsubj>(sich)\
    \ <13:ADV/advmod>(ja) <14:ADP/case>(als) <15:NOUN/nmod>(Gener\xE4le)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - dep
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:SCONJ/root>(dass) <3:DET/det:poss>(mein) <4:NOUN/nsubj>(K\xF6\
    rper) <5:ADP/case>(mit) <6:PRON/nmod>(der) <ROOT> <7:NOUN/dep>(Angstreaktion)\
    \ <8:ADV/advmod>(total) <9:VERB/root>(\xFCberreagiert)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - det
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/root>(die) <2:PRON/obj>(sich) <3:ADP/case>(um) <4:DET/det>(die)\
    \ <ROOT> <5:NOUN/dep>(F\xE4lle) <6:VERB/root>(k\xFCmmern)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Mit) <ROOT> <2:NOUN/root>(Folgen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(kombiniert) <2:ADP/case>(mit) <3:DET/obl>(meiner) <ROOT>
    <4:NOUN/root>(Atemtechnik)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(deine) <ROOT> <3:NOUN/root>(MCs)
- dependencies:
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Ich) <3:VERB/root>(spitte) <ROOT> <4:NOUN/root>(Schei\xDF\
    )"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 4
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(schon) <ROOT> <4:NOUN/root>(Bartwuchs)
    <5:CCONJ/cc>(und) <6:PRON/conj>(ich) <7:VERB/conj>(fick) <9:ADP/case>(auf) <10:NOUN/nmod>(Kinderstyle)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 4
    - conj
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 9
    - det
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADV/advmod>(zu) <4:ADJ/root>(real)\
    \ <5:ADP/case>(f\xFCr) <6:DET/det>(dieses) <7:NOUN/nmod>(Game) <8:CCONJ/cc>(und)\
    \ <9:VERB/conj>(habe) <10:ADV/advmod>(noch) <11:DET/det>(ein) <ROOT> <13:PROPN/root>(Flow)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 2
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 13
    - 11
    - appos
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(guck) <4:ADP/case>(mit) <5:DET/det:poss>(deinem)
    <6:NOUN/obl>(Babe) <7:ADP/case>(in) <8:DET/det>(dem) <9:NOUN/obl>(Kino) <10:DET/obj>(einen)
    <ROOT> <11:NOUN/root>(Streifen) <13:NOUN/appos>(Psht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(spitte) <ROOT> <3:ADV/root>(schei\xDF\
    )"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 9
    - advmod
  - !!python/tuple
    - 3
    - 9
    - advmod
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 9
    - obl
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - obl
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 17
    - case
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 14
    - nmod
  sentence: "<1:ADP/case>(Ohne) <2:ADV/advmod>(jetzt) <3:ADV/advmod>(weiter) <4:ADP/case>(um)\
    \ <5:DET/det>(den) <6:ADJ/amod>(hei\xDFen) <7:NOUN/obl>(Brei) <8:PART/mark>(zu)\
    \ <9:VERB/root>(reden) <10:ADV/advmod>(hier) <11:ADP/case>(zu) <12:DET/det>(den)\
    \ <13:NUM/obl>(50) <ROOT> <14:NOUN/root>(Fakten) <15:ADP/case>(\xFCber) <16:DET/det>(die)\
    \ <17:NOUN/nmod>(Klone)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 8
    - dep
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 13
    - appos
  - !!python/tuple
    - 16
    - 8
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(waren) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(schon) <6:DET/det>(die) <7:NUM/root>(50) <ROOT> <8:NOUN/root>(Fakten)\
    \ <9:ADP/case>(\xFCber) <10:NOUN/nmod>(Klone) <11:DET/det>(der) <12:NOUN/nmod>(Republik)\
    \ <13:PRON/dep>(die) <14:PRON/nsubj>(ich) <15:PRON/appos>(euch) <16:ADV/advmod>(heute)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 1
    - dep
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - nmod
  - !!python/tuple
    - 14
    - 13
    - nmod
  sentence: "<1:SCONJ/root>(Wenn) <2:PRON/dep>(ihr) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(noch)\
    \ <5:DET/det>(das) <6:NOUN/dep>(Video) <7:ADP/case>(\xFCber) <8:DET/det>(die)\
    \ <9:NUM/nmod>(50) <ROOT> <10:NOUN/root>(Fakten) <11:ADP/case>(\xFCber) <12:DET/det>(die)\
    \ <13:NOUN/nmod>(Kampfdroiden) <14:PRON/nmod>(der)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(stand) <3:PRON/obj>(im) <ROOT> <4:NOUN/root>(Gegensatz)
    <5:ADP/case>(zu) <6:DET/det>(der) <7:NOUN/nmod>(Crew) <8:DET/det>(der) <9:PROPN/nmod>(Grafton)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - aux
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/compound>(Doubletime) <3:NOUN/nsubj>(Rapper) <4:AUX/aux>(wollen)
    <5:PRON/obj>(uns) <6:VERB/root>(imponieren) <7:ADP/compound:prt>(mit) <ROOT> <8:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(wollen) <3:PART/advmod>(nicht) <4:DET/obj>(irgendeinen)
    <ROOT> <5:NOUN/dep>(Fleischersatz) <6:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(komm) <3:ADP/case>(mit) <4:ADJ/advmod>(ganz)
    <ROOT> <5:NOUN/root>(Kampfsportlern)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 3
    - dep
  sentence: <1:VERB/root>(kommen) <2:DET/nsubj>(diese) <ROOT> <3:NOUN/root>(Zahlen)
    <4:ADP/case>(von) <5:NOUN/nmod>(Paketlieferungen) <6:ADV/dep>(zustande)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:ADP/case>(bei) <3:NOUN/root>(dein'n) <ROOT> <4:NOUN/root>(Kurven)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - det
  - !!python/tuple
    - 9
    - 11
    - amod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - nmod
  - !!python/tuple
    - 12
    - 7
    - dep
  sentence: <1:DET/det>(Die) <2:ADJ/amod>(russischen) <3:NOUN/nsubj>(Truppen) <4:VERB/root>(versuchen)
    <5:ADP/case>(aus) <6:DET/obl>(ihren) <ROOT> <7:NOUN/root>(Fehlern) <8:DET/det>(der)
    <9:ADJ/amod>(ersten) <10:DET/det>(beiden) <11:NOUN/nmod>(Monate) <12:ADP/dep>(zu)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - cc
  - !!python/tuple
    - 10
    - 8
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 14
    - 12
    - appos
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <4:DET/det>(ein'n) <5:ADJ/amod>(ganzen)\
    \ <6:NOUN/obj>(Schrank) <7:ADV/advmod>(voll) <8:NOUN/obj>(Waffen) <9:CCONJ/cc>(und)\
    \ <10:DET/det>(ein) <ROOT> <12:PROPN/root>(Coup\xE9) <14:PROPN/appos>(Ahh)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - det
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  sentence: "<1:DET/det>(einen) <2:ADJ/amod>(weiteren) <3:NOUN/compound>(Stalking)\
    \ <5:NOUN/obj>(Fall) <6:VERB/root>(eintauchen) <7:AUX/aux>(wollt) <8:DET/obj>(einen)\
    \ <9:ADV/advmod>(\xFCberaus) <ROOT> <10:ADP/case>(mit) <11:NOUN/root>(Todesfolge)\
    \ <12:ADV/advmod>(dann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/case>(mit) <2:DET/root>(einer) <ROOT> <3:NOUN/root>(Eindeutigkeit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Klingt) <2:ADP/case>(nach) <3:NOUN/obl>(ner) <ROOT> <4:PROPN/root>(Challenge)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(hat) <3:DET/obj>(einen) <ROOT> <4:NOUN/root>(Verdacht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - case
  - !!python/tuple
    - 5
    - 8
    - amod
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/nsubj>(gees) <3:VERB/root>(spielen)
    <4:ADP/case>(mit) <5:ADJ/amod>('ner) <6:NOUN/compound>(gummi) <8:NOUN/obl>(ente)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(st\xFCrm) <4:DET/det>(das) <5:NOUN/obj>(Business)\
    \ <6:ADP/case>(mit) <7:ADJ/advmod>(voll) <ROOT> <8:ADJ/amod>(kranken) <9:NOUN/root>(Stories)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:DET/root>(einem) <ROOT> <3:NOUN/root>(Missverh\xE4\
    ltnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Wie) <2:VERB/root>(bringt) <3:PRON/nsubj>(man) <4:ADV/advmod>(denn)
    <5:ADV/advmod>(so) <ROOT> <6:PROPN/root>(Flow) <7:ADP/case>(auf) <8:DET/det>(den)
    <9:NOUN/nmod>(Takt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(auf) <2:ADJ/amod>(ner) <3:PROPN/root>(LAN) <4:ADP/case>(in)
    <5:DET/nmod>(diesem) <ROOT> <6:ADJ/amod>(neuen) <7:NOUN/obj>(Counterstrike) <8:PART/mark>(zu)
    <9:VERB/root>(verbringen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - det
  - !!python/tuple
    - 4
    - 6
    - nummod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - obl
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 14
    - det:poss
  - !!python/tuple
    - 14
    - 15
    - obj
  - !!python/tuple
    - 15
    - 12
    - xcomp
  - !!python/tuple
    - 16
    - 19
    - cc
  - !!python/tuple
    - 17
    - 19
    - obj
  - !!python/tuple
    - 18
    - 19
    - advmod
  - !!python/tuple
    - 19
    - 15
    - conj
  sentence: <1:PRON/expl>(Ihr) <2:VERB/root>(wisst) <3:DET/det>(diese) <4:NUM/nummod>(20)
    <6:ADJ/amod>(spurige) <7:PRON/nsubj>(Sie) <8:VERB/conj>(hat) <9:ADP/case>(zu)
    <10:DET/obl>(einem) <ROOT> <11:PROPN/nsubj>(Banger) <12:VERB/root>(halt) <13:DET/det:poss>(ihre)
    <14:NOUN/obj>(Powermoves) <15:VERB/xcomp>(ausgepackt) <16:CCONJ/cc>(und) <17:PRON/obj>(sich)
    <18:ADV/advmod>(dabei) <19:VERB/conj>(gefilmt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  sentence: <1:CCONJ/cc>(und) <2:PART/advmod>(nicht) <3:PRON/root>(die) <ROOT> <4:NOUN/root>(Stiernacken)
    <5:CCONJ/cc>(und) <6:NOUN/conj>(Superhelden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 10
    - dep
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Dieses) <2:NOUN/nsubj>(Gef\xFChl) <3:AUX/root>(k\xF6nnte)\
    \ <4:ADV/advmod>(dann) <5:ADP/compound:prt>(zu) <ROOT> <6:NOUN/dep>(Angst) <8:CCONJ/cc>(und)\
    \ <9:NOUN/conj>(Stresszust\xE4nden) <10:VERB/root>(f\xFChren)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 10
    - cc
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - advmod
  sentence: "<1:ADV/root>(mehr) <2:ADP/case>(\xFCber) <3:DET/nmod>(diese) <ROOT> <4:NOUN/nsubj>(Sternenzerst\xF6\
    rer) <5:VERB/root>(erfahren) <6:AUX/aux>(wollt) <7:CCONJ/cc>(und) <8:ADV/advmod>(warum)\
    \ <9:PRON/nsubj>(sie) <10:ADJ/advmod>(eigentlich)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 9
    - obj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Man) <2:AUX/root>(muss) <3:PRON/obj>(sich) <4:ADV/advmod>(wirklich)
    <5:DET/obj>(diese) <ROOT> <6:NOUN/obj>(Auswirkungen) <7:ADP/case>(vor) <8:NOUN/nmod>(Ort)
    <9:VERB/root>(angucken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 7
    - obl
  - !!python/tuple
    - 13
    - 7
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(heute) <4:ADP/case>(in)\
    \ <5:PROPN/obl>(M\xFCnchen) <6:CCONJ/cc>(und) <7:VERB/conj>(treffe) <8:ADV/advmod>(hier)\
    \ <9:ADV/advmod>(gleich) <10:PRON/obj>(jemanden) <11:ADP/case>(mit) <12:DET/obl>(einer)\
    \ <13:ADV/advmod>(ziemlich) <ROOT> <14:NOUN/root>(Vergangenheit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - acl
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 5
    - obl
  sentence: <1:DET/root>(vielen) <ROOT> <2:NOUN/root>(Sachen) <3:PRON/nsubj>(die)
    <4:ADV/advmod>(schon) <5:VERB/acl>(passiert) <6:AUX/aux>(sind) <7:ADP/case>(in)
    <8:DET/det:poss>(meinem) <9:NOUN/obl>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/root>(der) <ROOT> <3:NOUN/compound>(Schamanen)
    <5:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(sie) <2:VERB/root>(stehen) <3:PRON/obj>(im) <ROOT> <4:NOUN/root>(Gegensatz)
    <5:ADP/case>(zu) <6:DET/det>(den) <7:NOUN/nmod>(Rappern) <8:ADP/case>(in) <9:DET/det>(den)
    <10:PROPN/nmod>(USA)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Dabei) <2:VERB/root>(musste) <3:PRON/nsubj>(ich) <4:DET/obj>(einen)
    <ROOT> <5:NOUN/dep>(Schnitt) <6:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(auch) <2:NOUN/nsubj>(Sanktionen) <3:VERB/root>(vorgesehen)\
    \ <4:ADV/advmod>(auch) <5:ADP/compound:prt>(bei) <ROOT> <6:NOUN/dep>(Termin) <7:VERB/root>(vers\xE4\
    umnissen)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - aux
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(wie) <3:AUX/aux>(kann) <4:DET/det>(eine)
    <5:NOUN/nsubj>(Rede) <6:ADV/advmod>(so) <7:DET/root>(einen) <ROOT> <8:NOUN/dep>(Unterschied)
    <9:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(wir) <3:VERB/root>(geben) <4:PRON/obj>(dir)
    <5:ADV/advmod>(jetzt) <6:DET/obj>(diese) <ROOT> <7:NOUN/root>(Medikamente)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 6
    - dep
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 4
    - nmod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 14
    - csubj
  - !!python/tuple
    - 13
    - 12
    - aux
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - nsubj
  sentence: "<1:PROPN/nsubj>(Rim) <2:VERB/root>(wurde) <3:ADV/advmod>(Ziemlich) <4:ADJ/xcomp>(krass)\
    \ <5:CCONJ/cc>(oder) <6:SCONJ/mark>(Wenn) <7:PRON/dep>(ihr) <8:ADV/advmod>(mehr)\
    \ <9:ADP/case>(von) <10:DET/nmod>(diesen) <ROOT> <11:NOUN/obj>(Theorien) <12:VERB/csubj>(h\xF6\
    ren) <13:AUX/aux>(wollt) <14:VERB/root>(gebt) <15:PRON/nsubj>(dem)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 14
    - aux
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 14
    - obl
  - !!python/tuple
    - 14
    - 10
    - xcomp
  sentence: <1:ADV/advmod>(Damit) <2:PRON/nsubj>(Du) <3:PRON/flat>(Dir) <4:DET/det>(eine)
    <5:NOUN/root>(Vorstellung) <6:ADP/case>(von) <7:PRON/nmod>(der) <ROOT> <8:NOUN/nsubj>(Armut)
    <9:ADV/advmod>(dort) <10:VERB/root>(machen) <11:AUX/aux>(kannst) <12:ADP/case>(pro)
    <13:NOUN/obl>(Kopf) <14:VERB/xcomp>(erreichen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 9
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - amod
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/root>(Du) <2:CCONJ/cc>(und) <3:PRON/conj>(deine) <ROOT> <4:NOUN/nsubj>(Jungs)
    <5:AUX/cop>(sind) <6:DET/det>(eine) <7:ADJ/amod>(gleine) <8:ADJ/amod>(huren) <9:NOUN/root>(Gang)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 11
    - dep
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ihr) <2:VERB/root>(k\xF6nnt) <3:PART/advmod>(nicht) <4:ADV/advmod>(gleich)\
    \ <5:PRON/obj>(die) <ROOT> <6:NOUN/dep>(Beats) <7:CCONJ/cc>(oder) <8:NOUN/conj>(Features)\
    \ <9:ADP/case>(von) <10:PROPN/nmod>(Heads) <11:VERB/root>(erwarten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Dich) <2:VERB/root>(machen) <3:DET/det>(keine) <4:NOUN/obj>(Worte)
    <5:CCONJ/cc>(sondern) <6:NOUN/conj>(Taten) <7:ADP/case>(zu) <9:PRON/obl>(nem)
    <ROOT> <10:NOUN/root>(Kerl)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wieder) <2:ADV/advmod>(mal) <3:DET/root>(zuviel) <4:ADP/case>(von)
    <5:PRON/nmod>(dem) <ROOT> <6:NOUN/root>(Stoff)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:VERB/root>(leben) <3:ADP/case>(in) <5:ADV/advmod>(ner)
    <ROOT> <6:NOUN/root>(Zeit)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Wie) <2:AUX/aux>(habt) <3:PRON/nsubj>(ihr) <4:PRON/nsubj>(das)\
    \ <5:VERB/root>(geschafft) <6:ADP/case>(mit) <7:ADV/advmod>(so) <8:DET/obl>(einer)\
    \ <ROOT> <9:NOUN/root>(Einschr\xE4nkung)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 7
    - flat
  - !!python/tuple
    - 9
    - 7
    - flat
  sentence: <1:ADV/advmod>(Vielleicht) <2:ADV/advmod>(sogar) <3:ADP/case>(mit) <4:DET/root>(einer)
    <ROOT> <5:NOUN/root>(Verbindung) <6:ADP/case>(zu) <7:PROPN/nmod>(Jedi) <8:PROPN/flat>(Fallen)
    <9:PROPN/flat>(Order)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:AUX/root>(w\xE4ren) <4:ADV/advmod>(da)\
    \ <5:ADV/advmod>(noch) <6:PRON/nsubj>(die) <ROOT> <7:NOUN/root>(Spezialattacken)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obj
  sentence: "<1:ADP/root>(Bei) <ROOT> <2:NOUN/obj>(Flecken) <3:VERB/root>(braucht)\
    \ <4:DET/det>(die) <5:NOUN/nsubj>(Waschnuss) <6:ADV/advmod>(offenbar) <7:ADJ/amod>(weitere)\
    \ <8:NOUN/obj>(Zus\xE4tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/root>(warum) <2:PRON/nsubj>(ich) <3:ADV/advmod>(so) <ROOT> <4:NOUN/dep>(Hass)
    <5:ADP/case>(auf) <6:NOUN/nmod>(Homos) <7:VERB/root>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(die) <ROOT> <2:NOUN/root>(Punks)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 1
    - advcl
  sentence: "<ROOT> <1:NOUN/root>(Sicherheitsvorkehrungen) <2:ADP/mark>(Um) <3:DET/det>(ein)\
    \ <4:NOUN/obj>(Gef\xFChl) <5:ADV/advmod>(daf\xFCr) <6:PART/mark>(zu) <7:VERB/advcl>(bekommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(nur) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/root>(Zusammenspiel)
    <5:ADP/case>(mit) <6:DET/nmod>(einer) <ROOT> <7:NOUN/root>(Festnahme)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(wie) <2:NOUN/nmod>(K\xFCnstler) <3:DET/det>(das) <4:ADJ/amod>(wei\xDF\
    e) <5:NOUN/root>(Pulver) <6:ADP/case>(in) <7:DET/nmod>(solche) <ROOT> <8:NOUN/nsubj>(Bauwerke)\
    \ <9:VERB/root>(verwandeln)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(schiebst) <3:PRON/obj>(dir) <4:DET/det>(einen)
    <5:NOUN/obj>(Film) <6:ADP/case>(auf) <7:PRON/obl>(unsre) <ROOT> <8:NOUN/root>(Panzeratzen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: "<1:NOUN/nsubj>(Spitzenpolitiker) <2:VERB/root>(fielen) <3:ADP/case>(mit)\
    \ <4:DET/det:poss>(ihrer) <5:ADV/advmod>(besonders) <ROOT> <6:NOUN/root>(Uninformiertheit)\
    \ <7:CCONJ/cc>(und) <8:ADJ/amod>(mangelnden) <9:NOUN/conj>(Urteilsf\xE4higkeit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 1
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(gibt) <2:PRON/nsubj>(es) <3:ADV/advmod>(da) <4:ADV/advmod>(gar)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(so) <7:DET/obj>(einen) <ROOT> <8:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advcl
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/advcl>(Wird) <2:PRON/nsubj>(man) <3:ADV/advmod>(zu) <4:ADJ/xcomp>(dick)\
    \ <5:VERB/root>(wird) <6:PRON/nsubj>(man) <7:ADP/compound:prt>(zu) <ROOT> <8:NOUN/dep>(Di\xE4\
    ten) <9:VERB/root>(gezwungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - conj
  sentence: <1:ADP/case>(von) <2:DET/root>(all) <3:PRON/appos>(der) <ROOT> <4:NOUN/root>(Umweltverschmutzung)
    <5:CCONJ/cc>(und) <6:DET/det>(den) <7:NOUN/conj>(Menschenrechtsverletzungen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 12
    - obl
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 12
    - aux
  - !!python/tuple
    - 7
    - 12
    - obl:arg
  - !!python/tuple
    - 8
    - 12
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - nmod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - case
  - !!python/tuple
    - 16
    - 12
    - obl
  sentence: <1:ADP/case>(Bei) <2:DET/det>(dem) <3:NOUN/obl>(Schauen) <4:DET/det>(der)
    <5:NOUN/nmod>(Folge) <6:AUX/aux>(sind) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(aber)
    <9:DET/det>(ein) <10:ADJ/nmod>(paar) <11:NOUN/nsubj>(Dinge) <12:VERB/root>(aufgefallen)
    <13:PRON/nsubj>(die) <14:PRON/nsubj>(mich) <15:ADP/case>(zu) <16:DET/obl>(einer)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:PRON/nsubj>(die) <3:VERB/root>(versetzen) <4:PRON/obj>(dich)
    <5:ADP/case>(in) <6:DET/obl>(einen) <ROOT> <7:NOUN/root>(Rausch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:VERB/root>(tummeln) <2:PRON/obj>(sich) <3:ADP/compound:prt>(in) <ROOT>\
    \ <4:NOUN/root>(Stra\xDFen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Doch) <2:VERB/root>(brachte) <3:PRON/obj>(uns) <4:NOUN/obj>(\xB4\
    nen) <ROOT> <5:NOUN/root>(Wahn)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 4
    - acl
  sentence: "<1:NOUN/root>(Suche) <2:ADP/case>(nach) <3:PRON/nmod>(dem) <ROOT> <4:NOUN/root>(Knall)\
    \ <5:PRON/nsubj>(der) <6:ADP/case>(\xFCber) <7:DET/det>(alle) <8:NOUN/obl>(Massen)\
    \ <9:VERB/acl>(hallt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - amod
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - parataxis
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  - !!python/tuple
    - 14
    - 10
    - advmod
  - !!python/tuple
    - 15
    - 10
    - obj
  - !!python/tuple
    - 16
    - 10
    - advmod
  - !!python/tuple
    - 17
    - 20
    - nsubj
  - !!python/tuple
    - 18
    - 20
    - cop
  - !!python/tuple
    - 19
    - 20
    - cc
  - !!python/tuple
    - 20
    - 10
    - conj
  - !!python/tuple
    - 21
    - 25
    - advmod
  - !!python/tuple
    - 22
    - 25
    - cop
  - !!python/tuple
    - 23
    - 25
    - nsubj
  - !!python/tuple
    - 24
    - 25
    - det:poss
  - !!python/tuple
    - 25
    - 10
    - conj
  sentence: <1:NOUN/root>(rap) <2:PRON/nsubj>(die) <3:ADJ/amod>(ganz) <ROOT> <4:NOUN/nsubj>(flows)
    <5:AUX/cop>(bin) <6:ADP/case>(in) <7:ADJ/amod>(top) <8:NOUN/root>(form) <9:PRON/nsubj>(ihr)
    <10:VERB/parataxis>(bringt) <11:ADV/advmod>(nur) <12:ADV/advmod>(noch) <13:ADV/advmod>(pfandflaschen)
    <14:ADV/advmod>(raus) <15:PROPN/obj>(baba) <16:INTJ/advmod>(saad) <17:PRON/nsubj>(ich)
    <18:AUX/cop>(bin) <19:CCONJ/cc>(weder) <20:ADJ/conj>(feind) <21:ADV/advmod>(noch)
    <22:AUX/cop>(bin) <23:PRON/nsubj>(ich) <24:DET/det:poss>(dein) <25:NOUN/conj>(kamerad)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:DET/root>(einer) <ROOT> <3:NOUN/root>(R\xFCstung)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:PRON/nsubj>(er) <3:VERB/root>(macht) <4:ADP/case>(vor)
    <5:PRON/obl>(dir) <6:ADP/compound:prt>(auf) <ROOT> <7:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:DET/det>(Alle) <2:PRON/root>(deine) <ROOT> <3:NOUN/nsubj>(Rapper) <4:AUX/aux>(sind)
    <5:ADP/case>(aus) <6:DET/det:poss>(meinem) <7:NOUN/obl>(Arsch) <8:VERB/root>(gekrochen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - ccomp
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(was) <3:VERB/root>(ist) <4:ADV/advmod>(jetzt)
    <6:PRON/nsubj>(Wer) <7:ADP/case>(von) <8:PRON/obl>(uns) <9:VERB/ccomp>(hat) <10:ADV/advmod>(jetzt)
    <11:PRON/obj>(die) <ROOT> <12:NOUN/root>(Weiber)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - expl
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(gab) <3:PRON/expl>(es) <4:DET/obj>(welche)\
    \ <5:ADP/case>(mit) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/root>(Z\xE4hnen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(treffe) <3:PRON/obj>(jemanden) <4:PRON/obj>(der)
    <5:ADP/compound:prt>(unter) <ROOT> <6:NOUN/nsubj>(Nebenwirkungen) <7:VERB/root>(gelitten)
    <8:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(mach) <4:ADP/case>(aus) <5:DET/det:poss>(deiner)
    <6:NOUN/obl>(Bonzenvilla) <7:DET/det>(ein) <ROOT> <9:NOUN/root>(Tatort)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - dep
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:NOUN/root>(Grad) <2:X/dep>(nen) <ROOT> <3:NOUN/dep>(Ma\xDFstab) <4:VERB/root>(gesetzt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 6
    - xcomp
  - !!python/tuple
    - 6
    - 2
    - acl
  sentence: <1:PRON/root>(Die) <ROOT> <2:NOUN/root>(Geschichten) <3:PRON/nsubj>(die)
    <4:DET/obj>(jeden) <5:VERB/xcomp>(erblassen) <6:VERB/acl>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:DET/det>(den) <3:NOUN/root>(ganzen) <ROOT> <4:NOUN/obj>(Games)\
    \ <5:AUX/aux>(k\xF6nnte) <6:PRON/nsubj>(man) <7:VERB/root>(meinen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(hab) <3:ADV/advmod>(nen) <ROOT> <4:PROPN/root>(Skill)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Sinne) <4:VERB/root>(gab)
    <5:PRON/expl>(es) <6:DET/obj>(keinen) <ROOT> <7:PROPN/root>(Shift)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - obj
  - !!python/tuple
    - 5
    - 1
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 1
    - obl
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:VERB/root>(Will) <2:PRON/obl:arg>(mir) <3:DET/det>(das) <4:NOUN/obj>(Maul)\
    \ <5:PART/advmod>(nicht) <6:ADP/case>(\xFCber) <7:PRON/obl>(eure) <ROOT> <8:NOUN/nsubj>(Helden)\
    \ <9:VERB/root>(zerrei\xDFen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - nsubj
  - !!python/tuple
    - 3
    - 9
    - aux
  - !!python/tuple
    - 4
    - 9
    - obj
  - !!python/tuple
    - 5
    - 9
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/root>(Ihr) <ROOT> <2:NOUN/nsubj>(Fans) <3:AUX/aux>(habt) <4:PRON/obj>(das)
    <5:ADV/advmod>(wohl) <6:ADP/case>(bis) <7:ADV/advmod>(heute) <8:PART/advmod>(nicht)
    <9:VERB/root>(geschnallt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Stripperin) <2:ADP/advmod>(mit) <ROOT> <3:NOUN/root>(Kurven)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:X/advmod>(v) <3:PROPN/flat>(a) <4:ADP/case>(wegen)
    <5:DET/root>(ihren) <ROOT> <6:NOUN/compound>(Boss) <8:NOUN/nsubj>(Attacken) <9:ADJ/root>(nervenaufreibend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADP/case>(auf) <2:NOUN/root>(Grund) <3:DET/det:poss>(meines) <ROOT>\
    \ <4:NOUN/root>(K\xF6rpers)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/nsubj>(diese) <2:ADJ/root>(wahnsinnig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Such) <2:PRON/appos>(die) <ROOT> <3:NOUN/root>(Ideen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:INTJ/root>(schei\xDF) <2:ADP/case>(auf) <3:DET/det:poss>(dein) <ROOT>\
    \ <5:NOUN/root>(Beat)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:AUX/cop>(w\xE4re) <3:ADV/advmod>(irgendwann) <4:ADJ/root>(unterk\xFC\
    hlt) <5:ADP/compound:prt>(mit) <ROOT> <6:NOUN/root>(Folgen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/root>(Ficke) <2:ADP/case>(in) <3:DET/det>(den) <4:NOUN/nmod>(Arsch)
    <5:CCONJ/cc>(und) <6:VERB/conj>(bekomme) <ROOT> <7:NOUN/root>(Applaus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(den) <3:VERB/root>(braucht) <4:PRON/nsubj>(ihr)\
    \ <5:ADV/advmod>(n\xE4mlich) <6:DET/obj>(einen) <7:ADJ/advmod>(richtig) <ROOT>\
    \ <8:NOUN/root>(Panzerfetisch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(na) <3:ADV/advmod>(ja) <4:ADP/case>(bis)
    <5:ADP/case>(auf) <6:DET/root>(einen) <ROOT> <7:NOUN/root>(Dip) <8:ADP/advmod>(nach)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/dep>(Bedingungen) <2:VERB/root>(ausgesetzt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - mark
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 4
    - advmod
  - !!python/tuple
    - 13
    - 15
    - obj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - aux
  sentence: "<1:ADV/advmod>(Irgendwie) <2:AUX/aux>(h\xE4tte) <3:PRON/nsubj>(ich) <4:VERB/root>(erwartet)\
    \ <5:SCONJ/mark>(dass) <6:PRON/nsubj>(man) <7:DET/det>(die) <8:ADJ/amod>(genauen)\
    \ <9:NOUN/obj>(Gr\xFCnde) <10:ADP/case>(f\xFCr) <11:DET/nmod>(einen) <12:ADV/advmod>(so)\
    \ <ROOT> <13:NOUN/obj>(Schritt) <14:ADV/advmod>(klar) <15:VERB/root>(bennen) <16:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 5
    - obl
  - !!python/tuple
    - 10
    - 5
    - appos
  - !!python/tuple
    - 11
    - 12
    - cc
  - !!python/tuple
    - 12
    - 5
    - conj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 5
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/root>(dich) <3:ADP/case>(bei) <4:DET/nmod>(jedem)\
    \ <ROOT> <5:VERB/root>(lied) <6:ADP/case>(zu) <7:PROPN/obl>(harris) <8:NOUN/obl>(rumdresch)\
    \ <10:X/appos>(MC) <11:CCONJ/cc>(und) <12:NOUN/conj>(DJ) <13:ADP/case>(in) <14:ADJ/amod>(\xE4\
    ner) <15:NOUN/obl>(person)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - compound:prt
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bring) <4:PRON/obj>(den) <ROOT> <5:NOUN/root>(Sound)
    <6:CCONJ/cc>(und) <7:VERB/conj>(packe) <8:DET/det>(die) <9:NOUN/obj>(Waffe) <10:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 10
    - obl:arg
  - !!python/tuple
    - 3
    - 10
    - aux
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - flat
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  sentence: "<1:ADP/root>(Mit) <ROOT> <2:NOUN/obl:arg>(Wummen) <3:AUX/aux>(k\xF6nnen)\
    \ <4:DET/det>(die) <5:PROPN/nsubj>(UNSC) <7:NOUN/flat>(Milit\xE4rs) <8:ADV/advmod>(n\xE4\
    mlich) <9:ADV/advmod>(ganz) <10:ADJ/root>(n\xFCtzlich) <11:AUX/cop>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - aux
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(du) <3:DET/obj>(diesen) <ROOT> <4:NOUN/obj>(Schritt)
    <5:VERB/root>(gehen) <6:AUX/aux>(willst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 3
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/compound>(Zeig) <3:PRON/dep>(ihm) <4:ADV/advmod>(zuallererst)
    <5:PRON/root>(den) <ROOT> <6:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 3
    - acl
  sentence: <1:ADV/advmod>(so) <2:PROPN/root>(mega) <ROOT> <3:NOUN/root>(Fame) <4:CCONJ/cc>(oder)
    <5:ADV/advmod>(richtig) <6:DET/det>(viel) <7:NOUN/obj>(Kohle) <8:PART/mark>(zu)
    <9:VERB/acl>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/root>(Ihr) <ROOT> <2:NOUN/nsubj>(Gangster) <3:ADP/case>(seit)
    <4:DET/det>(alles) <5:ADV/advmod>(nur) <6:ADJ/amod>(Top) <7:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - appos
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - conj
  - !!python/tuple
    - 13
    - 17
    - nsubj
  - !!python/tuple
    - 14
    - 17
    - cop
  - !!python/tuple
    - 15
    - 17
    - advmod
  - !!python/tuple
    - 16
    - 17
    - amod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:DET/det:poss>(Dein) <2:NOUN/root>(Text) <3:DET/det:poss>(dein) <4:NOUN/nsubj>(Flow)
    <5:DET/det:poss>(dein) <6:NOUN/appos>(Rap) <7:CCONJ/cc>(und) <8:DET/det:poss>(deine)
    <9:NOUN/conj>(Frau) <10:CCONJ/cc>(und) <11:DET/det>(alle) <12:PRON/conj>(deine)
    <ROOT> <13:NOUN/nsubj>(Rapper) <14:AUX/cop>(sind) <15:ADV/advmod>(nur) <16:ADJ/amod>(Top)
    <17:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 4
    - appos
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 12
    - cc
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 6
    - conj
  - !!python/tuple
    - 13
    - 18
    - nsubj
  - !!python/tuple
    - 14
    - 18
    - cop
  - !!python/tuple
    - 15
    - 18
    - advmod
  - !!python/tuple
    - 16
    - 18
    - advmod
  - !!python/tuple
    - 17
    - 18
    - amod
  - !!python/tuple
    - 18
    - 0
    - root
  sentence: "<1:DET/det:poss>(Dein) <2:NOUN/root>(Fame) <3:DET/det:poss>(dein) <4:NOUN/appos>(Traum)\
    \ <5:DET/det:poss>(dein) <6:NOUN/appos>(Gesch\xE4ft) <7:CCONJ/cc>(und) <8:DET/det:poss>(deine)\
    \ <9:NOUN/conj>(Frauen) <10:CCONJ/cc>(und) <11:DET/det>(alle) <12:PRON/conj>(deine)\
    \ <ROOT> <13:NOUN/nsubj>(Rapper) <14:AUX/cop>(sind) <15:ADV/advmod>(einfach) <16:ADV/advmod>(nur)\
    \ <17:ADJ/amod>(Top) <18:NOUN/root>(Story)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 11
    - advcl
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 11
    - aux
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(also) <2:ADV/root>(wie) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(du)
    <5:ADV/advmod>(nen) <ROOT> <6:NOUN/dep>(Film) <7:VERB/advcl>(geschaut) <8:AUX/aux>(hast)
    <9:AUX/aux>(muss) <10:PRON/nsubj>(ich) <11:VERB/root>(sagen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - obl:arg
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 3
    - obl
  sentence: <1:DET/root>(Diese) <ROOT> <2:NOUN/obj>(Klamotten) <3:VERB/root>(zog)
    <4:PRON/nsubj>(ich) <5:DET/det>(dem) <6:NOUN/obl:arg>(Jungen) <7:ADP/case>(aus)
    <8:DET/det>(der) <9:NOUN/obl>(Kiste)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(tat) <4:PRON/obl:arg>(mir)
    <5:ADV/advmod>(damit) <6:ADV/advmod>(selbst) <7:ADV/advmod>(auch) <8:ADV/advmod>(kein'n)
    <ROOT> <9:NOUN/root>(Gefall)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:DET/obj>(diesen) <ROOT> <4:NOUN/root>(swag)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - obl
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(Vor) <2:NOUN/obl>(kurzem) <3:AUX/aux>(bin) <4:PRON/nsubj>(ich)
    <5:VERB/root>(aufgewacht) <6:CCONJ/cc>(und) <7:VERB/conj>(hatte) <9:ADV/advmod>(nen)
    <ROOT> <10:NOUN/root>(Traum)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <3:NOUN/nmod>(Legende) <5:PRON/root>(Deine)\
    \ <ROOT> <6:NOUN/nsubj>(Parts) <7:AUX/cop>(sind) <8:ADJ/root>(out)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - nmod
  - !!python/tuple
    - 8
    - 16
    - nsubj
  - !!python/tuple
    - 9
    - 16
    - aux
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 16
    - obl
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 16
    - obl:arg
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 16
    - obj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADP/case>(Seit) <2:DET/det>(dem) <3:NOUN/root>(Sturz) <4:DET/det>(der)\
    \ <5:NOUN/nmod>(Diktatur) <6:ADP/case>(nach) <7:DET/nmod>(dieser) <ROOT> <8:NOUN/nsubj>(Isolation)\
    \ <9:AUX/aux>(hat) <10:ADV/advmod>(rund) <11:NUM/obl>(1/3) <12:DET/det>(der) <13:NOUN/obl:arg>(Bev\xF6\
    lkerung) <14:DET/det>(das) <15:NOUN/obj>(Land) <16:VERB/root>(verlassen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Niederschl\xE4ge) <3:AUX/cop>(sind) <4:ADV/advmod>(so)\
    \ <5:ADJ/root>(stark) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(sie) <8:ADJ/advmod>(regelm\xE4\
    \xDFig) <9:ADP/compound:prt>(zu) <ROOT> <10:NOUN/root>(\xDCberschwemmungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:VERB/root>(hat) <2:ADV/advmod>(sofort) <3:NOUN/obj>(Bilder) <4:ADP/compound:prt>(von)
    <ROOT> <5:NOUN/root>(Teufelsaustreibungen) <6:ADP/case>(in) <7:DET/det>(dem) <8:NOUN/nmod>(Kopf)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: "<1:PRON/root>(den) <ROOT> <2:NOUN/root>(Preisanstieg) <3:ADP/case>(auf)\
    \ <4:DET/det>(dem) <5:NOUN/nmod>(Fl\xE4chenmarkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(macht) <3:DET/obj>(solche) <ROOT> <4:NOUN/root>(Sachen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(hast) <3:PRON/nsubj>(du) <4:ADP/case>(bei)\
    \ <5:DET/det>(einer) <6:NOUN/obl>(Alkoholsucht) <7:ADV/advmod>(noch) <8:DET/obj>(diese)\
    \ <ROOT> <9:ADJ/amod>(k\xF6rperlichen) <10:NOUN/root>(Entzugssymptome)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(zu) <2:ADV/root>(derart) <ROOT> <3:NOUN/root>(Verz\xF6\
    gerungen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:ADV/advmod>(Wie) <2:VERB/root>(geht) <3:PRON/nsubj>(man) <4:ADP/case>(mit)
    <5:ADV/advmod>(so) <ROOT> <6:NOUN/root>(Krallen) <7:ADP/case>(auf) <8:DET/det>(das)
    <9:NOUN/nmod>(Klo)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - det
  - !!python/tuple
    - 7
    - 5
    - mark
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 5
    - nmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  sentence: <1:CCONJ/cc>(Oder) <2:PRON/nsubj>(ich) <3:VERB/root>(baue) <4:PRON/obj>(den)
    <ROOT> <5:NOUN/root>(Twist) <6:DET/det>(ein) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(ich)
    <9:ADP/case>(zu) <10:NOUN/nmod>(Anfang) <11:DET/det>(des) <12:NOUN/nmod>(Videos)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 13
    - nsubj
  - !!python/tuple
    - 5
    - 13
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 13
    - obj
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 8
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADV/advmod>(Dazu) <2:VERB/root>(haben) <3:ADP/compound:prt>(neben)\
    \ <ROOT> <4:NOUN/nsubj>(Naturkatastrophen) <5:ADV/advmod>(auch) <6:DET/det>(viele)\
    \ <7:ADJ/amod>(politische) <8:NOUN/obj>(Entwicklungen) <9:ADP/case>(in) <10:DET/det>(dem)\
    \ <11:ADJ/amod>(eigenen) <12:NOUN/nmod>(Land) <13:VERB/root>(gef\xFChrt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <ROOT> <3:NOUN/root>(Respekt)\
    \ <4:ADP/case>(vor) <5:DET/det>(der) <6:NOUN/nmod>(Arbeit) <7:DET/det>(der) <8:NOUN/nmod>(\xC4\
    rzte) <9:ADV/advmod>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obl:arg
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:VERB/root>(Erz\xE4hl) <2:PRON/obl:arg>(mir) <3:PRON/obj>(nix) <4:ADP/case>(von)\
    \ <5:PRON/obl>(dir) <6:CCONJ/cc>(und) <7:PRON/conj>(deinem) <ROOT> <8:NOUN/root>(Viertel)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(wie) <2:ADV/advmod>(so) <3:DET/root>(einen) <ROOT> <4:NOUN/compound>(Flow)
    <6:NOUN/obj>(Zustand) <7:VERB/root>(vorstellen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - aux
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:AUX/aux>(Kann) <2:PRON/root>(die) <ROOT> <3:NOUN/nsubj>(Verse) <4:ADV/advmod>(net)
    <5:ADJ/advmod>(trocken) <6:VERB/root>(kicken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(kann) <3:ADV/advmod>(leider) <4:PART/advmod>(nicht)\
    \ <5:ADP/compound:prt>(mit) <ROOT> <6:NOUN/dep>(Fremdw\xF6rtern) <7:VERB/root>(punkten)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/root>(einen) <2:ADV/advmod>(ziemlich) <ROOT> <3:NOUN/dep>(Aufstieg)
    <4:VERB/root>(hingelegt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Michael) <2:PROPN/flat>(Lerch) <3:VERB/root>(erz\xE4\
    hlt) <4:PRON/obj>(uns) <5:ADP/case>(von) <6:DET/obl>(einem) <7:ADV/advmod>(besonders)\
    \ <ROOT> <8:NOUN/root>(Fall)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 1
    - advcl
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 5
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  - !!python/tuple
    - 11
    - 5
    - dep
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:VERB/root>(einladen) <2:SCONJ/mark>(Denn) <3:DET/nsubj>(diese) <4:AUX/cop>(sind)\
    \ <5:NOUN/advcl>(Fr\xFCchte) <6:DET/det>(einer) <7:NOUN/nmod>(Gesellschaft) <8:PRON/nsubj>(die)\
    \ <9:ADV/advmod>(schon) <10:ADV/advmod>(lange) <11:ADP/dep>(zwischen) <ROOT> <12:NOUN/root>(Extremen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:ADP/case>(auf) <4:DET/det>(jeden)
    <5:NOUN/obl>(Fall) <6:DET/obj>(einen) <ROOT> <7:NOUN/root>(Einfluss) <8:ADV/advmod>(darauf)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj:pass
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux:pass
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj:pass>(Sie) <2:ADV/advmod>(schon) <3:VERB/root>(verwendet)
    <4:AUX/aux:pass>(wurden) <5:ADV/advmod>(ja) <6:CCONJ/cc>(Und) <7:PRON/nsubj>(sie)
    <8:DET/conj>(keinen) <ROOT> <9:NOUN/obj>(Schaden) <10:VERB/root>(anrichten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:VERB/root>(finden) <2:ADV/advmod>(aber) <3:ADV/advmod>(dennoch) <4:NOUN/nsubj>(Gefallen)
    <5:ADP/case>(an) <6:PRON/obl>(der) <ROOT> <7:NOUN/root>(Action)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Klatschen) <2:VERB/root>(geblieben) <3:ADP/compound:prt>(auf)
    <ROOT> <4:NOUN/root>(Theorien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(kauf) <3:ADP/case>(in) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(Merchandise) <6:ADP/compound:prt>(in) <ROOT> <7:NOUN/root>(L\xE4\
    ndern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Klatschen) <2:VERB/root>(geblieben) <3:ADP/compound:prt>(auf)
    <ROOT> <4:NOUN/root>(Theorien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nmod>(Die) <2:PRON/root>(mich) <3:PART/advmod>(nicht) <4:ADV/advmod>(nur)\
    \ <5:ADP/case>(f\xFCr) <6:DET/nmod>(die) <ROOT> <7:NOUN/root>(Spr\xFCche)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/root>(Ihr) <ROOT> <2:NOUN/nsubj>(Gangster) <3:VERB/root>(habt)
    <4:NOUN/obj>(Eltern) <5:ADP/case>(mit) <6:ADJ/amod>(gutem) <7:NOUN/nmod>(Einkomm)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/compound>(Dachterassen) <4:NOUN/nsubj>(Chips)
    <5:VERB/root>(verprassen) <6:ADP/case>(mit) <8:ADV/advmod>(ner) <ROOT> <9:PROPN/root>(Bitch)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cop
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - amod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:AUX/cop>(ist) <2:ADV/advmod>(dann) <3:ADV/advmod>(doch) <4:ADV/advmod>(eher)\
    \ <5:PRON/root>(was) <6:ADP/case>(f\xFCr) <7:DET/det>(die) <8:ADJ/amod>(richtig)\
    \ <ROOT> <9:NOUN/root>(Profis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - mark
  - !!python/tuple
    - 6
    - 2
    - obl:arg
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 8
    - nmod
  - !!python/tuple
    - 11
    - 13
    - nsubj
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(zeigt) <3:DET/det>(die) <4:ADV/advmod>(direkt)
    <5:SCONJ/mark>(wenn) <6:PRON/obl:arg>(ihr) <7:DET/det>(einen) <8:NOUN/obj>(Blick)
    <9:ADP/case>(auf) <10:DET/nmod>(diese) <ROOT> <11:NOUN/nsubj>(Zahlen) <12:ADV/advmod>(hier)
    <13:VERB/root>(werfen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(ich) <3:AUX/cop>(war) <4:PRON/obl:arg>(mir)
    <5:PART/advmod>(nicht) <6:DET/root>(dieser) <ROOT> <7:NOUN/obj>(Verantwortung)
    <8:ADJ/root>(bewusst)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 4
    - aux
  sentence: <1:SCONJ/mark>(Dass) <2:PRON/nsubj>(ich) <3:DET/root>(einen) <ROOT> <4:NOUN/root>(Einfluss)
    <5:ADP/case>(auf) <6:DET/det>(das) <7:NOUN/nmod>(Leben) <8:ADP/case>(von) <9:DET/det>(anderen)
    <10:NOUN/nmod>(Menschen) <11:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - nmod
  - !!python/tuple
    - 10
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(chill) <4:ADV/advmod>(nur) <5:ADP/compound:prt>(unter)\
    \ <ROOT> <6:NOUN/root>(Typen) <7:ADV/advmod>(so) <8:ADP/case>(wie) <9:PROPN/nmod>(Flers)\
    \ <10:NOUN/nmod>(F\xFC\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 10
    - obl
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 4
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - conj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - obj
  - !!python/tuple
    - 16
    - 12
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:ADV/advmod>(inzwischen) <3:ADV/advmod>(noch) <4:ADJ/root>(quietschgelber)
    <5:ADP/case>(als) <6:ADP/case>(in) <7:DET/det>(der) <8:NOUN/obl>(serie) <9:PRON/nsubj>(ich)
    <10:VERB/parataxis>(glaube) <11:PRON/nsubj>(man) <12:VERB/conj>(hat) <13:ADV/advmod>(noch)
    <14:ADV/advmod>(mal) <15:DET/obj>(einen) <16:ADJ/advmod>(richtig) <ROOT> <17:NOUN/root>(anstrich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Darauf) <2:VERB/root>(kamen) <3:DET/det>(die) <4:ADJ/advmod>(total)
    <ROOT> <5:NOUN/root>(Reaktionen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:X/dep>(U) <2:VERB/root>(z\xE4hlt) <3:ADP/case>(zu) <4:PRON/obl>(den)\
    \ <ROOT> <5:NOUN/root>(Reimern)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:INTJ/root>(Geh) <2:ADP/case>(in) <3:DET/det:poss>(deine) <4:NOUN/nmod>(Stadt)
    <5:CCONJ/cc>(und) <6:VERB/conj>(sag) <8:DET/det>(den) <9:NOUN/obj>(ganzen) <ROOT>
    <10:PROPN/root>(Spittern)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  sentence: "<1:NOUN/root>(Fu\xDFballer) <2:ADP/advmod>(mit) <ROOT> <3:NOUN/nsubj>(Skills)\
    \ <4:VERB/root>(fr\xFChst\xFCcken) <5:ADP/case>(neben) <6:DET/det>(dem) <7:NOUN/obl>(Fu\xDF\
    ballplatz)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:VERB/root>(Erhol') <2:PRON/obj>(mich) <3:ADP/case>(von) <4:DET/det>(der)\
    \ <5:NOUN/obl>(ganzen) <ROOT> <6:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - nsubj:pass
  - !!python/tuple
    - 4
    - 6
    - aux:pass
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det:poss>(Deine) <2:NOUN/root>(ganzen) <ROOT> <3:NOUN/nsubj:pass>(Spr\xFC\
    che) <4:AUX/aux:pass>(werden) <5:ADV/advmod>(l\xE4chelnd) <6:VERB/root>(abgenickt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - xcomp
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/root>(den) <ROOT> <2:NOUN/dep>(Riesen) <3:VERB/xcomp>(raush\xE4\
    ng') <4:VERB/root>(lassen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 3
    - obl
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/nsubj>(Freunde) <3:VERB/root>(spielen)
    <4:DET/obj>(alle) <5:ADP/mark>(mit) <6:ADP/case>(bei) <7:ADP/case>(Unter) <8:PRON/obl>(Uns)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 8
    - appos
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <4:NOUN/obj>(n)
    <ROOT> <5:PROPN/root>(Rider) <6:ADP/case>(an) <7:DET/det>(dem) <8:PROPN/nmod>(Start)
    <9:PROPN/appos>(Mann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:SCONJ/mark>(als) <2:VERB/root>(w\xE4re) <3:PRON/nsubj>(ich) <4:ADV/advmod>(mitten)\
    \ <5:ADP/case>(in) <6:DET/obl>(einer) <ROOT> <7:NOUN/root>(Fluchtsequenz)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nmod
  - !!python/tuple
    - 5
    - 9
    - compound
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(Der) <2:ADJ/amod>(neue) <3:NOUN/root>(Mittelpunkt) <4:DET/nmod>(deines)
    <ROOT> <5:NOUN/compound>(Extreme) <7:NOUN/compound>(Sport) <9:NOUN/root>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: "<1:ADV/advmod>(Hier) <2:ADV/advmod>(check) <3:DET/det:poss>(deine) <4:NOUN/root>(neuen)\
    \ <ROOT> <5:NOUN/root>(Klamotten) <6:X/dep>(h\xE4)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 4
    - flat
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  sentence: "<1:ADV/advmod>(Danach) <2:VERB/root>(treffe) <3:PRON/nsubj>(ich) <4:PROPN/obj>(Brett)\
    \ <5:PROPN/flat>(Brett) <6:VERB/conj>(br\xE4t) <7:NOUN/obj>(Burger) <8:ADP/case>(f\xFC\
    r) <9:PRON/obl>(die) <ROOT> <10:NOUN/root>(Dudes) <11:ADV/advmod>(hier)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - compound:prt
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 7
    - obl
  sentence: "<1:PROPN/root>(Hey) <2:ADV/advmod>(aber) <3:ADP/case>(f\xFCr) <4:DET/det>(die)\
    \ <5:ADJ/nmod>(n\xE4chsten) <ROOT> <6:NOUN/nsubj>(Events) <7:VERB/root>(geht)\
    \ <8:NOUN/obj>(s) <9:ADP/compound:prt>(ab) <10:ADP/case>(in) <11:DET/det>(den)\
    \ <12:NOUN/obl>(Schnee)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Wow) <2:VERB/root>(hat) <3:ADV/advmod>(da) <4:DET/det>(ein)
    <5:NOUN/obj>(Rider) <6:ADV/advmod>(etwa) <7:DET/obj>(seinen) <ROOT> <8:ADJ/amod>(eigenen)
    <9:NOUN/dep>(Style) <10:VERB/root>(entdeckt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - parataxis
  - !!python/tuple
    - 8
    - 7
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:NOUN/nsubj>(Gro\xDFeins\xE4\
    tze) <4:DET/det>(der) <5:NOUN/nmod>(Polizei) <6:PRON/nsubj>(es) <7:VERB/parataxis>(kommt)\
    \ <8:ADP/compound:prt>(zu) <ROOT> <9:NOUN/root>(Szenen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - obl:arg
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 9
    - 6
    - flat
  - !!python/tuple
    - 10
    - 4
    - xcomp
  sentence: "<1:ADP/case>(Wegen) <2:PRON/root>(den) <ROOT> <3:NOUN/obl:arg>(Verz\xF6\
    gerungen) <4:VERB/root>(werden) <5:DET/det>(die) <6:PROPN/nsubj>(CS) <7:PROPN/appos>(GO)\
    \ <9:NOUN/flat>(Spieler) <10:ADJ/xcomp>(nerv\xF6s)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - amod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - appos
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: <1:PRON/root>(Deine) <ROOT> <2:NOUN/nsubj>(Augen) <3:AUX/cop>(sind) <4:ADJ/amod>(klare)
    <5:ADJ/amod>(tiefe) <6:NOUN/root>(Seen) <8:PROPN/appos>(Oh-oh) <9:PROPN/flat>(-oh)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - parataxis
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  - !!python/tuple
    - 13
    - 11
    - appos
  - !!python/tuple
    - 14
    - 13
    - appos
  sentence: "<1:PROPN/root>(Dein\u0435) <ROOT> <2:ADJ/amod>(tiefen) <3:NOUN/root>(Augen)\
    \ <5:PRON/nsubj>(die) <6:VERB/parataxis>(schiel'n) <7:ADV/advmod>(so) <8:ADJ/advmod>(sch\xF6\
    n) <9:ADP/case>(in) <10:DET/det>(dem) <11:NOUN/nmod>(Rausch) <13:PROPN/appos>(Oh-oh)\
    \ <14:X/appos>(-oh)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(is') <3:NOUN/nsubj>(Schluss) <4:ADP/compound:prt>(mit)
    <ROOT> <5:PROPN/root>(Bitchmoves)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - dep
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: <1:ADP/case>(Mit) <2:DET/root>(einer) <ROOT> <3:NOUN/dep>(Taktung) <4:NUM/nummod>(drei)
    <5:NOUN/root>(Auftritte) <6:ADP/case>(an) <7:DET/det>(dem) <8:NOUN/nmod>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:VERB/root>(lese) <3:ADP/case>(in) <4:DET/obl>(diesem)\
    \ <ROOT> <5:PROPN/amod>(M\xFCnchener) <6:NOUN/root>(Fachblatt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: "<1:ADP/root>(Mit) <ROOT> <2:NOUN/root>(Folgen) <3:ADP/case>(f\xFCr) <4:DET/det>(die)\
    \ <5:NOUN/nmod>(Altersvorsorge)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - expl
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - flat
  - !!python/tuple
    - 11
    - 7
    - flat
  sentence: <1:VERB/root>(Stimmt) <2:PRON/expl>(es) <3:VERB/conj>(gab) <4:ADV/advmod>(noch)
    <5:PROPN/nsubj>(Brawlhalla) <6:DET/obj>(diesen) <ROOT> <7:PROPN/root>(Smash) <9:PROPN/flat>(Brothers)
    <11:PROPN/flat>(Klon)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:SCONJ/mark>(W\xE4hrend) <2:NOUN/root>(Krieg) <3:ADP/case>(mit) <4:DET/det:poss>(seiner)\
    \ <ROOT> <5:NOUN/root>(Klinge)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - case
  - !!python/tuple
    - 3
    - 6
    - amod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - acl
  - !!python/tuple
    - 11
    - 10
    - aux
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 10
    - obj
  - !!python/tuple
    - 14
    - 10
    - compound:prt
  sentence: "<1:PROPN/root>(China) <2:ADP/case>(durch) <3:ADJ/amod>(innere) <4:CCONJ/cc>(wie)\
    \ <5:ADJ/conj>(\xE4u\xDFere) <6:NOUN/nmod>(Konflikte) <7:PRON/obj>(die) <8:PRON/nsubj>(es)\
    \ <9:PART/advmod>(nicht) <10:VERB/acl>(gewinnen) <11:AUX/aux>(kann) <12:ADV/advmod>(da)\
    \ <13:PRON/obj>(sie) <14:ADP/compound:prt>(auf) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advcl
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - obj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 8
    - obl
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: <1:ADV/mark>(Warum) <2:PRON/obl:arg>(mir) <3:DET/det>(das) <4:NOUN/nsubj>(Thema)
    <5:ADV/advmod>(so) <6:ADJ/advcl>(wichtig) <7:AUX/cop>(ist) <8:VERB/root>(zeige)
    <9:PRON/nsubj>(ich) <10:PRON/obj>(euch) <11:ADP/case>(an) <12:NUM/obl>(zwei) <ROOT>
    <13:NOUN/root>(Beispielen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - flat
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 7
    - nmod
  sentence: <1:DET/det>(das) <2:DET/det>(jegliche) <3:NOUN/nsubj>(Leistungsanreize)
    <4:VERB/root>(erstickt) <5:ADP/case>(zu) <6:DET/obl>(einer) <ROOT> <7:PROPN/root>(De)
    <9:NOUN/flat>(Emanzipation) <10:ADP/case>(von) <11:NOUN/nmod>(Frauen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 12
    - dep
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 12
    - obj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 9
    - flat
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:ADV/advmod>(heute) <2:ADP/case>(mit) <3:DET/root>(einer) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:NOUN/dep>(Aktion) <6:DET/det>(die) <7:NOUN/obj>(Kohlezufuhr) <8:DET/det>(eines)\
    \ <9:PROPN/nmod>(RWE) <11:NOUN/flat>(Kraftwerks) <12:VERB/root>(st\xF6ren)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:ADV/advmod>(nur) <4:PRON/obj>(die)
    <ROOT> <5:NOUN/root>(Unterschiede)
- dependencies:
  - !!python/tuple
    - 2
    - 7
    - parataxis
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 7
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<2:ADJ/parataxis>(off) <4:ADV/advmod>(Auch) <5:DET/det>(andere) <6:NOUN/nsubj>(Raver)\
    \ <7:VERB/root>(erz\xE4hlen) <8:PRON/obj>(uns) <9:ADP/compound:prt>(von) <ROOT>\
    \ <10:NOUN/root>(Pillen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - appos
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 16
    - case
  - !!python/tuple
    - 14
    - 16
    - det
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 11
    - obl
  sentence: <1:ADJ/amod>(normalen) <2:PROPN/root>(Jar) <3:PROPN/flat>(Jar) <4:PART/advmod>(nicht)
    <5:PRON/appos>(den) <ROOT> <6:PROPN/nsubj>(Sith) <7:PROPN/flat>(Jar) <8:PROPN/flat>(Jar)
    <9:DET/det>(Das) <10:PROPN/appos>(Ding) <11:AUX/root>(ist) <12:ADV/advmod>(aber)
    <13:ADP/case>(Mit) <14:DET/det>(all) <15:DET/det>(diesen) <16:NOUN/obl>(Entscheidungen)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - mark
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 7
    - cc
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 12
    - dep
  - !!python/tuple
    - 11
    - 12
    - mark
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADP/mark>(um) <2:ADV/advmod>(jetzt) <3:CCONJ/cc>(und) <4:ADV/advmod>(sofort)
    <5:DET/advmod>(ne) <6:ADJ/amod>(wertvolle) <7:NOUN/root>(Goldkiste) <8:ADP/case>(mit)
    <9:DET/nmod>(diesen) <ROOT> <10:NOUN/dep>(Items) <11:PART/mark>(zu) <12:VERB/root>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(Um) <2:DET/root>(diese) <ROOT> <3:ADJ/amod>(traumatischen)
    <4:NOUN/root>(Erlebnisse)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(liegt) <3:ADP/case>(vor) <4:DET/obl>(allem)
    <5:ADP/case>(an) <6:DET/obl>(einem) <7:ADV/advmod>(ziemlich) <ROOT> <8:NOUN/root>(Fehlgriff)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:NOUN/dep>(Stress) <3:VERB/root>(erleben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Leute) <3:VERB/root>(haben) <4:ADV/advmod>(einfach)
    <5:ADV/advmod>(so) <6:DET/obj>(einen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:PRON/root>(Ihren) <ROOT> <2:NOUN/obj>(Nationalismus) <3:VERB/root>(benennen)
    <4:PRON/nsubj>(sie) <5:ADV/advmod>(ganz) <6:ADV/advmod>(offen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - dep
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADP/root>(mit) <ROOT> <4:NOUN/dep>(Autos)
    <5:ADP/case>(durch) <6:DET/det>(die) <7:NOUN/obl>(Gegend) <8:VERB/root>(gefahren)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(er) <3:AUX/root>(kann) <4:ADP/case>(wegen)
    <5:DET/obl>(seiner) <ROOT> <6:NOUN/root>(Unsicherheiten)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: "<1:ADV/advmod>(Dann) <2:AUX/cop>(waren) <3:DET/nsubj>(diese) <4:ADJ/root>(ganz)\
    \ <ROOT> <5:NOUN/root>(Videos) <6:ADV/advmod>(\xFCberall)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(findet) <3:PRON/obj>(ihr) <4:DET/det:poss>(unser)\
    \ <5:NOUN/nsubj>(Video) <6:ADP/compound:prt>(zur) <ROOT> <7:NOUN/root>(Bandenkriminalit\xE4\
    t) <8:ADP/case>(in) <9:PROPN/nmod>(Schweden)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(wir) <3:ADV/advmod>(jetzt) <4:PART/advmod>(nicht)\
    \ <5:ADV/advmod>(mehr) <6:PRON/root>(die) <ROOT> <7:ADJ/amod>(taktischen) <8:NOUN/obj>(Rundenk\xE4\
    mpfe) <9:VERB/root>(haben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - aux
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:ADV/advmod>(Schon) <2:NOUN/nsubj>(Kleinigkeiten) <3:AUX/aux>(k\xF6\
    nnen) <4:ADV/root>(nen) <ROOT> <5:NOUN/dep>(Unterschied) <6:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obl:arg
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Normalerweise) <2:VERB/root>(gibt) <3:PROPN/nsubj>(Alex)
    <4:PRON/obl:arg>(mir) <5:ADV/advmod>(erst) <6:ADV/advmod>(mal) <7:NOUN/obj>(n)
    <ROOT> <8:NOUN/root>(Zungenkuss)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(in) <2:DET/root>(einer) <ROOT> <3:NOUN/nsubj>(Schneelandschaft)
    <4:ADV/advmod>(ganz) <5:ADJ/root>(spannend)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:ADP/case>(wie) <2:DET/root>(viele) <3:ADP/case>(von) <4:DET/nmod>(diesen)
    <ROOT> <5:NOUN/nsubj>(Skeptikern) <6:VERB/root>(gibt) <7:PRON/nsubj>(es) <8:ADV/advmod>(eigentlich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - dep
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(Auf) <2:PROPN/nmod>(Insta) <3:AUX/aux>(hab) <4:PRON/nsubj>(ich)
    <5:DET/root>(solche) <ROOT> <6:NOUN/dep>(Beispiele) <7:ADV/advmod>(oft) <8:VERB/root>(gesehen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cop
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - obj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 11
    - nmod
  - !!python/tuple
    - 16
    - 14
    - flat
  - !!python/tuple
    - 18
    - 14
    - flat
  sentence: <1:AUX/cop>(ist) <2:PRON/nsubj>(es) <3:ADV/advmod>(so) <4:DET/nsubj>(diese)
    <5:ADV/advmod>(richtig) <6:ADJ/root>(heftig) <ROOT> <7:NOUN/nsubj>(Jagdgegner)
    <8:PRON/appos>(die) <9:VERB/root>(machen) <10:DET/det>(eine) <11:NOUN/obj>(Riesenwelle)
    <12:ADP/case>(in) <13:DET/det>(dem) <14:PROPN/nmod>(Social) <16:PROPN/flat>(Media)
    <18:NOUN/flat>(Bereich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(passiert) <3:ADV/advmod>(aber) <4:ADV/advmod>(nur)\
    \ <5:ADP/compound:prt>(in) <ROOT> <6:NOUN/root>(F\xE4llen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obj
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/root>(ihre) <ROOT> <3:NOUN/obj>(Aussagen)\
    \ <4:ADP/case>(in) <5:DET/det>(dem) <6:NOUN/nmod>(Internet) <7:VERB/root>(erntet)\
    \ <8:PRON/nsubj>(sie) <9:DET/det>(viel) <10:NOUN/obj>(Hass)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(seit) <2:DET/det>(vielen) <3:NOUN/nmod>(Monaten) <4:DET/det>(keinen)
    <5:NOUN/root>(einzigen) <ROOT> <6:NOUN/obj>(Wutanfall) <7:PART/mark>(zu) <8:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/root>(Einen) <2:ADV/advmod>(so) <ROOT> <3:ADJ/amod>(absoluten)
    <4:NOUN/root>(Wertzuwachs)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 10
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Ob) <2:PRON/nsubj>(das) <3:ADV/advmod>(auch) <4:ADV/advmod>(so)\
    \ <5:VERB/root>(bleibt) <6:CCONJ/cc>(und) <7:PROPN/conj>(Nvidia) <8:PRON/appos>(die)\
    \ <ROOT> <9:NOUN/dep>(Erwartungen) <10:VERB/root>(erf\xFCllt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obj
  sentence: "<1:ADP/root>(Bei) <ROOT> <2:NOUN/obj>(Flecken) <3:VERB/root>(braucht)\
    \ <4:DET/det>(die) <5:NOUN/nsubj>(Waschnuss) <6:ADV/advmod>(offenbar) <7:ADJ/amod>(weitere)\
    \ <8:NOUN/obj>(Zus\xE4tze)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/root>(M\xF6rdershit) <3:ADP/advmod>(mit) <ROOT>\
    \ <4:NOUN/root>(Flows)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:VERB/root>(lache) <3:ADJ/advmod>(\xFCbertrieben)\
    \ <4:ADP/case>(\xFCber) <5:PRON/obl>(deine) <ROOT> <6:NOUN/root>(Jeans)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 7
    - obl
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 12
    - nmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADV/advmod>(noch) <2:ADV/advmod>(mehr) <3:ADP/case>(\xFCber) <4:NOUN/obl>(Klone)\
    \ <5:VERB/csubj>(erfahren) <6:AUX/aux>(wollt) <7:VERB/root>(schaut) <8:ADV/advmod>(mal)\
    \ <9:ADV/advmod>(hier) <10:ADP/case>(in) <11:DET/det>(das) <12:NOUN/obl>(Video)\
    \ <13:ADP/case>(mit) <14:NUM/nmod>(50) <ROOT> <15:NOUN/root>(Fakten)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(klingt) <3:ADV/advmod>(schon) <4:ADP/case>(nach)\
    \ <5:DET/obl>(einer) <ROOT> <6:NOUN/root>(\xDCberwachung)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:SCONJ/root>(wenn) <2:PRON/nsubj>(die) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADP/case>(mit) <3:NOUN/root>(m) <ROOT> <4:NOUN/root>(Kragen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/root>(meinen) <ROOT> <3:NOUN/root>(Erfolg)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - obj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:DET/root>(welche) <ROOT> <2:NOUN/obj>(Konsequenzen) <3:DET/det:poss>(euer)\
    \ <4:NOUN/nmod>(Verhalten) <5:ADP/case>(f\xFCr) <6:NOUN/nmod>(Betroffene) <7:VERB/root>(haben)\
    \ <8:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 4
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/root>(deine) <ROOT> <3:PROPN/nsubj>(Gs) <4:VERB/root>(klatschen)\
    \ <5:ADP/case>(in) <6:DET/det>(die) <7:NOUN/obl>(H\xE4nde) <8:ADP/case>(vor) <9:NOUN/obl>(Gl\xFC\
    ck)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - cop
  - !!python/tuple
    - 6
    - 10
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 3
    - obj
  - !!python/tuple
    - 11
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 10
    - nmod
  sentence: <1:DET/root>(einem) <ROOT> <2:NOUN/nsubj>(Stunt) <3:VERB/root>(rettet)
    <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:DET/det>(die) <7:ADJ/compound>(mega) <9:ADJ/amod>(spannende)
    <10:NOUN/obj>(Story) <11:ADP/case>(von) <13:DET/det>(Der) <14:PROPN/nmod>(Marsianer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: <1:DET/det>(Das) <2:NOUN/root>(Problem) <4:PRON/appos>(den) <ROOT> <5:NOUN/root>(Unterschied)
    <6:ADP/case>(zwischen) <7:ADJ/nmod>(arm) <8:CCONJ/cc>(und) <9:ADJ/conj>(reich)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:ADV/advmod>(pl\xF6tzlich) <3:ADV/advmod>(nur) <4:ADV/root>(noch)\
    \ <ROOT> <5:NOUN/root>(Schei\xDF)"
krasser:
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - nsubj
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(das) <3:ADP/case>(in) <4:DET/det>(einer)
    <5:NOUN/nmod>(Zeit) <6:ADP/case>(in) <7:PRON/nmod>(der) <8:DET/det>(die) <9:NOUN/nsubj>(Preise)
    <10:ADV/advmod>(immer) <ROOT> <11:VERB/root>(steigen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(kommt) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 13
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - cop
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 3
    - conj
  sentence: <1:ADV/advmod>(Fast) <2:ADJ/advmod>(zeitgleich) <3:VERB/root>(passierte)
    <4:ADV/advmod>(aber) <5:ADV/advmod>(noch) <6:PRON/nsubj>(etwas) <7:DET/obj>(anderes)
    <8:CCONJ/cc>(und) <9:PRON/nsubj>(das) <10:AUX/cop>(war) <11:ADV/advmod>(eigentlich)
    <12:ADV/advmod>(noch) <13:DET/conj>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 9
    - nmod
  - !!python/tuple
    - 4
    - 9
    - cop
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - case
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADP/case>(Auf) <2:DET/det>(\u2019m) <3:NOUN/nmod>(Dorf) <4:AUX/cop>(sind)\
    \ <5:DET/det>(alle) <6:NOUN/nsubj>(Stories) <7:ADV/advmod>(nochmal) <8:ADV/advmod>(so)\
    \ <9:DET/root>(viel) <ROOT> <10:ADP/case>(als) <11:ADP/case>(in) <12:DET/det>(der)\
    \ <13:NOUN/root>(Gro\xDFstadt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 15
    - obj
  - !!python/tuple
    - 12
    - 15
    - obj
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - acl
  sentence: <1:PRON/root>(Was) <2:ADV/advmod>(doch) <3:DET/det>(ein) <4:ADV/advmod>(sehr)
    <ROOT> <5:NOUN/nsubj>(Aspekt) <6:ADP/case>(von) <7:PROPN/nmod>(Boba) <8:AUX/cop>(ist)
    <9:DET/det>(Das) <10:NOUN/root>(krasseste) <11:PRON/obj>(was) <12:PROPN/obj>(Boba)
    <13:ADV/advmod>(aber) <14:ADV/advmod>(vielleicht) <15:VERB/acl>(geschafft)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - ccomp
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - nsubj
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(viele) <3:NOUN/nsubj>(Leute) <4:VERB/root>(sagen)\
    \ <5:ADV/advmod>(Irgendwie) <6:AUX/ccomp>(sind) <7:DET/det>(einige) <8:NOUN/nsubj>(Suchtkranke)\
    \ <9:ADV/advmod>(derzeit) <ROOT> <10:ADV/advmod>(drauf) <11:ADJ/amod>(aggressiver)\
    \ <12:ADJ/root>(angsteinfl\xF6\xDFender)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:SCONJ/mark>(Obwohl) <2:PRON/nsubj>(du) <3:ADV/advmod>(so) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Rapper) <6:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Sicher) <2:DET/det>(ein) <3:ADJ/root>(au\xDFergew\xF6\
    hnlich) <ROOT> <4:NOUN/root>(Fall)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:PRON/nsubj>(das) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/root>(Dein) <ROOT> <2:PROPN/nsubj>(Posse) <3:PROPN/flat>(Track)
    <4:VERB/root>(versagt)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - advmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(die) <3:ADV/advmod>(hier) <4:PRON/nsubj>(die)
    <5:AUX/cop>(sind) <6:ADV/advmod>(noch) <7:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PROPN/nsubj>(inshallah) <2:VERB/root>(wird) <3:PRON/nsubj>(es) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - csubj
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:VERB/csubj>(glaube) <2:PROPN/nsubj>(Walmart) <3:AUX/cop>(ist) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(mal) <6:DET/det>(eine) <7:ADJ/amod>(ganze) <8:NOUN/root>(Nummer)
    <ROOT> <9:CCONJ/cc>(und) <10:PRON/obj>(mich) <11:VERB/root>(interessiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nmod
  sentence: <1:DET/root>(Ein) <ROOT> <2:NOUN/root>(Unterschied) <3:ADP/case>(zu) <4:DET/det>(der)
    <5:ADJ/amod>(heutigen) <6:PROPN/nmod>(Venus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:CCONJ/cc>(und) <2:DET/root>(viel) <ROOT> <3:NOUN/obj>(Probleme) <4:VERB/root>(angesprochen)
    <5:AUX/aux>(habe)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  sentence: "<1:PROPN/nsubj>(Oh) <2:PROPN/flat>(mh) <3:PRON/flat>(Er) <4:VERB/root>(riecht)\
    \ <ROOT> <5:SCONJ/mark>(als) <6:PRON/nsubj>(er) <7:VERB/root>(schmeckt) <8:ADP/case>(Zu)\
    \ <9:DET/det>(dem) <10:NOUN/obl>(Gl\xFCck)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - nsubj:pass
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nsubj:pass
  - !!python/tuple
    - 7
    - 8
    - aux:pass
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/nsubj:pass>(Eingriff)
    <5:DET/det>(Die) <6:NOUN/nsubj:pass>(Nase) <7:AUX/aux:pass>(wird) <8:VERB/root>(gebrochen)
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 10
    - compound:prt
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Menschen) <2:ADP/case>(in) <3:PROPN/nmod>(Aleppo) <4:PART/advmod>(nicht)
    <5:ADV/advmod>(wirklich) <6:ADV/advmod>(gut) <7:ADV/advmod>(Also) <8:ADV/advmod>(sehr)
    <9:DET/nsubj>(viele) <10:VERB/root>(leiden) <11:ADV/advmod>(jetzt) <12:ADV/advmod>(gerade)
    <13:ADP/compound:prt>(unter) <ROOT> <14:NOUN/root>(Armut)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:DET/det>(dem) <3:ADJ/amod>(n\xE4chsten) <4:NOUN/obl>(Mal)\
    \ <5:AUX/root>(muss) <6:PRON/nsubj>(es) <7:ADV/advmod>(noch) <ROOT> <8:AUX/root>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - mark
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - case
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - cop
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:ADJ/amod>(Schwarze) <3:NOUN/nsubj>(L\xF6cher)\
    \ <4:ADP/case>(in) <5:ADV/advmod>(echt) <6:ADV/advmod>(sogar) <7:ADV/advmod>(noch)\
    \ <8:DET/root>(viel) <ROOT> <9:AUX/cop>(sind) <10:ADP/case>(als) <11:DET/det:poss>(ihr)\
    \ <12:NOUN/root>(Ruf)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(wie) <2:DET/root>(viel) <ROOT> <3:AUX/aux>(kann) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(hier) <6:VERB/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/root>(Was) <2:ADP/case>(f\xFCr) <3:DET/nmod>(ein) <ROOT> <4:NOUN/root>(Moment)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - xcomp
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:NOUN/xcomp>(Hacker) <2:VERB/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 10
    - mark
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finds) <3:ADV/advmod>(noch) <4:ADV/advmod>(mal)
    <ROOT> <5:SCONJ/mark>(dass) <6:PRON/nsubj>(du) <7:ADP/case>(bei) <8:DET/det>(der)
    <9:NOUN/obl>(Bundeswehr) <10:VERB/root>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/root>(noch) <ROOT> <3:SCONJ/mark>(wenn) <4:DET/det>(das)
    <5:NOUN/nsubj>(Wasser) <6:DET/det>(das) <7:NOUN/obj>(Haus) <8:VERB/root>(anfrisst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <ROOT> <3:PROPN/root>(GTA) <5:PROPN/flat>(Shit)
    <6:CCONJ/cc>(Und) <7:DET/det>(das) <8:NOUN/conj>(Jahre) <9:ADP/case>(vor) <10:DET/det>(dem)
    <11:ADJ/amod>(ersten) <12:PROPN/nmod>(GTA)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 15
    - dep
  - !!python/tuple
    - 8
    - 15
    - mark
  - !!python/tuple
    - 9
    - 15
    - nsubj
  - !!python/tuple
    - 10
    - 15
    - obj
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 15
    - obl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADV/advmod>(auch) <2:DET/root>(alles) <3:ADV/advmod>(noch) <4:ADV/advmod>(mal)\
    \ <5:DET/det>(ein) <6:ADV/advmod>(bisschen) <ROOT> <7:ADP/dep>(aus) <8:SCONJ/mark>(als)\
    \ <9:PRON/nsubj>(es) <10:PRON/obj>(sich) <11:ADP/case>(f\xFCr) <12:DET/det>(die)\
    \ <13:NOUN/obl>(Menschen) <14:ADV/advmod>(dort) <15:VERB/root>(anf\xFChlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Oder) <2:AUX/root>(ist) <3:DET/det>(die) <4:NOUN/nsubj>(Toilette)
    <5:ADV/advmod>(dann) <6:ADV/advmod>(doch) <ROOT> <7:ADP/case>(als) <8:DET/det>(das)
    <9:NOUN/root>(Krokodil)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 9
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 10
    - acl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - obj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - cc
  - !!python/tuple
    - 15
    - 13
    - conj
  - !!python/tuple
    - 16
    - 10
    - advmod
  - !!python/tuple
    - 17
    - 10
    - advmod
  - !!python/tuple
    - 18
    - 19
    - case
  - !!python/tuple
    - 19
    - 10
    - obl
  sentence: <1:SCONJ/root>(Weil) <2:PROPN/nsubj>(China) <3:ADV/advmod>(immer) <ROOT>
    <4:ADP/case>(in) <5:DET/det>(das) <6:NOUN/obl>(Leben) <7:DET/det>(der) <8:NOUN/nmod>(Menschen)
    <9:VERB/acl>(eingriff) <10:VERB/root>(wehrten) <11:PRON/obj>(sich) <12:DET/det>(die)
    <13:NOUN/nsubj>(Tibeterinnen) <14:CCONJ/cc>(und) <15:NOUN/conj>(Tibeter) <16:ADV/advmod>(dagegen)
    <17:ADV/advmod>(auch) <18:ADP/case>(mit) <19:NOUN/obl>(Gewalt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/root>(das) <3:ADP/case>(in) <4:DET/det>(den)
    <5:ADJ/amod>(letzten) <6:NOUN/nmod>(Jahren) <7:ADV/advmod>(immer) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 5
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:NOUN/compound>(Video) <4:NOUN/nsubj>(Fakes) <5:VERB/root>(galten)
    <6:ADV/advmod>(bisher) <7:ADP/case>(als) <8:NOUN/xcomp>(Hexenwerk) <ROOT> <9:NOUN/root>(Computercracks)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 10
    - mark
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - ccomp
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(das) <2:NOUN/nsubj>(Futter) <3:VERB/root>(schlaftabf\xE4\
    lle) <4:PRON/nsubj>(es) <5:VERB/ccomp>(riecht) <6:ADV/advmod>(auch) <7:ADV/advmod>(so)\
    \ <8:SCONJ/mark>(wie) <9:PRON/nsubj>(es) <10:VERB/ccomp>(aussieht) <11:ADJ/advmod>(tats\xE4\
    chlich) <ROOT> <12:ADJ/root>(hoch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 2
    - parataxis
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 10
    - conj
  sentence: "<1:PRON/nsubj>(Wir) <2:VERB/root>(gehen) <3:ADV/advmod>(jetzt) <4:ADV/advmod>(gleich)\
    \ <5:ADP/case>(in) <6:NOUN/obl>(Hubschrauber) <7:PRON/nsubj>(Es) <8:VERB/parataxis>(kommt)\
    \ <9:DET/obj>(ein) <ROOT> <10:NOUN/root>(Einsatz) <11:CCONJ/cc>(und) <12:PRON/nsubj>(du)\
    \ <13:VERB/conj>(wei\xDFt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:VERB/root>(denke) <2:PRON/nsubj>(ich) <3:ADV/advmod>(wow) <4:PRON/nsubj>(was)\
    \ <5:ADP/case>(f\xFCr) <6:DET/obl>(ein) <ROOT> <7:NOUN/root>(Typ)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(ist) <2:DET/root>(viel) <ROOT> <3:ADP/case>(als) <4:ADV/root>(heute)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 6
    - conj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - cop
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(weil) <3:ADV/advmod>(so) <4:DET/nsubj>(viele)\
    \ <5:PRON/obj>(mich) <6:VERB/root>(gefragt) <7:AUX/aux>(haben) <8:CCONJ/cc>(und)\
    \ <9:PRON/nsubj>(ich) <10:DET/conj>(ein) <ROOT> <11:PROPN/root>(G\xF6nnjamin)\
    \ <12:AUX/cop>(bin)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/root>(noch) <ROOT> <2:ADV/advmod>(noch) <3:ADJ/root>(l\xE4nger)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 10
    - obj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - acl
  sentence: "<1:CCONJ/cc>(und) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Einstieg) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(das) <6:PRON/obj>(was) <7:ADV/advmod>(da) <8:ADV/advmod>(hoffentlich)\
    \ <9:ADV/advmod>(noch) <10:VERB/acl>(kommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:DET/root>(kein)
    <ROOT> <5:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/root>(dreimal)
    <ROOT> <5:ADP/case>(als) <6:ADP/case>(in) <7:PROPN/root>(Freiburg)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - acl
  - !!python/tuple
    - 9
    - 10
    - xcomp
  - !!python/tuple
    - 10
    - 11
    - acl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - xcomp
  sentence: "<1:ADP/case>(\xFCber) <2:PRON/root>(etwas) <3:PRON/nsubj>(was) <4:ADP/case>(in)\
    \ <5:DET/det>(der) <6:NOUN/obl>(Zukunft) <7:ADV/advmod>(zwangsl\xE4ufig) <8:ADJ/acl>(\xE4\
    rger) <ROOT> <9:ADJ/xcomp>(schlimmer) <10:VERB/acl>(werden) <11:VERB/root>(wird)\
    \ <12:PROPN/xcomp>(Oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/root>(kein) <ROOT> <2:NOUN/nsubj>(\xDCberflieger) <3:DET/det>(keine)\
    \ <4:ADJ/amod>(krasse) <5:NOUN/root>(\xDCberfliegerin)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 13
    - nmod
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 13
    - cop
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 13
    - nmod
  - !!python/tuple
    - 11
    - 9
    - flat
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/advmod>(Auch) <2:ADP/case>(bei) <3:DET/det>(den) <4:NOUN/nmod>(Charakteren)\
    \ <5:PRON/appos>(Die) <6:AUX/cop>(sind) <7:ADP/case>(bei) <8:DET/det>(dem) <9:PROPN/nmod>(US)\
    \ <11:NOUN/flat>(Bachelor) <12:ADV/advmod>(n\xE4mlich) <13:ADJ/root>(deutlich)\
    \ <ROOT> <14:VERB/root>(gezeichnet)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - appos
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Vorwurf)
    <5:NOUN/appos>(Antisemitismus)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: "<1:NOUN/dep>(Jungen) <2:VERB/root>(reagieren) <ROOT> <3:ADP/case>(auf)\
    \ <4:DET/det>(die) <5:NOUN/root>(Scheidung) <6:ADP/case>(als) <7:NOUN/nmod>(M\xE4\
    dchen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cop
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:AUX/cop>(sind) <2:DET/det>(diese) <3:NOUN/nsubj>(Stimmungsschwankungen)
    <4:ADV/advmod>(viel) <5:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:NOUN/obj>(s) <ROOT> <4:VERB/root>(erwartet)
    <5:DET/det>(die) <6:NOUN/nsubj>(Reaktionen) <7:AUX/cop>(waren) <8:ADV/advmod>(recht)
    <9:ADJ/advmod>(positiv)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 8
    - xcomp
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 8
    - nsubj
  sentence: "<1:ADV/advmod>(Je) <2:ADJ/advmod>(tiefer) <3:PRON/nsubj>(man) <4:VERB/root>(reinf\xE4\
    llt) <5:ADV/advmod>(umso) <ROOT> <6:CCONJ/cc>(und) <7:ADJ/xcomp>(absurder) <8:VERB/root>(werden)\
    \ <9:DET/det>(die) <10:NOUN/nsubj>(Dinge)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:AUX/cop>(ist) <3:ADV/root>(noch) <ROOT> <4:PRON/nsubj>(was)
    <5:AUX/cop>(ist) <6:ADV/advmod>(noch) <7:ADJ/root>(geiler)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:ADV/advmod>(dann) <2:ADV/advmod>(noch) <3:DET/root>(viel) <ROOT> <4:VERB/root>(explodiert)
    <5:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:DET/nsubj>(einer) <3:AUX/root>(ist) <ROOT> <4:ADP/case>(als)
    <5:DET/det>(der) <6:DET/root>(andere)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - obj
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 7
    - advcl
  sentence: "<1:CCONJ/cc>(und) <2:PRON/nsubj>(ihr) <3:VERB/root>(m\xFCsst) <4:ADV/advmod>(schnell)\
    \ <5:ADV/compound:prt>(ein) <ROOT> <6:NOUN/xcomp>(J\xE4ger) <7:VERB/root>(werden)\
    \ <8:ADP/mark>(um) <9:PRON/obj>(es) <10:PART/mark>(zu) <11:VERB/advcl>(besch\xFC\
    tzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:ADV/root>(hier) <ROOT> <3:NOUN/root>(flowt)
- dependencies:
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - det:poss
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 7
    - advmod
  sentence: <4:PRON/root>(du) <ROOT> <5:NOUN/nsubj>(Verlierer) <6:PRON/nsubj>(du)
    <7:VERB/root>(willst) <8:DET/det:poss>(meine) <9:NOUN/compound>(Kuppe) <11:NOUN/obj>(Komm)
    <12:CCONJ/cc>(und) <13:INTJ/conj>(probier) <14:ADV/advmod>(mal)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Guck) <2:PRON/nsubj>(ich) <3:AUX/cop>(bin) <4:DET/det>(ein)
    <5:ADV/advmod>(bisschen) <6:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/cop>(bin) <3:X/root>(en) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/root>(sind) <ROOT> <3:ADP/case>(als) <4:DET/det>(der)
    <5:NOUN/root>(Rest)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 8
    - appos
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - mark
  sentence: "<1:ADV/advmod>(Nur) <2:ADV/advmod>(hier) <3:VERB/root>(wird) <4:PRON/nsubj>(es)\
    \ <5:ADV/advmod>(nochmal) <ROOT> <6:DET/det>(Das) <7:ADJ/amod>(k\xF6rpereigene)\
    \ <8:NOUN/nsubj>(Hormon) <9:PROPN/appos>(GLP-1) <10:VERB/root>(wird) <11:ADP/mark>(innerhalb)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Waffenfreak)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:DET/det:poss>(meinen) <3:NOUN/obl>(Augen) <4:AUX/root>(k\xF6\
    nnten) <5:PROPN/nsubj>(Airmax) <6:ADV/advmod>(kaum) <ROOT> <7:AUX/root>(sein)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:VERB/root>(mach) <2:ADV/advmod>(mal) <3:PART/advmod>(nicht) <4:ADP/compound:prt>(auf)
    <ROOT> <5:NOUN/root>(Boxer)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 11
    - advmod
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(es) <3:VERB/root>(geht) <4:ADV/advmod>(immer)
    <5:ADV/advmod>(noch) <ROOT> <6:ADV/advmod>(Nein) <7:PRON/nsubj>(wir) <8:AUX/cop>(sind)
    <9:ADV/advmod>(noch) <10:PART/advmod>(nicht) <11:ADJ/root>(krass)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Also) <2:ADV/advmod>(deswegen) <3:AUX/cop>(ist) <4:PRON/nsubj>(es)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Ausgleich)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(warum) <2:PRON/nsubj>(der) <3:DET/root>(ein) <ROOT> <4:NOUN/nsubj>(Typ)
    <5:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(man) <3:VERB/root>(denkt) <4:ADV/advmod>(doch)\
    \ <ROOT> <5:ADV/advmod>(dr\xFCber) <6:ADP/root>(nach)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:SCONJ/mark>(denn) <2:ADJ/advmod>(komplett) <3:VERB/root>(kommt) <4:PRON/nsubj>(das)
    <5:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 4
    - 1
    - flat
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Fick) <2:PROPN/flat>(Robert) <4:PRON/flat>(ich) <5:AUX/root>(muss)
    <ROOT> <6:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 1
    - obj
  sentence: <1:VERB/root>(Behindert) <2:CCONJ/cc>(aber) <3:DET/conj>(keiner) <4:PRON/obj>(was)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Voll) <ROOT> <2:NOUN/root>(Freestyle)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <2:NOUN/root>(Shit)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:NOUN/root>(komm'n) <2:ADV/advmod>(her) <3:CCONJ/cc>(und) <4:VERB/conj>(sagen)
    <7:AUX/parataxis>(Ist) <ROOT> <8:ADP/case>(als) <9:ADP/case>(in) <10:PROPN/root>(Amsterdam)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:DET/root>(Jeder) <ROOT> <2:NOUN/root>(K\xFCnstler)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:PROPN/nsubj>(Capi) <3:AUX/cop>(ist) <4:DET/det>(ein'n)
    <5:NOUN/root>(Tick) <ROOT> <7:PROPN/root>(Brra)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:NOUN/nsubj>(Deutschrap) <3:AUX/cop>(ist) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Witz)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 1
    - appos
  sentence: <ROOT> <1:NOUN/root>(Motherfucker) <2:AUX/cop>(wie'n) <3:PROPN/appos>(Maharadscha)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:CCONJ/root>(oder) <ROOT> <2:NOUN/root>(Kerl)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(du) <ROOT> <2:NOUN/root>(Talentscout)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 6
    - flat
  sentence: <1:AUX/root>(Bin) <ROOT> <2:ADP/case>(an) <3:DET/det>(dem) <4:NOUN/root>(Ball)
    <5:ADP/case>(als) <6:PROPN/nmod>(Rafa) <7:PROPN/flat>(Nadal)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 4
    - obj
  sentence: <1:ADV/advmod>(Ja) <2:CCONJ/cc>(und) <3:PRON/nsubj>(es) <4:VERB/root>(kommt)
    <5:ADV/advmod>(noch) <6:DET/obj>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 4
    - obl
  sentence: <1:ADV/advmod>(Denn) <2:ADP/root>(als) <ROOT> <3:NOUN/obj>(Rebell) <4:VERB/root>(friert)
    <5:PRON/nsubj>(man) <6:PART/advmod>(nicht) <7:ADP/case>(an) <8:DET/det>(den) <9:NOUN/obl>(Knien)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - obl:arg
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  sentence: <1:DET/root>(Viel) <ROOT> <2:SCONJ/mark>(als) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <5:PRON/obl:arg>(mir) <6:VERB/root>(vorgestellt) <7:AUX/aux>(hab)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/nmod>(Game) <4:AUX/cop>(ist)
    <5:PRON/root>(niemand) <ROOT> <6:SCONJ/root>(als) <7:PRON/nsubj>(ich) <9:ADV/advmod>(Nein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(er) <3:VERB/root>(stand) <4:ADV/advmod>(wieder)
    <5:ADP/compound:prt>(auf) <6:CCONJ/cc>(und) <7:PRON/nsubj>(er) <8:AUX/conj>(war)
    <ROOT> <9:SCONJ/mark>(denn) <10:ADV/root>(je)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:ADV/root>(noch) <ROOT> <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Ja) <2:AUX/root>(ist) <ROOT> <3:ADP/case>(als) <4:NOUN/nmod>(Laufen)
    <6:AUX/cop>(Ist) <7:ADJ/root>(gut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 2
    - obl
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 12
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 16
    - dep
  - !!python/tuple
    - 18
    - 16
    - nsubj
  - !!python/tuple
    - 19
    - 22
    - advmod
  - !!python/tuple
    - 20
    - 22
    - case
  - !!python/tuple
    - 21
    - 22
    - det
  - !!python/tuple
    - 22
    - 16
    - nmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(zwar) <4:ADP/case>(in)
    <5:ADJ/amod>(letzter) <6:NOUN/obl>(Zeit) <7:PART/advmod>(nicht) <8:ADV/advmod>(so)
    <9:ADV/advmod>(oft) <10:ADP/case>(in) <11:DET/det>(dem) <12:NOUN/obl>(Kino) <13:CCONJ/cc>(Aber)
    <14:DET/det>(ein) <15:ADV/conj>(so) <ROOT> <16:NOUN/root>(Film) <17:PRON/dep>(den)
    <18:PRON/nsubj>(ich) <19:ADV/advmod>(letztens) <20:ADP/case>(in) <21:DET/det>(dem)
    <22:NOUN/nmod>(Kino)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 12
    - mark
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advcl
  - !!python/tuple
    - 12
    - 6
    - conj
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - compound:prt
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/aux>(wirst) <3:ADV/advmod>(halt) <4:ADV/advmod>(quasi)\
    \ <5:ADV/advmod>(darauf) <6:VERB/root>(gepr\xE4gt) <7:SCONJ/mark>(wenn) <8:DET/det>(der)\
    \ <9:NOUN/nsubj>(Bauch) <10:ADV/advmod>(weg) <11:AUX/advcl>(w\xE4re) <12:VERB/conj>(w\xE4\
    rst) <13:PRON/nsubj>(du) <14:ADV/advmod>(so) <15:ADV/compound:prt>(ein) <ROOT>\
    \ <16:NOUN/root>(T\xE4nzer)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - cop
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 3
    - ccomp
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(denkst) <4:PRON/nsubj>(du)\
    \ <5:ADV/advmod>(nat\xFCrlich) <6:INTJ/advmod>(Oh) <7:INTJ/advmod>(shit) <8:PRON/nsubj>(ich)\
    \ <9:AUX/cop>(bin) <10:ADV/advmod>(ja) <11:ADV/advmod>(gar) <12:DET/ccomp>(kein)\
    \ <ROOT> <13:NOUN/root>(T\xE4nzer)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - aux
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 5
    - xcomp
  sentence: "<1:CCONJ/cc>(aber) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(ich) <ROOT> <4:NOUN/xcomp>(T\xE4\
    nzer) <5:VERB/root>(werden) <6:AUX/aux>(will) <7:ADV/advmod>(dann) <8:AUX/aux>(muss)\
    \ <9:PRON/nsubj>(ich) <10:VERB/xcomp>(abnehmen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:DET/det>(ein) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:NOUN/root>(Versto\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: "<1:ADJ/root>(live) <2:AUX/cop>(ist) <3:DET/nsubj>(keiner) <ROOT> <4:ADP/case>(au\xDF\
    er) <5:PROPN/root>(Savas) <7:NOUN/appos>(Niemand)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 4
    - ccomp
  - !!python/tuple
    - 10
    - 4
    - parataxis
  - !!python/tuple
    - 11
    - 10
    - nsubj
  - !!python/tuple
    - 12
    - 10
    - obj
  - !!python/tuple
    - 13
    - 17
    - cc
  - !!python/tuple
    - 14
    - 17
    - nsubj
  - !!python/tuple
    - 15
    - 17
    - cop
  - !!python/tuple
    - 16
    - 17
    - advmod
  - !!python/tuple
    - 17
    - 4
    - conj
  - !!python/tuple
    - 18
    - 0
    - root
  - !!python/tuple
    - 19
    - 21
    - case
  - !!python/tuple
    - 20
    - 21
    - det
  - !!python/tuple
    - 21
    - 18
    - nmod
  sentence: "<1:CCONJ/cc>(Denn) <2:DET/nsubj>(eins) <3:AUX/cop>(ist) <4:ADJ/root>(klar)\
    \ <5:SCONJ/mark>(Solange) <6:PRON/nsubj>(wir) <7:DET/det>(die) <8:NOUN/obj>(Erde)\
    \ <9:VERB/ccomp>(bev\xF6lkern) <10:VERB/parataxis>(brauchen) <11:PRON/nsubj>(wir)\
    \ <12:NOUN/obj>(Rohstoffe) <13:CCONJ/cc>(und) <14:PRON/nsubj>(das) <15:AUX/cop>(ist)\
    \ <16:ADV/advmod>(immer) <17:DET/conj>(ein) <ROOT> <18:NOUN/root>(Eingriff) <19:ADP/case>(in)\
    \ <20:DET/det>(die) <21:NOUN/nmod>(Natur)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(jetzt) <3:VERB/root>(wird) <4:PRON/nsubj>('s)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/nsubj>(jeder) <2:DET/det:poss>(meiner) <3:NOUN/nmod>(Crew) <4:AUX/root>(ist)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 7
    - obl:arg
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - xcomp
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(noch) <ROOT> <4:CCONJ/cc>(aber)\
    \ <5:PRON/obl:arg>(mir) <6:VERB/root>(wurde) <7:ADJ/xcomp>(kotz\xFCbel)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Er) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(Du) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 3
    - cop
  sentence: <1:SCONJ/mark>(wenn) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Hit) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:NOUN/nmod>(Kasten) <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: "<1:SCONJ/mark>(Wenn) <2:ADV/advmod>(dann) <3:NOUN/nsubj>(Wind) <4:VERB/root>(dazukommt)\
    \ <5:AUX/aux>(ist) <6:PRON/nsubj>(es) <7:ADV/advmod>(nat\xFCrlich) <8:ADV/advmod>(noch)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 6
    - 2
    - flat
  sentence: <1:PRON/root>(du) <ROOT> <2:PROPN/root>(Call) <3:PROPN/flat>(of) <4:PROPN/flat>(Duty)
    <6:NOUN/flat>(Boss)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 2
    - flat
  - !!python/tuple
    - 6
    - 2
    - flat
  sentence: <1:PRON/root>(du) <ROOT> <2:PROPN/root>(Call) <3:PROPN/flat>(of) <4:PROPN/flat>(Duty)
    <6:NOUN/flat>(Boss)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - advcl
  - !!python/tuple
    - 11
    - 10
    - cop
  sentence: "<1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:VERB/root>(wollte) <4:ADV/advmod>(noch)\
    \ <5:DET/obj>(viel) <ROOT> <6:AUX/root>(sein) <7:SCONJ/mark>(wenn) <8:PRON/nsubj>(ich)\
    \ <9:ADV/advmod>(mal) <10:ADJ/advcl>(\xE4lter) <11:AUX/cop>(bin)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(Du) <3:VERB/root>(trainierst) <4:CCONJ/cc>(und)
    <5:SCONJ/mark>(dass) <6:DET/det:poss>(Dein) <7:NOUN/nsubj>(Body) <8:ADV/advmod>(immer)
    <ROOT> <9:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 8
    - advmod
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - cop
  sentence: <1:CCONJ/cc>(Und) <2:PART/advmod>(nicht) <3:ADV/advmod>(nur) <4:SCONJ/mark>(weil)
    <5:PRON/nsubj>(er) <6:ADV/advmod>(einfach) <7:ADV/advmod>(n) <8:VERB/root>(verdammt)
    <ROOT> <9:NOUN/compound>(Snowboard) <11:NOUN/root>(Dude) <12:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  sentence: <1:PRON/root>(Dein) <ROOT> <2:NOUN/dep>(Deal) <3:DET/det>(ein) <4:NOUN/root>(Vertrag)
    <5:ADP/case>(mit) <6:DET/det>(dem) <7:NOUN/nmod>(Teufel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:INTJ/root>(zeig) <2:PRON/obj>(wer) <ROOT> <3:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  sentence: <1:NOUN/root>(lade) <2:ADP/case>(nach) <4:PROPN/nmod>(KiK) <5:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(du) <2:VERB/root>(h\xF6rst) <3:PRON/nsubj>(das) <4:ADV/advmod>(ja)\
    \ <5:ADV/advmod>(auch) <ROOT> <6:NOUN/root>(L\xE4rm)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:AUX/root>(sein) <3:DET/obj>(ein) <ROOT> <4:NOUN/root>(Traum)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(mit) <2:ADV/advmod>(gerade) <3:ADV/advmod>(mal) <4:NUM/nummod>(80)
    <5:NOUN/nmod>(Einwohnern) <6:AUX/cop>(war) <7:DET/root>(ein) <ROOT> <8:NOUN/root>(Schritt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 5
    - advmod
  sentence: <1:ADP/case>(In) <2:DET/det>(der) <3:ADJ/amod>(echten) <4:NOUN/obl>(Welt)
    <5:AUX/root>(ist) <6:DET/det>(dieser) <7:NOUN/nsubj>(Effekt) <8:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Bremerhaven) <2:AUX/cop>(ist) <3:DET/det>(ein) <4:NOUN/root>(mega)
    <ROOT> <5:NOUN/root>(Hype)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(du) <4:DET/det>(ein)
    <5:ADJ/root>(richtig) <ROOT> <6:PROPN/root>(Hustler) <7:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 8
    - obl
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 8
    - obl
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(du) <3:NOUN/advmod>(n) <4:ADJ/root>(richtig)
    <ROOT> <5:PROPN/nsubj>(Hustler) <6:AUX/aux>(bist) <7:ADV/advmod>(dann) <8:VERB/root>(rennst)
    <9:PRON/nsubj>(du) <10:ADP/case>(vor) <11:DET/det>(der) <12:NOUN/obl>(Schule)
    <13:ADP/case>(in) <14:DET/det>(den) <15:NOUN/obl>(Laden)
- dependencies:
  - !!python/tuple
    - 1
    - 12
    - mark
  - !!python/tuple
    - 2
    - 12
    - cop
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 12
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 12
    - nmod
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 6
    - appos
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <ROOT> <1:PART/mark>(zu) <2:AUX/cop>(werden) <3:ADP/case>(wie) <4:ADV/advmod>(hier)
    <5:ADP/case>(bei) <6:PROPN/nmod>(Star) <7:PROPN/flat>(Wars) <8:PROPN/flat>(Episode)
    <9:PROPN/appos>(8) <10:DET/det>(der) <11:ADJ/amod>(letzte) <12:PROPN/root>(Yeti)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 7
    - nmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  sentence: <1:PRON/nsubj>(das) <2:ADV/advmod>(also) <3:ADP/case>(in) <4:ADJ/amod>(letzter)
    <5:NOUN/nmod>(Zeit) <6:ADV/advmod>(so) <7:DET/root>(viel) <ROOT> <8:VERB/root>(geworden)
    <9:ADV/advmod>(Deshalb)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 10
    - nmod
  - !!python/tuple
    - 3
    - 10
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:PROPN/nmod>(Japan) <3:AUX/cop>(ist) <4:DET/det>(die)
    <5:NOUN/nsubj>(Situation) <6:ADV/advmod>(aber) <7:ADV/advmod>(noch) <8:ADV/advmod>(mal)
    <9:ADP/case>(um) <10:DET/root>(einiges) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - cc
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 8
    - nmod
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:NOUN/nsubj>(Halbmarathon) <3:ADP/case>(nach) <4:NOUN/nmod>(Krebs)
    <5:ADV/advmod>(vielleicht) <6:ADV/advmod>(noch) <7:DET/det>(eine) <8:NOUN/root>(Nummer)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 1
    - aux
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:VERB/root>(packe) <2:PRON/nsubj>(sie) <3:ADP/case>(aus) <4:DET/det>(die)
    <5:NOUN/obl>(Shotgun) <6:AUX/aux>(ist) <7:ADV/advmod>(halt) <ROOT> <8:PROPN/root>(Ballermann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:PRON/nsubj>(wir) <ROOT> <3:VERB/root>(rappen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(dann) <2:VERB/root>(wird) <3:DET/det>(das) <4:NOUN/nsubj>(Erlebnis)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:AUX/cop>(ist) <3:PRON/nsubj>(das) <4:PART/advmod>(nicht)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Druck)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 6
    - obl
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 10
    - csubj
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:PROPN/obl>(Lino) <3:SCONJ/mark>(den) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(gleich) <6:VERB/csubj>(treffe) <7:AUX/cop>(ist) <8:PRON/nsubj>(das)
    <9:ADV/advmod>(noch) <10:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:DET/det>(Ein) <2:ADV/root>(ziemlich) <ROOT> <3:NOUN/compound>(Road)\
    \ <5:NOUN/root>(Trip) <6:ADP/case>(f\xFCr) <7:DET/det>(alle) <8:NOUN/nmod>(Beteiligten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl
  - !!python/tuple
    - 4
    - 5
    - aux
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 5
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - aux
  sentence: "<1:ADP/case>(in) <2:DET/det>(dem) <3:NOUN/obl>(Kopf) <4:AUX/aux>(habe)\
    \ <5:VERB/root>(wei\xDF) <6:PRON/nsubj>(ich) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(ich)\
    \ <9:DET/obj>(viel) <ROOT> <10:VERB/root>(aussehen) <11:AUX/aux>(kann)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - nummod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 6
    - nmod
  sentence: "<1:PRON/nsubj>(die) <2:AUX/cop>(sind) <3:ADP/case>(mit) <4:NUM/nummod>(15)\
    \ <5:DET/root>(viel) <ROOT> <6:ADJ/root>(breiter) <7:CCONJ/cc>(und) <8:ADJ/conj>(muskul\xF6\
    ser) <9:CCONJ/case>(als) <10:PRON/nmod>(ich)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(echt) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Ausschlag)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  sentence: <ROOT> <1:PROPN/root>(Part) <3:NOUN/flat>(Dynastie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Noch) <2:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:DET/obj>(dutzende) <ROOT>
    <4:NOUN/root>(Idole)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/root>(Hauptsache) <ROOT> <2:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det:poss
  - !!python/tuple
    - 3
    - 6
    - obl
  - !!python/tuple
    - 5
    - 3
    - flat
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det:poss>(meiner) <3:PROPN/obl>(Kunstuni) <5:PROPN/flat>(Hood)
    <6:VERB/root>(hat) <7:PRON/nsubj>(niemand) <ROOT> <8:VERB/root>(gerappt)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 3
    - obl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:CCONJ/cc>(Oder) <2:PRON/nsubj>(ich) <3:VERB/root>(chill) <4:PRON/obj>(mich)
    <5:ADV/advmod>(zusamm') <6:ADP/case>(mit) <7:PROPN/obl>(Franklin) <8:ADP/case>(in)
    <9:DET/det>(die) <10:NOUN/obl>(Achterbahn) <ROOT> <12:NOUN/root>(Plan)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(brech) <3:DET/obj>(alle) <4:ADV/advmod>(scheiss)
    <5:NOUN/obj>(Rekorde) <6:CCONJ/cc>(und) <7:VERB/conj>(rappe) <8:DET/det>(jeden)
    <9:NOUN/obl>(Tag) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  sentence: <1:PROPN/root>(Mega) <ROOT> <2:PROPN/root>(Aim) <3:ADP/case>(in) <4:DET/det>(dem)
    <5:PROPN/nmod>(GTA-RP)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - cop
  - !!python/tuple
    - 7
    - 2
    - parataxis
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(kannt) <3:ADV/advmod>(da) <4:DET/obj>(einen)
    <5:PRON/nsubj>(der) <6:AUX/cop>(war) <7:DET/parataxis>(ein) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(ich) <2:VERB/root>(mach) <4:DET/det>(den) <5:NOUN/obj>(Reim)
    <6:ADV/advmod>(nur) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 11
    - obl
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - nsubj
  - !!python/tuple
    - 13
    - 11
    - advmod
  - !!python/tuple
    - 14
    - 11
    - advmod
  - !!python/tuple
    - 15
    - 11
    - compound:prt
  sentence: "<1:DET/det>(Ein) <2:PRON/nsubj>(der) <3:AUX/cop>(war) <4:DET/root>(ein)\
    \ <ROOT> <5:ADP/case>(in) <6:DET/det>(dem) <7:NOUN/obl>(gesicht) <8:DET/det>(ein)\
    \ <9:ADJ/advmod>(blasser) <10:ADJ/advmod>(fr\xFCher) <11:VERB/root>(meint) <12:PRON/nsubj>(er)\
    \ <13:ADV/advmod>(nur) <14:ADV/advmod>(lsd) <15:X/compound:prt>(ins)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - flat
  sentence: <1:CCONJ/root>(und) <ROOT> <2:PROPN/root>(Samurai) <4:PROPN/flat>(Schnetzelei)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux:pass
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:ADJ/amod>(kurzfristigen) <2:NOUN/obj>(Schulden) <3:PART/mark>(zu)\
    \ <4:VERB/root>(finanzieren) <5:AUX/aux:pass>(ist) <6:ADV/advmod>(doch) <7:ADV/advmod>(einfach)\
    \ <8:ADV/advmod>(nur) <9:DET/dep>(ein) <ROOT> <10:NOUN/root>(Anf\xE4ngerfehler)"
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - dep
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <2:NOUN/root>(Zuruf) <4:ADV/advmod>(So) <5:DET/dep>(ein) <ROOT> <6:NOUN/nsubj>(Gangster)
    <7:AUX/cop>(ist) <8:PRON/root>(das)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 7
    - mark
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(wird) <3:ADV/advmod>(nur) <ROOT> <4:SCONJ/mark>(wenn)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(danach) <7:VERB/root>(versucht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Traum)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(dennoch) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Unterschied) <6:ADP/case>(zu) <7:DET/det>(diesen) <8:NOUN/nmod>(Standard-MCs)
    <9:ADP/case>(in) <10:DET/det>(dem) <11:PROPN/nmod>(Biz)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:DET/root>(ein) <ROOT> <2:ADJ/amod>(privater) <3:NOUN/root>(R\xFCckzug)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Schloss) <3:AUX/cop>(ist) <4:ADV/advmod>(dann)
    <5:ADV/advmod>(noch) <6:ADV/advmod>(mal) <7:DET/det>(ne) <8:NOUN/root>(Ecke) <ROOT>
    <9:SCONJ/mark>(weil) <10:ADJ/root>(prunkvoller)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - dep
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NUM/dep>(808) <2:VERB/root>(kommt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  sentence: <1:CCONJ/cc>(aber) <2:PART/advmod>(nicht) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(so) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Unterschied) <8:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - conj
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - advmod
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:NOUN/root>(Lederhose) <2:CCONJ/cc>(und) <3:VERB/conj>(hab) <4:DET/det>(ein)
    <5:NOUN/obj>(Gewehr) <6:CCONJ/cc>(und) <7:ADV/advmod>(vielleicht) <8:AUX/conj>(ist)
    <9:PRON/nsubj>(das) <10:ADV/advmod>(sch) <11:ADV/advmod>(doch) <ROOT> <12:SCONJ/mark>(als)
    <13:PRON/nsubj>(wir) <14:PRON/nsubj>(der) <15:ADV/advmod>(vielleicht) <16:VERB/root>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nmod
  sentence: "<1:ADP/case>(Bei) <2:ADJ/amod>(n\xE4herem) <3:NOUN/obl>(Hinsehen) <4:VERB/root>(wird)\
    \ <5:PRON/nsubj>(es) <6:ADV/advmod>(noch) <ROOT> <7:DET/det>(Das) <8:NOUN/root>(Wirtschaftswachstum)\
    \ <9:PRON/nmod>(der)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Wie) <2:ADV/advmod>(so) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Horrorfilm)
    <5:ADV/advmod>(eben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - mark
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 3
    - cop
  sentence: "<1:AUX/cop>(ist) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Unterschied)\
    \ <4:SCONJ/mark>(ob) <5:PRON/nsubj>(sie) <6:ADV/advmod>(au\xDFen) <7:CCONJ/cc>(oder)\
    \ <8:ADV/conj>(innen) <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(wir) <3:AUX/root>(sind) <4:ADV/advmod>(echt)
    <5:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(Echt) <2:ADV/root>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(wir) <3:AUX/root>(sind) <4:ADV/advmod>(echt)
    <5:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(reime) <3:PROPN/obj>(Edgar) <4:NOUN/flat>(Wasser)
    <5:ADP/case>(auf) <6:ADV/advmod>(echt) <7:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:VERB/root>(Braucht) <3:CCONJ/cc>(aber) <4:DET/nsubj>(alles) <5:DET/nsubj>(andere)
    <6:VERB/conj>(scheint) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obl:arg
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:VERB/root>(Braucht) <3:CCONJ/cc>(aber) <4:DET/nsubj>(alles) <5:DET/nsubj>(andere)
    <6:VERB/conj>(scheint) <7:PRON/obl:arg>(mir) <8:ADV/advmod>(jetzt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: <1:DET/root>(Ein) <ROOT> <2:NOUN/root>(Unterschied) <3:PRON/nsubj>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - dep
  - !!python/tuple
    - 2
    - 5
    - case
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - compound:prt
  - !!python/tuple
    - 12
    - 14
    - mark
  - !!python/tuple
    - 13
    - 14
    - nsubj
  - !!python/tuple
    - 14
    - 7
    - advcl
  sentence: <1:NOUN/dep>(Brechen) <2:ADP/case>(auf) <3:ADP/case>(zu) <4:ADJ/amod>(neuen)
    <5:NOUN/nmod>(Ufern) <7:VERB/root>(nehm) <9:PRON/obj>(dich) <10:ADP/compound:prt>(mit)
    <12:SCONJ/mark>(denn) <13:PRON/nsubj>(wir) <14:AUX/advcl>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - parataxis
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 5
    - xcomp
  - !!python/tuple
    - 9
    - 5
    - cc
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:VERB/root>(entscheid) <3:PRON/obj>(dich) <5:VERB/parataxis>(bist)
    <6:PRON/nsubj>(du) <7:ADV/advmod>(lieber) <8:NOUN/xcomp>(Vorbild) <9:CCONJ/cc>(oder)
    <ROOT> <10:X/root>(G?)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Letzte) <3:DET/det:poss>(meiner) <4:NOUN/nmod>(Art)\
    \ <5:ADV/advmod>(daf\xFCr) <6:ADV/advmod>(noch) <7:DET/root>(viel) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <ROOT> <3:PROPN/nsubj>(Fleischberg)
    <4:PRON/nsubj>(ich) <5:AUX/cop>(bin) <6:DET/det>(ein) <7:NOUN/root>(Medjai)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(ganz) <ROOT> <2:PROPN/root>(Macker)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:ADV/advmod>(echt) <4:NOUN/root>(n)
    <ROOT> <5:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(damit) <3:PRON/root>(die) <4:ADV/advmod>(noch)
    <ROOT> <5:AUX/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/det:poss>(meine) <2:PROPN/root>(Lines) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - xcomp
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/xcomp>(Leben) <3:VERB/root>(wird) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - aux:pass
  - !!python/tuple
    - 3
    - 4
    - dep
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(Hier) <2:AUX/aux:pass>(wird) <ROOT> <3:NOUN/dep>(Zorn) <4:VERB/root>(geboren)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 7
    - appos
  sentence: <1:ADV/root>(Noch) <ROOT> <2:AUX/cop>(ist) <3:DET/det>(das) <4:NOUN/root>(Beispiel)
    <5:ADP/case>(von) <6:DET/det:poss>(unserer) <7:NOUN/nmod>(Grafikerin) <8:PROPN/appos>(Melanie)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/mark>(denn) <2:PRON/nsubj>(ich) <3:AUX/cop>(bin) <4:DET/root>(ein)
    <ROOT> <5:PROPN/root>(MC)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:VERB/root>(W\xFCrde) <2:ADV/advmod>(wohl) <3:ADV/advmod>(auch) <4:ADV/advmod>(noch)\
    \ <ROOT> <5:NOUN/dep>(Batterie) <6:VERB/root>(saugen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - cc
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 11
    - xcomp
  - !!python/tuple
    - 11
    - 6
    - conj
  sentence: <1:DET/det>(die) <2:PRON/root>(euch) <3:ADP/case>(zu) <4:DET/det>(dem)
    <5:NOUN/nmod>(Beispiel) <ROOT> <6:VERB/root>(zuhauen) <7:CCONJ/cc>(oder) <8:ADJ/amod>(neue)
    <9:NOUN/obj>(Wege) <10:VERB/xcomp>(freischalten) <11:VERB/conj>(lassen)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - det
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Fu\xDFball) <2:AUX/cop>(ist) <3:ADP/case>(vor) <4:DET/det>(allem)\
    \ <5:ADP/case>(in) <6:PROPN/nmod>(Deutschland) <7:DET/root>(ein) <ROOT> <8:NOUN/root>(Volkssport)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 7
    - aux
  sentence: "<1:ADV/advmod>(daf\xFCr) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(es) <4:DET/det>(ein)\
    \ <5:ADJ/root>(potenziell) <ROOT> <6:ADJ/amod>(E-) <7:NOUN/root>(Sport) <8:AUX/cop>(sein)\
    \ <9:AUX/aux>(k\xF6nnte)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 9
    - 6
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/cop>(bist) <4:ADJ/root>(ganz)
    <ROOT> <5:CCONJ/cc>(oder) <6:PRON/root>(was) <9:X/dep>(Uff)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - xcomp
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(so) <2:DET/root>(ein) <ROOT> <3:NOUN/xcomp>(Motherfucker)
    <4:PART/mark>(zu) <5:VERB/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 2
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - nmod
  sentence: "<1:AUX/nsubj>(Seid) <2:VERB/root>(gespannt) <3:PRON/nsubj>(Das) <4:AUX/cop>(war)\
    \ <5:DET/dep>(ein) <ROOT> <6:NOUN/root>(Dreh) <7:ADP/case>(f\xFCr) <8:PRON/nmod>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(du) <2:AUX/cop>(bist) <3:ADV/advmod>(nur) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Spast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  sentence: <1:ADP/case>(Bei) <2:PROPN/obl>(ADHS) <3:AUX/root>(ist) <4:PRON/nsubj>(es)
    <5:ADV/advmod>(aber) <6:ADV/advmod>(noch) <7:ADV/advmod>(mal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/root>(hundertmal)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 11
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 11
    - advmod
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl:arg
  - !!python/tuple
    - 11
    - 3
    - conj
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:ADP/case>(f\xFCr) <2:PRON/obl>(uns) <3:VERB/root>(geschrumpft) <4:NOUN/obj>(Cool)\
    \ <5:CCONJ/cc>(oder) <6:ADV/advmod>(Je) <7:ADJ/advmod>(n\xE4her) <8:PRON/nsubj>(wir)\
    \ <9:DET/det>(der) <10:NOUN/obl:arg>(Lichtgeschwindigkeit) <11:VERB/conj>(kommen)\
    \ <12:ADV/advmod>(desto) <ROOT> <13:AUX/root>(wird)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Methoden) <3:VERB/root>(kommen)
    <ROOT> <4:ADP/case>(als) <5:NOUN/root>(Chirurgen) <6:ADP/case>(mit) <7:NOUN/nmod>(Kaffeetatter)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 7
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(war) <3:ADP/case>(auf) <4:DET/det>(jeden)
    <5:NOUN/obl>(Fall) <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/root>(Tiefpunkt) <8:DET/det:poss>(meines)
    <9:NOUN/nmod>(Lebens)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:PRON/nsubj>(du) <3:VERB/root>(musst) <4:ADV/advmod>(noch)
    <5:DET/obj>(viel) <ROOT> <6:AUX/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 13
    - obj
  - !!python/tuple
    - 8
    - 13
    - nsubj
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 13
    - obl
  - !!python/tuple
    - 13
    - 5
    - xcomp
  sentence: <1:PROPN/nsubj>(Lisa) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/obj>(Fall)
    <5:VERB/root>(finde) <6:PRON/nsubj>(ich) <7:PRON/obj>(den) <8:PRON/nsubj>(wir)
    <9:ADV/advmod>(da) <10:ADP/case>(in) <11:DET/det>(der) <12:NOUN/obl>(Sendung)
    <13:VERB/xcomp>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - ccomp
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:VERB/root>(warte) <3:ADV/advmod>(mal) <4:PRON/nsubj>(ich)
    <5:AUX/ccomp>(bin) <6:DET/obj>(ein) <ROOT> <7:NOUN/root>(Skater)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 2
    - nmod
  sentence: "<1:DET/root>(Ein) <ROOT> <2:NOUN/root>(Einschnitt) <3:ADP/case>(f\xFC\
    r) <4:DET/det>(den) <5:ADJ/amod>(herk\xF6mmlichen) <6:NOUN/nmod>(Spielzeugmarkt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PRON/obj>(was) <2:VERB/root>(will) <3:PRON/nsubj>(man) <4:ADV/advmod>(bitte)
    <5:ADV/advmod>(mehr) <7:PRON/nsubj>(Ich) <8:AUX/cop>(bin) <9:DET/det>(ein) <10:ADJ/parataxis>(richtig)
    <ROOT> <11:PROPN/root>(Ficker)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(nat\xFC\
    rlich) <5:ADV/advmod>(erst) <6:ADV/advmod>(einmal) <7:DET/root>(ein) <ROOT> <8:PROPN/root>(Cut)\
    \ <9:ADP/case>(f\xFCr) <10:DET/det>(beide) <11:NOUN/nmod>(Seiten)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(nur) <2:DET/det>(ein) <3:ADV/root>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Tag)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - dep
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/root>(Ein) <ROOT> <2:NOUN/dep>(Preisunterschied) <3:DET/det>(der)\
    \ <4:DET/det>(manche) <5:NOUN/nmod>(Kunden) <6:VERB/root>(ver\xE4rgert)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - dep
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - aux
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 13
    - cop
  - !!python/tuple
    - 11
    - 13
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 7
    - conj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:NOUN/dep>(Amtszeit) <2:DET/det>(Einen) <3:NOUN/obj>(Krieg) <4:AUX/aux>(hat)
    <5:PRON/nsubj>(er) <6:PART/advmod>(nicht) <7:VERB/root>(losgetreten) <8:CCONJ/cc>(Und)
    <9:PRON/nsubj>(das) <10:AUX/cop>(ist) <11:ADV/advmod>(schon) <12:DET/det>(ein)
    <13:ADV/conj>(sehr) <ROOT> <14:NOUN/root>(Gegensatz)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:NOUN/root>(Mach) <2:ADP/case>(auf) <3:ADJ/amod>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:NOUN/obj>(Angst) <3:VERB/root>(h\xE4tte) <4:PRON/nsubj>(man)\
    \ <5:ADV/advmod>(nur) <6:ADP/xcomp>(als) <7:ADJ/advmod>(ganz) <ROOT> <8:NOUN/root>(Spast)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: "<1:ADJ/advmod>(Ok) <2:ADJ/root>(krass) <3:PRON/nsubj>(Was) <4:ADP/case>(f\xFC\
    r) <5:DET/nmod>(ein) <ROOT> <6:NOUN/root>(Zufall) <7:AUX/cop>(ist) <8:PRON/nsubj>(das)\
    \ <9:ADV/advmod>(denn)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:NOUN/root>(Kandidat) <4:DET/nmod>(meiner)
    <ROOT> <5:NOUN/root>(Parts)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - acl
  - !!python/tuple
    - 11
    - 14
    - cc
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - conj
  - !!python/tuple
    - 15
    - 0
    - root
  sentence: "<1:ADP/case>(in) <2:NOUN/nmod>(your) <3:ADV/advmod>(total) <4:ADJ/root>(gl\xFC\
    cklich) <5:ADP/case>(mit) <6:PRON/nmod>(dem) <7:PRON/obj>(was) <8:PRON/nsubj>(er)\
    \ <9:ADV/advmod>(jetzt) <10:VERB/acl>(tut) <11:CCONJ/cc>(und) <12:PRON/nsubj>(das)\
    \ <13:ADV/advmod>(nat\xFCrlich) <14:DET/conj>(ein) <ROOT> <15:NOUN/root>(lebenswandel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:ADV/advmod>(hier) <3:AUX/root>(ist) <ROOT> <4:ADP/root>(als)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:NOUN/root>(Sound)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Hardwarepower) <3:AUX/cop>(ist) <4:DET/root>(viel)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 9
    - csubj
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:ADV/advmod>(wo) <2:PRON/nsubj>(man) <3:ADV/advmod>(so) <4:VERB/csubj>(mitkriegt)
    <5:PROPN/nsubj>(Titus) <6:PRON/nsubj>(das) <7:AUX/cop>(ist) <8:DET/det>(ein) <9:ADJ/root>(richtig)
    <ROOT> <10:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - mark
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det:poss
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 9
    - parataxis
  - !!python/tuple
    - 14
    - 15
    - nummod
  - !!python/tuple
    - 15
    - 16
    - nmod
  - !!python/tuple
    - 16
    - 13
    - advmod
  - !!python/tuple
    - 17
    - 13
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(halt) <4:ADV/advmod>(schon)
    <5:DET/det>(ein) <6:ADV/advmod>(sehr) <ROOT> <7:NOUN/obj>(Schritt) <8:PART/mark>(zu)
    <9:VERB/root>(sagen) <10:ADV/advmod>(Okay) <11:DET/det:poss>(meine) <12:NOUN/nsubj>(Familie)
    <13:VERB/parataxis>(lebt) <14:NUM/nummod>(600) <15:NOUN/nmod>(km) <16:ADJ/advmod>(weit)
    <17:ADV/compound:prt>(weg)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADV/advmod>(einfach) <4:ADV/advmod>(mal)
    <5:DET/root>(viel) <ROOT> <6:ADP/case>(als) <7:DET/det>(die) <8:DET/det>(meisten)
    <9:NOUN/root>(Gehypten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Slackliner)
    <5:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 6
    - dep
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:AUX/cop>(bist) <4:ADJ/root>(ganz)
    <ROOT> <5:CCONJ/cc>(oder) <6:PRON/root>(was) <8:X/dep>(Uff)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Motherfucker)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - det
  - !!python/tuple
    - 2
    - 5
    - amod
  - !!python/tuple
    - 3
    - 5
    - compound
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:ADJ/amod>(richtiger) <3:NOUN/compound>(Ohrwurm) <5:NOUN/root>(Ja)
    <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/root>(Ohrwurm)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Job)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(war) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Verlust)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 1
    - obl
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 1
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:PRON/nsubj>(ich) <3:ADP/case>(als) <4:PROPN/obl>(Giogolo)
    <5:NOUN/obl>(Welle) <6:CCONJ/cc>(oder) <7:ADP/case>(als) <8:ADJ/conj>(ganz) <ROOT>
    <9:PROPN/root>(Gee)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:DET/det>(dieser) <3:NOUN/nsubj>(Boy) <4:AUX/cop>(ist)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Player)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(So) <2:DET/det>(ein) <3:ADJ/root>(richtig) <ROOT> <4:NOUN/root>(Businessmacher)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:NOUN/root>(Bruder) <ROOT> <2:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(ist) <3:ADV/advmod>(noch) <ROOT> <4:ADP/case>(als)
    <5:ADJ/root>(kostenlos)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 7
    - xcomp
  sentence: "<1:ADV/advmod>(Allein) <2:ADV/advmod>(schon) <3:SCONJ/root>(weil) <4:DET/det>(die)\
    \ <5:NOUN/nsubj>(Waffen) <6:PRON/obj>(sich) <ROOT> <7:VERB/root>(anf\xFChlen)\
    \ <8:ADJ/xcomp>(fetter) <9:VERB/xcomp>(klingen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - csubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:PRON/nsubj>(ihr) <3:VERB/csubj>(seht) <4:VERB/root>(ballert)
    <5:PRON/obj>(euer) <ROOT> <6:NOUN/root>(Lehrer)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 7
    - compound:prt
  sentence: <1:NOUN/root>(Reden) <2:PART/advmod>(nicht) <3:ADP/case>(von) <4:PRON/nmod>(dem)
    <ROOT> <5:AUX/root>(sein) <6:CCONJ/cc>(und) <7:VERB/conj>(ballern) <8:ADV/advmod>(einfach)
    <9:DET/obj>(alles) <10:ADV/compound:prt>(weg)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - cc
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 9
    - obl
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - mark
  - !!python/tuple
    - 11
    - 9
    - nsubj
  - !!python/tuple
    - 12
    - 9
    - advmod
  sentence: "<1:ADV/root>(so) <ROOT> <2:CCONJ/cc>(und) <3:ADP/case>(f\xFCr) <4:PRON/obl>(uns)\
    \ <5:ADV/advmod>(eigentlich) <6:ADJ/amod>(unvorstellbarer) <7:ADJ/amod>(politischer)\
    \ <8:NOUN/obl>(Korruption) <9:VERB/root>(leidet) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(er)\
    \ <12:ADV/advmod>(selbst)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(wird) <4:ADV/advmod>(noch)
    <ROOT> <5:ADJ/root>(Angeblich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(dieser) <2:NOUN/nsubj>(Junge) <3:AUX/cop>(w\xE4r) <4:DET/root>(ein)\
    \ <ROOT> <5:NOUN/root>(Spinner)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - conj
  sentence: <1:SCONJ/root>(ob) <ROOT> <2:PROPN/root>(Hassan) <3:CCONJ/cc>(oder) <4:ADJ/amod>(deutscher)
    <5:PROPN/conj>(Hans)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(du) <ROOT> <2:NOUN/root>(Biologe)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:SCONJ/mark>(weil) <2:PRON/nsubj>(es) <3:VERB/root>(wird) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - flat
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:DET/nsubj>(dein) <ROOT> <3:PROPN/nsubj>(Style)
    <4:PROPN/flat>(grade) <5:NOUN/obj>(Risse) <6:VERB/root>(zeigt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/root>(Keiner) <2:PRON/appos>(der) <3:ADV/advmod>(hier) <ROOT> <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADP/case>(als) <4:PRON/root>(die)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 8
    - mark
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - obj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(schlag) <3:PRON/obj>(dich) <ROOT> <4:SCONJ/mark>(als)
    <5:PRON/nsubj>(dich) <6:PROPN/obj>(Azad) <7:ADV/advmod>(schon) <8:VERB/root>(geschlagen)
    <9:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  sentence: <1:ADV/advmod>(Heute) <2:AUX/root>(sind) <3:DET/det>(die) <4:NOUN/nsubj>(Huren)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:VERB/root>(Mach) <2:PART/advmod>(nicht) <3:ADP/compound:prt>(auf) <ROOT>
    <4:PROPN/root>(Stecher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: <1:DET/det>(ein) <2:ADV/root>(sehr) <ROOT> <3:NOUN/root>(Terrorist) <5:X/appos>(Nein)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 6
    - obj
  sentence: <1:ADV/advmod>(Deswegen) <2:AUX/aux>(ist) <3:PRON/obj>(was) <4:PRON/nsubj>(wir)
    <5:ADV/advmod>(hier) <6:VERB/root>(gemacht) <7:AUX/aux>(haben) <8:ADV/advmod>(noch)
    <9:ADV/advmod>(mal) <10:DET/det>(ne) <11:NOUN/obj>(Stufe) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - ccomp
  sentence: "<1:SCONJ/root>(da) <2:PRON/nsubj>(ich) <ROOT> <3:VERB/root>(ballern)\
    \ <4:AUX/aux>(k\xF6nnte) <5:SCONJ/mark>(wie) <6:PRON/nsubj>(ich) <7:NOUN/obj>(s)\
    \ <8:ADV/advmod>(jetzt) <9:VERB/ccomp>(tue)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - mark
  - !!python/tuple
    - 7
    - 4
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:NOUN/obl>(Nachhinein) <4:VERB/root>(merk)
    <5:PRON/nsubj>(ich) <6:SCONJ/mark>(dass) <7:PRON/nsubj>(das) <8:DET/obj>(ein)
    <ROOT> <9:NOUN/root>(Schritt) <10:AUX/cop>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:AUX/root>(bin) <3:DET/det>(ein) <4:ADV/advmod>(\xFC\
    belst) <ROOT> <5:NOUN/root>(Mensch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(gab) <3:ADV/advmod>(nie) <4:DET/obj>(einen)
    <5:PRON/nsubj>(der) <ROOT> <6:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - parataxis
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(tanzt) <3:ADV/advmod>(nackt) <4:DET/det>(aufm)
    <5:PROPN/obj>(ChristopherStreetday) <6:PRON/nsubj>(ich) <7:VERB/parataxis>(mach)
    <8:ADV/advmod>(ne) <9:NOUN/obj>(Party) <ROOT> <10:ADP/case>(als) <11:DET/det>(die)
    <12:NOUN/root>(Loveparade)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 8
    - flat
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADV/advmod>(doch) <ROOT> <4:NOUN/root>(Kiffer)
    <5:CCONJ/cc>(und) <6:AUX/cop>(war) <7:ADV/advmod>(gestern) <8:PROPN/conj>(heavy)
    <9:PROPN/flat>(stoned)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - aux
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/root>(Noch) <ROOT> <2:PRON/nsubj>(Sie) <3:CCONJ/cc>(und) <4:DET/det:poss>(ihre)
    <5:NOUN/conj>(Kolleg) <6:ADV/advmod>(innen) <7:AUX/aux>(haben) <8:VERB/root>(errechnet)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cop
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - det
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: <1:AUX/cop>(ist) <2:PRON/nsubj>(es) <3:ADV/advmod>(noch) <4:DET/det>(ein)
    <5:ADV/root>(bisschen) <ROOT> <6:SCONJ/root>(weil) <7:DET/det>(die) <8:ADJ/advmod>(wahrscheinlich)
    <9:ADJ/advmod>(deutlich) <10:ADV/compound:prt>(weiter)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 5
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 9
    - flat
  sentence: "<1:PRON/nsubj>(Ihr) <2:AUX/aux>(m\xFCsstet) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(einmal)\
    \ <5:VERB/root>(sagen) <6:PRON/nsubj>(es) <7:AUX/cop>(ist) <8:DET/obj>(ein) <ROOT>\
    \ <9:PROPN/root>(Loot) <11:PROPN/flat>(Slasher)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 15
    - obj
  - !!python/tuple
    - 11
    - 15
    - nsubj
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 15
    - xcomp
  - !!python/tuple
    - 15
    - 9
    - acl
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(schon) <4:DET/obj>(ein)
    <ROOT> <5:NOUN/nsubj>(Typ) <6:PRON/nsubj>(ich) <7:AUX/aux>(hab) <8:ADV/advmod>(einfach)
    <9:PRON/root>(das) <10:PRON/obj>(was) <11:PRON/nsubj>(man) <12:ADP/case>(zu) <13:DET/det>(dem)
    <14:VERB/xcomp>(leben) <15:VERB/acl>(braucht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <ROOT> <3:ADP/case>(als) <4:DET/det>(der)
    <5:PROPN/amod>(motherfuckin') <6:PROPN/root>(Standard)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:VERB/root>(Wird) <2:DET/det>(ein) <3:ADV/advmod>(bisschen) <ROOT> <4:CCONJ/cc>(aber)
    <5:VERB/root>(passt) <6:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 10
    - parataxis
  - !!python/tuple
    - 14
    - 15
    - case
  - !!python/tuple
    - 15
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 13
    - compound:prt
  sentence: "<1:DET/det>(die) <2:NOUN/nsubj>(shoppen) <3:ADV/advmod>(dann) <4:AUX/cop>(ist)\
    \ <5:ADV/root>(halt) <ROOT> <6:PROPN/nsubj>(Ballermann) <7:ADV/advmod>(so) <8:CCONJ/cc>(oder)\
    \ <9:ADV/conj>(so) <10:ADJ/root>(hei\xDF) <11:AUX/cop>(sind) <12:ADV/advmod>(wie)\
    \ <13:VERB/parataxis>(passen) <14:CCONJ/case>(wie) <15:PRON/nsubj>(Sie) <16:ADP/compound:prt>(zu)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - appos
  sentence: <1:PRON/nsubj>(was) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Anwalt) <5:X/appos>(wouh)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advcl
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - obj
  sentence: <1:VERB/advcl>(Passt) <2:ADV/advmod>(mal) <3:ADP/case>(auf) <4:PRON/obl>(es)
    <5:VERB/root>(geht) <6:ADV/advmod>(noch) <7:DET/det>(eine) <8:NOUN/obj>(Runde)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - obl
  - !!python/tuple
    - 11
    - 7
    - advmod
  sentence: <1:PROPN/nsubj>(Thomas) <2:VERB/root>(macht) <3:PRON/obj>(mich) <4:VERB/xcomp>(verlegen)
    <5:CCONJ/cc>(Und) <6:PRON/nsubj>(das) <7:VERB/conj>(wird) <8:ADP/case>(in) <9:DET/det>(der)
    <10:NOUN/obl>(Disco) <11:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - ccomp
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/obj>(Was) <2:AUX/aux>(w\xFCrdest) <3:PRON/nsubj>(du) <4:ADV/advmod>(denn)\
    \ <5:VERB/ccomp>(sagen) <6:VERB/root>(Ist) <7:DET/det>(die) <8:NOUN/obj>(Jagd)\
    \ <9:DET/obj>(ein) <10:ADP/compound:prt>(zu) <ROOT> <11:NOUN/root>(Eingriff)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PROPN/root>(Wow) <3:PRON/nsubj>(was) <4:INTJ/appos>(f\xFCrn) <ROOT>\
    \ <5:NOUN/root>(Shit)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - cop
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:INTJ/root>(Sag) <2:PRON/nsubj>(du) <3:AUX/cop>(w\xE4rst) <4:DET/dep>(ein)\
    \ <ROOT> <5:NOUN/root>(Gangster)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/root>(ma') <2:X/advmod>(ein') <3:PRON/appos>(der) <ROOT> <4:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(Du) <ROOT> <2:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(Kein) <ROOT> <2:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cc
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - conj
  sentence: <1:NUM/root>('87) <2:CCONJ/cc>(und) <3:ADV/advmod>(noch) <4:ADV/conj>(zehnmal)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - xcomp
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - xcomp
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 5
    - advmod
  sentence: <1:ADV/advmod>(Na) <2:ADV/advmod>(gut) <3:DET/root>(ein) <ROOT> <4:NOUN/xcomp>(Pianist)
    <5:VERB/root>(wird) <6:PROPN/xcomp>(Cloud) <7:ADV/advmod>(evtl) <8:PART/advmod>(nicht)
    <9:ADV/advmod>(mehr)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - advcl
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/aux>(kannst) <3:PART/advmod>(nich) <4:VERB/root>(aufh\xF6\
    rn) <6:SCONJ/mark>(denn) <7:PRON/nsubj>(es) <8:VERB/advcl>(wird) <ROOT> <9:ADP/case>(mit)\
    \ <10:DET/det>(jeden) <11:NOUN/root>(kick)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - appos
  sentence: <1:ADV/advmod>(Je) <2:ADJ/root>(blasser) <4:ADV/advmod>(je) <ROOT> <5:ADV/advmod>(je)
    <6:ADJ/root>(oller) <8:ADV/advmod>(je) <9:ADJ/appos>(doller)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(Weil's) <2:ADV/root>(immer) <ROOT> <3:AUX/root>(wird)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(kein) <ROOT> <4:NOUN/root>(Kerl)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:AUX/cop>(Bin) <2:PRON/nsubj>(ich) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Player)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  sentence: <1:PRON/nsubj>(wer) <2:AUX/root>(will) <ROOT> <3:NOUN/root>(Araber) <4:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advcl
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(kein) <ROOT> <4:NOUN/root>(Rapper)
    <5:SCONJ/mark>(weil) <6:PRON/nsubj>(du) <7:ADJ/advmod>(besser) <8:VERB/advcl>(kiffst)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 6
    - advcl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(Denn) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(es) <4:NOUN/obj>(Hektik)\
    \ <5:VERB/advcl>(gibt) <6:VERB/root>(drohen) <7:PRON/nsubj>(sie) <8:ADP/compound:prt>(mit)\
    \ <ROOT> <9:NOUN/root>(Schei\xDFe)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det:poss>(Deine) <2:NOUN/nsubj>(Ehefrau) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)\
    \ <5:ADV/root>(\u0435in) <ROOT> <6:PROPN/root>(Rubin)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Dschungel)
    <5:ADV/advmod>(hier)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - dep
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - obl
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 4
    - advmod
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - nsubj
  - !!python/tuple
    - 13
    - 4
    - conj
  - !!python/tuple
    - 14
    - 13
    - obj
  sentence: "<1:DET/root>(ein) <ROOT> <2:NOUN/dep>(fehler) <3:ADV/advmod>(wieder)\
    \ <4:VERB/root>(verlassen) <5:ADP/case>(nach) <6:DET/det>(dem) <7:NOUN/obl>(essen)\
    \ <8:ADV/advmod>(doch) <9:ADV/advmod>(bananen) <10:ADV/advmod>(eigentlich) <11:CCONJ/cc>(oder)\
    \ <12:PRON/nsubj>(ich) <13:VERB/conj>(wei\xDF) <14:PRON/obj>(es)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(fand) <3:PRON/nsubj>(ich) <4:PRON/obj>(es)
    <5:ADV/advmod>(umso) <ROOT> <6:SCONJ/mark>(dass) <7:PRON/nsubj>(du) <8:VERB/root>(sagst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:DET/det>(Das) <2:NOUN/nsubj>(Problem) <3:VERB/root>(wird) <4:ADV/advmod>(immer)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  sentence: <1:DET/nsubj>(Kein) <2:ADJ/root>(richtig) <ROOT> <3:NOUN/root>(Fisch)
    <4:ADP/case>(mit) <5:NOUN/nmod>(Zaster)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(diese) <3:NOUN/nsubj>(Ausschl\xE4ge) <4:AUX/root>(sind)\
    \ <ROOT> <5:ADV/advmod>(wie) <6:PRON/nsubj>(du) <7:VERB/root>(sagst) <8:ADP/case>(von)\
    \ <9:NOUN/obl>(Emotionen)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:AUX/cop>(Ist) <2:PRON/nsubj>(das) <3:ADV/advmod>(noch) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Moment)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - expl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: "<1:ADP/case>(Bei) <2:DET/det>(den) <3:NOUN/obl>(W\xE4chtern) <4:AUX/root>(ist)\
    \ <5:PRON/expl>(es) <6:ADV/advmod>(sogar) <7:ADV/advmod>(noch) <8:ADV/advmod>(mal)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(war) <3:ADV/advmod>(nie) <4:DET/obj>(ein)
    <ROOT> <5:X/root>(G')
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - aux
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 6
    - acl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(sollte) <ROOT> <3:AUX/aux>(werden) <4:ADP/case>(als)\
    \ <5:VERB/acl>(erwartet) <6:VERB/root>(erfahre) <7:PRON/nsubj>(ich) <8:ADV/advmod>(sp\xE4\
    ter)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - cop
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - mark
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(die) <3:NOUN/nsubj>(Dimensionen) <4:AUX/cop>(sind)
    <5:DET/root>(viel) <ROOT> <6:SCONJ/mark>(als) <7:PRON/nsubj>(wir) <8:VERB/root>(dachten)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Galaxie) <3:AUX/root>(ist) <4:DET/det>(ein)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Ort)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 9
    - ccomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - obl
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(so) <3:DET/root>(ein) <ROOT> <4:NOUN/nsubj>(Reichtum)
    <5:PRON/nsubj>(das) <6:AUX/aux>(hat) <7:PRON/obj>(sich) <8:VERB/ccomp>(gezeigt)
    <9:VERB/root>(kommt) <10:ADV/advmod>(auch) <11:ADP/case>(zu) <12:DET/det>(einem)
    <13:NOUN/obl>(Preis)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - aux
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - obj
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Gr\xFCbeln) <3:AUX/aux>(kann) <4:DET/obj>(einen)\
    \ <5:ADP/root>(vor) <ROOT> <6:NOUN/nsubj>(Angst) <7:NOUN/obj>(Trauer) <8:CCONJ/cc>(oder)\
    \ <9:NOUN/conj>(Zorn) <10:VERB/root>(sch\xFCtzen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 13
    - advcl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 13
    - obl
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 13
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 13
    - obl
  - !!python/tuple
    - 12
    - 13
    - mark
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(noch) <3:DET/root>(viel) <ROOT> <4:VERB/advcl>(wars)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(mich) <7:ADP/case>(auf) <8:ADV/advmod>(einmal)\
    \ <9:ADP/case>(\xFCber) <10:NUM/nummod>(200) <11:NOUN/obl>(Frauen) <12:PART/mark>(zu)\
    \ <13:VERB/root>(sehen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(Bei) <2:NOUN/obl>(Schweinen) <3:AUX/root>(ist) <4:PRON/nsubj>(es)\
    \ <5:ADV/advmod>(\xFCbrigens) <6:ADV/advmod>(noch) <ROOT> <7:ADP/case>(als) <8:ADP/case>(bei)\
    \ <9:NOUN/root>(Rindern)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - mark
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - advcl
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(mich)\
    \ <5:ADV/advmod>(schon) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Fortschritt) <8:SCONJ/mark>(weil)\
    \ <9:PRON/nsubj>(ich) <10:ADV/advmod>(echt) <11:ADJ/advcl>(jahrelang)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - obj
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 7
    - acl
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - aux
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 7
    - conj
  - !!python/tuple
    - 11
    - 12
    - case
  - !!python/tuple
    - 12
    - 13
    - nmod
  - !!python/tuple
    - 13
    - 7
    - conj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:NOUN/obj>(Veranstaltung) <2:PART/mark>(zu) <3:VERB/acl>(fahren) <4:ADV/advmod>(Dann)\
    \ <5:AUX/aux>(bin) <6:PRON/nsubj>(ich) <7:VERB/root>(hingefahren) <8:CCONJ/cc>(und)\
    \ <9:PRON/nsubj>(es) <10:AUX/conj>(war) <11:ADP/case>(f\xFCr) <12:PRON/nmod>(mich)\
    \ <13:DET/conj>(ein) <ROOT> <14:NOUN/root>(Kulturschock)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 4
    - parataxis
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:PRON/obj>(Was) <2:AUX/aux>(soll) <3:PRON/nsubj>(ich) <4:VERB/root>(sagen)
    <6:PRON/nsubj>(Es) <7:VERB/parataxis>(wird) <8:ADV/advmod>(einfach) <9:ADV/advmod>(immer)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <1:NOUN/root>(Mann) <3:ADV/advmod>(immer) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - aux
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(du) <3:VERB/root>(merkst) <4:ADV/advmod>(okay)
    <5:PRON/nsubj>(ich) <6:AUX/aux>(werde) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - advmod
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Zahlen) <3:AUX/root>(sind) <4:ADV/advmod>(ja)
    <5:ADV/advmod>(noch) <ROOT> <6:PRON/nsubj>(das) <7:AUX/root>(sind) <8:ADV/advmod>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - cc
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - nummod
  - !!python/tuple
    - 8
    - 2
    - nmod
  sentence: "<1:PROPN/root>(Ulm) <ROOT> <2:NOUN/root>(Au\xDFenseiter) <3:CCONJ/cc>(aber)\
    \ <4:ADV/advmod>(schon) <5:ADP/case>(an) <6:DET/det>(dem) <7:NUM/nummod>(4) <8:NOUN/nmod>(Spieltag)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - obj
  - !!python/tuple
    - 10
    - 8
    - mark
  - !!python/tuple
    - 11
    - 8
    - compound:prt
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(es) <3:VERB/root>(kam) <4:DET/obj>(viel)
    <ROOT> <5:SCONJ/mark>(denn) <6:NUM/nummod>(hunderte) <7:NOUN/nsubj>(Engineers)
    <8:VERB/root>(faselten) <9:PRON/obj>(irgendwas) <10:ADP/mark>(von) <11:ADP/compound:prt>(wegen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:DET/det:poss>(dein) <2:NOUN/nsubj>(Million\xE4r) <3:VERB/root>(macht)\
    \ <4:ADV/advmod>(ein'n) <5:ADP/compound:prt>(auf) <ROOT> <6:NOUN/root>(Berliner)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:DET/nsubj>(keiner) <2:ADP/case>(von) <3:PRON/obl>(euch) <4:VERB/root>(hustlet)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 7
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obl
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/root>(bin) <3:ADP/case>(wie) <4:DET/obl>(ein)\
    \ <ROOT> <5:NOUN/root>(Hund) <6:CCONJ/cc>(und) <7:VERB/conj>(war) <8:ADJ/advmod>(lange)\
    \ <9:ADP/case>(in) <10:DET/det>(dem) <11:NOUN/obl>(K\xE4fig)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(hier) <3:AUX/root>(ist) <4:PRON/nsubj>(es)
    <ROOT> <5:SCONJ/mark>(als) <6:PRON/nsubj>(es) <7:ADV/advmod>(vorher) <8:ADV/advmod>(irgendwo)
    <9:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cc
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/root>(Vorbild) <2:CCONJ/cc>(oder) <ROOT> <3:X/root>(G?)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <ROOT> <3:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - nmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(vor) <2:PRON/nmod>(mir) <3:AUX/cop>(war) <4:ADV/advmod>(noch)
    <5:DET/root>(keiner) <ROOT> <7:DET/root>(Keiner)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:PRON/nsubj>(du) <3:AUX/root>(bist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - acl
  - !!python/tuple
    - 11
    - 10
    - cop
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(denkst) <4:PRON/nsubj>(du)
    <5:AUX/cop>(bist) <6:DET/obj>(ein) <ROOT> <7:NOUN/root>(Rapper) <8:PRON/nsubj>(der)
    <9:ADV/advmod>(sehr) <10:ADJ/acl>(hart) <11:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Ergebnis) <3:ADP/case>(von) <4:DET/det>(dem)\
    \ <5:NOUN/nmod>(\xD6l) <6:AUX/cop>(ist) <7:ADV/advmod>(echt) <8:DET/root>(ein)\
    \ <ROOT> <9:NOUN/root>(Unterschied)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 11
    - nmod
  sentence: <1:PRON/nsubj>(Was) <2:PRON/nsubj>(du) <3:VERB/root>(siehst) <4:AUX/aux>(is)
    <5:DET/obj>(ein) <ROOT> <6:NOUN/nsubj>(Mann) <7:VERB/root>(zerbrech) <8:DET/det>(die)
    <9:NOUN/obj>(Egos) <10:ADP/case>(von) <11:NOUN/nmod>(MCs) <12:ADP/case>(wie) <13:NOUN/nmod>(Porzellan)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(nur) <2:ADV/advmod>(noch) <3:ADJ/amod>('n) <4:NOUN/root>(St\xFC\
    ck) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(nur) <2:ADV/advmod>(noch) <3:ADJ/amod>('n) <4:NOUN/root>(St\xFC\
    ck) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - obl
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 11
    - flat
  - !!python/tuple
    - 13
    - 7
    - compound:prt
  sentence: "<1:ADP/case>(\xFCber) <2:DET/det>(eine) <3:NOUN/nmod>(R\xFCstung) <4:PRON/nsubj>(die)\
    \ <5:ADV/advmod>(noch) <6:DET/root>(viel) <ROOT> <7:AUX/root>(ist) <8:ADP/case>(als)\
    \ <9:PRON/obl>(die) <10:DET/det>(der) <11:PROPN/nmod>(Republic) <12:PROPN/flat>(Commandos)\
    \ <13:ADP/compound:prt>(\xFCber)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 12
    - nmod
  - !!python/tuple
    - 10
    - 12
    - cop
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(muss) <3:PRON/obl:arg>(mir) <4:ADV/advmod>(auch)
    <5:ADV/advmod>(immer) <6:ADV/advmod>(sehr) <7:DET/obj>(viel) <8:ADP/case>(bei)
    <9:PRON/nmod>(ihm) <10:AUX/cop>(ist) <11:PRON/nsubj>(es) <12:ADJ/advmod>(deutlich)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:DET/det>(den) <3:NOUN/obl>(Herren) <4:AUX/root>(ist)
    <5:PRON/nsubj>(es) <ROOT> <6:ADP/case>(als) <7:ADP/case>(an) <8:DET/det>(dem)
    <9:NOUN/root>(Anfang)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 10
    - obl
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 10
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/mark>(Denn) <2:PRON/nsubj>(die) <3:NOUN/root>(geh'n) <ROOT> <4:ADP/case>(auf)
    <5:DET/det>(die) <6:NOUN/obl>(Eier) <7:ADP/case>(als) <8:ADP/case>(ohne) <9:NOUN/obl>(Sattel)
    <10:VERB/root>(rumzureiten)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - dep
  - !!python/tuple
    - 7
    - 9
    - mark
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/advmod>(Ja) <2:DET/det>(dieser) <3:NOUN/root>(Typ) <4:ADV/advmod>(hier)
    <5:X/dep>(is) <ROOT> <7:SCONJ/mark>(als) <8:PRON/nsubj>(du) <9:VERB/root>(gedacht)
    <10:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:NOUN/root>(Abstand) <ROOT> <3:ADP/case>(als) <4:DET/det>(der)
    <5:ADJ/amod>(ganze) <6:NOUN/root>(Rest)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(du) <ROOT> <2:NOUN/root>(Artist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:SCONJ/root>(da) <2:PRON/nsubj>(ich) <ROOT> <3:SCONJ/mark>(als) <4:DET/det>(der)
    <5:NOUN/nsubj>(Tod) <6:AUX/root>(bin)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - obj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - ccomp
  - !!python/tuple
    - 7
    - 3
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Hinlaufen) <2:NOUN/obj>(Taste) <3:VERB/root>(dr\xFCcken)\
    \ <4:X/advmod>(tada) <5:PRON/nsubj>(Du) <6:AUX/ccomp>(bist) <7:DET/obj>(ein) <ROOT>\
    \ <8:NOUN/root>(Meisterdetektiv)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(klang) <3:ADV/advmod>(damals) <4:ADV/advmod>(vielleicht)
    <5:ADP/compound:prt>(nach) <ROOT> <6:NOUN/root>(Action)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obl:arg
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 2
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Mutterficker) <2:VERB/root>(zeig) <3:PRON/obl:arg>(mir)
    <4:ADV/advmod>(bitte) <5:DET/det>(eine) <6:NOUN/obj>(Crew) <7:PRON/obj>(die) <ROOT>
    <8:AUX/root>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 4
    - appos
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Dann) <2:VERB/root>(zahl) <3:ADV/advmod>(mal) <4:NOUN/nsubj>(Viertel)
    <5:PROPN/appos>(Mio) <6:NOUN/appos>(promo) <7:ADP/case>(aus) <8:ADJ/amod>(eigner)
    <9:NOUN/obl>(Tasche) <10:PRON/appos>(du) <ROOT> <11:NOUN/root>(Macher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <4:NOUN/root>(Sex)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:AUX/cop>(Bin) <2:DET/det>(kein) <3:NOUN/root>(Chef) <4:CCONJ/cc>(und)
    <ROOT> <5:NOUN/root>(Boss)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - aux
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  sentence: "<1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:ADV/advmod>(nochmal) <4:VERB/root>(zur\xFC\
    ckgeht) <5:PRON/nsubj>(es) <6:AUX/aux>(ist) <7:ADV/advmod>(eigentlich) <8:ADV/advmod>(noch)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:DET/det>(ein) <4:ADV/advmod>(ziemlich)\
    \ <ROOT> <5:NOUN/root>(Versto\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - parataxis
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - ccomp
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 10
    - obl
  sentence: "<1:ADJ/parataxis>(schlimm) <2:AUX/aux>(darf) <3:PRON/nsubj>(man) <4:ADV/advmod>(gar)\
    \ <5:PART/advmod>(nicht) <6:VERB/root>(sagen) <7:PRON/nsubj>(Was) <8:PRON/nsubj>(ich)\
    \ <9:DET/ccomp>(viel) <ROOT> <10:VERB/root>(finde) <11:AUX/cop>(ist) <12:ADP/case>(wie)\
    \ <13:ADP/case>(in) <14:DET/det>(den) <15:NOUN/obl>(St\xE4dten)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - mark
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 16
    - cc
  - !!python/tuple
    - 12
    - 16
    - mark
  - !!python/tuple
    - 13
    - 16
    - nsubj
  - !!python/tuple
    - 14
    - 16
    - obj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 10
    - advcl
  sentence: <1:PART/advmod>(nicht) <2:SCONJ/mark>(ob) <3:PRON/nsubj>(du) <4:PRON/nsubj>(das)
    <5:VERB/csubj>(kennst) <6:PRON/nsubj>(Das) <7:VERB/root>(war) <8:ADV/advmod>(schon)
    <9:DET/obj>(ein) <ROOT> <10:NOUN/root>(Abend) <11:CCONJ/cc>(Und) <12:SCONJ/mark>(wenn)
    <13:PRON/nsubj>(ich) <14:PRON/obj>(das) <15:ADV/advmod>(heute) <16:VERB/advcl>(sehe)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nummod
  - !!python/tuple
    - 2
    - 3
    - nmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - conj
  - !!python/tuple
    - 7
    - 3
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:NUM/nummod>(Zwanzig) <2:NOUN/nmod>(Jahre) <3:NOUN/root>(Rap) <4:CCONJ/cc>(und)
    <5:DET/det>(jedes) <6:NOUN/conj>(Mal) <7:ADV/dep>(ein) <ROOT> <8:NOUN/root>(Part)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 3
    - obl
  - !!python/tuple
    - 13
    - 22
    - nsubj
  - !!python/tuple
    - 14
    - 22
    - aux
  - !!python/tuple
    - 15
    - 22
    - obj
  - !!python/tuple
    - 16
    - 22
    - aux
  - !!python/tuple
    - 17
    - 22
    - obj
  - !!python/tuple
    - 18
    - 22
    - nsubj
  - !!python/tuple
    - 19
    - 22
    - advmod
  - !!python/tuple
    - 20
    - 21
    - case
  - !!python/tuple
    - 21
    - 22
    - obl
  - !!python/tuple
    - 22
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(auch) <3:SCONJ/root>(wenn) <4:PRON/nsubj>(das)\
    \ <5:ADP/case>(auf) <6:DET/det>(den) <7:ADJ/amod>(ersten) <8:NOUN/obl>(Blick)\
    \ <9:ADV/advmod>(jetzt) <10:PART/advmod>(nicht) <11:ADV/advmod>(so) <12:DET/obl>(ein)\
    \ <ROOT> <13:PROPN/nsubj>(Flex) <14:AUX/aux>(ist) <15:PRON/obj>(ihr) <16:AUX/aux>(m\xFC\
    sst) <17:PRON/obj>(euch) <18:PRON/nsubj>(das) <19:ADV/advmod>(mal) <20:ADP/case>(vor)\
    \ <21:NOUN/obl>(Augen) <22:VERB/root>(f\xFChren)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Sie) <2:AUX/aux>(haben) <3:VERB/root>(gesagt) <4:NOUN/obj>(Sch\xF6\
    nheitsarbeit) <5:PRON/nsubj>(Das) <6:AUX/cop>(ist) <7:ADV/advmod>(ja) <8:DET/parataxis>(ein)\
    \ <ROOT> <9:NOUN/root>(Begriff)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 4
    - obl
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - cc
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - det
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 4
    - conj
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - nmod
  - !!python/tuple
    - 13
    - 15
    - advmod
  - !!python/tuple
    - 14
    - 15
    - cop
  - !!python/tuple
    - 15
    - 4
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:ADP/case>(f\xFCr) <2:PRON/obl>(sich) <3:ADV/advmod>(selbst) <4:VERB/root>(sorgen)\
    \ <5:CCONJ/cc>(und) <6:ADV/advmod>(dann) <7:ADP/case>(in) <8:DET/det>(die) <9:ADJ/amod>(teuerste)\
    \ <10:NOUN/conj>(Stadt) <11:DET/det>(der) <12:NOUN/nmod>(Welt) <13:ADV/advmod>(Also)\
    \ <14:AUX/cop>(ist) <15:DET/conj>(ein) <ROOT> <16:NOUN/root>(Kontrast)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/root>(so) <ROOT> <2:DET/det>(die) <3:NOUN/root>(Party)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:ADV/root>(noch) <ROOT> <2:VERB/root>(geht's) <3:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:PRON/obl>(mich) <3:AUX/root>(war) <4:PRON/nsubj>(das)\
    \ <5:ADV/advmod>(einfach) <6:ADV/advmod>(nur) <7:DET/det>(ein) <8:ADV/advmod>(ziemlich)\
    \ <ROOT> <9:NOUN/root>(Trip)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(noch) <ROOT> <4:DET/det>(die)\
    \ <5:NOUN/root>(Observationsma\xDFnahmen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 1
    - appos
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:NOUN/root>(Regel) <2:NOUN/appos>(Nummer) <3:NUM/appos>(4) <5:PRON/nsubj>(Du)
    <6:VERB/appos>(bist) <7:ADV/advmod>(erst) <8:DET/obl>(ein) <ROOT> <9:PROPN/root>(Gee)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 1
    - advmod
  sentence: <1:VERB/root>(find) <2:PRON/nsubj>(ich) <3:NOUN/obj>(s) <4:ADV/advmod>(immer)
    <5:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(geht) <3:ADV/advmod>(aber) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(war) <3:ADV/advmod>(schon) <4:DET/det>(ein)
    <5:ADV/advmod>(ziemlich) <ROOT> <6:NOUN/root>(Moment) <7:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADV/root>(\xFCbelst) <ROOT> <2:NOUN/root>(Schei\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 8
    - appos
  - !!python/tuple
    - 10
    - 9
    - flat
  - !!python/tuple
    - 11
    - 8
    - appos
  sentence: <1:ADP/case>(Auf) <2:DET/det>(jeden) <3:NOUN/root>(Fall) <ROOT> <4:CCONJ/cc>(und)
    <5:ADJ/root>(besser) <6:ADP/case>(als) <7:DET/det:poss>(dein) <8:NOUN/nmod>(Album)
    <9:PRON/appos>(du) <10:PROPN/flat>(Motherfucker) <11:NOUN/appos>(Alter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - flat
  sentence: "<1:DET/det:poss>(dein) <2:NOUN/nsubj>(L\xE4cheln) <3:AUX/cop>(ist) <4:ADV/root>(noch)\
    \ <ROOT> <5:ADP/case>(in) <6:PROPN/root>(Real) <7:PROPN/flat>(Life)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 7
    - advmod
  - !!python/tuple
    - 3
    - 7
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/advmod>(auch) <2:ADJ/advmod>(nat\xFCrlich) <3:SCONJ/mark>(weil)\
    \ <4:DET/det>(die) <5:NOUN/nsubj>(Konkurrenz) <6:ADV/advmod>(auch) <7:DET/root>(viel)\
    \ <ROOT> <8:AUX/root>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(wir) <2:AUX/root>(sind) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/nsubj>(viele) <2:AUX/root>(wollen) <ROOT> <3:AUX/root>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:SCONJ/root>(weil) <3:PRON/nsubj>(ich) <4:ADV/advmod>(einfach)
    <ROOT> <5:NOUN/root>(flow)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/root>(oh) <2:PRON/nsubj>(was) <3:ADP/case>(f\xFCr) <4:DET/nmod>(ein)\
    \ <ROOT> <5:NOUN/root>(Tag)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADV/advmod>(Jetzt) <2:ADV/advmod>(mal) <3:ADV/advmod>(ehrlich) <4:X/root>(dis)\
    \ <5:AUX/cop>(is) <ROOT> <7:ADJ/root>(bl\xF6dsinn)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nsubj
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 11
    - 9
    - appos
  sentence: <1:ADV/advmod>(Irgendwie) <2:AUX/root>(ist) <3:ADV/advmod>(ja) <4:ADV/advmod>(mittlerweile)
    <5:DET/det>(jede) <6:NOUN/nsubj>(Kartoffel) <7:ADV/advmod>(auch) <ROOT> <9:NOUN/root>(Gangster)
    <11:X/appos>(wow)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Faktor)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 2
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(treffe) <3:ADV/advmod>(jetzt) <4:DET/det>(eine)
    <5:NOUN/obj>(Frau) <6:PRON/obj>(die) <7:PRON/nsubj>(das) <8:ADV/advmod>(noch)
    <9:ADV/advmod>(tausendmal) <ROOT> <10:VERB/root>(erlebt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:VERB/root>(Bin) <2:PART/advmod>(nicht) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:ADV/advmod>(einfach) <4:ADV/root>(bisschen)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 7
    - csubj
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(was) <3:ADV/advmod>(da) <4:ADV/advmod>(noch)
    <5:VERB/csubj>(kommen) <6:AUX/aux>(wird) <7:AUX/root>(ist) <8:ADV/advmod>(dann)
    <9:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - advmod
  - !!python/tuple
    - 2
    - 5
    - cc
  - !!python/tuple
    - 3
    - 5
    - mark
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - advcl
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 7
    - xcomp
  sentence: "<1:ADV/advmod>(Ja) <2:CCONJ/cc>(und) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(ihr)\
    \ <5:AUX/advcl>(wollt) <6:ADV/advmod>(dann) <7:VERB/root>(werden) <8:DET/det>(die)\
    \ <9:NOUN/nsubj>(Feuerb\xE4lle) <10:ADV/advmod>(noch) <11:DET/xcomp>(viel) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:DET/det>(eine) <2:NOUN/root>(Sinneserweiterung) <3:CCONJ/cc>(aber)
    <4:PRON/nsubj>(es) <5:VERB/conj>(geht) <6:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - aux
  - !!python/tuple
    - 3
    - 9
    - mark
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/root>(Noch) <ROOT> <2:AUX/aux>(ist) <3:SCONJ/mark>(dass) <4:DET/det>(der)
    <5:NOUN/nsubj>(Affe) <6:ADP/case>(nach) <7:DET/det>(einer) <8:NOUN/obl>(Zeit)
    <9:VERB/root>(merkte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - mark
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 3
    - nsubj
  - !!python/tuple
    - 8
    - 7
    - appos
  - !!python/tuple
    - 9
    - 8
    - appos
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/root>(noch) <ROOT> <3:AUX/root>(ist) <4:ADJ/advmod>(eigentlich)
    <5:SCONJ/mark>(dass) <6:ADV/advmod>(auch) <7:PROPN/nsubj>(Ratte) <8:PROPN/appos>(Nr)
    <9:PROPN/appos>(1)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - obl:arg
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 4
    - obl
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 11
    - mark
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/obl:arg>(denen) <2:PRON/nsubj>(man) <3:ADV/advmod>(ewig) <4:VERB/root>(nachjagen)\
    \ <5:AUX/aux>(kann) <6:ADP/case>(um) <7:DET/det:poss>(sein) <8:NOUN/obl>(M\xE4\
    nneken) <9:ADV/advmod>(noch) <ROOT> <10:PART/mark>(zu) <11:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(du) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Rapper)
    <5:AUX/cop>(bist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADP/root>(um) <ROOT> <2:PART/mark>(zu) <3:VERB/root>(wirken)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - appos
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - nmod
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 1
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - mark
  - !!python/tuple
    - 12
    - 10
    - advmod
  - !!python/tuple
    - 13
    - 10
    - advmod
  sentence: <1:SCONJ/root>(Dass) <2:PROPN/nsubj>(Turok) <3:PROPN/appos>(2) <4:ADP/case>(in)
    <5:DET/det>(dem) <6:PROPN/nmod>(HiRes) <8:NOUN/flat>(Modus) <9:ADV/advmod>(noch)
    <ROOT> <10:VERB/root>(ruckelte) <11:ADP/mark>(als) <12:ADV/advmod>(ohnehin) <13:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det:poss
  - !!python/tuple
    - 8
    - 5
    - nmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:PRON/nsubj>(Du) <3:VERB/root>(kannst) <4:DET/det>(die)
    <5:NOUN/obj>(Grafik) <6:ADP/case>(von) <7:DET/det:poss>(deinem) <8:PROPN/nmod>(N64)
    <ROOT> <9:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 4
    - obj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 4
    - advmod
  sentence: "<1:DET/det>(Dieses) <2:ADJ/amod>(krasse) <3:NOUN/nsubj>(Verh\xE4ltnis)\
    \ <4:VERB/root>(betrifft) <5:DET/det>(den) <6:NOUN/obj>(Handel) <7:ADV/advmod>(wieder)\
    \ <8:ADV/advmod>(mal) <9:NOUN/obj>(Kuchen) <10:ADP/case>(gegen) <11:NOUN/nmod>(Kr\xFC\
    mel) <12:CCONJ/cc>(und) <13:ADV/advmod>(noch) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(wird) <3:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 8
    - obl
  - !!python/tuple
    - 13
    - 14
    - case
  - !!python/tuple
    - 14
    - 8
    - obl
  sentence: "<ROOT> <1:ADV/nsubj>(mehr) <2:ADP/case>(als) <3:DET/det>(die) <4:NOUN/nmod>(h\xE4\
    lfte) <5:DET/det>(der) <6:ADJ/amod>(befruchteten) <7:NOUN/nmod>(eizellen) <8:VERB/root>(gehen)\
    \ <9:ADP/case>(vor) <10:DET/det>(der) <11:ADJ/amod>(sechsten) <12:NOUN/obl>(woche)\
    \ <13:ADP/case>(ab) <14:PRON/obl>(die)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - cop
  - !!python/tuple
    - 7
    - 8
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(kommt) <4:ADV/advmod>(noch)
    <ROOT> <5:PRON/nsubj>(Das) <6:AUX/cop>(ist) <7:PROPN/nmod>(Ulis) <8:NOUN/root>(Strahlenschutzanzug)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/root>(desto) <ROOT> <2:AUX/cop>(sind) <3:DET/det>(die) <4:NOUN/root>(Flows)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(es) <2:AUX/root>(wird) <ROOT> <4:X/root>(drip)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - mark
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obl:arg
  - !!python/tuple
    - 5
    - 3
    - cop
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - cop
  sentence: "<1:INTJ/advmod>(Hey) <2:SCONJ/mark>(wie) <3:VERB/root>(gesagt) <4:PRON/obl:arg>(mir)\
    \ <5:AUX/cop>(ist) <6:ADV/advmod>(egal) <7:PRON/nsubj>(was) <8:ADV/advmod>(f\xFC\
    rn) <ROOT> <9:ADJ/root>(gangster) <10:PRON/nsubj>(du) <11:AUX/cop>(bist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cop
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/nsubj>(du) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(R\xE4\
    uber) <5:AUX/cop>(bist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  - !!python/tuple
    - 8
    - 7
    - flat
  sentence: <1:PRON/root>(Dein) <ROOT> <2:NOUN/nsubj>(Freund) <3:AUX/cop>(ist) <4:DET/det>(eine)
    <5:PROPN/root>(Pussy) <7:PROPN/appos>(Hello) <8:PROPN/flat>(Kitty)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT> <3:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - aux
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Alle) <2:DET/nsubj>(anderen) <3:AUX/cop>(sind) <4:DET/root>(viel)\
    \ <ROOT> <5:AUX/aux>(k\xF6nnen) <6:PRON/nsubj>(das) <7:ADJ/advmod>(besser) <8:AUX/cop>(sind)\
    \ <9:ADJ/root>(routinierter)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:PROPN/root>(Mo'fucker)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:DET/root>(ein) <ROOT> <2:NOUN/root>(Schei\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - advmod
  sentence: <1:PRON/nsubj>(Was) <2:DET/det>(die) <3:NOUN/nsubj>(Generationen) <4:PRON/obj>(sich)
    <5:ADV/advmod>(gegenseitig) <6:VERB/root>(vorwerfen) <7:AUX/aux>(wird) <8:ADV/advmod>(immer)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(es) <3:VERB/root>(kommt) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 6
    - case
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 1
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/root>(die) <2:PRON/obj>(sich) <3:ADP/case>(mit) <4:NOUN/compound>(Maschinen)
    <6:NOUN/nmod>(Teilen) <7:ADV/advmod>(noch) <ROOT> <8:VERB/root>(machen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 4
    - flat
  sentence: "<1:CCONJ/cc>(Oder) <2:ADV/root>(noch) <ROOT> <3:NOUN/root>(Chemienobelpreistr\xE4\
    ger) <4:PROPN/appos>(Kary) <5:PROPN/flat>(Mullis)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - dep
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - conj
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 15
    - obj
  - !!python/tuple
    - 13
    - 15
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - ccomp
  - !!python/tuple
    - 16
    - 17
    - case
  - !!python/tuple
    - 17
    - 15
    - obl
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT> <4:NOUN/dep>(Fall)\
    \ <5:ADV/advmod>(da) <6:AUX/aux>(hat) <7:PRON/nsubj>(jemand) <8:VERB/root>(gesagt)\
    \ <9:PRON/nsubj>(Ich) <10:VERB/conj>(wei\xDF) <11:PART/advmod>(nicht) <12:PRON/obj>(was)\
    \ <13:PRON/nsubj>(ich) <14:ADV/advmod>(gleich) <15:VERB/ccomp>(tue) <16:ADP/case>(mit)\
    \ <17:PRON/obl>(mir)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 6
    - obj
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 6
    - conj
  - !!python/tuple
    - 12
    - 16
    - dep
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - aux
  - !!python/tuple
    - 15
    - 16
    - nsubj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(habe) <3:PRON/obj>(das) <4:ADV/advmod>(tats\xE4\
    chlich) <5:ADV/advmod>(einmal) <6:VERB/root>(gemacht) <7:PRON/nsubj>(Das) <8:AUX/cop>(war)\
    \ <9:ADV/advmod>(aber) <10:ADV/advmod>(auch) <11:DET/conj>(ein) <ROOT> <12:NOUN/dep>(Fall)\
    \ <13:ADV/advmod>(Da) <14:AUX/aux>(hat) <15:PRON/nsubj>(jemand) <16:VERB/root>(gesagt)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 6
    - obl
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - advmod
  sentence: "<1:CCONJ/cc>(Oder) <2:ADV/advmod>(jetzt) <3:ADP/case>(an) <4:NOUN/obl>(Karneval)\
    \ <5:PRON/nsubj>(das) <6:AUX/root>(war) <7:ADV/advmod>(nat\xFCrlich) <8:ADV/advmod>(noch)\
    \ <9:ADV/advmod>(mal) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(geht) <3:ADV/advmod>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 12
    - advmod
  - !!python/tuple
    - 8
    - 12
    - aux
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - nummod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:ADP/case>(Von) <2:ADV/advmod>(hier) <3:VERB/root>(sieht) <4:NOUN/nsubj>(s)
    <5:ADV/advmod>(noch) <ROOT> <6:ADP/case>(aus) <7:ADV/advmod>(Wie) <8:AUX/aux>(soll)
    <9:PRON/nsubj>(ich) <10:NUM/nummod>(10) <11:NOUN/obj>(Meter) <12:VERB/root>(hochkommen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(ist) <3:ADV/advmod>(schon) <4:PRON/obj>(das)
    <5:VERB/root>(merke) <6:PRON/nsubj>(ich) <7:DET/obj>(ein) <ROOT> <8:NOUN/root>(Spagat)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - obl:arg
  - !!python/tuple
    - 4
    - 5
    - mark
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: "<1:PRON/obj>(Sich) <2:DET/det>(einem) <3:NOUN/obl:arg>(Fernsehteam) <4:PART/mark>(zu)\
    \ <5:VERB/root>(\xF6ffnen) <6:ADV/advmod>(nochmal) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/advmod>(doch) <2:ADV/root>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:INTJ/root>(Komm) <2:CCONJ/cc>(und) <3:VERB/conj>(schlag) <4:PRON/obj>(mich)
    <5:ADV/advmod>(jetzt) <6:PRON/obj>(du) <ROOT> <7:NOUN/root>(Rapper)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(geh) <3:ADP/case>(zu) <4:DET/det>(dem)\
    \ <5:NOUN/obl>(K\xFChlschrank) <6:CCONJ/cc>(und) <7:AUX/conj>(bin) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 3
    - det
  - !!python/tuple
    - 6
    - 3
    - advmod
  sentence: <1:AUX/cop>(ist) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Leidensprozess)
    <4:ADP/case>(in) <5:DET/det>(einem) <6:ADV/advmod>(selbst)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 5
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(ja) <4:DET/root>(ein)\
    \ <ROOT> <5:NOUN/root>(Platz) <6:ADV/advmod>(hier) <7:PRON/nsubj>(Was) <8:AUX/cop>(sind)\
    \ <9:PRON/nsubj>(das) <10:ADP/case>(f\xFCr) <11:NOUN/nmod>(Geb\xE4ude)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - parataxis
  - !!python/tuple
    - 4
    - 5
    - expl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - advmod
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <2:ADJ/parataxis>(spanisch) <4:PRON/expl>(Es) <5:AUX/root>(ist) <6:ADV/advmod>(oft)
    <7:ADV/advmod>(sogar) <8:ADV/advmod>(noch) <ROOT> <9:ADP/case>(als) <10:ADP/case>(in)
    <11:DET/det>(dem) <12:NOUN/root>(Film)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:AUX/root>(ist) <3:ADV/advmod>(oft) <4:ADV/advmod>(sogar)
    <5:ADV/advmod>(noch) <ROOT> <6:ADP/case>(als) <7:ADP/case>(in) <8:DET/det>(dem)
    <9:NOUN/root>(Film)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Druck) <2:ADV/advmod>(noch) <3:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 12
    - advmod
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 12
    - det
  - !!python/tuple
    - 10
    - 12
    - compound
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:DET/root>(viel)
    <ROOT> <6:ADV/advmod>(Nee) <7:PRON/nsubj>(das) <8:AUX/cop>(ist) <9:DET/det>(ne)
    <10:NOUN/compound>(Gaming) <12:NOUN/root>(Sendung)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 6
    - compound
  - !!python/tuple
    - 6
    - 2
    - nmod
  sentence: <1:PRON/root>(Du) <ROOT> <2:NOUN/root>(Angler) <3:ADP/case>(mit) <4:ADJ/amod>('nem)
    <5:NOUN/compound>(Autotune) <6:NOUN/nmod>(Effekt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - xcomp
  sentence: <1:VERB/root>(wurde) <2:ADJ/xcomp>(technisch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  sentence: <1:NUM/obl>(2017) <2:VERB/root>(war) <3:ADV/advmod>(schon) <4:ADV/advmod>(noch)
    <5:ADV/advmod>(mal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - nsubj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:PROPN/obl>(Ostdeutschland) <3:VERB/root>(scheint)
    <4:DET/det>(das) <5:NOUN/nsubj>(Problem) <6:ADV/advmod>(noch) <ROOT> <7:ADP/case>(als)
    <8:ADP/case>(in) <9:PROPN/root>(Westdeutschland)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 4
    - nmod
  sentence: <1:VERB/root>(wurde) <2:PRON/nsubj>(es) <ROOT> <3:ADP/case>(bei) <4:PRON/root>(mir)
    <5:ADP/case>(auf) <6:DET/det>(der) <7:ADJ/amod>(negativen) <8:NOUN/nmod>(Ebene)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/compound>(Comic)
    <6:NOUN/root>(Nerd)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 1
    - appos
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 1
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:INTJ/root>(Hit) <2:PROPN/appos>(em) <3:NOUN/appos>(up) <5:PRON/nsubj>(was)\
    \ <6:ADP/case>(f\xFCr) <7:DET/nmod>(ein) <ROOT> <8:PROPN/root>(Disstrack)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:DET/det>(dem) <3:ADJ/advmod>(unterschwellig) <4:ADV/advmod>(immer)
    <5:ADV/advmod>(noch) <6:ADV/root>(ein) <ROOT> <7:NOUN/dep>(Hit) <8:VERB/root>(steckt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - obl:arg
  - !!python/tuple
    - 3
    - 4
    - aux:pass
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - mark
  - !!python/tuple
    - 6
    - 4
    - conj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 4
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/det>(Jeder) <2:NOUN/obl:arg>(Moslem) <3:AUX/aux:pass>(wird) <4:VERB/root>(beschattet)\
    \ <5:SCONJ/mark>(als) <6:AUX/conj>(w\xE4re) <7:PRON/nsubj>(er) <8:DET/conj>(ein)\
    \ <ROOT> <9:NOUN/root>(Terrorist)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(der) <ROOT> <2:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(der) <ROOT> <2:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:VERB/root>(kommt) <2:PRON/nsubj>(er) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 10
    - nmod
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 2
    - parataxis
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:VERB/root>(sieht) <3:SCONJ/mark>(wie) <4:PRON/nsubj>(ich)\
    \ <5:NOUN/obj>(Hause) <6:ADP/case>(f\xFCr) <7:PRON/nmod>(den) <8:AUX/cop>(ist)\
    \ <9:DET/det>(das) <10:NOUN/parataxis>(n) <ROOT> <11:NOUN/root>(Schlag)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - dep
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 8
    - advmod
  - !!python/tuple
    - 11
    - 8
    - mark
  - !!python/tuple
    - 12
    - 15
    - case
  - !!python/tuple
    - 13
    - 15
    - det
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 8
    - obl
  - !!python/tuple
    - 16
    - 15
    - appos
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADV/advmod>(mal)\
    \ <5:DET/root>(ein) <ROOT> <6:NOUN/dep>(Gedanke) <7:CCONJ/cc>(Aber) <8:VERB/root>(machen)\
    \ <9:PRON/nsubj>(wir) <10:ADV/advmod>(mal) <11:ADV/mark>(weiter) <12:ADP/case>(mit)\
    \ <13:DET/det>(der) <14:ADJ/amod>(n\xE4chsten) <15:NOUN/obl>(S\xE4ule) <16:NOUN/appos>(Politik)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/root>(du) <ROOT> <2:NOUN/root>(Dealer)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  sentence: <1:CCONJ/cc>(Aber) <2:DET/det>(eine) <3:NOUN/nsubj>(Skipiste) <4:AUX/cop>(ist)
    <5:ADV/advmod>(auch) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Eingriff) <8:ADP/case>(in)
    <9:DET/det>(die) <10:NOUN/nmod>(Natur)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(doch) <4:ADV/advmod>(schon)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Eingriff) <7:ADP/case>(in) <8:DET/det>(die)
    <9:NOUN/nmod>(Natur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - ccomp
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:DET/nsubj>(Manche) <2:VERB/root>(behaupten) <3:SCONJ/mark>(dass) <4:PROPN/nmod>(Putins)\
    \ <5:ADJ/amod>(wirtschaftlich) <6:NOUN/nsubj>(Fehlkalkulation) <7:ADV/advmod>(noch)\
    \ <8:DET/ccomp>(viel) <ROOT> <9:VERB/root>(ausf\xE4llt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - nmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 1
    - conj
  sentence: <1:NOUN/root>(Ost) <3:CCONJ/cc>(und) <4:NOUN/conj>(Westdeutschland) <5:ADP/case>(vor)
    <6:DET/det>(der) <7:NOUN/nmod>(Wiedervereinigung) <8:ADV/advmod>(nur) <9:ADV/advmod>(noch)
    <10:DET/conj>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - dep
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(bei) <2:PRON/root>(der) <3:ADP/dep>(statt) <ROOT> <4:PROPN/nsubj>(Mucke)
    <5:ADJ/amod>(bunte) <6:NOUN/obj>(Schussaktion) <7:VERB/root>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - det
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - appos
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: <1:DET/det>(Viele) <2:ADJ/amod>(Super) <3:NOUN/root>(Rapper) <4:ADV/advmod>(doch)
    <5:DET/det>(der) <6:NOUN/appos>(Baus) <7:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 3
    - obl
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 3
    - aux
  sentence: <1:ADP/case>(Bis) <2:PRON/root>(ich) <ROOT> <3:VERB/root>(gebaut) <4:AUX/cop>(bin)
    <5:ADP/case>(als) <6:NOUN/obl>(Herkules) <7:CCONJ/cc>(und) <8:PRON/nsubj>(ich)
    <9:PART/advmod>(nicht) <10:ADV/advmod>(mehr) <11:AUX/aux>(kann)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - cop
  - !!python/tuple
    - 9
    - 2
    - conj
  sentence: <1:ADV/advmod>(CO2) <2:VERB/root>(kennen) <3:PRON/nsubj>(wir) <4:ADV/advmod>(ja)
    <5:DET/obj>(alle) <6:CCONJ/cc>(Aber) <7:NOUN/nsubj>(Methan) <8:AUX/cop>(ist) <9:ADJ/conj>(einfach)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 1
    - xcomp
  - !!python/tuple
    - 9
    - 8
    - aux
  - !!python/tuple
    - 10
    - 8
    - aux
  - !!python/tuple
    - 11
    - 8
    - nsubj
  - !!python/tuple
    - 12
    - 8
    - compound:prt
  sentence: <1:VERB/root>(lagen) <2:PRON/obj>(sich) <3:ADV/advmod>(jedoch) <4:ADP/case>(in)
    <5:DET/det>(der) <6:NOUN/obl>(Zwischenzeit) <7:ADJ/advmod>(wirtschaftlich) <8:VERB/xcomp>(emanzipieren)
    <9:AUX/aux>(konnten) <10:AUX/aux>(ist) <11:PROPN/nsubj>(Russland) <12:ADP/compound:prt>(in)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Lage) <3:AUX/root>(ist) <4:ADP/case>(in)\
    \ <5:NOUN/obl>(St\xE4dten) <6:ADV/advmod>(oft) <ROOT> <7:ADP/case>(als) <8:ADP/case>(in)\
    \ <9:ADJ/amod>(l\xE4ndlichen) <10:NOUN/root>(Regionen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 14
    - aux
  - !!python/tuple
    - 3
    - 14
    - expl
  - !!python/tuple
    - 4
    - 14
    - mark
  - !!python/tuple
    - 5
    - 14
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 14
    - obl
  - !!python/tuple
    - 9
    - 13
    - case
  - !!python/tuple
    - 10
    - 13
    - det
  - !!python/tuple
    - 11
    - 13
    - compound
  - !!python/tuple
    - 13
    - 8
    - nmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADV/root>(Noch) <ROOT> <2:AUX/aux>(wird) <3:PRON/expl>(es) <4:SCONJ/mark>(als)\
    \ <5:PRON/nsubj>(sie) <6:ADP/case>(\xFCber) <7:DET/det>(die) <8:NOUN/obl>(Begegnung)\
    \ <9:ADP/case>(mit) <10:DET/det>(einer) <11:NOUN/compound>(Trans) <13:NOUN/nmod>(Person)\
    \ <14:VERB/root>(sprechen)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - aux
  - !!python/tuple
    - 3
    - 7
    - obj
  - !!python/tuple
    - 4
    - 7
    - obj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 12
    - cc
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 15
    - nmod
  - !!python/tuple
    - 12
    - 7
    - conj
  - !!python/tuple
    - 13
    - 12
    - nsubj
  - !!python/tuple
    - 14
    - 12
    - advmod
  - !!python/tuple
    - 15
    - 12
    - xcomp
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(habt) <3:PRON/obj>(ihr) <4:DET/obj>(alle)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(mal) <7:VERB/root>(erlebt) <9:CCONJ/cc>(aber)
    <10:ADP/case>(in) <11:NOUN/nmod>(Zukunft) <12:VERB/conj>(wird) <13:PRON/nsubj>(das)
    <14:ADV/advmod>(wohl) <15:DET/xcomp>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 13
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - obj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - mark
  - !!python/tuple
    - 8
    - 13
    - cop
  - !!python/tuple
    - 9
    - 13
    - advmod
  - !!python/tuple
    - 10
    - 13
    - advmod
  - !!python/tuple
    - 11
    - 13
    - cop
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 0
    - root
  - !!python/tuple
    - 15
    - 14
    - cop
  sentence: "<1:PRON/nsubj>(ich) <2:PRON/obj>(mich) <3:ADV/advmod>(nat\xFCrlich) <4:ADV/advmod>(auch)\
    \ <5:ADV/advmod>(riesig) <6:ADV/advmod>(also) <7:SCONJ/mark>(dass) <8:AUX/cop>(ist)\
    \ <9:ADV/advmod>(halt) <10:ADV/advmod>(ja) <11:AUX/cop>(ist) <12:ADV/advmod>(halt)\
    \ <13:DET/root>(ein) <ROOT> <14:NOUN/root>(Sprung) <15:AUX/cop>(gewesen)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/appos>(ein)
    <ROOT> <5:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - cc
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - conj
  - !!python/tuple
    - 7
    - 6
    - xcomp
  sentence: <1:ADJ/advmod>(geistig) <2:ADJ/root>(wach) <3:CCONJ/cc>(und) <4:DET/det:poss>(mein)
    <5:NOUN/nsubj>(Rap) <6:VERB/conj>(wird) <7:ADJ/xcomp>(stetig) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - obj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 6
    - ccomp
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 6
    - obj
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/obj>(Was) <2:AUX/aux>(w\xFCrdest) <3:PRON/nsubj>(du) <4:ADV/advmod>(denn)\
    \ <5:VERB/ccomp>(sagen) <6:VERB/root>(Ist) <7:DET/det>(die) <8:NOUN/obj>(Jagd)\
    \ <9:DET/obj>(ein) <10:ADP/compound:prt>(zu) <ROOT> <11:NOUN/root>(Eingriff)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 16
    - obl
  - !!python/tuple
    - 10
    - 16
    - aux
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 16
    - nsubj
  - !!python/tuple
    - 13
    - 16
    - advmod
  - !!python/tuple
    - 14
    - 16
    - advmod
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(war) <4:ADV/advmod>(nochmal)\
    \ <5:DET/det>(eine) <6:NOUN/root>(Stufe) <ROOT> <7:ADP/case>(auf) <8:DET/det>(jeden)\
    \ <9:NOUN/obl>(Fall) <10:AUX/aux>(hat) <11:DET/det>(das) <12:NOUN/nsubj>(ganze)\
    \ <13:ADV/advmod>(davor) <14:ADV/advmod>(nochmal) <15:ADV/advmod>(total) <16:VERB/root>(\xFC\
    bertroffen)"
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - cop
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 15
    - cc
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  sentence: <1:DET/nsubj>(alles) <2:ADV/advmod>(nur) <3:DET/det>(eine) <4:NOUN/nsubj>(Performance)
    <5:AUX/cop>(ist) <6:DET/det>(ne) <7:NOUN/nsubj>(Raum) <8:DET/det>(eins) <9:NOUN/nsubj>(Raum)
    <10:NUM/root>(zwei) <11:CCONJ/cc>(Aber) <12:PRON/nsubj>(es) <13:AUX/cop>(ist)
    <14:ADV/advmod>(so) <15:DET/conj>(ein) <ROOT> <16:PROPN/root>(brainfuck)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 6
    - aux
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Man) <2:AUX/aux>(k\xF6nnte) <3:DET/det:poss>(meinen) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Ausnahmefall)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(seid) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(wer) <2:ADP/case>(von) <3:PRON/obl>(denen) <4:VERB/root>(hat)
    <5:ADV/advmod>(jemals) <ROOT> <6:VERB/root>(gerhymt)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - obj
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 6
    - flat
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 4
    - obl
  sentence: <1:DET/root>(Ein) <ROOT> <2:PROPN/nsubj>(Hero) <3:PROPN/flat>(Freezy)
    <4:VERB/root>(hat) <5:DET/det>(die) <6:PROPN/obj>(Kids) <7:PROPN/flat>(Kids) <8:PROPN/flat>(Kids)
    <9:ADP/case>(in) <10:DET/det>(dem) <11:NOUN/obl>(Griff)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(sei) <ROOT> <3:NOUN/root>(Labelboss)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(sei) <ROOT> <3:NOUN/root>(Labelboss)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - compound
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cc
  - !!python/tuple
    - 5
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PROPN/compound>(Ja) <3:NOUN/root>(Produkte) <4:CCONJ/cc>(oder) <ROOT>\
    \ <5:NUM/nummod>(F\xFCnf) <7:NOUN/compound>(Sterne) <9:NOUN/root>(Koch)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - flat
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - appos
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/det>(ein) <4:ADJ/root>(echt)
    <ROOT> <5:PROPN/root>(Plot) <6:PROPN/flat>(Twist) <8:X/advmod>(twenty) <9:X/appos>(one)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - compound:prt
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:VERB/root>(macht) <2:ADP/compound:prt>(auf) <ROOT> <3:NOUN/root>(Dealer)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:ADP/case>(als) <2:PROPN/root>(Borussia)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - amod
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(kein) <ROOT> <4:NOUN/root>(Typ)
    <5:CCONJ/cc>(sondern) <6:ADJ/amod>(weit) <7:ADP/case>(unterm) <8:NOUN/conj>(Standardrand)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - appos
  sentence: <1:PRON/nsubj>(das') <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Song) <5:PROPN/amod>(Many)
    <6:PROPN/appos>(Men)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  sentence: <1:VERB/root>(kommt) <2:PRON/nsubj>(er) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(was) <2:ADP/root>(f\xFCr) <ROOT> <4:NOUN/root>(Beat)"
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - dep
  - !!python/tuple
    - 3
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - advmod
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:X/dep>(dicka) <3:X/nsubj>(Bist) <4:X/advmod>(ja-) <5:AUX/cop>(Bist)
    <6:ADV/advmod>(ja) <7:X/advmod>('n) <8:ADJ/root>(richtig) <ROOT> <9:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - aux
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - mark
  - !!python/tuple
    - 5
    - 3
    - dep
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - det
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 3
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 3
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(h\xE4tte) <3:VERB/root>(gedacht) <4:SCONJ/mark>(dass)\
    \ <5:PRON/dep>(das) <6:ADP/case>(bei) <7:DET/det>(einem) <8:ADJ/amod>(exotischen)\
    \ <9:NOUN/obl>(Tier) <10:ADP/case>(wie) <11:DET/det>(einem) <12:NOUN/nmod>(K\xE4\
    nguru) <13:ADV/advmod>(noch) <ROOT> <14:AUX/root>(w\xE4re)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - dep
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(bei) <2:PRON/root>(der) <3:ADP/dep>(statt) <ROOT> <4:PROPN/nsubj>(Mucke)
    <5:ADJ/amod>(bunte) <6:NOUN/obj>(Schussaktion) <7:VERB/root>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(Wirklich) <2:DET/root>(keiner) <3:AUX/cop>(ist) <ROOT>
    <4:ADP/case>(an) <5:DET/det>(dem) <6:NOUN/root>(Block)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(noch) <3:DET/root>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  sentence: "<1:ADV/advmod>(Doch) <2:ADJ/amod>(\xFCberlebte) <3:NOUN/nsubj>(Herzinfarkte)\
    \ <4:VERB/root>(machen) <5:PRON/obj>(dich) <6:ADV/advmod>(auch) <7:PART/advmod>(nicht)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Hass) <2:CCONJ/cc>(und) <3:NOUN/conj>(Wut) <4:VERB/root>(nehmen)
    <5:ADV/advmod>(immer) <ROOT> <6:ADP/root>(zu)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 3
    - advmod
  - !!python/tuple
    - 10
    - 11
    - case
  - !!python/tuple
    - 11
    - 9
    - nmod
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  - !!python/tuple
    - 14
    - 3
    - compound:prt
  sentence: <1:CCONJ/root>(Und) <ROOT> <3:NOUN/root>(Fakt) <5:ADV/advmod>(heute) <6:ADV/advmod>(noch)
    <7:ADV/advmod>(sogar) <8:ADV/advmod>(noch) <9:ADV/advmod>(mehr) <10:ADP/case>(als)
    <11:NOUN/nmod>(Wind) <12:CCONJ/cc>(und) <13:NOUN/conj>(Solar) <14:ADV/compound:prt>(zusammen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:SCONJ/root>(w\xE4hrend) <2:ADV/advmod>(da) <3:ADV/advmod>(drau\xDF\
    en) <4:DET/dep>(ein) <ROOT> <5:NOUN/dep>(Sturm) <6:VERB/root>(abgeht)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - compound
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/root>(Organisierter) <ROOT> <2:NOUN/compound>(Parallelwelt) <4:NOUN/root>(Fandom)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - nsubj
  - !!python/tuple
    - 2
    - 7
    - cop
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - nmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Raiden) <2:AUX/cop>(ist) <3:ADP/case>(zu) <4:NOUN/nmod>(Beginn)
    <5:DET/det>(der) <6:NOUN/nmod>(Geschichte) <7:DET/root>(kein) <ROOT> <8:NOUN/root>(Donnergott)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - aux
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - obl
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - mark
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 8
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - mark
  - !!python/tuple
    - 14
    - 13
    - nsubj
  - !!python/tuple
    - 15
    - 12
    - advmod
  sentence: "<1:ADV/advmod>(Ja) <2:PRON/nsubj>(ich) <3:AUX/aux>(habe) <4:ADP/case>(auf)\
    \ <5:DET/det>(jeden) <6:NOUN/obl>(Fall) <7:ADV/advmod>(auch) <8:VERB/root>(gedacht)\
    \ <9:SCONJ/mark>(dass) <10:PRON/nsubj>(ich) <11:DET/obj>(viel) <ROOT> <12:AUX/root>(w\xE4\
    r) <13:SCONJ/mark>(dass) <14:PRON/nsubj>(ich) <15:ADV/advmod>(irgendwie)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADP/case>(In) <2:NOUN/obl>(Zukunft) <3:AUX/root>(sollen) <4:NOUN/nsubj>(Prothesen)
    <5:ADV/advmod>(noch) <ROOT> <6:AUX/root>(werden)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  sentence: <1:VERB/root>(Klingt) <2:ADV/advmod>(halt) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(komme) <3:ADP/case>(mit) <4:ADV/advmod>(voll)
    <ROOT> <5:NOUN/root>(Fahne) <6:ADP/dep>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - dep
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(komme) <3:ADP/case>(mit) <4:ADV/advmod>(voll)
    <ROOT> <5:NOUN/root>(Fahne) <6:ADP/dep>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - advmod
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(der) <3:ADP/advmod>(trotz) <ROOT>\
    \ <4:ADJ/amod>(schw\xE4chender) <5:NOUN/nsubj>(Therapien) <6:ADV/advmod>(noch)\
    \ <7:ADV/advmod>(mal) <8:ADJ/root>(gewachsen) <9:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(niemand) <2:VERB/root>(macht) <3:PRON/obj>(es) <ROOT> <5:ADV/root>(ja)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Ganz) <ROOT> <2:NOUN/root>(Motherfucker)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(mein) <2:NOUN/nsubj>(Flow) <3:AUX/root>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:ADV/advmod>(nur) <2:DET/det>(ein) <3:ADV/root>(bisschen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 1
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/root>(Ey) <2:CCONJ/cc>(und) <3:ADP/dep>(bei) <4:ADP/dep>(zu)
    <ROOT> <5:PROPN/root>(Geilness)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <ROOT> <1:ADP/case>(als) <2:NOUN/root>(Whoopie)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det:poss>(Mein) <2:NOUN/nsubj>(Anblick) <3:AUX/cop>(war) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Schock)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  sentence: <1:ADV/advmod>(Denn) <2:ADV/advmod>(sogar) <3:ADP/case>(unter) <4:NOUN/obl>(Wasser)
    <5:VERB/root>(kommt) <6:NOUN/nsubj>(Holunder) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:ADP/case>(f\xFCr) <4:NOUN/root>(Bluterguss) <ROOT>\
    \ <5:NOUN/root>(sch\xE4delbasisbruch)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:DET/det>(ein) <4:ADV/advmod>(sehr)
    <ROOT> <5:NOUN/root>(Fall)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 2
    - flat
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 4
    - appos
  sentence: "<1:NOUN/root>(Hemd) <ROOT> <2:PROPN/nsubj>(Benz) <3:PROPN/flat>(Gaffer)\
    \ <4:VERB/root>(h\xE4ng) <5:ADP/case>(ab) <6:ADP/compound:prt>(mit) <8:PROPN/appos>(Franzacka)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Richtig) <ROOT> <2:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/nsubj>(Einer) <2:AUX/cop>(war) <3:ADV/root>(mal) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(Nur) <2:DET/root>(einer) <3:AUX/cop>(ist) <4:ADV/advmod>(noch)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 3
    - xcomp
  sentence: <1:CCONJ/cc>(Aber) <2:PROPN/nsubj>(Simon) <3:VERB/root>(meinte) <4:PROPN/nsubj>(LSD)
    <5:AUX/cop>(ist) <6:DET/xcomp>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  sentence: "<1:ADJ/advmod>(Fr\xFCher) <2:VERB/root>(warst) <3:PRON/nsubj>(du) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/root>(bin) <2:ADV/advmod>(noch) <ROOT> <3:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - cop
  sentence: <1:ADV/advmod>(nur) <2:DET/root>(jeder) <3:ADV/advmod>(so) <ROOT> <5:NOUN/root>(Rockstar)
    <6:AUX/cop>(war)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(Immer) <ROOT> <2:AUX/root>(wurden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - mark
  - !!python/tuple
    - 6
    - 4
    - cop
  sentence: <1:PRON/nsubj>(Was) <3:DET/root>(Ein) <ROOT> <4:PROPN/root>(MC) <5:PART/mark>(zu)
    <6:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - obl
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Denn) <2:ADV/advmod>(heute) <3:VERB/root>(schwitz) <4:PRON/nsubj>(ich)\
    \ <5:ADP/case>(auf) <6:DET/det>(der) <7:NOUN/obl>(B\xFChne) <8:ADV/advmod>(ja)\
    \ <ROOT> <9:SCONJ/mark>(denn) <10:ADV/root>(je)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 9
    - case
  - !!python/tuple
    - 6
    - 9
    - det
  - !!python/tuple
    - 7
    - 9
    - compound
  - !!python/tuple
    - 9
    - 11
    - nmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:DET/root>(ein) <ROOT> <4:NOUN/nsubj>(Motherfucker)\
    \ <5:ADP/case>(aus) <6:DET/det>(der) <7:NOUN/compound>(H\xF6lle) <9:NOUN/nmod>(Effekt)\
    \ <10:ADV/advmod>(total) <11:ADJ/root>(kaputt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 8
    - cc
  - !!python/tuple
    - 8
    - 6
    - conj
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:NOUN/root>(Wander) <2:DET/det>(den) <3:NOUN/dep>(Globus) <4:ADP/case>(durch)\
    \ <5:ADJ/amod>(tr\xFCbe) <6:NOUN/nmod>(Wasser) <7:CCONJ/cc>(und) <8:NOUN/conj>(W\xFC\
    sten) <ROOT> <9:ADP/case>(als) <10:ADV/advmod>(damals) <11:PROPN/root>(Moses)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - acl
  - !!python/tuple
    - 9
    - 8
    - aux
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADJ/root>(n) <ROOT> <4:NOUN/root>(Moment)
    <5:ADV/advmod>(wo) <6:PRON/nsubj>(du) <7:ADV/advmod>(einfach) <8:VERB/acl>(gemerkt)
    <9:AUX/aux>(hast)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - obj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 4
    - advmod
  sentence: "<1:CCONJ/cc>(Und) <2:DET/det>(das) <3:NOUN/nsubj>(Mamasein) <4:VERB/root>(f\xF6\
    rdert) <5:PRON/nsubj>(das) <6:ADV/advmod>(ja) <7:DET/obj>(alles) <8:ADV/advmod>(noch)\
    \ <9:ADV/advmod>(mal) <10:DET/advmod>(viel) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - nummod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nummod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(der) <2:AUX/cop>(ist) <3:NUM/nummod>(zehn) <4:NOUN/root>(Mal)
    <ROOT> <6:NUM/nummod>(10) <7:NOUN/root>(Mal)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - nsubj
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - aux
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - obj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:AUX/cop>(bin) <3:DET/root>(kein) <ROOT> <4:NOUN/nsubj>(Cutter)
    <5:PRON/nsubj>(ich) <6:AUX/aux>(kann) <7:PART/advmod>(nicht) <8:ADV/advmod>(krass)
    <9:NOUN/obj>(Ton) <10:VERB/root>(bearbeiten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - compound:prt
  - !!python/tuple
    - 5
    - 10
    - dep
  - !!python/tuple
    - 6
    - 9
    - cc
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - conj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/root>(Weil) <2:PRON/obj>(mich) <3:PRON/nsubj>(das) <4:ADP/compound:prt>(mit)\
    \ <ROOT> <5:NOUN/dep>(Ehrfurcht) <6:CCONJ/cc>(und) <7:ADV/advmod>(manchmal) <8:ADV/advmod>(auch)\
    \ <9:NOUN/conj>(Angst) <10:VERB/root>(erf\xFCllt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 12
    - cop
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(finde) <3:SCONJ/mark>(wenn) <4:PRON/nsubj>(man)
    <5:DET/det>(ein) <6:ADJ/advmod>(richtig) <ROOT> <7:NOUN/nsubj>(Fan) <8:AUX/cop>(ist)
    <9:ADP/case>(von) <10:DET/det>(einer) <11:ADJ/amod>(guten) <12:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gangster)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - appos
  sentence: <1:PROPN/nsubj>(Weed) <2:VERB/root>(riecht) <3:ADV/advmod>(noch) <ROOT>
    <4:ADP/case>(als) <5:NOUN/root>(Aioli) <7:PROPN/appos>(Ah)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - conj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Luis) <2:CCONJ/cc>(und) <3:PROPN/conj>(Leon) <4:AUX/root>(sind)
    <ROOT> <5:VERB/root>(geworden)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Die) <2:NOUN/nsubj>(Gegner) <3:AUX/root>(sind) <ROOT> <4:CCONJ/cc>(aber)\
    \ <5:DET/det>(das) <6:NOUN/nsubj>(Gef\xFChl) <7:AUX/cop>(ist) <8:ADV/advmod>(genau)\
    \ <9:DET/det>(das) <10:NOUN/root>(Gleiche)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  sentence: <1:ADV/root>(immer) <ROOT> <3:CCONJ/cc>(und) <4:ADV/advmod>(jetzt) <5:VERB/root>(zittern)
    <6:DET/det>(beide) <7:NOUN/nsubj>(Beine)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Zufall)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Timo) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(er) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Hengst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(Neben) <2:NOUN/root>(Faktoren) <3:ADP/case>(wie) <ROOT> <4:ADJ/amod>(Stress)
    <5:NOUN/root>(Krankheiten)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - mark
  - !!python/tuple
    - 3
    - 1
    - nsubj
  - !!python/tuple
    - 4
    - 1
    - obj
  sentence: <1:VERB/root>(zugestehe) <2:SCONJ/mark>(dass) <3:PRON/nsubj>(es) <4:DET/obj>(ein)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det:poss>(dein) <2:NOUN/nsubj>(Album) <3:AUX/root>(war) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Du) <2:AUX/root>(bist) <3:DET/det>(ein) <4:ADV/advmod>(ziemlich)
    <ROOT> <5:PROPN/root>(G) <6:CCONJ/cc>(und) <7:PROPN/conj>(Hustler)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(was) <2:DET/root>(ein) <ROOT> <3:PROPN/root>(Jeep)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADV/root>(ziemlich) <ROOT> <2:NOUN/root>(Wagen)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - obj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - acl
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Job) <7:PRON/obj>(den) <8:PRON/nsubj>(du)
    <9:VERB/acl>(machst)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Springerstiefel) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt)\
    \ <4:ADV/advmod>(noch) <5:PRON/root>(etwas) <ROOT> <6:ADJ/amod>(beschuhter) <7:NOUN/root>(Fu\xDF\
    )"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Perspektivwechsel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advcl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cc
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 9
    - nummod
  - !!python/tuple
    - 9
    - 2
    - obl
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 2
    - obl
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 2
    - advmod
  - !!python/tuple
    - 16
    - 2
    - compound:prt
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: <1:VERB/advcl>(ist) <2:VERB/root>(ist) <3:CCONJ/cc>(denn) <4:DET/det>(dieser)
    <5:NOUN/nsubj>(bahnhof) <6:ADP/case>(zu) <7:ADV/advmod>(heute) <8:NUM/nummod>(40)
    <9:NOUN/obl>(jahre) <10:ADP/case>(nach) <11:DET/det>(diesem) <12:NOUN/obl>(film)
    <13:ADV/advmod>(immer) <14:ADV/advmod>(noch) <15:ADV/advmod>(so) <16:ADV/compound:prt>(ein)
    <ROOT> <17:NOUN/root>(brennpunkt)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cc
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - appos
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - appos
  - !!python/tuple
    - 8
    - 7
    - flat
  sentence: <1:CCONJ/cc>(Und) <2:DET/det>(eine) <3:ADJ/amod>(ganze) <4:NOUN/root>(Menge)
    <5:DET/appos>(anderer) <ROOT> <6:NOUN/root>(Figuren) <7:PROPN/appos>(Oh) <8:PROPN/flat>(Mann)
- dependencies:
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 2
    - conj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <2:NOUN/root>(on) <4:CCONJ/cc>(Und) <5:DET/det>(der) <6:NOUN/nsubj>(Druck)
    <7:AUX/cop>(war) <8:DET/conj>(viel) <ROOT> <9:ADJ/root>(Wirklich)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 6
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - compound:prt
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(er) <3:ADP/case>(auf) <4:DET/det>(dem)
    <5:NOUN/obl>(Kiez) <6:VERB/root>(arbeitet) <7:AUX/aux>(sei) <8:PRON/nsubj>(das)
    <9:ADV/compound:prt>(ein) <ROOT> <10:NOUN/root>(Gegensatz)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 8
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 15
    - cc
  - !!python/tuple
    - 10
    - 15
    - advmod
  - !!python/tuple
    - 11
    - 15
    - cop
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 15
    - nsubj
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 8
    - conj
  sentence: <1:ADP/case>(nach) <2:DET/det>(anderen) <3:NOUN/nmod>(Rechnungen) <4:AUX/root>(ist)
    <5:PRON/nsubj>(es) <6:ADV/advmod>(noch) <7:ADV/advmod>(deutlich) <8:ADV/advmod>(mehr)
    <9:CCONJ/cc>(Und) <10:ADJ/advmod>(weltweit) <11:AUX/cop>(Ist) <12:DET/det>(die)
    <13:NOUN/nsubj>(Ungleichheit) <14:ADV/advmod>(noch) <15:DET/conj>(viel) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 7
    - nmod
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det>(einen) <3:NOUN/nmod>(Au\xDFenstehenden)\
    \ <4:AUX/cop>(ist) <5:PRON/nsubj>(das) <6:ADV/advmod>(noch) <7:DET/root>(viel)\
    \ <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - mark
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - aux
  sentence: "<1:ADV/root>(Umso) <ROOT> <2:SCONJ/mark>(dass) <3:ADP/case>(bei) <4:PRON/obl>(uns)\
    \ <5:NOUN/nsubj>(Hunde) <6:ADV/mark>(weiter) <7:VERB/root>(leiden) <8:AUX/aux>(m\xFC\
    ssen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADV/advmod>(damit) <2:DET/det>(das) <3:DET/root>(alles) <4:DET/det>(ein)
    <5:ADV/advmod>(bisschen) <ROOT> <6:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/nsubj>(Wildereifall) <3:ADP/case>(in) <4:PROPN/nmod>(Kusel)\
    \ <5:AUX/cop>(war) <6:ADJ/advmod>(nat\xFCrlich) <7:DET/root>(ein) <ROOT> <8:NOUN/root>(Fall)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(sondern) <2:SCONJ/root>(weil) <3:PRON/nsubj>(das) <4:ADV/advmod>(auch)
    <ROOT> <5:ADJ/amod>(psychischer) <6:NOUN/nsubj>(Stress) <7:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - obj
  - !!python/tuple
    - 3
    - 4
    - mark
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - aux
  sentence: <1:CCONJ/root>(und) <ROOT> <2:NOUN/obj>(Manipulation) <3:PART/mark>(zu)
    <4:VERB/root>(tun) <5:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:DET/det:poss>(unsre) <2:NOUN/nsubj>(Gegend) <3:AUX/cop>(ist) <4:DET/det>(ein)
    <5:ADV/root>(bisschen) <ROOT> <7:X/root>(Uff)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 10
    - advmod
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(wie) <3:AUX/cop>(ist) <4:PRON/nsubj>(das)
    <5:AUX/cop>(Ist) <6:PRON/root>(das) <7:ADP/case>(wie) <8:ADV/advmod>(so) <9:DET/nmod>(ein)
    <ROOT> <10:NOUN/root>(Umzug) <11:ADV/advmod>(dann) <12:ADV/advmod>(auch)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - advmod
  sentence: <1:PRON/nsubj>(wer) <2:AUX/root>(ist) <ROOT> <4:PRON/nsubj>(niemand) <5:AUX/root>(ist)
    <6:ADV/advmod>(da)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/root>(Du) <ROOT> <2:NOUN/nsubj>(Rapper) <3:VERB/root>(wei\xDF\
    t)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:DET/det>(Jeder) <2:NOUN/nsubj>(Nuttensohn) <3:AUX/cop>(ist) <4:ADV/advmod>(jetzt)
    <5:DET/root>(ein) <ROOT> <6:PROPN/root>(CEO)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(kommen) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(zu) <ROOT> <2:NOUN/root>(Beat)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - cop
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/root>(Du) <ROOT> <2:X/nsubj>(Gee) <3:AUX/cop>(bist) <4:NOUN/nsubj>(jetz')
    <5:ADP/case>(auf) <6:NOUN/nmod>(einma') <7:ADJ/root>(angepisst)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:DET/root>(ein) <ROOT> <2:NOUN/root>(Hype)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - expl
  - !!python/tuple
    - 5
    - 11
    - advmod
  - !!python/tuple
    - 6
    - 11
    - mark
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 3
    - advcl
  - !!python/tuple
    - 12
    - 13
    - cc
  - !!python/tuple
    - 13
    - 11
    - conj
  sentence: <1:CCONJ/cc>(Und) <2:ADV/root>(umso) <ROOT> <3:AUX/root>(ist) <4:PRON/expl>(es)
    <5:ADV/advmod>(dann) <6:SCONJ/mark>(wenn) <7:PRON/nsubj>(du) <8:ADV/advmod>(dann)
    <9:DET/det>(ein) <10:NOUN/obj>(Match) <11:VERB/advcl>(kriegst) <12:CCONJ/cc>(und)
    <13:VERB/conj>(denkst)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - conj
  sentence: "<1:ADJ/amod>(Moderne) <2:NOUN/root>(Gentechnik) <3:CCONJ/cc>(und) <4:ADJ/amod>(nachhaltige)\
    \ <5:NOUN/conj>(Landwirtschaft) <ROOT> <6:NOUN/root>(Widerspruch) <7:CCONJ/cc>(oder)\
    \ <8:ADJ/amod>(perfekte) <9:NOUN/conj>(L\xF6sung)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 4
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - cc
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(meine) <3:PRON/nsubj>(das) <4:VERB/ccomp>(klingt)
    <5:ADV/advmod>(doch) <6:ADV/advmod>(eigentlich) <7:ADV/advmod>(erst) <8:ADV/advmod>(mal)
    <9:ADP/case>(wie) <10:DET/obl>(ein) <ROOT> <11:NOUN/root>(Widerspruch) <12:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 1
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:AUX/root>(ist) <2:ADV/advmod>(auch) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)
    <5:DET/det>(ein) <6:ADV/advmod>(ziemlich) <ROOT> <7:NOUN/root>(Eyecatcher)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - mark
  - !!python/tuple
    - 4
    - 6
    - det
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - appos
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - aux
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obj
  sentence: "<1:ADJ/amod>(Liebe) <2:NOUN/root>(Freunde) <3:SCONJ/mark>(dass) <4:DET/det>(die)\
    \ <5:PROPN/amod>(Russische) <6:PROPN/nsubj>(F\xF6deration) <7:DET/det>(ein) <8:NOUN/appos>(Land)\
    \ <ROOT> <9:NOUN/nsubj>(Gegens\xE4tze) <10:AUX/aux>(ist) <11:VERB/root>(wisst)\
    \ <12:PRON/obj>(ihr)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - aux
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 6
    - obl
  - !!python/tuple
    - 10
    - 6
    - compound:prt
  sentence: <1:CCONJ/cc>(und) <2:DET/det>(das) <3:NOUN/root>(Ding) <ROOT> <4:VERB/advcl>(nutzen)
    <5:AUX/aux>(willst) <6:VERB/root>(kommen) <7:NOUN/nsubj>(Mehrkosten) <8:ADP/case>(auf)
    <9:PRON/obl>(dich) <10:ADP/compound:prt>(zu)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  sentence: <1:ADV/advmod>(Nur) <2:DET/root>(einer) <3:AUX/cop>(ist) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 5
    - flat
  sentence: <1:PRON/expl>(Es) <2:AUX/root>(ist) <3:DET/det>(ein) <4:ADV/advmod>(sehr)
    <ROOT> <5:PROPN/root>(Nerd) <7:NOUN/flat>(Talk)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 9
    - nsubj
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 9
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/det>(ein) <2:ADJ/root>(extrem) <ROOT> <3:NOUN/nsubj>(Medienrummel)
    <4:PRON/appos>(Das) <5:AUX/cop>(war) <6:ADV/advmod>(echt) <7:ADV/advmod>(so) <8:DET/det>(ein)
    <9:NOUN/root>(Spektakel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 10
    - case
  - !!python/tuple
    - 7
    - 10
    - det:poss
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 5
    - nmod
  sentence: <1:PRON/root>(Dein) <ROOT> <2:NOUN/nsubj>(Vorschuss) <3:VERB/root>(hat)
    <4:DET/det>(den) <5:NOUN/obj>(Wert) <6:ADP/case>(von) <7:DET/det:poss>(meinem)
    <8:PROPN/compound>(Nike) <10:NOUN/nmod>(Sneaker)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(es) <2:AUX/root>(k\xF6nnte) <3:PART/advmod>(nicht) <ROOT>\
    \ <4:VERB/root>(laufen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 10
    - 8
    - flat
  sentence: "<1:SCONJ/mark>(Weil) <2:ADV/advmod>(erstmal) <3:AUX/cop>(ist) <4:PRON/nsubj>(es)\
    \ <5:DET/root>(ein) <ROOT> <6:NOUN/compound>(Vollk\xF6rper) <8:PROPN/root>(Mecha)\
    \ <10:NOUN/flat>(Anzug)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(geht) <3:ADV/advmod>(gar) <4:PART/advmod>(nicht)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 11
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 0
    - root
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 11
    - obl
  - !!python/tuple
    - 16
    - 17
    - det
  - !!python/tuple
    - 17
    - 11
    - obj
  - !!python/tuple
    - 18
    - 19
    - cc
  - !!python/tuple
    - 19
    - 11
    - conj
  - !!python/tuple
    - 20
    - 19
    - obj
  - !!python/tuple
    - 21
    - 22
    - case
  - !!python/tuple
    - 22
    - 19
    - obl
  sentence: "<1:ADV/root>(Noch) <ROOT> <2:AUX/cop>(ist) <3:DET/det>(der) <4:NOUN/nsubj>(Fall)\
    \ <5:DET/det>(eines) <6:NOUN/nmod>(sechsj\xE4hrigen) <7:ADP/case>(aus) <8:DET/det>(den)\
    \ <9:PROPN/nmod>(USA) <10:PRON/nsubj>(Der) <11:VERB/root>(holte) <12:PRON/obj>(sich)\
    \ <13:ADP/case>(bei) <14:DET/det>(dem) <15:NOUN/obl>(Spielen) <16:DET/det>(eine)\
    \ <17:NOUN/obj>(Platzwunde) <18:CCONJ/cc>(und) <19:VERB/conj>(infizierte) <20:PRON/obj>(sich)\
    \ <21:ADP/case>(mit) <22:PROPN/obl>(Tetanus)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PRON/nsubj>(ich) <2:AUX/root>(bin) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Deutschland) <2:AUX/root>(ist) <3:ADV/advmod>(mittlerweile)
    <ROOT> <4:ADP/case>(als) <5:PROPN/root>(Chicago)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - advcl
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 11
    - 13
    - det
  - !!python/tuple
    - 12
    - 13
    - amod
  - !!python/tuple
    - 13
    - 6
    - obj
  - !!python/tuple
    - 14
    - 6
    - obj
  sentence: <1:ADV/root>(noch) <ROOT> <2:VERB/advcl>(spiegelt) <3:ADP/case>(als) <4:ADV/advmod>(bisher)
    <5:ADV/advmod>(Jetzt) <6:VERB/root>(haben) <7:PRON/nsubj>(wir) <8:ADP/case>(in)
    <9:DET/det>(beiden) <10:NOUN/obl>(Serien) <11:DET/det>(ein) <12:ADJ/amod>(kleines)
    <13:NOUN/obj>(Kind) <14:PRON/obj>(was)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:AUX/cop>(bin) <2:PRON/nsubj>(ich) <3:ADJ/root>(linguistisch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: <1:SCONJ/mark>(ob) <2:DET/det>(der) <3:NOUN/root>(Fall) <4:PROPN/appos>(Zorneding)
    <5:ADV/compound:prt>(ein) <ROOT> <6:NOUN/root>(Einzelfall) <7:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - cop
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <2:PROPN/nsubj>(Susanne) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:ADV/advmod>(schon)
    <7:DET/det>(ein) <8:ADJ/root>(richtig) <ROOT> <9:NOUN/root>(Geselle)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - nsubj
  sentence: "<1:ADV/root>(Je) <ROOT> <2:PRON/nsubj>(die) <3:AUX/cop>(sind) <4:CCONJ/cc>(desto)\
    \ <5:ADJ/root>(h\xF6her) <6:DET/det>(die) <7:NOUN/nsubj>(Dropchance)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - mark
  - !!python/tuple
    - 2
    - 6
    - obl:arg
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(dass) <2:PRON/obl:arg>(mir) <3:DET/det>(kein) <4:DET/det>(anderes)\
    \ <5:NOUN/nsubj>(Spiel) <6:VERB/root>(einf\xE4llt) <7:PRON/obj>(was) <8:PRON/nsubj>(es)\
    \ <9:ADV/advmod>(noch) <ROOT> <10:VERB/root>(macht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:VERB/root>(habe) <3:PRON/obj>(mich) <4:ADV/advmod>(danach)\
    \ <5:ADP/case>(wie) <6:DET/obl>(ein) <ROOT> <7:NOUN/nsubj>(Speedrunner) <8:VERB/root>(gef\xFC\
    hlt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - case
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - obl
  - !!python/tuple
    - 9
    - 3
    - compound:prt
  sentence: <1:CCONJ/cc>(Und) <2:ADV/root>(noch) <ROOT> <3:VERB/root>(sieht) <4:PRON/nsubj>(es)
    <5:ADP/case>(in) <6:DET/det>(den) <7:ADJ/amod>(technischen) <8:NOUN/obl>(Ausbildungsberufen)
    <9:ADP/compound:prt>(aus)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/root>(Was) <2:ADP/case>(f\xFCr) <3:DET/nmod>(ein) <ROOT> <4:NOUN/nsubj>(Rapper)\
    \ <5:PRON/nsubj>(du) <6:ADV/advmod>(doch) <7:AUX/root>(bist)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(raus) <2:ADV/root>(noch) <ROOT> <3:ADP/case>(als) <4:ADV/advmod>(jemals)
    <5:VERB/root>(gedacht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - obl
  - !!python/tuple
    - 4
    - 1
    - nsubj
  - !!python/tuple
    - 5
    - 1
    - dep
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/root>(weil) <2:ADP/case>(bei) <3:PRON/obl>(uns) <4:DET/nsubj>(beiden)
    <5:DET/dep>(ein) <ROOT> <6:NOUN/nsubj>(Hype) <7:VERB/root>(entsteht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det:poss
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  sentence: "<1:ADV/advmod>(Einfach) <2:ADV/root>(nur) <ROOT> <3:DET/det:poss>(meine)\
    \ <4:NOUN/nsubj>(Fans) <5:AUX/cop>(sind) <6:ADJ/root>(krank) <7:ADV/advmod>(\xFC\
    berall)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Wechsel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 2
    - conj
  sentence: <1:ADV/advmod>(Heute) <2:ADJ/root>(krass) <3:CCONJ/cc>(und) <4:ADV/conj>(morgen)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nmod
  sentence: <1:PRON/nsubj>(Ihr) <2:VERB/root>(nervt) <3:PRON/obj>(mich) <ROOT> <4:ADP/case>(als)
    <5:DET/det>(die) <6:NOUN/root>(Typen) <7:ADP/case>(mit) <8:DET/det>(den) <9:NOUN/nmod>(Bullenmarken)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Vielleicht) <2:VERB/root>(beginnt) <3:DET/obj>(ein) <ROOT>
    <4:NOUN/root>(Beef)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:ADJ/root>(echt) <ROOT> <3:NOUN/root>(Typ)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(gehst) <ROOT> <3:ADP/case>(ab) <4:ADP/case>(als)
    <5:NOUN/root>(Kalium) <6:ADP/case>(in) <7:NOUN/nmod>(Wasser)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - mark
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - obj
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(wusste) <3:SCONJ/mark>(dass) <4:ADP/case>(in)
    <5:PRON/obl>(dir) <6:DET/obj>(ein) <ROOT> <7:NOUN/nsubj>(Abfahrer) <8:VERB/root>(steht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - expl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 8
    - obj
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/expl>(es) <3:AUX/root>(war) <4:ADV/advmod>(auch)
    <5:DET/det>(ein) <6:ADV/advmod>(ziemlich) <ROOT> <7:NOUN/nsubj>(Unfall) <8:VERB/root>(beachtet)
    <9:ADV/advmod>(bitte) <10:DET/det>(die) <11:PROPN/amod>(Special) <12:PROPN/obj>(Effects)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - ccomp
  - !!python/tuple
    - 5
    - 6
    - det:poss
  - !!python/tuple
    - 6
    - 2
    - obj
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(sagst) <3:ADJ/advmod>(fr\xFCher) <4:AUX/ccomp>(war)\
    \ <5:DET/det:poss>(dein) <6:NOUN/obj>(Lifestyle) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: "<1:ADP/root>(Zu) <ROOT> <2:NOUN/root>(Schei\xDF)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 2
    - appos
  sentence: <1:PRON/root>(du) <ROOT> <2:PROPN/root>(Flexticker) <4:X/appos>(tess)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 1
    - flat
  - !!python/tuple
    - 5
    - 1
    - appos
  - !!python/tuple
    - 6
    - 5
    - appos
  sentence: <ROOT> <1:PROPN/root>(Hipster) <3:PROPN/flat>(Spast) <5:X/appos>(du) <6:PROPN/appos>(Spast)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - amod
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:PART/advmod>(nicht) <2:ADV/advmod>(auch) <3:ADV/advmod>(schon) <4:ADV/advmod>(immer)\
    \ <5:ADV/root>(mal) <6:ADP/case>(wie) <7:DET/det>(ein) <8:ADJ/amod>(richtig) <ROOT>\
    \ <9:NOUN/nsubj>(Dieb) <10:VERB/root>(f\xFChlen)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - csubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cc
  sentence: <1:PRON/nsubj>(Was) <2:ADV/advmod>(hier) <3:VERB/csubj>(passiert) <4:AUX/cop>(ist)
    <5:ADV/advmod>(noch) <6:ADJ/root>(absurder) <7:CCONJ/cc>(und) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - case
  - !!python/tuple
    - 7
    - 9
    - case
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(Bei) <2:DET/det>(den) <3:NOUN/obl>(Herren) <4:AUX/root>(ist)
    <5:PRON/nsubj>(es) <ROOT> <6:ADP/case>(als) <7:ADP/case>(an) <8:DET/det>(dem)
    <9:NOUN/root>(Anfang)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADP/case>(An) <2:DET/det>(dem) <3:NOUN/obl>(Ende) <4:VERB/root>(haut)
    <5:PRON/nsubj>(man) <6:ADV/advmod>(einfach) <7:ADV/advmod>(n) <8:ADV/advmod>(bisschen)
    <ROOT> <9:ADV/root>(drauf)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - cop
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:AUX/cop>(sind) <2:DET/det>(ein) <3:ADV/advmod>(ganz) <4:ADJ/root>(sch\xF6\
    n) <ROOT> <5:NOUN/root>(Unterschied)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - cop
  - !!python/tuple
    - 4
    - 8
    - cc
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 14
    - nmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 14
    - advmod
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 2
    - conj
  sentence: <1:ADJ/root>(ganz) <ROOT> <2:NOUN/root>(Reiz) <3:AUX/cop>(ist) <4:CCONJ/cc>(und)
    <5:ADV/advmod>(dann) <6:ADP/case>(an) <7:DET/det>(dem) <8:NOUN/nmod>(Ende) <9:ADV/advmod>(doch)
    <10:PART/advmod>(nicht) <11:ADV/advmod>(echt) <12:ADP/case>(in) <13:DET/det>(dem)
    <14:NOUN/conj>(Sinne)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - cop
  - !!python/tuple
    - 3
    - 4
    - cc
  - !!python/tuple
    - 4
    - 1
    - conj
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - obl
  - !!python/tuple
    - 12
    - 13
    - advmod
  - !!python/tuple
    - 13
    - 4
    - advmod
  - !!python/tuple
    - 14
    - 4
    - compound:prt
  sentence: "<1:ADJ/root>(rein) <2:AUX/cop>(bin) <3:CCONJ/cc>(und) <4:VERB/conj>(lag)\
    \ <5:ADV/advmod>(dann) <6:ADV/advmod>(jetzt) <7:ADV/advmod>(nur) <8:ADV/advmod>(noch)\
    \ <9:ADP/case>(bei) <10:ADV/advmod>(gut) <11:NUM/obl>(8\u20AC) <12:ADV/advmod>(also)\
    \ <13:ADV/advmod>(schon) <14:ADV/compound:prt>(ein) <ROOT>"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(kein) <ROOT> <4:ADJ/amod>(medizinischer)
    <5:NOUN/root>(Eingriff)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:ADV/advmod>(Jetzt) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <4:DET/det>(die)
    <5:PROPN/nsubj>(Stelling) <6:ADV/advmod>(runter) <7:ADV/advmod>(Auch) <8:DET/obl>(ein)
    <ROOT> <9:NOUN/nsubj>(Job) <10:ADV/advmod>(so) <11:PROPN/root>(Lotse)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - xcomp
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - flat
  sentence: "<1:ADP/case>(In) <2:PROPN/obl>(Farpoint) <3:VERB/root>(f\xFChlt) <4:PRON/nsubj>(man)\
    \ <5:PRON/obj>(sich) <6:ADP/case>(wie) <7:ADV/advmod>(so) <8:NOUN/obl>(n) <9:VERB/xcomp>(verdammt)\
    \ <ROOT> <10:PROPN/root>(Space) <11:PROPN/flat>(Marine)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: <1:ADV/advmod>(Auch) <2:SCONJ/root>(wenn) <3:PRON/nsubj>(es) <4:ADJ/advmod>(vermutlich)
    <5:PART/advmod>(nicht) <6:ADV/advmod>(ganz) <7:ADV/advmod>(so) <8:DET/obl>(ein)
    <ROOT> <9:NOUN/root>(Wechsel) <10:AUX/cop>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - advmod
  sentence: <1:ADV/advmod>(Da) <2:AUX/cop>(war) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gesichtsausdruck)
    <5:ADV/advmod>(So)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 4
    - advcl
  sentence: <1:ADV/advmod>(Noch) <2:DET/root>(viel) <ROOT> <3:AUX/cop>(ist) <4:PRON/root>(das)
    <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(man) <7:ADP/case>(nach) <8:PROPN/obl>(Amerika)
    <9:VERB/advcl>(schaut)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 13
    - obl
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 6
    - flat
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 9
    - nmod
  - !!python/tuple
    - 13
    - 0
    - root
  - !!python/tuple
    - 14
    - 15
    - det
  - !!python/tuple
    - 15
    - 13
    - nsubj
  - !!python/tuple
    - 16
    - 13
    - advmod
  - !!python/tuple
    - 17
    - 0
    - root
  sentence: "<1:ADP/case>(In) <2:ADV/advmod>(besonders) <3:ADJ/amod>(gefragten) <4:NOUN/obl>(St\xE4\
    dten) <5:ADP/case>(wie) <6:PROPN/nmod>(K\xF6ln) <7:PROPN/flat>(Hamburg) <8:CCONJ/cc>(und)\
    \ <9:PROPN/conj>(Frankfurt) <10:ADP/case>(an) <11:DET/det>(dem) <12:PROPN/nmod>(Main)\
    \ <13:VERB/root>(sieht) <14:DET/det>(die) <15:NOUN/nsubj>(Entwicklung) <16:ADV/advmod>(noch)\
    \ <ROOT> <17:ADP/root>(aus)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 7
    - xcomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:ADP/case>(gegen\xFCber) <2:ADJ/amod>(schwarzen) <3:NOUN/root>(Personen)\
    \ <4:ADV/advmod>(immer) <ROOT> <5:CCONJ/cc>(und) <6:ADJ/xcomp>(schlimmer) <7:VERB/root>(werden)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 9
    - dep
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: <1:ADV/advmod>(Na) <2:PRON/nsubj>(es) <3:AUX/cop>(war) <4:ADV/advmod>(halt)
    <5:DET/root>(ein) <ROOT> <6:NOUN/dep>(Typ) <7:DET/det>(der) <8:NOUN/nsubj>(Monster)
    <9:VERB/root>(weggeballert) <10:AUX/aux>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  sentence: <1:ADV/root>(Denn) <ROOT> <2:NOUN/nsubj>(spitten) <3:VERB/root>(geht)
    <4:PART/advmod>(nicht)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - cc
  - !!python/tuple
    - 3
    - 1
    - advmod
  sentence: <ROOT> <1:VERB/root>(aussieht) <2:CCONJ/cc>(oder) <3:ADV/advmod>(so)
- dependencies:
  - !!python/tuple
    - 1
    - 15
    - cc
  - !!python/tuple
    - 2
    - 10
    - mark
  - !!python/tuple
    - 3
    - 10
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 10
    - obl
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 15
    - advcl
  - !!python/tuple
    - 11
    - 13
    - case
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 10
    - obl
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 0
    - root
  - !!python/tuple
    - 16
    - 15
    - nsubj
  - !!python/tuple
    - 17
    - 15
    - advmod
  - !!python/tuple
    - 18
    - 15
    - advmod
  - !!python/tuple
    - 19
    - 15
    - compound:prt
  - !!python/tuple
    - 20
    - 0
    - root
  - !!python/tuple
    - 21
    - 20
    - dep
  sentence: "<1:CCONJ/cc>(Aber) <2:SCONJ/mark>(wenn) <3:PRON/nsubj>(ich) <4:ADV/advmod>(praktisch)\
    \ <5:ADP/case>(auf) <6:DET/det>(diesem) <7:NOUN/obl>(H\xF6hepunkt) <8:DET/det>(der)\
    \ <9:NOUN/nmod>(Panik) <10:AUX/advcl>(bin) <11:ADP/case>(in) <12:DET/det>(diesem)\
    \ <13:NOUN/obl>(Traum) <14:ADV/advmod>(dann) <15:VERB/root>(wache) <16:PRON/nsubj>(ich)\
    \ <17:ADV/advmod>(halt) <18:ADV/advmod>(auch) <19:ADP/compound:prt>(in) <ROOT>\
    \ <20:NOUN/root>(Panik) <21:ADP/dep>(auf)"
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 7
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 7
    - obl
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - csubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  - !!python/tuple
    - 14
    - 16
    - case
  - !!python/tuple
    - 15
    - 16
    - det
  - !!python/tuple
    - 16
    - 12
    - obl
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 16
    - nmod
  sentence: "<1:CCONJ/cc>(Und) <2:PRON/nsubj>(was) <3:ADP/case>(f\xFCr) <4:NOUN/obl>(Festivals)\
    \ <6:PRON/nsubj>(ich) <7:VERB/csubj>(meine) <8:ADV/advmod>(da) <9:VERB/root>(wird)\
    \ <10:ADV/advmod>(richtig) <ROOT> <11:NOUN/nsubj>(Aufriss) <12:VERB/root>(betrieben)\
    \ <13:ADV/advmod>(Alleine) <14:ADP/case>(bei) <15:DET/det>(dem) <16:NOUN/obl>(B\xFC\
    hnenbild) <17:ADP/case>(bei) <18:DET/det>(den) <19:NOUN/nmod>(Lightshows)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 1
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADJ/root>(Okay) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:DET/appos>(ein)
    <ROOT> <5:NOUN/root>(Unterschied)
- dependencies:
  - !!python/tuple
    - 1
    - 7
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 11
    - case
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 8
    - nmod
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(so) <3:DET/det>(eine) <4:NOUN/nsubj>(Skipiste)
    <5:AUX/cop>(ist) <6:ADV/advmod>(auch) <7:DET/root>(ein) <ROOT> <8:NOUN/root>(Eingriff)
    <9:ADP/case>(in) <10:DET/det>(die) <11:NOUN/nmod>(Natur)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/root>(noch) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(l\xE4uft) <3:ADV/advmod>(nur) <ROOT>\
    \ <4:NOUN/root>(Kram)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(musst) <3:ADV/advmod>(schon) <ROOT> <4:VERB/root>(rappen)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 12
    - mark
  - !!python/tuple
    - 9
    - 12
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 7
    - ccomp
  sentence: <1:PRON/root>(Du) <ROOT> <2:PROPN/nsubj>(Hassler) <3:VERB/root>(machst)
    <4:ADP/case>(auf) <5:PRON/obl>(was) <6:CCONJ/cc>(und) <7:VERB/conj>(denkst) <8:SCONJ/mark>(das)
    <9:PRON/nsubj>(ich) <10:DET/det>(ein) <11:PRON/obj>(nichts) <12:AUX/ccomp>(bin)
krasses:
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - aux
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - case
  - !!python/tuple
    - 9
    - 7
    - nmod
  - !!python/tuple
    - 10
    - 7
    - advmod
  - !!python/tuple
    - 11
    - 13
    - cc
  - !!python/tuple
    - 12
    - 13
    - case
  - !!python/tuple
    - 13
    - 7
    - nmod
  sentence: "<1:AUX/aux>(kann) <2:ADV/advmod>(Ja) <3:PRON/nsubj>(das) <4:AUX/cop>(war)\
    \ <5:ADV/advmod>(definitiv) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Gespr\xE4ch)\
    \ <8:ADP/case>(mit) <9:PRON/nmod>(dir) <10:ADV/advmod>(heute) <11:CCONJ/cc>(und)\
    \ <12:ADP/case>(f\xFCr) <13:PRON/nmod>(mich)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(aber) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(heute)
    <5:ADV/advmod>(auch) <6:ADJ/root>(echt) <ROOT> <7:NOUN/root>(Wetter)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - mark
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - cop
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Weil) <2:PROPN/nsubj>(H\xF6) <3:PRON/nsubj>(Es) <4:AUX/cop>(ist)\
    \ <5:ADV/advmod>(ja) <6:ADV/advmod>(immernoch) <7:DET/root>(ein) <ROOT> <8:NOUN/nsubj>(Video)\
    \ <9:PRON/nsubj>(das) <10:ADV/advmod>(da) <11:VERB/root>(kommt)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - mark
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 7
    - advcl
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - expl
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 7
    - obj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:SCONJ/mark>(wie) <3:DET/det>(die) <4:NOUN/nsubj>(Freizeit)\
    \ <5:NOUN/obj>(Vergn\xFCgen) <6:VERB/advcl>(verr\xE4t) <7:VERB/root>(gibt) <8:PRON/expl>(es)\
    \ <9:ADV/advmod>(noch) <10:DET/det>(ein) <11:ADJ/obj>(weiteres) <ROOT> <12:NOUN/root>(Detail)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:DET/det>(Die) <2:NOUN/nsubj>(Szene) <3:ADP/case>(aus) <4:PROPN/nmod>(Uncharted)
    <5:AUX/root>(mag) <6:DET/det>(ein) <7:ADV/advmod>(besonders) <ROOT> <8:NOUN/root>(Beispiel)
    <9:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - ccomp
  sentence: "<1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:DET/obj>(ein) <ROOT> <4:NOUN/obj>(Video)\
    \ <5:VERB/root>(gefunden) <6:PRON/nsubj>(das) <7:AUX/aux>(hattest) <8:PRON/nsubj>(du)\
    \ <9:ADV/advmod>(auch) <10:VERB/ccomp>(gel\xF6scht)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(so) <3:DET/root>(ein) <ROOT> <4:NOUN/obj>(Risiko)
    <5:AUX/aux>(will) <6:PROPN/nsubj>(Boeing) <7:PART/advmod>(nicht) <8:VERB/root>(eingehen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 6
    - 4
    - flat
  - !!python/tuple
    - 8
    - 4
    - flat
  sentence: "<1:ADV/advmod>(Wie) <2:ADV/advmod>(so) <3:DET/root>(ein) <ROOT> <4:PROPN/root>(Duschgel)\
    \ <6:PROPN/flat>(Kr\xE4uterlich) <8:ADJ/flat>(herb)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - aux
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:ADV/advmod>(so) <3:PRON/root>(was) <ROOT> <4:AUX/aux>(hab)
    <5:PRON/nsubj>(ich) <6:ADV/advmod>(noch) <7:ADV/advmod>(nirgends) <8:VERB/root>(erlebt)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 10
    - advmod
  - !!python/tuple
    - 6
    - 10
    - case
  - !!python/tuple
    - 7
    - 10
    - det
  - !!python/tuple
    - 8
    - 10
    - compound
  - !!python/tuple
    - 10
    - 3
    - conj
  - !!python/tuple
    - 11
    - 3
    - dep
  sentence: <1:ADV/advmod>(Vielleicht) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Einzelbeispiel)
    <4:CCONJ/cc>(aber) <5:ADV/advmod>(auch) <6:ADP/case>(bei) <7:DET/det>(den) <8:NOUN/compound>(Witz)
    <10:NOUN/conj>(Konferenzen) <11:SCONJ/dep>(wenn)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - advmod
  - !!python/tuple
    - 8
    - 6
    - advmod
  - !!python/tuple
    - 9
    - 12
    - case
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 14
    - obl
  - !!python/tuple
    - 13
    - 14
    - mark
  - !!python/tuple
    - 14
    - 6
    - csubj
  sentence: "<1:PROPN/nsubj>(Wow) <2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(schon)\
    \ <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Gef\xFChl) <7:ADV/advmod>(jetzt) <8:ADV/advmod>(hier)\
    \ <9:ADP/case>(in) <10:ADV/advmod>(so) <11:DET/det>(eine) <12:NOUN/obl>(R\xF6\
    hre) <13:PART/mark>(zu) <14:VERB/csubj>(kommen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Was) <2:AUX/root>(ist) <3:PRON/nsubj>(es) <4:ADV/advmod>(bitte)\
    \ <5:ADP/case>(f\xFCr) <6:DET/obl>(ein) <ROOT> <7:NOUN/root>(Gl\xFCcksgef\xFC\
    hl)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - compound:prt
  - !!python/tuple
    - 4
    - 7
    - dep
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:VERB/root>(bekommen) <2:PRON/nsubj>(wir) <3:ADV/compound:prt>(ein)\
    \ <ROOT> <4:NOUN/dep>(Beispiel) <5:ADP/case>(f\xFCr) <6:NOUN/obl>(Falschberatung)\
    \ <7:VERB/root>(zugespielt)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - cop
  - !!python/tuple
    - 8
    - 5
    - parataxis
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Du) <2:AUX/aux>(bist) <3:ADP/case>(auf) <4:PRON/obl>(dich)\
    \ <5:VERB/root>(gestellt) <6:PRON/nsubj>(Das) <7:AUX/cop>(war) <8:DET/parataxis>(ein)\
    \ <ROOT> <9:NOUN/root>(Gef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 7
    - amod
  sentence: "<1:PRON/nsubj>(Du) <2:VERB/root>(entwickelst) <3:ADP/case>(zu) <4:DET/det>(den)\
    \ <5:NOUN/obl>(G\xE4sten) <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/root>(Verh\xE4\
    ltnis) <9:ADV/advmod>(ganz) <10:ADJ/amod>(eng)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - advcl
  - !!python/tuple
    - 5
    - 4
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 6
    - xcomp
  - !!python/tuple
    - 10
    - 6
    - advmod
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:PRON/root>(was) <ROOT> <4:VERB/advcl>(sagt)
    <5:ADV/advmod>(dann) <6:VERB/root>(wird) <7:PRON/nsubj>(das) <8:ADV/advmod>(so)
    <9:VERB/xcomp>(weitergeschickt) <10:ADV/advmod>(untereinander)
- dependencies:
  - !!python/tuple
    - 2
    - 7
    - dep
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<2:NOUN/dep>(off) <4:PRON/nsubj>(Das) <5:AUX/cop>(ist) <6:ADV/advmod>(echt)\
    \ <7:DET/root>(ein) <ROOT> <8:NOUN/root>(Gef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/root>(Was) <2:ADP/case>(f\xFCr) <3:DET/nmod>(ein) <ROOT> <4:NOUN/root>(Gef\xFC\
    hl)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 3
    - obl
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - obj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADP/case>(vor) <2:PRON/obl>(dir) <3:VERB/root>(war) <4:PRON/nsubj>(ich)
    <5:ADV/advmod>(noch) <6:DET/obj>(ein) <ROOT> <7:NOUN/root>(Kind)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 14
    - dep
  - !!python/tuple
    - 8
    - 13
    - cc
  - !!python/tuple
    - 9
    - 12
    - advmod
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(haben) <3:ADP/case>(in) <4:PRON/obl>(sich)
    <5:ADV/advmod>(so) <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/dep>(Hassproblem)
    <8:CCONJ/cc>(und) <9:ADJ/advmod>(wahrscheinlich) <10:DET/advmod>(viel) <11:ADV/advmod>(zu)
    <12:DET/det>(wenig) <13:NOUN/obj>(Liebe) <14:VERB/root>(erfahren)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:ADV/advmod>(Hier) <2:ADV/advmod>(noch) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:AUX/cop>(sind) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(team)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 3
    - appos
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Abtreibung) <2:AUX/cop>(ist) <3:NOUN/root>(Mord) <4:PRON/nsubj>(es)
    <5:AUX/cop>(ist) <6:DET/appos>(kein) <ROOT> <7:NOUN/root>(Vokabular)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - amod
  - !!python/tuple
    - 6
    - 4
    - dep
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Bild)
    <5:PROPN/amod>(Junger) <6:PROPN/dep>(Mann)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 3
    - fixed
  - !!python/tuple
    - 5
    - 1
    - compound:prt
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:ADJ/root>(Musikalisch) <2:ADP/case>(von) <3:NOUN/nmod>(Anfang) <4:ADP/fixed>(an)
    <5:ADV/compound:prt>(ein) <ROOT> <6:NOUN/root>(Antitalent)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 4
    - nsubj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - obj
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 9
    - aux
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - cop
  sentence: <1:ADV/advmod>(Sehr) <2:ADV/advmod>(gut) <3:PRON/nsubj>(Wir) <4:VERB/root>(haben)
    <5:DET/obj>(ein) <ROOT> <6:PROPN/nsubj>(Delay) <7:AUX/aux>(kann) <8:PRON/root>(das)
    <9:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <4:NOUN/dep>(St\xFCckchen)\
    \ <5:NOUN/root>(Kuchen) <6:CCONJ/cc>(doch) <7:PRON/nsubj>(es) <8:AUX/cop>(ist)\
    \ <9:ADV/advmod>(halt) <10:ADV/advmod>(so)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:CCONJ/cc>(Doch) <2:PRON/nsubj>(ich) <3:VERB/root>(hab) <5:PART/advmod>(nicht)
    <6:ADV/advmod>(mal) <7:ADV/advmod>(wirklich) <ROOT> <8:VERB/root>(Verlangen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(fahr) <3:PROPN/obj>(AMG) <4:ADP/case>(durch)
    <5:DET/obl>(dein) <ROOT> <6:NOUN/root>(Ghetto)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 1
    - dep
  - !!python/tuple
    - 4
    - 8
    - obj
  - !!python/tuple
    - 5
    - 8
    - aux
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:SCONJ/root>(Wenn) <2:PRON/nsubj>(das) <3:DET/dep>(ein) <ROOT> <4:NOUN/obj>(Missverh\xE4\
    ltnis) <5:AUX/aux>(ist) <6:AUX/aux>(muss) <7:PRON/nsubj>(ich) <8:VERB/root>(handeln)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 8
    - dep
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - obj
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 5
    - conj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:ADV/root>(so) <ROOT> <3:NOUN/dep>(Ding) <4:PRON/nsubj>(das) <5:NOUN/obj>(Cash)\
    \ <6:CCONJ/cc>(und) <7:NOUN/conj>(Spa\xDF) <8:VERB/root>(bringt)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - cop
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(nur)\
    \ <5:DET/det>(ein) <6:ADJ/root>(\xFCbertrieben) <ROOT> <7:NOUN/root>(Intro)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - amod
  - !!python/tuple
    - 9
    - 6
    - nsubj
  sentence: "<1:ADV/advmod>(Dann) <2:VERB/root>(gibt) <3:X/advmod>(s) <4:ADV/advmod>(noch)\
    \ <5:NOUN/obj>(n) <ROOT> <6:NOUN/root>(Ger\xFCcht) <7:AUX/cop>(Ist) <8:ADJ/amod>(wahrscheinlich)\
    \ <9:PROPN/nsubj>(Bullshit)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - dep
  - !!python/tuple
    - 9
    - 10
    - nsubj
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 10
    - obj
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(sagst) <ROOT> <7:NOUN/dep>(Kind) <9:PRON/nsubj>(Ich)
    <10:VERB/root>(sag) <11:DET/det>(das) <12:NOUN/obj>(Gangstar)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - nmod
  sentence: <ROOT> <1:NOUN/root>(Tier) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/nmod>(Bett)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - flat
  sentence: <1:DET/det>(Ein) <2:DET/root>(anderes) <3:ADV/advmod>(ziemlich) <ROOT>
    <4:NOUN/nsubj>(Beispiel) <5:AUX/cop>(ist) <6:PROPN/root>(Saudi) <7:PROPN/flat>(Arabien)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - nmod
  sentence: "<1:DET/det>(Ein) <2:ADV/root>(besonders) <ROOT> <3:NOUN/root>(Beispiel)\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(eine) <6:DET/det>(solche) <7:NOUN/nmod>(Situation)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<2:PRON/nsubj>(Das) <3:AUX/cop>(ist) <4:ADV/advmod>(einfach) <5:DET/root>(ein)\
    \ <ROOT> <6:NOUN/root>(Gef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:VERB/root>(wird) <3:DET/xcomp>(ein) <ROOT> <4:NOUN/root>(Jahr)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - aux
  sentence: <1:PRON/root>(die) <ROOT> <2:NOUN/nsubj>(Mobbing) <3:VERB/root>(erlebt)
    <4:AUX/aux>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - obl
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(sorge) <3:ADP/case>(wie) <4:PROPN/obl>(Gerner)\
    \ <5:ADP/case>(von) <6:DET/det>(dem) <7:NOUN/obl>(Fasan) <8:ADP/compound:prt>(f\xFC\
    r) <ROOT> <9:NOUN/root>(Nervenkitzeln)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cop
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - cop
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 7
    - nmod
  - !!python/tuple
    - 11
    - 7
    - advmod
  - !!python/tuple
    - 12
    - 14
    - det
  - !!python/tuple
    - 13
    - 14
    - det
  - !!python/tuple
    - 14
    - 7
    - nmod
  sentence: "<1:AUX/cop>(ist) <2:DET/root>(ein) <ROOT> <3:NOUN/nsubj>(Zeichen) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:ADV/advmod>(so) <7:ADJ/root>(wichtig) <8:ADP/case>(in) <9:DET/det>(solchen)\
    \ <10:NOUN/nmod>(Zeiten) <11:ADV/advmod>(Daf\xFCr) <12:DET/det>(vielen) <13:DET/det>(vieln)\
    \ <14:NOUN/nmod>(Dank)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 10
    - case
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 3
    - conj
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(du) <3:VERB/root>(hast) <4:ADV/advmod>(recht)
    <5:NOUN/obj>(Bitches) <6:ADV/advmod>(oben) <7:ADP/case>(ohne) <8:AUX/cop>(sind)
    <9:ADV/advmod>(schon) <10:PRON/conj>(was) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:SCONJ/root>(das) <2:PRON/nsubj>(wir) <3:DET/det>(ein) <4:ADJ/advmod>(ganz)
    <ROOT> <5:NOUN/root>(Ding)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advcl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 2
    - advmod
  - !!python/tuple
    - 8
    - 2
    - obj
  - !!python/tuple
    - 9
    - 11
    - cc
  - !!python/tuple
    - 10
    - 11
    - amod
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:AUX/advcl>(ist) <2:VERB/root>(glaube) <3:PRON/nsubj>(ich) <4:ADV/advmod>(schon)
    <5:ADV/advmod>(auch) <6:ADV/advmod>(noch) <7:ADV/advmod>(mal) <8:NOUN/obj>(n)
    <ROOT> <9:CCONJ/cc>(und) <10:ADJ/amod>(gutes) <11:NOUN/root>(Zeichen)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - dep
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/aux>(kann) <3:DET/det>(ein) <4:ADJ/root>(echt)\
    \ <ROOT> <5:NOUN/dep>(Gef\xFChl) <6:ADP/case>(von) <7:NOUN/nmod>(Ohnmacht) <8:VERB/root>(ausl\xF6\
    sen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 9
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(bin) <3:ADV/advmod>(erst) <4:ADV/advmod>(mal)
    <5:ADV/advmod>(wieder) <6:ADP/case>(in) <7:DET/obl>(ein) <ROOT> <8:NOUN/dep>(Loch)
    <9:VERB/root>(gefallen)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - det:poss
  - !!python/tuple
    - 7
    - 8
    - nsubj
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - advmod
  - !!python/tuple
    - 10
    - 14
    - mark
  - !!python/tuple
    - 11
    - 14
    - obj
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 14
    - obj
  - !!python/tuple
    - 14
    - 8
    - advcl
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(passiert) <4:PRON/nsubj>(was)
    <ROOT> <5:PROPN/nsubj>(Henrike) <6:DET/det:poss>(meine) <7:NOUN/nsubj>(Kamerafrau)
    <8:VERB/root>(kommt) <9:ADV/advmod>(rum) <10:ADP/mark>(um) <11:PRON/obj>(sich)
    <12:DET/det>(das) <13:NOUN/obj>(Bild) <14:VERB/advcl>(anzugucken)
- dependencies:
  - !!python/tuple
    - 1
    - 8
    - nsubj
  - !!python/tuple
    - 2
    - 8
    - cop
  - !!python/tuple
    - 3
    - 8
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 8
    - det
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(nat\xFCrlich) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(uns) <6:DET/det>(ein) <7:ADV/advmod>(ganz) <8:ADJ/root>(sch\xF6\
    n) <ROOT> <9:NOUN/root>(Ding)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(So) <2:PROPN/nsubj>(boah) <3:AUX/cop>(ist) <4:DET/root>(ein)
    <ROOT> <5:NOUN/obj>(Spiel) <6:ADJ/amod>(abgefahrene) <7:NOUN/root>(Story)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - obj
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - obj
  - !!python/tuple
    - 6
    - 1
    - ccomp
  - !!python/tuple
    - 7
    - 12
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - parataxis
  - !!python/tuple
    - 9
    - 8
    - nsubj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 8
    - advmod
  - !!python/tuple
    - 13
    - 14
    - dep
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:VERB/root>(Findet) <2:PRON/obj>(ihr) <3:SCONJ/mark>(dass) <4:PRON/nsubj>(es)
    <5:PRON/obj>(irgendwas) <6:VERB/ccomp>(gibt) <7:PRON/nsubj>(was) <8:NOUN/parataxis>(Leute)
    <9:PRON/nsubj>(die) <10:ADV/advmod>(vielleicht) <11:PART/advmod>(nicht) <12:ADV/advmod>(euer)
    <ROOT> <13:NOUN/dep>(Schicksal) <14:VERB/root>(haben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 8
    - nsubj
  - !!python/tuple
    - 3
    - 8
    - cop
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 8
    - nmod
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 12
    - nsubj
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - advmod
  sentence: "<1:ADV/advmod>(Also) <2:NOUN/nsubj>(Verh\xFCtung) <3:AUX/cop>(ist) <4:ADP/case>(f\xFC\
    r) <5:PRON/nmod>(mich) <6:ADV/advmod>(einfach) <7:DET/det>(ein) <8:ADJ/root>(ganz)\
    \ <ROOT> <9:ADJ/amod>(gro\xDFes) <10:NOUN/nsubj>(Thema) <11:PRON/nsubj>(Ich) <12:VERB/root>(hab)\
    \ <13:ADV/advmod>(halt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 10
    - dep
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - aux
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: <1:DET/det>(Ein) <2:ADJ/root>(absolut) <ROOT> <3:NOUN/dep>(Erlebnis) <4:CCONJ/cc>(Und)
    <5:ADV/advmod>(umso) <6:ADV/advmod>(mehr) <7:AUX/aux>(will) <8:PRON/nsubj>(ich)
    <9:ADV/advmod>(jetzt) <10:VERB/root>(wissen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - amod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - nmod
  - !!python/tuple
    - 6
    - 8
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - appos
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 9
    - cop
  sentence: "<1:ADJ/amod>(h\xF6here) <2:NOUN/root>(Aufl\xF6sung) <3:ADP/case>(bei)\
    \ <4:ADV/det>(mehr) <5:NOUN/nmod>(Frames) <6:PRON/nsubj>(was) <7:DET/det>(ein)\
    \ <8:ADJ/appos>(richtig) <ROOT> <9:NOUN/root>(Argument) <10:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - cc
  - !!python/tuple
    - 2
    - 6
    - advmod
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:INTJ/advmod>(\xE4h) <3:ADV/advmod>(ja) <4:PRON/nsubj>(das)\
    \ <5:AUX/cop>(ist) <6:DET/root>(ein) <ROOT> <7:NOUN/root>(Intro)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADV/advmod>(Hier) <2:VERB/root>(kommt) <3:ADV/advmod>(gleich) <4:DET/obj>(ein)\
    \ <ROOT> <5:NOUN/root>(Wandgem\xE4lde)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - cc
  - !!python/tuple
    - 7
    - 11
    - nsubj
  - !!python/tuple
    - 8
    - 11
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 5
    - conj
  sentence: <1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Thema) <6:CCONJ/cc>(und) <7:PRON/nsubj>(das) <8:AUX/cop>(ist)
    <9:ADV/advmod>(so) <10:ADV/advmod>(entschuldige) <11:NOUN/conj>(bitte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(so) <4:DET/det>(ein)
    <5:ADV/advmod>(total) <ROOT> <6:NOUN/root>(Autarkheitsding)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 10
    - advmod
  - !!python/tuple
    - 7
    - 10
    - nsubj
  - !!python/tuple
    - 8
    - 10
    - cop
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 5
    - appos
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Aber) <2:PRON/nsubj>(was) <3:AUX/cop>(ist) <4:DET/det:poss>(deine)
    <5:NOUN/root>(Motivation) <6:ADV/advmod>(Warum) <7:PRON/nsubj>(Das) <8:AUX/cop>(ist)
    <9:ADV/advmod>(ja) <10:DET/appos>(ein) <ROOT> <11:NOUN/root>(Unterfangen)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - det:poss
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 6
    - obl
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Die) <2:DET/det:poss>(mein) <3:SCONJ/mark>(das) <4:PRON/nsubj>(sie)
    <5:NOUN/nsubj>(Styler) <6:AUX/root>(sind) <7:ADP/case>(ohne) <8:DET/obl>(ein)
    <ROOT> <9:NOUN/root>(Geschick)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  - !!python/tuple
    - 8
    - 6
    - aux
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(das) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Tabu) <7:AUX/cop>(sein) <8:AUX/aux>(muss)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - case
  - !!python/tuple
    - 2
    - 5
    - obl
  - !!python/tuple
    - 3
    - 5
    - cc
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 5
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 5
    - advmod
  - !!python/tuple
    - 10
    - 12
    - obj
  - !!python/tuple
    - 11
    - 12
    - advmod
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - aux
  - !!python/tuple
    - 14
    - 12
    - cc
  sentence: "<1:ADP/case>(In) <2:PROPN/obl>(Amerika) <3:CCONJ/cc>(oder) <4:ADV/advmod>(so)\
    \ <5:VERB/root>(h\xE4tten) <6:PRON/nsubj>(wir) <7:ADV/advmod>(so) <8:DET/det>(ein)\
    \ <9:ADJ/advmod>(richtig) <ROOT> <10:NOUN/obj>(Video) <11:ADV/advmod>(daraus)\
    \ <12:VERB/root>(machen) <13:AUX/aux>(k\xF6nnen) <14:CCONJ/cc>(aber)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(so) <2:ADP/case>(wie) <3:DET/det>(ein) <4:ADJ/root>(richtig)
    <ROOT> <5:NOUN/root>(Tape)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hab) <3:ADV/advmod>(so) <4:DET/obj>(ein)
    <ROOT> <5:NOUN/root>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 7
    - 11
    - cc
  - !!python/tuple
    - 8
    - 11
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - cop
  - !!python/tuple
    - 10
    - 11
    - advmod
  - !!python/tuple
    - 11
    - 4
    - conj
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Sie) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADJ/root>(ber\xFC\
    hmt) <5:ADP/case>(auf) <6:NOUN/nmod>(Instagram) <7:CCONJ/cc>(und) <8:PRON/nsubj>(es)\
    \ <9:AUX/cop>(ist) <10:ADV/advmod>(so) <11:DET/conj>(ein) <ROOT> <12:NOUN/root>(Feeling)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:SCONJ/mark>(Wenn) <2:PRON/nsubj>(man) <3:ADV/advmod>(mal) <4:DET/det>(ein)
    <5:ADJ/root>(richtig) <ROOT> <6:NOUN/dep>(Spiel) <7:VERB/root>(hatte)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 7
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Wir) <2:VERB/root>(haben) <3:NOUN/obj>(Schlampe) <4:PRON/obj>(nichts)
    <5:ADP/xcomp>(als) <ROOT> <6:PROPN/dep>(Stigmata) <7:VERB/root>(empfunden)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - obj
  - !!python/tuple
    - 6
    - 14
    - dep
  - !!python/tuple
    - 7
    - 14
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det:poss
  - !!python/tuple
    - 9
    - 14
    - obj
  - !!python/tuple
    - 10
    - 12
    - case
  - !!python/tuple
    - 11
    - 12
    - det
  - !!python/tuple
    - 12
    - 14
    - obl
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(ich) <3:VERB/root>(will) <4:ADV/advmod>(gar)
    <5:DET/obj>(kein) <ROOT> <6:NOUN/dep>(Game) <7:ADV/advmod>(nur) <8:DET/det:poss>(mein)
    <9:NOUN/obj>(Bild) <10:ADP/case>(an) <11:DET/det>(der) <12:NOUN/obl>(Wand) <13:ADV/advmod>(da)
    <14:VERB/root>(sehn)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nmod
  sentence: <1:AUX/root>(ist) <ROOT> <2:NOUN/root>(Versagen) <3:DET/det>(der) <4:NOUN/nmod>(Bundesregierung)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - mark
  - !!python/tuple
    - 6
    - 7
    - obj
  - !!python/tuple
    - 7
    - 4
    - ccomp
  - !!python/tuple
    - 8
    - 7
    - aux
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 7
    - xcomp
  - !!python/tuple
    - 11
    - 14
    - aux
  - !!python/tuple
    - 12
    - 14
    - nsubj
  - !!python/tuple
    - 13
    - 14
    - advmod
  - !!python/tuple
    - 14
    - 10
    - obj
  sentence: "<1:PRON/nsubj>(Es) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gef\xFC\
    hl) <5:SCONJ/mark>(als) <6:DET/obj>(alle) <7:VERB/ccomp>(angefangen) <8:AUX/aux>(haben)\
    \ <9:PART/mark>(zu) <10:VERB/xcomp>(klatschen) <11:AUX/aux>(habe) <12:PRON/nsubj>(ich)\
    \ <13:ADV/advmod>(echt) <14:NOUN/obj>(G\xE4nsehaut)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - advmod
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(zwar) <3:AUX/cop>(ist) <4:ADV/advmod>(heut)
    <5:NOUN/root>(Nacht) <6:PRON/nsubj>(was) <ROOT> <7:VERB/root>(passiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(Zu) <ROOT> <2:NOUN/root>(Dope)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - nsubj
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - case
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:NOUN/nsubj>(Platzwart) <2:PROPN/nsubj>(Carl) <3:AUX/cop>(ist) <4:NOUN/root>(Experte)\
    \ <5:ADP/case>(f\xFCr) <ROOT> <6:NOUN/root>(Winterwetter)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/det>(ein) <4:ADJ/root>(v\xF6\
    llig) <ROOT> <5:NOUN/root>(Erlebnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - obl:arg
  - !!python/tuple
    - 3
    - 2
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 4
    - advmod
  - !!python/tuple
    - 9
    - 14
    - dep
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 14
    - cop
  - !!python/tuple
    - 12
    - 14
    - case
  - !!python/tuple
    - 13
    - 14
    - nummod
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:DET/det>(der) <2:NOUN/obl:arg>(Infobox) <3:NUM/nmod>(2019) <4:AUX/root>(war)\
    \ <5:ADP/case>(f\xFCr) <6:PRON/obl>(uns) <7:DET/det>(ein) <8:ADV/advmod>(ziemlich)\
    \ <ROOT> <9:NOUN/dep>(Jahr) <10:PRON/appos>(Wir) <11:AUX/cop>(sind) <12:ADP/case>(von)\
    \ <13:NUM/nummod>(300) <14:NUM/root>(000)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 12
    - nsubj
  - !!python/tuple
    - 4
    - 10
    - cc
  - !!python/tuple
    - 5
    - 7
    - advmod
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 3
    - acl
  - !!python/tuple
    - 11
    - 12
    - nsubj
  - !!python/tuple
    - 12
    - 0
    - root
  - !!python/tuple
    - 13
    - 12
    - obl:arg
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 12
    - advmod
  sentence: "<1:PRON/nsubj>(der) <2:VERB/root>(hat) <ROOT> <3:NOUN/nsubj>(Talent)\
    \ <4:CCONJ/cc>(aber) <5:ADV/advmod>(so) <6:DET/det>(den) <7:NOUN/conj>(Menschen)\
    \ <8:ADV/advmod>(dahinter) <9:PART/mark>(zu) <10:VERB/acl>(sehen) <11:PRON/nsubj>(das)\
    \ <12:VERB/root>(f\xE4llt) <13:PRON/obl:arg>(mir) <14:ADV/advmod>(total) <15:ADJ/advmod>(schwer)"
- dependencies:
  - !!python/tuple
    - 2
    - 6
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 12
    - nsubj
  - !!python/tuple
    - 9
    - 12
    - obj
  - !!python/tuple
    - 10
    - 12
    - advmod
  - !!python/tuple
    - 11
    - 12
    - obj
  - !!python/tuple
    - 12
    - 7
    - acl
  sentence: <2:PROPN/nsubj>(Marcel) <4:PRON/nsubj>(Es) <5:AUX/cop>(war) <6:DET/root>(ein)
    <ROOT> <7:NOUN/root>(Bild) <8:PRON/nsubj>(was) <9:PRON/obj>(sich) <10:ADV/advmod>(da)
    <11:DET/obj>(einem) <12:VERB/acl>(bietet)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  sentence: "<1:PRON/root>(Was) <2:ADP/case>(f\xFCr) <3:DET/nmod>(ein) <ROOT> <4:NOUN/root>(Jahr)\
    \ <5:CCONJ/cc>(oder)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - cc
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 4
    - conj
  - !!python/tuple
    - 8
    - 7
    - nsubj
  - !!python/tuple
    - 9
    - 11
    - advmod
  - !!python/tuple
    - 10
    - 11
    - obj
  - !!python/tuple
    - 11
    - 7
    - acl
  sentence: <1:VERB/root>(halt) <2:ADV/advmod>(schon) <3:PRON/obj>(irgendwas) <ROOT>
    <4:VERB/root>(kommen) <5:CCONJ/cc>(Und) <6:ADV/advmod>(dann) <7:VERB/conj>(guck)
    <8:PRON/nsubj>(ich) <9:ADV/advmod>(mal) <10:PRON/obj>(was) <11:VERB/acl>(abgeht)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <ROOT> <4:NOUN/root>(Business)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - advmod
  - !!python/tuple
    - 2
    - 4
    - advmod
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 10
    - nsubj
  - !!python/tuple
    - 6
    - 10
    - nsubj
  - !!python/tuple
    - 7
    - 10
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - case
  sentence: <1:ADV/advmod>(Jetzt) <2:PART/advmod>(nicht) <3:ADV/advmod>(so) <4:ADJ/root>(ultra)
    <ROOT> <5:NOUN/nsubj>(Feuerwerk) <6:PRON/nsubj>(das) <7:AUX/cop>(sind) <8:ADV/advmod>(eher)
    <9:ADV/advmod>(so) <10:NOUN/root>(Sachen) <11:ADP/case>(wie)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 3
    - ccomp
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 3
    - conj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 7
    - obj
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:PRON/nsubj>(das) <3:VERB/root>(hat) <4:PRON/obj>(Das)
    <5:VERB/ccomp>(find) <6:PRON/nsubj>(ich) <7:VERB/conj>(ist) <8:ADV/advmod>(erst)
    <9:ADV/advmod>(mal) <10:DET/obj>(ein) <ROOT> <11:NOUN/root>(Bild)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - appos
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADP/case>(Mit) <2:ADJ/amod>(kleinem) <3:NOUN/root>(Budget) <4:PRON/appos>(was)
    <ROOT> <5:VERB/root>(aufbauen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - obj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/obj>(was) <2:VERB/root>(haben) <3:PRON/nsubj>(wir) <4:ADV/advmod>(da)\
    \ <5:ADP/case>(f\xFCr) <6:DET/obl>(ein) <ROOT> <7:NOUN/dep>(Album) <8:VERB/root>(gemacht)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - aux
  - !!python/tuple
    - 7
    - 8
    - case
  - !!python/tuple
    - 8
    - 9
    - obl
  - !!python/tuple
    - 9
    - 3
    - parataxis
  sentence: "<1:PRON/nsubj>(Was) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Gef\xFChl)\
    \ <5:PRON/nsubj>(Ich) <6:AUX/aux>(werd) <7:ADP/case>(mit) <8:NOUN/obl>(Waffen)\
    \ <9:VERB/parataxis>(begr\xFC\xDFt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 10
    - cc
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 2
    - conj
  - !!python/tuple
    - 11
    - 10
    - advmod
  - !!python/tuple
    - 12
    - 10
    - obj
  - !!python/tuple
    - 13
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(hatte) <3:NOUN/obj>(G\xE4nsehaut) <4:ADV/advmod>(wirklich)\
    \ <5:ADP/case>(an) <6:DET/det>(manchen) <7:NOUN/obl>(Stellen) <8:CCONJ/cc>(und)\
    \ <9:ADV/advmod>(ja) <10:VERB/conj>(war) <11:ADV/advmod>(schon) <12:DET/obj>(ein)\
    \ <ROOT> <13:NOUN/root>(Erlebnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - cc
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - nsubj
  - !!python/tuple
    - 7
    - 11
    - aux:pass
  - !!python/tuple
    - 8
    - 10
    - case
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - obl
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:CCONJ/cc>(Denn) <2:PRON/nsubj>(es) <3:AUX/cop>(ist) <4:ADV/advmod>(so)
    <5:PRON/root>(dein) <ROOT> <6:NOUN/nsubj>(Koks) <7:AUX/aux:pass>(war) <8:ADP/case>(aus)
    <9:DET/det>(dem) <10:NOUN/obl>(Waschsalon) <11:VERB/root>(geklaut)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:ADV/advmod>(So) <2:DET/root>(viel) <ROOT> <3:NOUN/root>(Gem\xFCse)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(Super) <ROOT> <2:NOUN/root>(Wetter)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(Du) <2:VERB/root>(hast) <ROOT> <4:NOUN/root>(Handicap)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - advcl
  - !!python/tuple
    - 10
    - 9
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 13
    - det
  - !!python/tuple
    - 13
    - 9
    - advmod
  - !!python/tuple
    - 14
    - 9
    - compound:prt
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:DET/root>(ein)\
    \ <ROOT> <5:NOUN/nsubj>(Missverh\xE4ltnis) <6:PART/advmod>(nicht) <7:ADJ/root>(wahr)\
    \ <8:CCONJ/cc>(und) <9:SCONJ/advcl>(wenn) <10:PRON/nsubj>(wir) <11:ADV/advmod>(noch)\
    \ <12:DET/det>(ein) <13:ADV/advmod>(bisschen) <14:ADV/compound:prt>(weiter)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gef\xFC\
    hl)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - case
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(war) <3:ADV/advmod>(so) <4:DET/det>(ein)\
    \ <5:ADJ/root>(ganz) <ROOT> <6:NOUN/root>(Bauchgef\xFChl) <7:ADP/case>(von)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - obl
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 2
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:PRON/nsubj>(Was) <2:VERB/root>(meint) <3:PRON/obj>(ihr) <4:ADP/case>(Auf)
    <5:DET/det>(jeden) <6:NOUN/obl>(Fall) <7:DET/det>(ein) <8:ADV/advmod>(sehr) <ROOT>
    <9:NOUN/root>(Ende)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:PROPN/root>(Hamburg) <ROOT> <2:NOUN/root>(Ding)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - xcomp
  - !!python/tuple
    - 7
    - 3
    - ccomp
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 3
    - dep
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:DET/det>(Das) <2:NOUN/nsubj>(Ganze) <3:VERB/root>(l\xE4uft) <4:ADV/advmod>(noch)\
    \ <5:PART/advmod>(nicht) <6:ADJ/xcomp>(stabil) <7:AUX/ccomp>(ist) <8:ADV/advmod>(aber)\
    \ <9:DET/dep>(ein) <ROOT> <10:NOUN/root>(Projekt)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 11
    - amod
  - !!python/tuple
    - 6
    - 11
    - amod
  - !!python/tuple
    - 7
    - 11
    - compound
  - !!python/tuple
    - 9
    - 11
    - compound
  - !!python/tuple
    - 11
    - 0
    - root
  sentence: <1:PROPN/nsubj>(Rayman) <2:PROPN/flat>(Legends) <3:AUX/cop>(ist) <4:DET/root>(ein)
    <ROOT> <5:ADJ/amod>(supergeiles) <6:ADJ/amod>(Jump-) <7:NOUN/compound>(n) <9:NOUN/compound>(Run)
    <11:NOUN/root>(Paket)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - case
  - !!python/tuple
    - 4
    - 5
    - amod
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 7
    - cc
  - !!python/tuple
    - 7
    - 2
    - conj
  - !!python/tuple
    - 8
    - 7
    - obj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Er) <2:VERB/root>(sitzt) <3:ADP/case>(wegen) <4:ADJ/amod>(r\xE4\
    uberischer) <5:NOUN/obl>(Erpressung) <6:CCONJ/cc>(und) <7:VERB/conj>(hat) <8:DET/obj>(ein)\
    \ <ROOT> <9:NOUN/root>(Drogenproblem)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - parataxis
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 11
    - cc
  - !!python/tuple
    - 9
    - 11
    - nsubj
  - !!python/tuple
    - 10
    - 11
    - cop
  - !!python/tuple
    - 11
    - 7
    - conj
  - !!python/tuple
    - 12
    - 11
    - case
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(glaub) <4:PRON/nsubj>(wir) <5:AUX/cop>(sind)
    <6:DET/parataxis>(ein) <ROOT> <7:NOUN/root>(Paar) <8:CCONJ/cc>(und) <9:PRON/nsubj>(das)
    <10:AUX/cop>(ist) <11:ADJ/conj>(rar) <12:ADP/case>(wie)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 1
    - flat
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PROPN/nsubj>(Boah) <2:PRON/flat>(das) <3:AUX/cop>(ist) <4:ADV/advmod>(ja)\
    \ <5:DET/root>(ein) <ROOT> <6:NOUN/root>(Gef\xE4hrt)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 2
    - obl
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(Und) <2:VERB/root>(postet) <3:ADV/advmod>(da) <4:ADP/case>(seit)
    <5:NOUN/obl>(Monaten) <ROOT> <6:NOUN/root>(Zeug)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det:poss
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 10
    - advmod
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - cop
  - !!python/tuple
    - 10
    - 5
    - parataxis
  - !!python/tuple
    - 11
    - 15
    - cc
  - !!python/tuple
    - 12
    - 15
    - nsubj
  - !!python/tuple
    - 13
    - 15
    - cop
  - !!python/tuple
    - 14
    - 15
    - advmod
  - !!python/tuple
    - 15
    - 10
    - conj
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 18
    - advmod
  - !!python/tuple
    - 18
    - 16
    - advmod
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(so) <4:DET/det:poss>(mein)\
    \ <5:NOUN/root>(Zwischenfazit) <6:ADP/case>(bis) <7:ADV/advmod>(hierhin) <8:PRON/nsubj>(Es)\
    \ <9:AUX/cop>(ist) <10:NOUN/parataxis>(Liebe) <11:CCONJ/cc>(und) <12:PRON/nsubj>(es)\
    \ <13:AUX/cop>(ist) <14:ADV/advmod>(so) <15:DET/conj>(ein) <ROOT> <16:NOUN/root>(Gef\xFC\
    hl) <17:ADV/advmod>(erst) <18:ADV/advmod>(mal)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - mark
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - obj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 9
    - csubj
  - !!python/tuple
    - 6
    - 5
    - aux
  - !!python/tuple
    - 7
    - 9
    - cop
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Dass) <2:PRON/nsubj>(ich) <3:PRON/obj>(das) <4:ADV/advmod>(auch)\
    \ <5:VERB/csubj>(miterleben) <6:AUX/aux>(kann) <7:AUX/cop>(ist) <8:ADV/advmod>(so)\
    \ <9:DET/root>(ein) <ROOT> <10:NOUN/root>(Gef\xFChl)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 9
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(und) <2:ADV/advmod>(dann) <3:VERB/root>(habe) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(so) <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/nsubj>(Freiheitsgef\xFC\
    hl) <8:ADV/advmod>(kurz) <9:VERB/root>(gehabt)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 6
    - dep
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 5
    - det
  - !!python/tuple
    - 5
    - 6
    - nsubj
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - aux
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 6
    - nsubj
  - !!python/tuple
    - 10
    - 9
    - appos
  - !!python/tuple
    - 11
    - 10
    - flat
  sentence: "<1:DET/root>(Ein) <ROOT> <2:NOUN/dep>(Beispiel) <3:ADV/advmod>(wohin)\
    \ <4:DET/det>(der) <5:NOUN/nsubj>(Hass) <6:VERB/root>(f\xFChren) <7:AUX/aux>(kann)\
    \ <8:DET/det>(der) <9:NOUN/nsubj>(Fall) <10:PROPN/appos>(Walter) <11:PROPN/flat>(L\xFC\
    bcke)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 8
    - cc
  - !!python/tuple
    - 6
    - 8
    - aux
  - !!python/tuple
    - 7
    - 8
    - obj
  - !!python/tuple
    - 8
    - 4
    - conj
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(hatte) <3:DET/obj>(ein) <ROOT> <4:NOUN/root>(Gehalt)
    <5:CCONJ/cc>(und) <6:AUX/aux>(hab) <7:PRON/obj>(mich) <8:VERB/conj>(orientiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 1
    - nsubj
  - !!python/tuple
    - 3
    - 6
    - advmod
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 1
    - obl
  - !!python/tuple
    - 7
    - 1
    - compound:prt
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:SCONJ/root>(dass) <2:PRON/nsubj>(ich) <3:ADV/advmod>(direkt) <4:ADP/case>(an)\
    \ <5:DET/det>(dem) <6:NOUN/obl>(Therapieanfang) <7:ADV/compound:prt>(ein) <ROOT>\
    \ <8:NOUN/nsubj>(Erfolgserlebnis) <9:VERB/root>(h\xE4tte)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 4
    - nmod
  - !!python/tuple
    - 3
    - 4
    - cop
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:DET/det>(Dieses) <2:NOUN/nmod>(Jahr) <3:AUX/cop>(war) <4:X/root>(n)
    <ROOT> <5:NOUN/root>(Jahr)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - compound:prt
  - !!python/tuple
    - 5
    - 6
    - dep
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(wollt) <3:DET/det>(ein) <4:ADP/compound:prt>(\xFC\
    ber) <ROOT> <5:NOUN/dep>(Album) <6:VERB/root>(machen)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 10
    - mark
  - !!python/tuple
    - 8
    - 10
    - nsubj
  - !!python/tuple
    - 9
    - 10
    - advmod
  - !!python/tuple
    - 10
    - 6
    - ccomp
  - !!python/tuple
    - 11
    - 16
    - cc
  - !!python/tuple
    - 12
    - 16
    - advmod
  - !!python/tuple
    - 13
    - 16
    - cop
  - !!python/tuple
    - 14
    - 16
    - nsubj
  - !!python/tuple
    - 15
    - 16
    - advmod
  - !!python/tuple
    - 16
    - 10
    - conj
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:ADV/advmod>(schon) <4:ADV/advmod>(super)
    <5:ADJ/root>(super) <ROOT> <6:NOUN/root>(Commitment) <7:SCONJ/mark>(dass) <8:PRON/nsubj>(er)
    <9:ADV/advmod>(da) <10:VERB/ccomp>(mitbringt) <11:CCONJ/cc>(und) <12:ADV/advmod>(da)
    <13:AUX/cop>(bin) <14:PRON/nsubj>(ich) <15:ADV/advmod>(auch) <16:ADJ/conj>(mega)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 3
    - nmod
  - !!python/tuple
    - 7
    - 6
    - nmod
  sentence: <1:DET/det>(Ein) <2:ADV/root>(besonders) <ROOT> <3:NOUN/root>(Beispiel)
    <4:ADP/case>(aus) <5:DET/det>(dem) <6:PROPN/nmod>(September) <7:NUM/nmod>(2020)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:NOUN/nsubj>(Rapper) <2:VERB/root>(leben) <3:DET/obj>(ein) <ROOT> <4:NOUN/root>(Leben)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:ADV/advmod>(jetzt) <4:DET/root>(ein)
    <ROOT> <5:NOUN/root>(Beispiel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(wir) <2:VERB/root>(st\xFCrmen) <3:PRON/obj>(dein) <ROOT>\
    \ <4:NOUN/root>(Haus)"
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - case
  - !!python/tuple
    - 2
    - 4
    - det
  - !!python/tuple
    - 3
    - 4
    - amod
  - !!python/tuple
    - 4
    - 5
    - obl
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - case
  sentence: "<1:ADP/case>(in) <2:DET/det>(das) <3:ADJ/amod>(gro\xDFe) <4:NOUN/obl>(Ganze)\
    \ <5:VERB/root>(einf\xFCgt) <6:NOUN/nsubj>(neues) <ROOT> <7:NOUN/root>(Ende) <8:ADP/case>(inklusive)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 6
    - mark
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - ccomp
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:VERB/root>(bedeutet) <3:SCONJ/mark>(dass) <4:PROPN/nsubj>(Gibraltar)\
    \ <5:DET/det>(ein) <6:ADJ/ccomp>(total) <ROOT> <7:NOUN/root>(Verh\xE4ltniss)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(f\xFChl) <ROOT> <3:NOUN/root>(Leid)"
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - aux
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:AUX/aux>(hab) <4:ADV/advmod>(jahrelang) <5:VERB/root>(gehustelt)\
    \ <6:ADP/case>(f\xFCr) <7:DET/obl>(ein) <ROOT> <8:NOUN/root>(Leben)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:ADV/advmod>(Da) <2:VERB/root>(brauchst) <3:PRON/nsubj>(du) <4:DET/obj>(ein)
    <ROOT> <5:NOUN/root>(Wunder)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - obj
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 2
    - obl
  - !!python/tuple
    - 8
    - 2
    - compound:prt
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:ADV/advmod>(Wie) <2:VERB/root>(schafft) <3:DET/det>(der) <4:NOUN/nsubj>(Typ)
    <5:PRON/obj>(das) <6:DET/det>(jeden) <7:NOUN/obl>(Monat) <8:ADV/compound:prt>(ein)
    <ROOT> <9:NOUN/root>(Feature)
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - advmod
  - !!python/tuple
    - 2
    - 4
    - case
  - !!python/tuple
    - 3
    - 4
    - det
  - !!python/tuple
    - 4
    - 6
    - nmod
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(Neulich) <2:ADP/case>(in) <3:DET/det>(dem) <4:NOUN/nmod>(Imbiss)
    <5:AUX/cop>(ist) <6:PRON/root>(was) <ROOT> <7:VERB/root>(passiert)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 5
    - nsubj
  - !!python/tuple
    - 3
    - 5
    - cop
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - case
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 5
    - nmod
  sentence: "<1:PRON/root>(Dein) <ROOT> <2:NOUN/nsubj>(Loft) <3:AUX/cop>(ist) <4:PART/advmod>(nicht)\
    \ <5:ADJ/root>(gr\xF6\xDFer) <6:ADP/case>(als) <7:DET/det>(ein) <8:NOUN/nmod>(Pf\xF6\
    rtnerhaus)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 8
    - advmod
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 8
    - obl
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:PRON/root>(was) <2:ADP/case>(f\xFCr) <3:DET/nmod>(ein) <ROOT> <4:NOUN/nsubj>(Potenzial)\
    \ <5:ADV/advmod>(noch) <6:ADP/case>(in) <7:PRON/obl>(mir) <8:VERB/root>(schlummert)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 8
    - 0
    - root
  - !!python/tuple
    - 9
    - 8
    - flat
  - !!python/tuple
    - 10
    - 8
    - flat
  sentence: <1:CCONJ/cc>(Und) <2:ADV/advmod>(wo) <3:VERB/root>(kriegt) <4:PRON/nsubj>(man)
    <5:ADV/advmod>(schon) <6:ADV/advmod>(so) <ROOT> <8:PROPN/root>(Feature) <9:PROPN/flat>(for)
    <10:PROPN/flat>(free)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADP/root>(zu) <ROOT> <2:PROPN/root>(Ott)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 0
    - root
  sentence: <1:ADJ/root>(wahnsinnig) <ROOT> <2:NOUN/root>(Paralleluniversum)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 2
    - xcomp
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Ich) <2:VERB/root>(halt) <3:PRON/obj>(dich) <4:ADP/xcomp>(f\xFC\
    r) <ROOT> <6:ADJ/root>(opfer)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - det
  - !!python/tuple
    - 3
    - 1
    - obj
  - !!python/tuple
    - 4
    - 1
    - advmod
  - !!python/tuple
    - 5
    - 6
    - cc
  - !!python/tuple
    - 6
    - 1
    - conj
  - !!python/tuple
    - 7
    - 6
    - obj
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:NOUN/root>(Hol) <2:DET/det>(die) <3:NOUN/obj>(Waffen) <4:ADV/advmod>(raus)\
    \ <5:CCONJ/cc>(und) <6:VERB/conj>(st\xFCrme) <7:DET/obj>(dein) <ROOT> <8:NOUN/root>(Haus)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - nsubj
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - advmod
  - !!python/tuple
    - 7
    - 8
    - amod
  - !!python/tuple
    - 8
    - 3
    - advmod
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Und) <2:ADV/advmod>(dann) <3:VERB/root>(h\xE4tt) <4:PRON/nsubj>(ich)\
    \ <5:ADV/advmod>(noch) <6:ADV/advmod>(n) <7:ADJ/amod>(neues) <8:ADJ/advmod>(ganz)\
    \ <ROOT> <9:NOUN/root>(Konzept)"
- dependencies:
  - !!python/tuple
    - 2
    - 5
    - parataxis
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 5
    - mark
  - !!python/tuple
    - 7
    - 5
    - nsubj
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 5
    - obl
  - !!python/tuple
    - 10
    - 0
    - root
  - !!python/tuple
    - 11
    - 10
    - cop
  sentence: "<2:X/parataxis>(off) <4:PRON/nsubj>(Ich) <5:VERB/root>(wei\xDF) <6:SCONJ/mark>(dass)\
    \ <7:PRON/nsubj>(es) <8:ADV/advmod>(auch) <9:DET/obl>(ein) <ROOT> <10:NOUN/root>(Privileg)\
    \ <11:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - ccomp
  - !!python/tuple
    - 5
    - 4
    - nsubj
  - !!python/tuple
    - 6
    - 4
    - advmod
  - !!python/tuple
    - 7
    - 4
    - compound:prt
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: "<1:CCONJ/cc>(Aber) <2:PRON/nsubj>(man) <3:VERB/root>(braucht) <4:VERB/ccomp>(glaub)\
    \ <5:PRON/nsubj>(ich) <6:ADV/advmod>(heute) <7:ADV/compound:prt>(ein) <ROOT> <8:NOUN/root>(Durchhalteverm\xF6\
    gen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - nsubj
  - !!python/tuple
    - 4
    - 2
    - advmod
  sentence: <1:ADV/advmod>(jetzt) <2:VERB/root>(kommt) <3:PRON/nsubj>(was) <4:ADJ/advmod>(ganz)
    <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 7
    - 11
    - mark
  - !!python/tuple
    - 8
    - 10
    - det:poss
  - !!python/tuple
    - 9
    - 10
    - amod
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 5
    - appos
  - !!python/tuple
    - 12
    - 11
    - advmod
  - !!python/tuple
    - 13
    - 11
    - compound:prt
  sentence: <1:PRON/nsubj>(Das) <2:AUX/root>(ist) <3:ADV/advmod>(schon) <ROOT> <5:NOUN/root>(Handycap)
    <7:SCONJ/mark>(denn) <8:DET/det:poss>(dein) <9:ADJ/amod>(geiles) <10:NOUN/nsubj>(Heck)
    <11:VERB/appos>(steckt) <12:ADV/advmod>(leider) <13:ADV/compound:prt>(fest)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 7
    - nsubj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 7
    - obl
  - !!python/tuple
    - 7
    - 2
    - acl
  - !!python/tuple
    - 8
    - 11
    - advmod
  - !!python/tuple
    - 9
    - 10
    - det
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 7
    - acl
  - !!python/tuple
    - 12
    - 0
    - root
  sentence: "<1:DET/det>(Der) <2:NOUN/root>(Stranger) <3:PRON/nsubj>(der) <4:ADP/case>(in)\
    \ <5:DET/det>(diese) <6:NOUN/obl>(Bar) <7:VERB/acl>(reinkommt) <8:ADV/advmod>(wo)\
    \ <9:DET/det>(die) <10:NOUN/nsubj>(D\xE4monen) <11:VERB/acl>(auftauchen) <ROOT>\
    \ <12:NOUN/root>(Ding)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - expl
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 2
    - nsubj
  - !!python/tuple
    - 6
    - 2
    - dep
  - !!python/tuple
    - 7
    - 8
    - dep
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/expl>(Es) <2:VERB/root>(gibt) <3:ADV/advmod>(aber) <4:NOUN/nsubj>(Hunderassen)
    <5:PRON/nsubj>(die) <6:DET/dep>(ein) <ROOT> <7:NOUN/dep>(Tempo) <8:VERB/root>(draufhaben)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - case
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 2
    - advmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Ich) <2:VERB/root>(habe) <3:NOUN/obj>(Bock) <4:ADP/case>(auf)
    <5:DET/det>(ein) <6:ADJ/advmod>(richtig) <ROOT> <7:NOUN/root>(Spiel)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - dep
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - obl
  sentence: <1:X/root>(n) <ROOT> <2:NOUN/dep>(Beispiel) <3:VERB/root>(kommt) <4:ADP/case>(aus)
    <5:PROPN/obl>(Sassnitz)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - compound
  - !!python/tuple
    - 8
    - 0
    - root
  sentence: <1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:PART/advmod>(nicht) <4:ADV/advmod>(so)
    <5:DET/root>(ein) <ROOT> <6:NOUN/compound>(Tabu) <8:NOUN/root>(Thema)
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 7
    - mark
  - !!python/tuple
    - 7
    - 3
    - acl
  sentence: <1:ADV/root>(So) <ROOT> <3:NOUN/root>(fahrgestell) <4:ADP/case>(an'n)
    <5:NOUN/nmod>(start) <6:PART/mark>(zu) <7:VERB/acl>(bekommen)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 4
    - case
  - !!python/tuple
    - 4
    - 2
    - nmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:DET/det>(ein) <2:NOUN/root>(Iberogast) <3:ADP/case>(f\xFCr) <4:PRON/nmod>(dich)\
    \ <ROOT> <5:NOUN/root>(Tier)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - case
  - !!python/tuple
    - 2
    - 6
    - det
  - !!python/tuple
    - 3
    - 6
    - amod
  - !!python/tuple
    - 4
    - 6
    - compound
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 8
    - appos
  - !!python/tuple
    - 8
    - 6
    - appos
  - !!python/tuple
    - 9
    - 6
    - appos
  - !!python/tuple
    - 10
    - 13
    - det:poss
  - !!python/tuple
    - 11
    - 13
    - compound
  - !!python/tuple
    - 13
    - 6
    - dep
  - !!python/tuple
    - 14
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:DET/det>(den) <3:ADJ/amod>(gro\xDFen) <4:PROPN/compound>(Special)\
    \ <6:NOUN/root>(Jahresr\xFCckblick) <7:PROPN/appos>(Assis) <8:NOUN/appos>(Bilder)\
    \ <9:NOUN/appos>(Erektionen) <10:DET/det:poss>(Mein) <11:NUM/compound>(2018) <13:DET/dep>(ein)\
    \ <ROOT> <14:NOUN/root>(Jahr)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 9
    - dep
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 9
    - cop
  - !!python/tuple
    - 5
    - 9
    - nsubj
  - !!python/tuple
    - 6
    - 9
    - advmod
  - !!python/tuple
    - 7
    - 9
    - advmod
  - !!python/tuple
    - 8
    - 9
    - det
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: <1:DET/root>(Ein) <ROOT> <2:NOUN/dep>(Beispiel) <3:ADV/advmod>(aber) <4:AUX/cop>(ist)
    <5:PRON/nsubj>(es) <6:ADV/advmod>(dann) <7:PART/advmod>(nicht) <8:DET/det>(eine)
    <9:NOUN/root>(Gesellschaft)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - cc
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - cop
  - !!python/tuple
    - 6
    - 2
    - dep
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:VERB/root>(merken) <3:ADV/advmod>(ey) <4:PRON/nsubj>(das)
    <5:AUX/cop>(ist) <6:DET/dep>(ein) <ROOT> <7:NOUN/root>(Spiel)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 5
    - dep
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:PRON/nsubj>(ich) <2:VERB/root>(w\xFCrd) <3:DET/obj>(ein) <ROOT> <4:NOUN/dep>(Jobangebot)\
    \ <5:VERB/root>(kriegen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 6
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 9
    - cc
  - !!python/tuple
    - 8
    - 9
    - nsubj
  - !!python/tuple
    - 9
    - 6
    - conj
  - !!python/tuple
    - 10
    - 9
    - advmod
  - !!python/tuple
    - 11
    - 9
    - advmod
  - !!python/tuple
    - 12
    - 9
    - compound:prt
  sentence: <1:PRON/nsubj>(Die) <2:VERB/root>(hat) <3:DET/obj>(ein) <ROOT> <4:NOUN/nsubj>(Outfit)
    <5:ADV/advmod>(sehr) <6:ADJ/root>(stylisch) <7:CCONJ/cc>(und) <8:PRON/nsubj>(sie)
    <9:VERB/conj>(greift) <10:ADV/advmod>(damit) <11:ADV/advmod>(auch) <12:ADP/compound:prt>(an)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - obj
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:PRON/nsubj>(ihr) <2:VERB/root>(braucht) <3:DET/obj>(ein) <ROOT> <4:NOUN/root>(Feature)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 9
    - cc
  - !!python/tuple
    - 5
    - 9
    - mark
  - !!python/tuple
    - 6
    - 9
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 9
    - obj
  - !!python/tuple
    - 9
    - 3
    - advcl
  - !!python/tuple
    - 10
    - 9
    - aux
  sentence: "<1:DET/det>(ein) <2:ADV/root>(ziemlich) <ROOT> <3:NOUN/root>(Gespr\xE4\
    ch) <4:CCONJ/cc>(Und) <5:SCONJ/mark>(wenn) <6:PRON/nsubj>(ihr) <7:DET/det>(mehr)\
    \ <8:NOUN/obj>(Folgen) <9:VERB/advcl>(sehen) <10:AUX/aux>(wollt)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 8
    - nsubj
  - !!python/tuple
    - 5
    - 7
    - case
  - !!python/tuple
    - 6
    - 7
    - det
  - !!python/tuple
    - 7
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 9
    - xcomp
  - !!python/tuple
    - 9
    - 0
    - root
  - !!python/tuple
    - 10
    - 11
    - nsubj
  - !!python/tuple
    - 11
    - 9
    - conj
  - !!python/tuple
    - 12
    - 11
    - obj
  - !!python/tuple
    - 13
    - 15
    - cc
  - !!python/tuple
    - 14
    - 15
    - cop
  - !!python/tuple
    - 15
    - 11
    - conj
  - !!python/tuple
    - 16
    - 15
    - nsubj
  sentence: "<1:ADV/advmod>(trotzdem) <2:ADV/advmod>(so) <3:DET/root>(ein) <ROOT>\
    \ <4:NOUN/nsubj>(Verhalten) <5:ADP/case>(an) <6:DET/det>(den) <7:NOUN/nmod>(Tag)\
    \ <8:VERB/xcomp>(legen) <9:VERB/root>(hei\xDFt) <10:NOUN/nsubj>(Ameisen) <11:VERB/conj>(helfen)\
    \ <12:PRON/obj>(sich) <13:CCONJ/cc>(und) <14:AUX/cop>(sind) <15:ADJ/conj>(sauber)\
    \ <16:DET/nsubj>(ihre)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 1
    - nmod
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: "<1:X/root>(Uh) <3:PRON/nsubj>(Was) <5:ADP/case>(f\xFCr) <6:DET/nmod>(ein)\
    \ <ROOT> <7:NOUN/root>(Getr\xE4nk)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(herrscht) <3:ADV/advmod>(also) <4:DET/obj>(ein)
    <ROOT> <5:NOUN/root>(Ungleichgewicht)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(Das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Verh\xE4\
    ltnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cop
  - !!python/tuple
    - 2
    - 3
    - obl:arg
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - case
  - !!python/tuple
    - 6
    - 4
    - nmod
  - !!python/tuple
    - 8
    - 6
    - flat
  sentence: "<1:AUX/cop>(Ist) <2:PRON/obl:arg>(mir) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(R\xE4\
    tsel) <5:ADP/case>(wie) <6:PROPN/nmod>(Killer) <8:PROPN/flat>(Michel)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - advmod
  - !!python/tuple
    - 4
    - 2
    - advmod
  - !!python/tuple
    - 5
    - 2
    - advmod
  - !!python/tuple
    - 6
    - 2
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:PRON/nsubj>(Es) <2:VERB/root>(geht) <3:ADV/advmod>(da) <4:ADV/advmod>(auch)
    <5:PART/advmod>(nicht) <6:ADP/compound:prt>(um) <ROOT> <7:NOUN/root>(Storytelling)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - nsubj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 11
    - case
  - !!python/tuple
    - 7
    - 11
    - case
  - !!python/tuple
    - 8
    - 9
    - advmod
  - !!python/tuple
    - 9
    - 11
    - det
  - !!python/tuple
    - 10
    - 11
    - det
  - !!python/tuple
    - 11
    - 5
    - obl
  sentence: "<1:ADV/advmod>(einfach) <2:ADV/advmod>(so) <3:ADV/root>(ein) <ROOT> <4:NOUN/nsubj>(Wohlstandsgef\xE4\
    lle) <5:VERB/root>(haben) <6:ADP/case>(wie) <7:ADP/case>(in) <8:ADV/advmod>(fast)\
    \ <9:DET/det>(keinem) <10:DET/det>(anderen) <11:NOUN/obl>(Land)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - advmod
  - !!python/tuple
    - 2
    - 3
    - advmod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - cop
  - !!python/tuple
    - 5
    - 8
    - nsubj
  - !!python/tuple
    - 6
    - 8
    - advmod
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 3
    - dep
  - !!python/tuple
    - 9
    - 0
    - root
  sentence: "<1:ADV/advmod>(sehr) <2:ADV/advmod>(gut) <3:ADJ/root>(strukturiert) <4:AUX/cop>(ist)\
    \ <5:PRON/nsubj>(Was) <6:ADV/advmod>(nat\xFCrlich) <7:ADV/advmod>(auch) <8:DET/dep>(ein)\
    \ <ROOT> <9:NOUN/root>(Gegenteil)"
- dependencies:
  - !!python/tuple
    - 1
    - 0
    - root
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 4
    - obl
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 6
    - det
  - !!python/tuple
    - 6
    - 4
    - nsubj
  - !!python/tuple
    - 7
    - 8
    - det
  - !!python/tuple
    - 8
    - 6
    - nmod
  - !!python/tuple
    - 9
    - 4
    - advmod
  - !!python/tuple
    - 10
    - 12
    - det
  - !!python/tuple
    - 11
    - 12
    - amod
  - !!python/tuple
    - 12
    - 4
    - obj
  - !!python/tuple
    - 13
    - 4
    - advmod
  - !!python/tuple
    - 14
    - 4
    - advmod
  sentence: <1:PRON/root>(nichts) <ROOT> <2:ADP/case>(wie) <3:PROPN/obl>(Georg) <4:VERB/root>(bilanziert)
    <5:DET/det>(Ein) <6:NOUN/nsubj>(Freund) <7:DET/det>(der) <8:NOUN/nmod>(Gruppe)
    <9:ADV/advmod>(so) <10:DET/det>(diese) <11:ADJ/amod>(menschlichen) <12:ADJ/obj>(extreme)
    <13:ADV/advmod>(da) <14:ADV/advmod>(schon)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - advmod
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 5
    - nsubj
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  sentence: <1:ADV/advmod>(warum) <2:PROPN/amod>(Social) <3:PROPN/nsubj>(Media) <4:ADV/advmod>(so)
    <5:DET/root>(ein) <ROOT> <6:NOUN/nsubj>(Suchtpotential) <7:VERB/root>(hat)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - case
  - !!python/tuple
    - 5
    - 3
    - nmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - cop
  sentence: "<1:CCONJ/cc>(und) <2:PRON/nsubj>(was) <3:PRON/root>(das) <4:ADP/case>(f\xFC\
    r) <5:DET/nmod>(ein) <ROOT> <6:NOUN/root>(Erlebnis) <7:AUX/cop>(ist)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - advmod
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 3
    - advmod
  - !!python/tuple
    - 6
    - 3
    - compound:prt
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - cop
  - !!python/tuple
    - 9
    - 7
    - advmod
  - !!python/tuple
    - 10
    - 16
    - mark
  - !!python/tuple
    - 11
    - 16
    - nsubj
  - !!python/tuple
    - 12
    - 16
    - obj
  - !!python/tuple
    - 13
    - 15
    - case
  - !!python/tuple
    - 14
    - 15
    - amod
  - !!python/tuple
    - 15
    - 16
    - obl
  - !!python/tuple
    - 16
    - 7
    - csubj
  - !!python/tuple
    - 17
    - 16
    - aux
  - !!python/tuple
    - 18
    - 21
    - mark
  - !!python/tuple
    - 19
    - 21
    - nsubj
  - !!python/tuple
    - 20
    - 21
    - obj
  - !!python/tuple
    - 21
    - 16
    - advcl
  sentence: "<1:ADV/advmod>(Also) <2:PRON/nsubj>(wir) <3:VERB/root>(m\xFCssen) <4:ADV/advmod>(ja)\
    \ <5:ADV/advmod>(so) <6:ADV/compound:prt>(ein) <ROOT> <7:NOUN/root>(Feindbild)\
    \ <8:AUX/cop>(sein) <9:ADV/advmod>(daf\xFCr) <10:SCONJ/mark>(dass) <11:PRON/nsubj>(wir)\
    \ <12:PRON/obj>(uns) <13:ADP/case>(f\xFCr) <14:ADJ/amod>(demokratische) <15:NOUN/obl>(Werte)\
    \ <16:VERB/csubj>(eingesetzt) <17:AUX/aux>(haben) <18:SCONJ/mark>(dass) <19:PRON/nsubj>(man)\
    \ <20:PRON/obj>(uns) <21:VERB/advcl>(versucht)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 4
    - cc
  sentence: <1:PRON/nsubj>(Du) <2:AUX/cop>(bist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Vorbild)
    <5:CCONJ/cc>(oder)
- dependencies:
  - !!python/tuple
    - 1
    - 4
    - nsubj
  - !!python/tuple
    - 2
    - 4
    - aux
  - !!python/tuple
    - 3
    - 4
    - advmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 8
    - cc
  - !!python/tuple
    - 7
    - 8
    - advmod
  - !!python/tuple
    - 8
    - 5
    - cop
  sentence: <1:PRON/nsubj>(Das) <2:AUX/aux>(muss) <3:ADV/advmod>(jetzt) <4:DET/root>(kein)
    <ROOT> <5:NOUN/root>(Bergpanorama) <6:CCONJ/cc>(oder) <7:ADV/advmod>(so) <8:AUX/cop>(sein)
- dependencies:
  - !!python/tuple
    - 1
    - 5
    - nsubj
  - !!python/tuple
    - 2
    - 5
    - cop
  - !!python/tuple
    - 3
    - 5
    - det
  - !!python/tuple
    - 4
    - 5
    - advmod
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: <1:PRON/nsubj>(das) <2:AUX/cop>(war) <3:DET/det>(ein) <4:ADV/advmod>(ganz)
    <5:ADJ/root>(ganz) <ROOT>
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - det:poss
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 3
    - obj
  - !!python/tuple
    - 5
    - 0
    - root
  - !!python/tuple
    - 6
    - 7
    - case
  - !!python/tuple
    - 7
    - 5
    - nmod
  - !!python/tuple
    - 8
    - 9
    - cc
  - !!python/tuple
    - 9
    - 7
    - conj
  sentence: "<1:DET/det:poss>(Meine) <2:NOUN/nsubj>(Kinder) <3:VERB/root>(haben) <4:NOUN/obj>(n)\
    \ <ROOT> <5:NOUN/root>(Verh\xE4ltnis) <6:ADP/case>(zu) <7:NOUN/nmod>(Oma) <8:CCONJ/cc>(und)\
    \ <9:NOUN/conj>(Opa)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - case
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 4
    - nmod
  - !!python/tuple
    - 4
    - 0
    - root
  - !!python/tuple
    - 5
    - 0
    - root
  sentence: "<1:ADP/case>(F\xFCr) <2:ADJ/amod>(damalige) <3:NOUN/nmod>(Verh\xE4ltnisse)\
    \ <4:ADV/root>(ein) <ROOT> <5:NOUN/root>(Spiel)"
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - cc
  - !!python/tuple
    - 2
    - 3
    - amod
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 5
    - cc
  - !!python/tuple
    - 5
    - 3
    - conj
  - !!python/tuple
    - 6
    - 0
    - root
  sentence: <1:CCONJ/cc>(und) <2:ADJ/amod>(neue) <3:NOUN/root>(Technologien) <4:CCONJ/cc>(und)
    <5:ADJ/conj>(richtig) <ROOT> <6:NOUN/root>(Storytelling)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - mark
  - !!python/tuple
    - 2
    - 3
    - nsubj
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: <1:SCONJ/mark>(dass) <2:PRON/nsubj>(es) <3:PRON/root>(was) <ROOT> <4:AUX/root>(ist)
- dependencies:
  - !!python/tuple
    - 1
    - 3
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - cop
  - !!python/tuple
    - 3
    - 0
    - root
  - !!python/tuple
    - 4
    - 0
    - root
  sentence: "<1:PRON/nsubj>(das) <2:AUX/cop>(ist) <3:DET/root>(ein) <ROOT> <4:NOUN/root>(Gef\xFC\
    hl)"
- dependencies:
  - !!python/tuple
    - 1
    - 10
    - nsubj:pass
  - !!python/tuple
    - 2
    - 1
    - appos
  - !!python/tuple
    - 3
    - 10
    - aux:pass
  - !!python/tuple
    - 4
    - 7
    - case
  - !!python/tuple
    - 5
    - 7
    - det
  - !!python/tuple
    - 6
    - 7
    - amod
  - !!python/tuple
    - 7
    - 10
    - obl
  - !!python/tuple
    - 8
    - 10
    - advmod
  - !!python/tuple
    - 9
    - 10
    - mark
  - !!python/tuple
    - 10
    - 0
    - root
  sentence: "<ROOT> <1:NOUN/nsubj:pass>(Missverh\xE4ltnis) <2:PRON/appos>(Das) <3:AUX/aux:pass>(ist)\
    \ <4:ADP/case>(f\xFCr) <5:DET/det>(die) <6:ADJ/amod>(j\xFCngere) <7:NOUN/obl>(Generation)\
    \ <8:PART/advmod>(nicht) <9:PART/mark>(zu) <10:VERB/root>(stemmen)"
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - nsubj
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 2
    - xcomp
  - !!python/tuple
    - 4
    - 7
    - nsubj
  - !!python/tuple
    - 6
    - 7
    - nsubj
  - !!python/tuple
    - 7
    - 0
    - root
  - !!python/tuple
    - 8
    - 7
    - obj
  sentence: <1:PRON/nsubj>(Das) <2:VERB/root>(wird) <3:DET/xcomp>(ein) <ROOT> <4:NOUN/nsubj>(Ding)
    <6:PRON/nsubj>(Ich) <7:VERB/root>(freu) <8:PRON/obj>(mich)
- dependencies:
  - !!python/tuple
    - 1
    - 2
    - mark
  - !!python/tuple
    - 2
    - 0
    - root
  - !!python/tuple
    - 3
    - 0
    - root
  sentence: "<1:SCONJ/mark>(Wenn) <2:DET/root>(ein) <ROOT> <3:NOUN/root>(Missverh\xE4\
    ltnis)"
- dependencies:
  - !!python/tuple
    - 1
    - 6
    - nsubj
  - !!python/tuple
    - 2
    - 3
    - case
  - !!python/tuple
    - 3
    - 1
    - nmod
  - !!python/tuple
    - 4
    - 6
    - advmod
  - !!python/tuple
    - 5
    - 6
    - advmod
  - !!python/tuple
    - 6
    - 0
    - root
  - !!python/tuple
    - 7
    - 6
    - nsubj
  - !!python/tuple
    - 8
    - 6
    - obj
  - !!python/tuple
    - 9
    - 10
    - case
  - !!python/tuple
    - 10
    - 6
    - obl
  - !!python/tuple
    - 11
    - 16
    - acl
  - !!python/tuple
    - 12
    - 11
    - expl
  - !!python/tuple
    - 13
    - 16
    - cop
  - !!python/tuple
    - 14
    - 16
    - det
  - !!python/tuple
    - 15
    - 16
    - amod
  - !!python/tuple
    - 16
    - 0
    - root
  - !!python/tuple
    - 17
    - 19
    - case
  - !!python/tuple
    - 18
    - 19
    - det
  - !!python/tuple
    - 19
    - 20
    - obl
  - !!python/tuple
    - 20
    - 16
    - acl
  - !!python/tuple
    - 21
    - 23
    - cc
  - !!python/tuple
    - 22
    - 23
    - nsubj
  - !!python/tuple
    - 23
    - 16
    - conj
  - !!python/tuple
    - 24
    - 23
    - obj
  sentence: "<1:NOUN/nsubj>(Nachrichten) <2:ADP/case>(wie) <3:DET/nmod>(diese) <4:ADV/advmod>(hier)\
    \ <5:ADV/advmod>(Da) <6:VERB/root>(hast) <7:PRON/nsubj>(du) <8:PRON/obj>(dich)\
    \ <9:ADP/case>(auf) <10:PRON/obl>(was) <ROOT> <11:VERB/acl>(eingelassen) <12:PRON/expl>(Es)\
    \ <13:AUX/cop>(ist) <14:DET/det>(eine) <15:ADJ/amod>(riesen) <16:NOUN/root>(Herausforderung)\
    \ <17:ADP/case>(in) <18:DET/det>(diese) <19:NOUN/obl>(Branche) <20:VERB/acl>(einzutauchen)\
    \ <21:CCONJ/cc>(Und) <22:PRON/nsubj>(sie) <23:VERB/conj>(fl\xF6\xDFen) <24:PRON/obj>(uns)"
